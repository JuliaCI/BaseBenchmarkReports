cset: moving following pidspec: 23109
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.327471759 seconds)
loading group "string"... done (took 0.476744321 seconds)
loading group "linalg"... done (took 7.954616662 seconds)
loading group "parallel"... done (took 0.174759092 seconds)
loading group "find"... done (took 1.271219602 seconds)
loading group "tuple"... done (took 1.977350933 seconds)
loading group "dates"... done (took 1.3339055 seconds)
loading group "micro"... done (took 0.248191093 seconds)
loading group "io"... done (took 0.659604331 seconds)
loading group "scalar"... done (took 42.237701305 seconds)
loading group "sparse"... done (took 13.224131932 seconds)
loading group "broadcast"... done (took 1.084021579 seconds)
loading group "union"... done (took 14.678972016 seconds)
loading group "simd"... done (took 5.224145779 seconds)
loading group "random"... done (took 10.396030515 seconds)
loading group "problem"... done (took 2.078547845 seconds)
loading group "array"... done (took 24.517489331 seconds)
loading group "misc"... done (took 1.546525504 seconds)
loading group "sort"... done (took 3.982409269 seconds)
loading group "collection"... done (took 20.266755597 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.456140346 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140576484 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.144118601 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135011492 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.201972677 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.135811368 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.153738325 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.110079533 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.935726822 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181516546 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.14103684 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.486707587 seconds)
done (took 4.9601839 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.261841866 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.080732843 seconds)
    (2/2) benchmarking "String"...
    done (took 0.093706227 seconds)
  done (took 0.859828066 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.088649697 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.141379166 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.088944304 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075170581 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.090390437 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074622078 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074036773 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091043047 seconds)
  done (took 1.316930952 seconds)
done (took 3.213722487 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.716662681 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278768249 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204216873 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503177407 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176941247 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.212397858 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686864031 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.344271771 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.248096207 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102866383 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130379677 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.446871238 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130694961 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.710917181 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085967372 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123494113 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17126838 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45391222 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089717587 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089772404 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115206663 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.151433085 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088998391 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.099836696 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.171178469 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.088157092 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.183046867 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105661318 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075260411 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.267242551 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201224433 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.742297239 seconds)
  done (took 10.912847872 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110594116 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134385418 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076864289 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.151773487 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136576888 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082270468 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098615524 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076104882 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122772581 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179155095 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113401372 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136661648 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.091568829 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079207801 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116322104 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229690235 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118716232 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119844264 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.079850467 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103540449 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120017446 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111329004 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089957747 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.10556809 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.16715496 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199891085 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107936339 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121241571 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.076927535 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.106760103 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143186527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.154644064 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074113099 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076790143 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176185925 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120891068 seconds)
  done (took 5.008287939 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189199332 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100264405 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168256732 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.160694503 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139086811 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.151820618 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106520018 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254116924 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.118474801 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162000847 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139345311 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108259537 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076468127 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098257355 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074576322 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.674520116 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164699146 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132038414 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094884201 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101520536 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083648668 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.731326653 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08221747 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.089119637 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079943056 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08652909 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159345652 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079077188 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.153918947 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116039704 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0765624 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131903593 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205161275 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106677901 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131704187 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076321032 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091538601 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176670541 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080997469 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076044256 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120547396 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.123287882 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129804604 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.114462209 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095076951 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074842435 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220254134 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073036486 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.092468435 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.985151531 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.175406656 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088077882 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073276237 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.330995501 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.112534818 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074381274 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097229677 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.259694923 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.123919669 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.121671502 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076629858 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.0935077 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077753042 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072554798 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095524067 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.075165779 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.746470182 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093025209 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085837034 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.682399662 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091617349 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076415196 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.088750832 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083301001 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101605418 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.095140648 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.094489232 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077985792 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094410561 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075911559 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.076782609 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113255163 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095532683 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074806633 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.155100917 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075459508 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09604201 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125694918 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093162079 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074894586 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12848481 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076784572 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.075821816 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133313788 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076862494 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114081651 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.093199663 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1368248 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.078125194 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.172556751 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073986431 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122199643 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07830688 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128498891 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.107148875 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077968307 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099674495 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074346398 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092613116 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.143821966 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077366489 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09192793 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.077185221 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10685108 seconds)
  done (took 22.752898565 seconds)
done (took 39.354361733 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.349173577 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104540879 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104801369 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103508047 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10270391 seconds)
  done (took 1.521608892 seconds)
done (took 2.254047103 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.265450195 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.168618721 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071679315 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.179152097 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0713689 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.169312467 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153108657 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.106324972 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.178022532 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.088513269 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.157645002 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071968602 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071846983 seconds)
  done (took 2.510923467 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090217283 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109893894 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07736666 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089854265 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08866228 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089222814 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105132199 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094747803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104703486 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079716041 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071328226 seconds)
  done (took 1.730296735 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089597889 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.092425618 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093587364 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088416517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089849316 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089897854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107390114 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.095738553 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108403659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081606263 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.073282272 seconds)
  done (took 1.740228421 seconds)
done (took 6.70411248 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.09379484 seconds)
  done (took 0.818216622 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.035630083 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.270929329 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.119709295 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165789128 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.323773221 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.211489603 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.598781567 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135077454 seconds)
  done (took 15.781376564 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.110185653 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.112070678 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.080377625 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.09681033 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.075837971 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093283996 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079552483 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094364906 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076438263 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07698892 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091081218 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078118986 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.093926015 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.078421998 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.092520087 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.077617574 seconds)
  done (took 2.205217142 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.112782898 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111060296 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09909201 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.085944932 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.09944065 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081869058 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100940641 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.082783026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.096664763 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.082099639 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103015799 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.08589638 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100420912 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080016578 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100018108 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.103005498 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.081527578 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.100243644 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085974567 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101040537 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.086914237 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09751546 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085142782 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.101778146 seconds)
  done (took 3.101863163 seconds)
done (took 22.638195219 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146271265 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081061674 seconds)
  done (took 0.962192674 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096343252 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114040633 seconds)
  done (took 0.951153137 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.102178172 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091722444 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.128542905 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093022125 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.093252055 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.077555614 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12584857 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.095692179 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079494162 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079492801 seconds)
  done (took 1.709269415 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081191475 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.0804031 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101175958 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.11198172 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.087637547 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09539713 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.082936944 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097404857 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084556862 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092677807 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.086385354 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.111423671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084929218 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.114028461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099831689 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084472635 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103969254 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.082612891 seconds)
  done (took 2.428006551 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07667579 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078235096 seconds)
  done (took 0.899673071 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079456593 seconds)
    (2/7) benchmarking "second"...
    done (took 0.07570811 seconds)
    (3/7) benchmarking "month"...
    done (took 0.096330114 seconds)
    (4/7) benchmarking "year"...
    done (took 0.09644632 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077278833 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076855496 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093961778 seconds)
  done (took 1.339551501 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479178335 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139032586 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268366624 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.081671328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118328671 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307589016 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.091361537 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.080345939 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.098274998 seconds)
  done (took 2.465955751 seconds)
done (took 11.494794713 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08737315 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.096356942 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.124622783 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.456880238 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.112548744 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.074352382 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.154712229 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.249834901 seconds)
done (took 2.100438562 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.141148205 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.330616087 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120457185 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0701516 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.093399893 seconds)
  done (took 1.360449343 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074836589 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077333011 seconds)
  done (took 0.90393207 seconds)
done (took 3.151999406 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075746244 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.074187004 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090280131 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.109293313 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.093221718 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073206512 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.091782591 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076551418 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07642296 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.093382486 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.073427417 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.092763519 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076491457 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.074060068 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090894421 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076576377 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089868974 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073573728 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074039366 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090371594 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076794735 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089702336 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073794625 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.075861971 seconds)
  done (took 2.763226508 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10112775 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091900785 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.082402103 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.098601521 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08211449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.098944315 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.082440846 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.092552241 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.082666449 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095615952 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080326808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096650239 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078764521 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097336638 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079014525 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.096447711 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082341203 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093743425 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07944065 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096659741 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.082597447 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093172183 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081095757 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.098412649 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080286542 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098126127 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.079349561 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.093587957 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082998957 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097627151 seconds)
  done (took 3.431258764 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.080681868 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.072028489 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090675751 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081557231 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.090520711 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079625065 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.074007808 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091410869 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078613467 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.090392873 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079289641 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.07396261 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091686209 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078326648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095607742 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.078363052 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.215402716 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072793943 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.073541185 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095847708 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077137918 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.090168102 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.076650423 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073965578 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09077629 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.073010932 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.091220936 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.073858991 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075121049 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091268801 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.076599501 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.094410425 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.074157022 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.080476358 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09584264 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.073304288 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094546589 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.073937668 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079236728 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.090660073 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.073595846 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090301246 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.07423108 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081089863 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094456193 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076002852 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090981085 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.079833742 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094752798 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081175572 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.073718336 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091258928 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081377494 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095562191 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.078230753 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073203717 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092172613 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.073757022 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096533853 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.07449888 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073999336 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.091566269 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.077104391 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091872401 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.090628768 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097996775 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.074696702 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079672427 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095685499 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077030321 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097056757 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.088750861 seconds)
  done (took 6.893314622 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077228616 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099591649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077264654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076107257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089537205 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074651906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098382508 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076088378 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093078291 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094271957 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091397171 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0763373 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075697023 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09589601 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075544481 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093317379 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084334841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090023165 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075323728 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095444341 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076065145 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098472655 seconds)
  done (took 2.646317906 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213446183 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099861888 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137053321 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093158904 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11257064 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110433823 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.081917595 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100865762 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082273525 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101382776 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084423786 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099030329 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111321099 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084489669 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101459855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086223193 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098866728 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086096391 seconds)
  done (took 2.645469394 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.089069914 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091506413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.097521515 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092431357 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.076223202 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096184775 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084187622 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109917675 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.079659616 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094798351 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088092001 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096013185 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.079858385 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094810258 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081251889 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.094082442 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080173622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077607198 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104514981 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099797912 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084343167 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104718865 seconds)
  done (took 2.762396639 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092502743 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094289748 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.096090693 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097507806 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076231791 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095799832 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.085830888 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.09482409 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.086637338 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.09615068 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078700439 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096086731 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085968056 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094803904 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084208327 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094705478 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08064881 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.078109482 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097653964 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076566505 seconds)
  done (took 2.548714786 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117072088 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107533865 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090991666 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118073397 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091824667 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109551052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121057084 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092911425 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108842662 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104845273 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107942003 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092100546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120471761 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115159799 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09200003 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119756578 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120307398 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104044267 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110121005 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.092940679 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121120907 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092032523 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.121012949 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.109847631 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093724254 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109563533 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093493066 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117076444 seconds)
  done (took 3.766873128 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076004792 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077332151 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.092238126 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.075200703 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.074805141 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092717824 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.075149166 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09291158 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077281184 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075338093 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.094842424 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077296787 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.097861338 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078087487 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077535637 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095698199 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078321183 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.092628851 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075837197 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075071644 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.094953243 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077881936 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094798482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075013719 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074523277 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.094818835 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075892695 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092822713 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077493083 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074617306 seconds)
  done (took 3.254203395 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.084258302 seconds)
    (2/2) benchmarking "in"...
    done (took 0.098952472 seconds)
  done (took 0.956559971 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073453357 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10900144 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07519904 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081014716 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.100174261 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078046581 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104776792 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083952309 seconds)
  done (took 1.473964726 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094093553 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.113480405 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08416909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107222399 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096439927 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.112301187 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139544314 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102069934 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084340779 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.093766745 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.094638779 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095067485 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083691985 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095906836 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084280825 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084201904 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096860994 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089474526 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103413967 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.080710005 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101770629 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.090136428 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098113385 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.086224983 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096665014 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089289249 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.105148998 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090685983 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099020242 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.088198501 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.100840914 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.07257075 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083130407 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101956602 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078938294 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.11252603 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09171428 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099076817 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087123788 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102407844 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088158082 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09456982 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.084206223 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105463279 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089615785 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101191974 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084894878 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077749137 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.094151231 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.080959823 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094635104 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078367351 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.089967038 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086876071 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101095995 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092802539 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.097698195 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.080793499 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081114356 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.098568821 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085509284 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098292152 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08123683 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099338126 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085725248 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100296529 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086936752 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094580905 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072805 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079566219 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105465763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102314937 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105264505 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083997725 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103324659 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08013866 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100092653 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085849002 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104454674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087755181 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101154213 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086368507 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.104207047 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.078798263 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.098700185 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087109474 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098396663 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.082359735 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076440451 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111766125 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081242211 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097623835 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.075733753 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105790742 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.082755654 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099672961 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.076724271 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085779427 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.091028695 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084172955 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102498346 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.079134826 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.105318443 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083295401 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102044069 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.085764132 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.104960552 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.077634553 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099814981 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.074902345 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.08434021 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.099439614 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086006449 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090929656 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083073189 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.097720619 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.08410186 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.103913237 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080400665 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101451071 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087675206 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.103576657 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081682792 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075359549 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.100057822 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084075347 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106189077 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.085784185 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098481859 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077122009 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095078863 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084265113 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099925729 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.08425085 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084864642 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100910156 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072776817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097352036 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.083890069 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.105145403 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.078926245 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.096901428 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.08457346 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09731783 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082369415 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.084837203 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.098608409 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.077830046 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.101677169 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081392126 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095563328 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08934512 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.099141094 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081178908 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.082407803 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106956865 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.081179804 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102898904 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081466894 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101686753 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084627529 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.096533317 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078945437 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098601732 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.089659064 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.098294483 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078284915 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.075854711 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.102589929 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.076310188 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101035947 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.077823566 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.099154353 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.08502826 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080738938 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09974022 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08099171 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11235175 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.092511411 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103555405 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08527936 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107436703 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082869716 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099093526 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083160707 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103267201 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084632816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.105848942 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085050555 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103145947 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.082617098 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.0753426 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.103184345 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087196165 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.097162416 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080882355 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.096525486 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.084147168 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.104792807 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.085283973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084709624 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098820456 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07968122 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107205933 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.081963575 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101389771 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078424318 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101227653 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089162499 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.102516128 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086139092 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.106092102 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083229766 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077047703 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106737769 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080813286 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.103649488 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078560388 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097099019 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077691018 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103873115 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082555106 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.082155291 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.090758013 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087367529 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105527405 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.079161066 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.097056025 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084715932 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106964424 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.081627953 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082493659 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102139765 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085626948 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111898769 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078233005 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101185798 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.088758497 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102765041 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.072585673 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.103665204 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.082365029 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096764008 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083726114 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081015521 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10061181 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086258646 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102134699 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073492558 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.099779136 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081647898 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077422031 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096608194 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086520082 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.101743466 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.081744411 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107194786 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085853337 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.104476818 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084037983 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10192112 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086123317 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103499382 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08336433 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103209644 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082907697 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.078379889 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.101200519 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078298323 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09909119 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084298827 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103816364 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.079956573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103424996 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083269046 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078803857 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.099499282 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.084290697 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.098139406 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.079721508 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.097352008 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084238301 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098839241 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.080001061 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.081917659 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096957333 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087961878 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102235092 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088184466 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.098476062 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.076899435 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102477242 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.083385464 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085423813 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104613566 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086031176 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100332425 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083950494 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.101224693 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089516186 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.095420369 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.089445149 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104079486 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.080312974 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10182857 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08043875 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081442379 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.098027857 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083081237 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103830252 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.079616055 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101698867 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.086251043 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.101109183 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.080728991 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081641224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104931375 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.080686212 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105287332 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.074433018 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.097718462 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.080131558 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085170842 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107803519 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085982934 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101966068 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083434176 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105953472 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084006419 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095467398 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.097739328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105546943 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086689351 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107229517 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.0800598 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.081611542 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10787055 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.073573316 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09978515 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079546745 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.095357388 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086169414 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101774415 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.087503767 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.076893624 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.095415559 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.074724905 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101938603 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080443896 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091872725 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079495068 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083730466 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.101432828 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083433035 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104484313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.083109823 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105604622 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089088584 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101855741 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083998891 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103890829 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078705069 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078679643 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.098568144 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.084134356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104991365 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.078439228 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.076915404 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103633207 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082694328 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.100085003 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084366261 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.100897667 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089038866 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103320009 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084384848 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109861763 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075499143 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.083705221 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.102534065 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084754497 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099013004 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085102985 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10330255 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086960211 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.107154902 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085694679 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099337498 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08569416 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082004549 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104305931 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08485191 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104706942 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.079928834 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105891352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089661796 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101034318 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08368529 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080154749 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.10064983 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.085368367 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.105449937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.084098928 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107587071 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.084422744 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.101073034 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.088043878 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10396137 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085881691 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105490105 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.082960617 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087683113 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.09914852 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090218624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.099666025 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086900866 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.101293503 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078855984 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103590472 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085272712 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083762262 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.104147116 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.086874297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.099414269 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.080058823 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100593573 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083454372 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109590101 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089402532 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.102656093 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0852992 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078955933 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097175854 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086822623 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.09716429 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.08289794 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104871991 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088153323 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.101647534 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08178383 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.083709026 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109697034 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087633762 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105827009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.079110457 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105962974 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087392192 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.101934317 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082879081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.099153976 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087352382 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.0863931 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102284181 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.080234164 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10905072 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.085660571 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107369038 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083022047 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100151398 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082418056 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.079502962 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106819613 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.082949404 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107499207 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084155027 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104626115 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091224041 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100008246 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081546994 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110080937 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085589409 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10752158 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080617899 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10056281 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088923471 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087573278 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099513195 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.080844483 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.097802688 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083961914 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.098991391 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080828798 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110634432 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089845826 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.103002269 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084752881 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084183154 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099589607 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079578242 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.099593471 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087836118 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.102259773 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09191125 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.080350031 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100603673 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079966521 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104788171 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084662614 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104541404 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.078819276 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.080045132 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.100218474 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08391754 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.108552361 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084087479 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105573366 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085404268 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103469016 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083022634 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110943484 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078721664 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086010314 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113013139 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086533952 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102312229 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.086944491 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108818183 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087822373 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099673223 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087463737 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.103871385 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.081897321 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106642641 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088360989 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117201185 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085658785 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.099458981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085209764 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.084530433 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102223176 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.089273461 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108151004 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087235349 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10572348 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083671541 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107959489 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083949158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106942168 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084149937 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103463467 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085044204 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081809764 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103813115 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081517412 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107131248 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08815601 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104643086 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089069795 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081315694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113319633 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.109403979 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086490864 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077368637 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101272734 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081430662 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099414036 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088690381 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079370078 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10490753 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083607474 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104980029 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.082323668 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107228605 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084509663 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107734111 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086467321 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075009254 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.102995053 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084120848 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10327998 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081113953 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105496007 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088468932 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.108632198 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.092304743 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.081608445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.102846562 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084003004 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102403352 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080876531 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.108509757 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085120172 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084251641 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.10139607 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086139605 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108606908 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086550911 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108289919 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088602549 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104715348 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.090660079 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10982617 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.079448121 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078688198 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108348517 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082691713 seconds)
  done (took 55.720421687 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121938546 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10462328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07670272 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097833918 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123651079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081927251 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076619759 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102228723 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081215381 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111252182 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07730559 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09781205 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118023307 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10371565 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12267284 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11153488 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077226901 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102084864 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076832671 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101928546 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097479112 seconds)
  done (took 2.887522141 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100863892 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115650873 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093011818 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1195449 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10930679 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095888642 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114084363 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116493477 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099359141 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110200363 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119626297 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095873134 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.110287207 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.109658006 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089385216 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113378202 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100314998 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108452564 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.11641903 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093774082 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112788355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113439759 seconds)
  done (took 3.181664797 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088028244 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085052912 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.106520071 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076499647 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.106380297 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.077167316 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.110507432 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.080185387 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089873351 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.100698608 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080758224 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.100661656 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085572999 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077574746 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103017361 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.07917735 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153906286 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.112059369 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085739897 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.108211286 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080469921 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.104158702 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.080370246 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079846143 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100767462 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.095210424 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108421276 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.085742734 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106202773 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081995003 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085812787 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.100718074 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083109177 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103821571 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.081862745 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080706296 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10655234 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08586902 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100867125 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.08281134 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.103501137 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081729146 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086739107 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.103067578 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083288367 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.10045772 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082883918 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106409854 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077188229 seconds)
  done (took 5.389906017 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114184266 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133327898 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104152695 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14577201 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119297123 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.092232958 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10594819 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143514492 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.079075964 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084767689 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123611382 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120463508 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107404335 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092920251 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106246045 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086953918 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107382393 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.081885163 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112184167 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.082126022 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111895539 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089850452 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120647927 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118088154 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090956373 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106030258 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.081406341 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112038341 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117454533 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092249757 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.113517336 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093279877 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121882119 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108396718 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082511638 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109746009 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102887376 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107082848 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089006777 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101852721 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.089274723 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113014514 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088646763 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123254132 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107744183 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.087348502 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107469949 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079084639 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11859677 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089285885 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.117186638 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120405239 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090946708 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107933404 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092114401 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122051342 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107180076 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085140271 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111387704 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096730418 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100524485 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091050033 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120714074 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109637717 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095144149 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120684732 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108272027 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091047297 seconds)
  done (took 8.074886417 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111580678 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108711225 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101299686 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124137669 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113530065 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.091993472 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113059783 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090728686 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112772794 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119755741 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092358851 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.160705288 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08865733 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119175245 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112772943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091951048 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112890759 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09226781 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112764702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091306414 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112949532 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.123483607 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092127614 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123872535 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125394062 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089185997 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112952991 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092406647 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1241753 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112236836 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104369211 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112547386 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.091579894 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124313402 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125910407 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112840204 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086770372 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091476504 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.11271943 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112976704 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.088671283 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123359574 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091744365 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112766282 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091425648 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113367597 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124481851 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105317308 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120231514 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.118996475 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092297078 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125038372 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112475176 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092120592 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124087364 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133231631 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102929742 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123195448 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112314447 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102596984 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124382574 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133598375 seconds)
  done (took 7.652976085 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11193637 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115949648 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.1248 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078585227 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102379741 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090902361 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101686143 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.081526731 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118792985 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098040366 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121671302 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111183386 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093796461 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121623939 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112149972 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094854851 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111826816 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089929097 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119270619 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111320028 seconds)
  done (took 2.953098092 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088851997 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.119735774 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082577822 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111848113 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.087176823 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.112882861 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.085443312 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108316335 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08480646 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107612545 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096114944 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117599904 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084925811 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111931564 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116804448 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090861596 seconds)
  done (took 2.44913106 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099584583 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.12325743 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.107114686 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.111345909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.081269271 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109959603 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085997524 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101184505 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.079147219 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121618881 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090124888 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.1118893 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08676438 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10329761 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.084839312 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.11261592 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.081488774 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087713521 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107973292 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107194018 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.111285634 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086458033 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.109334925 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085344546 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108993306 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.109764724 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.090652671 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.08151569 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.104401051 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087391809 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108192967 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.091776094 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101544515 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088735891 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103463388 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081682808 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107437634 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08757172 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110954913 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.087151187 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103187719 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.087198822 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086242117 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106705868 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079294765 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108523231 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080072128 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11141246 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086148727 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.108205224 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087143212 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112575759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091655405 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11665473 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093969477 seconds)
  done (took 6.244415529 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096067444 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107097254 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07857703 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08071793 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.109839724 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086534943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111109921 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086838897 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108022126 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081755523 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10759439 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088611185 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107526484 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08846826 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107636692 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088967791 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078751276 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107657752 seconds)
  done (took 2.570656236 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085584102 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080050978 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110050841 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083097816 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.105960094 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086024239 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101421575 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082358099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081997298 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105813784 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08356259 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.10758617 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083294211 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.108345463 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083954593 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105835274 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.086603941 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081923679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.105813812 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079580188 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107836525 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082198165 seconds)
  done (took 2.888493924 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116999944 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125752519 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092163378 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.214046182 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.126195383 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110369604 seconds)
  done (took 1.637265151 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105080975 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142406099 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085365792 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109427328 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098043297 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111106038 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088845344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11042908 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123803172 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102370963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110395687 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124521654 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103814313 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121073531 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119788864 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097293561 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111294422 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110146125 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085980354 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133023495 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088861478 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124406858 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11066147 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08911497 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110654887 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100215423 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123119403 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122752217 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089418365 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124582335 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119525163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089309476 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125215159 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123358561 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087144408 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124467039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110555803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111960806 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120455644 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122899129 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087228733 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119896187 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12535853 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096290174 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124235618 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089618974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118410001 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110854037 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088732773 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138105037 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120224522 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121846868 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098865853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125428717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124581292 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138560969 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102109162 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121692032 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120734807 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123519653 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101116684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120545717 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121820493 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103036234 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120266617 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12325481 seconds)
  done (took 8.254547216 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12137084 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105743231 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088973013 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123874564 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122253546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089577087 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111290264 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08984677 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11069486 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086665715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157594262 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110196288 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122920038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100834013 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111185622 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110346589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090341138 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122446597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086361771 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140090427 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111369489 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10080537 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123259591 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123701012 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124015741 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099113663 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111743283 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089793045 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110893799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111023434 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097198578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111318586 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101214329 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10733198 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122537179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089885534 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111288305 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096565123 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110634182 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119953391 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099878856 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133462307 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110359943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089218928 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125087131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110967966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090548965 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107604119 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089543881 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107868755 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102725387 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123897625 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124562611 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12263513 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090523212 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111738929 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090406789 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111705247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089209743 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119464333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122647801 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089629411 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139276687 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111149265 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089495536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122876998 seconds)
  done (took 8.060223338 seconds)
done (took 151.857170164 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097250663 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141055314 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098902175 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169420513 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08068947 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118892826 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.134915799 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095159559 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106777967 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085875975 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109711894 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086200622 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.150255084 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101717885 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.082109104 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109441272 seconds)
  done (took 2.619880649 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175627803 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.286989676 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100742295 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105973063 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090004033 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.085413262 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106086189 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093056769 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107459747 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.083822619 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106803281 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.084466084 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084495973 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107746941 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.086785846 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.106683194 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.084755098 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084815095 seconds)
  done (took 2.839741992 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.108622855 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144665808 seconds)
  done (took 1.120016355 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11606662 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171582491 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266618815 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.14879243 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.131287367 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094601479 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15282284 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.121692727 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200333077 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127759777 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103449095 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.108953188 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135365889 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.091167527 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112401352 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087318435 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.135818059 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.089901274 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114587629 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09154386 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138863201 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.082782219 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116326609 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.089994527 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.186187839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.123130502 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.101766874 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080426795 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.088983073 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11038566 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086275143 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115569401 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.124409657 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.144545282 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092582609 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.166153921 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.088305053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.107696352 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.089665725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.107796908 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.094010811 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113043183 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.09522721 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.111044984 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079949586 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.111055523 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.080494525 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084930074 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115916663 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.094220663 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114125206 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.090833827 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164875041 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.310778128 seconds)
  done (took 7.362492235 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788082165 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.152591576 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088238967 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.859666886 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132828272 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121377571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.754574328 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.131400104 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225294295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.794935512 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.103906222 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12099229 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219835242 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.223207419 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.933157032 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.299843401 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671681032 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.123484176 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113221237 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.145222567 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114225366 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132270157 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102381191 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.422562088 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.108219099 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084735669 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.113823486 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094361012 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.154152809 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.108240604 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088349394 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192382404 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.235992426 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176016059 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108992815 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084308882 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106297239 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.159712191 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236121459 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208681154 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.171949447 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081692112 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107491789 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.095686438 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.125857614 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.082158376 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176601853 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.164358547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.16313738 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088249548 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.116157258 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11490713 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.093642038 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.153612673 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.105070736 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.305609045 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.295116907 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107200386 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092949436 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123479265 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.256192534 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084022465 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.219520104 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111788716 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206890597 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084250805 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772761628 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.157946799 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.106846061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.091450765 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11642877 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091407796 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120785378 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163391833 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.398924259 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.096920255 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111432606 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084034841 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223938182 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085939525 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088012172 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179261944 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.086889082 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114648089 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097312426 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118536 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16354243 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221235518 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.119915768 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092787827 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114058339 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.098235689 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.110291514 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208705523 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214184003 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152720619 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206479984 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118269934 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.157641909 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.158636567 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116311973 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.162421204 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09117177 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12207247 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117380793 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.188041147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136522658 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107521599 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08931526 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.113802308 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.1168561 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109909661 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.092433219 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.180830152 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.453932622 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.15778536 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083746604 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117362627 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098821214 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179019774 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092550446 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257238298 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094104339 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.159844803 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.112699991 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082771879 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115406518 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1553394 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119637354 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.092589329 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118368398 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113866939 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.222347659 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190000362 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12017984 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214172384 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173942946 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115306498 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.166198759 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115991605 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.163050946 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094140428 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118647966 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087434764 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768010789 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120265371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092289024 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112352776 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158008647 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107129367 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086121527 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108614067 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082132496 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.791113773 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087821538 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106311701 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086153107 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114514214 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092653757 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114096496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089638943 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155555135 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223801345 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118060391 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09135697 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.108179029 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.155213525 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.086670484 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107841407 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085368114 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108572243 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.093493484 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.112555544 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086082093 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16514382 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.153197425 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21517446 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.586684585 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085046249 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088280211 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224726065 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108878086 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.255928835 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115510186 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.219365945 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160457356 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08270059 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.30992069 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160765833 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181553124 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089960389 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18467714 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.083304991 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095035647 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.177354627 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085898508 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116683419 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153794307 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.098257825 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120377713 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.918279404 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.085167231 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.220635555 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106634879 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164063993 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.086372545 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120344485 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285779322 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084896009 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126081608 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.155159952 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089827385 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109940457 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.845804939 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.108925447 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094992193 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116703914 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.194019999 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179224569 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092088555 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115234969 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095254796 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.176822449 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.204022679 seconds)
  done (took 41.960161157 seconds)
done (took 56.761962519 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281554237 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.206887247 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260512982 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.161744518 seconds)
  done (took 1.870195273 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170762155 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123517686 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.139838689 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.080961948 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.146325314 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104039087 seconds)
  done (took 1.650528003 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.355641649 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.263002993 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.211406789 seconds)
  done (took 1.717695658 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248740837 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267343924 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.31967346 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.382388573 seconds)
  done (took 2.207328812 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.200641596 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.100870733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121403919 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.115715325 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.168111517 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.202168238 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.136724853 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.14425039 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.103487488 seconds)
  done (took 2.230629965 seconds)
done (took 10.566227974 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.270466399 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.269450149 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.24530922 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.159654791 seconds)
    (5/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095101469 seconds)
    (6/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.208371471 seconds)
    (7/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.130485187 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097423305 seconds)
    (9/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.262132113 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 0.239412858 seconds)
    (11/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093781508 seconds)
    (12/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.202014386 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.123662779 seconds)
    (14/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.178961905 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.171861634 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096963321 seconds)
    (17/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.271261652 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.233843892 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094574512 seconds)
    (20/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.11429305 seconds)
    (21/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.23673501 seconds)
    (22/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.179605904 seconds)
    (23/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.194766669 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.216153115 seconds)
    (25/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.235277056 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.155965622 seconds)
    (27/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.168759554 seconds)
    (28/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.219730905 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.16178252 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.150241327 seconds)
    (31/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.094264725 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09520161 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 0.226488694 seconds)
    (34/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133772048 seconds)
    (35/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141817122 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.238875776 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.11454871 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098839863 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.119405561 seconds)
    (40/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113738107 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117411125 seconds)
    (42/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165927387 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.139682596 seconds)
    (44/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.253218305 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093651419 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.203993254 seconds)
    (47/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.193589769 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.209546203 seconds)
    (49/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.14224686 seconds)
    (50/286) benchmarking ("sort", BigInt, false)...
    done (took 0.251533289 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087372803 seconds)
    (52/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.072807908 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.13690578 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093080429 seconds)
    (55/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.0985372 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112478092 seconds)
    (57/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118774626 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.084781762 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.183555621 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.211092249 seconds)
    (61/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090599057 seconds)
    (62/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.188704893 seconds)
    (63/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.159612414 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184565144 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.098132484 seconds)
    (66/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092573746 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.121158976 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.081450894 seconds)
    (69/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116167646 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094356655 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.12725617 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.117854819 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 0.110937839 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076756359 seconds)
    (75/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097008424 seconds)
    (76/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.124574566 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.074598811 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117809071 seconds)
    (79/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136202504 seconds)
    (80/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181418128 seconds)
    (81/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083860247 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124211999 seconds)
    (83/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.151042383 seconds)
    (84/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.162986196 seconds)
    (85/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189659186 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180353647 seconds)
    (87/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.126148243 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111581576 seconds)
    (89/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083418546 seconds)
    (90/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.098175273 seconds)
    (91/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.0699405 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091301824 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.09878402 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082556914 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128231914 seconds)
    (96/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.149753105 seconds)
    (97/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129851778 seconds)
    (98/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098161757 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.125938979 seconds)
    (100/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.204212403 seconds)
    (101/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.079214685 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117214578 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.08192022 seconds)
    (104/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.076784451 seconds)
    (105/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.120366989 seconds)
    (106/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090890809 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139118746 seconds)
    (108/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.142843829 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.136635395 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 0.183420666 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.092396153 seconds)
    (112/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.118253294 seconds)
    (113/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.088991603 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 0.175217091 seconds)
    (115/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.138926837 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.111164325 seconds)
    (117/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.104123242 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.112946156 seconds)
    (119/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.078821001 seconds)
    (120/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103150002 seconds)
    (121/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082235494 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.09040753 seconds)
    (123/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.097893954 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.091563912 seconds)
    (125/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.097926475 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097294927 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.140056069 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.113017972 seconds)
    (129/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.184094461 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 0.233391006 seconds)
    (131/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.073398588 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.102576529 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.168487997 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112121656 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094051768 seconds)
    (136/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121175382 seconds)
    (137/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075340333 seconds)
    (138/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113947427 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109786699 seconds)
    (140/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077626186 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.191632549 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.076698316 seconds)
    (143/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103334258 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097675562 seconds)
    (145/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.078507475 seconds)
    (146/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112532694 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079499337 seconds)
    (148/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.160182101 seconds)
    (149/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075123251 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137846195 seconds)
    (151/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.098743875 seconds)
    (152/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125198051 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088744538 seconds)
    (154/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.101141656 seconds)
    (155/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.089301369 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.197669201 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.089703361 seconds)
    (158/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.09515528 seconds)
    (159/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.091776525 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136815074 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082094689 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.104851692 seconds)
    (163/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.073568181 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.081161284 seconds)
    (165/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.112817531 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.090198203 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.075375361 seconds)
    (168/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.15491998 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097152626 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112307629 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093989487 seconds)
    (172/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.108638129 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085294931 seconds)
    (174/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083736202 seconds)
    (175/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108506855 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.075039396 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.122628785 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.09116072 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.078449475 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.099876086 seconds)
    (181/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.142689896 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 0.229271706 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.106402742 seconds)
    (184/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.084981813 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.073764341 seconds)
    (186/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.171349288 seconds)
    (187/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173142794 seconds)
    (188/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091317038 seconds)
    (189/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.101707565 seconds)
    (190/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069560494 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.085833629 seconds)
    (192/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.09838053 seconds)
    (193/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07377536 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.172612096 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085911528 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123429907 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095307489 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112416352 seconds)
    (199/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086203781 seconds)
    (200/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.074770107 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.124361677 seconds)
    (202/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07873079 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.133792579 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081053387 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.081750587 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.092940889 seconds)
    (207/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.084006945 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.10373444 seconds)
    (209/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.135280162 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174863528 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081306218 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.104675668 seconds)
    (213/286) benchmarking ("sort", Float64, false)...
    done (took 0.149192556 seconds)
    (214/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.096251295 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075745405 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087378449 seconds)
    (217/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166983557 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.106936513 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081675389 seconds)
    (220/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069816594 seconds)
    (221/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.237462487 seconds)
    (222/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094658019 seconds)
    (223/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164590849 seconds)
    (224/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119993511 seconds)
    (225/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.070826808 seconds)
    (226/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111664885 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.083700311 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087040459 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115488008 seconds)
    (230/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089238264 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.192575068 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088759272 seconds)
    (233/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.114976198 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09418539 seconds)
    (235/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075351691 seconds)
    (236/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.123405491 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102063908 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116658705 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.092661375 seconds)
    (240/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.100872342 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.086389667 seconds)
    (242/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091414312 seconds)
    (243/286) benchmarking ("sort", BigInt, true)...
    done (took 0.242362255 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.099372887 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072357302 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137502564 seconds)
    (247/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.084476726 seconds)
    (248/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.073054322 seconds)
    (249/286) benchmarking ("sort", Int8, false)...
    done (took 0.196195001 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11386243 seconds)
    (251/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073835798 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.110951811 seconds)
    (253/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.089220851 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.08739975 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110129261 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.087419733 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.112775979 seconds)
    (258/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090815654 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143214519 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.080483531 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.070141515 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.104590933 seconds)
    (263/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069536585 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.114041207 seconds)
    (265/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.083060912 seconds)
    (266/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.070823034 seconds)
    (267/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.106896962 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081652497 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.104194356 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.107752196 seconds)
    (271/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069656953 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.098038697 seconds)
    (273/286) benchmarking ("sort", Float32, true)...
    done (took 0.235760084 seconds)
    (274/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.069581581 seconds)
    (275/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.106221515 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.073384491 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.108060289 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106273299 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080569585 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0970208 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08202989 seconds)
    (282/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.088562201 seconds)
    (283/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.112602056 seconds)
    (284/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.07357943 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.187167807 seconds)
    (286/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.083848741 seconds)
  done (took 36.144009948 seconds)
done (took 37.044233641 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.095524866 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149220247 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.092230225 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13606213 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097795105 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125445014 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091618928 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.122348336 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.093908186 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.09771297 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.118781457 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07412632 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122809381 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.096880448 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12377061 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119935839 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126410702 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094844155 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116967286 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086525489 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090521914 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113386153 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.088954046 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.10051736 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093446632 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.091685513 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116638199 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095600204 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.111176468 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.083251551 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106162535 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.089591674 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.080981067 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.120788086 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.090705239 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.110214286 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.093142026 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.115351535 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.083528214 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086689521 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120084497 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087086317 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120427815 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094991993 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.089203497 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.112027464 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091483069 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127507216 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.120500137 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11888354 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095297544 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.124433154 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097720785 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.095200644 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.112845115 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.09114194 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.11260212 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.120796503 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.116812111 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093600927 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095594135 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.12089417 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.086847054 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11662509 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.091099331 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124191696 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099203548 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111827382 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.098329096 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093251794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113195502 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.091331271 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.113116152 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087543738 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098171114 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125098791 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086562245 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11446654 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.095046019 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093346963 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111977774 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090000625 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.114965195 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.089885021 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091535143 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.103149426 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.086567993 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119233345 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086900166 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.090511212 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.11947597 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093487106 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11123385 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.094039828 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105611396 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.08165417 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.084424668 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.108088649 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083951113 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.104939455 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.082518542 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085792545 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117525826 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087356483 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115006157 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100138897 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087917637 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118379338 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08681946 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.112917383 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103567752 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124120695 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088445176 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094071139 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112704156 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.089747214 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087215159 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.106173725 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.082122006 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.107365321 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084040722 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.082077953 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.109232623 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.083627719 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.120403976 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.081574637 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.105159415 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084765293 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.08230412 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.112031642 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.081906154 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.106015775 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.084297698 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079971064 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.10901133 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08341175 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.108995224 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085543877 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.085809973 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110153461 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.085937295 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.110572156 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.084544784 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081797052 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105511725 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.077537718 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114576306 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085739052 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.08861655 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.11243547 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089652025 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113350107 seconds)
done (took 16.286917371 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082793246 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.180849688 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144776871 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.118873993 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.135416774 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.088535831 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.124868797 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120514204 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.116704189 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145052293 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10651103 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128322335 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.120922805 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.106859778 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.082401399 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092368525 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112834288 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104436007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.152513738 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.136369096 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.123529912 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.110443636 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.111975638 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.130577832 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.115539211 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.110353689 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.083474897 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.111378066 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.085857052 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.123354146 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.101814959 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.110972438 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.082879203 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12796112 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099362181 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114967317 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.082360189 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.092305019 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109935756 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08229797 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.131479945 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130062405 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087974548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08872518 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110447532 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.086767068 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.10875017 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091129316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118187297 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086150248 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12350746 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.112362354 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.112092612 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.094049858 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.111671448 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.099759 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.124349283 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09103591 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.132627232 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089213877 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.088236896 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118073378 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.103212478 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.137945996 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.086720574 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115988834 seconds)
  done (took 8.239624527 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099829135 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136316469 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10230956 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13148739 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.086144442 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.114466634 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.089657851 seconds)
  done (took 1.720741785 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083215038 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.112157524 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140895939 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115637806 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130932922 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.142504255 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095225198 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089590194 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134648835 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088033731 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135501314 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127972137 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116545679 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097115488 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.141666111 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08801708 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140799707 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.086049249 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11153637 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109985642 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.111383006 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101844427 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.111170221 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.083428485 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101956777 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.108937859 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156072222 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089023299 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.081647936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.111510483 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081872011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.14692208 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101425627 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119016558 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.083920972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127790699 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10445076 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114589172 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.106980028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121399768 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107985535 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090527219 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117859073 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087766086 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118539914 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102013015 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119652508 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090966916 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092780148 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141469603 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090492943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13381789 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089797562 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119912262 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088175911 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090833626 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124209277 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.088115324 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138787759 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087449057 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133864682 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.103240085 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.126259935 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.105022231 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111985888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.101922692 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.126127411 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.088445895 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090906234 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118385337 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109512522 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.115328852 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.093160011 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.130710637 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.091750399 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117552993 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14298693 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091744396 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126792154 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.088129696 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.113793509 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088510013 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.141286218 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.087138413 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087228873 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11891509 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.08872656 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.107475936 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08305504 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.114230868 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.082211744 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091008403 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121134129 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090681747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121633639 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111415718 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090455172 seconds)
  done (took 11.494518347 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.085558674 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0849708 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.114816112 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.084871974 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.112807919 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088617046 seconds)
  done (took 1.547987004 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112838956 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.111205752 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.097684791 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116909865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.12609471 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.132970447 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.115662204 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.127078572 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108035548 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12998693 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.116011595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144480365 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147966135 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097085805 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.141687571 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096121994 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.142859218 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097376867 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101850093 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123230245 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.108198881 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122517762 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096194354 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134460473 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.095949641 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.116915403 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.092778316 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12727805 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.097432777 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125341055 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.093420982 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.125126887 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.091877915 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.120242975 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.111076267 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.122165961 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089972678 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121234069 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.091057008 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119399163 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.111286075 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122032067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102124888 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12456325 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.095131463 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.115953498 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09630201 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115598288 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108481184 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.124067036 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095715214 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.116115059 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095820916 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.124169139 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.090115999 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119501126 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096105735 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.135675334 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094789086 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121497519 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088719437 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.124347831 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097034349 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.126054963 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.096274975 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123853875 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.092764413 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119484101 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092132708 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.115687987 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096247788 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.111132397 seconds)
  done (took 9.056555267 seconds)
done (took 33.009502925 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68069873 seconds)
  done (took 1.649305378 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815095246 seconds)
  done (took 1.785841418 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.208798747 seconds)
  done (took 18.203774885 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.456517715 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.545044164 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.949916144 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.160256836 seconds)
  done (took 3.07900496 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941672486 seconds)
  done (took 1.929486009 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278114514 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229726868 seconds)
  done (took 1.482486474 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766539625 seconds)
  done (took 1.75228954 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.419108147 seconds)
  done (took 2.402864995 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.319861316 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.154020922 seconds)
  done (took 1.464585936 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555210209 seconds)
  done (took 1.544341987 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.266926812 seconds)
  done (took 11.255829424 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237913668 seconds)
  done (took 1.235981527 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285478855 seconds)
  done (took 1.273101458 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.508103389 seconds)
  done (took 4.496487951 seconds)
done (took 54.529538804 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.094256058 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096610065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.122782833 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094830886 seconds)
  done (took 1.391853106 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100286433 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.091243661 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.124572058 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.090587311 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125342179 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.091501324 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.11967238 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.165185257 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.089874483 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.092114607 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.1169051 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090310076 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.119846014 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.094651379 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.114108595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.09547822 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124809429 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.091880868 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122441174 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093262738 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.114168503 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.093933321 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.119620941 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.089959352 seconds)
  done (took 3.567954973 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.096316747 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090535935 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.116758555 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088586398 seconds)
  done (took 1.386732566 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095383025 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.104139889 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.126966795 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.09534635 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127287849 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100250976 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.113242904 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.08695232 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114923785 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095219984 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.111065724 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.108893898 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127488511 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.094756642 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122272314 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088042929 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.085854808 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.127103427 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.095160784 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.121852778 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.087917514 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.120527059 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.085359628 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.130398788 seconds)
  done (took 3.562046106 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166359648 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.122985118 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107622777 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.116273788 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129984744 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.137052194 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083500257 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.136392018 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.082951018 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.125791383 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.08826171 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160994321 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096613714 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.109421298 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.083454957 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.0840688 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122493436 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.097759001 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.113144688 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098672419 seconds)
  done (took 3.257594853 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093740412 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087382056 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10989996 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.086456902 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120449479 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.091161667 seconds)
  done (took 1.589995223 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091853868 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084725556 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.114465302 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.086163386 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.115263826 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083752874 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.083414313 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.111333717 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.084834711 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.109739802 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087500813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.083958024 seconds)
  done (took 2.137550637 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.499276166 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.116673744 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.087134786 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108686668 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09544358 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.111445489 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101801858 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.085726163 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139793372 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.084166746 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111496134 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.087025377 seconds)
  done (took 2.63005331 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204545645 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094733628 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256761929 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.351062909 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158166511 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169251277 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.273784558 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160410481 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179543546 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135777637 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190194405 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127224005 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150201667 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173623216 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13632455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.125949366 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16969452 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22048875 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117980296 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224450373 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131654467 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162629726 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175121094 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149223218 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135280589 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153865415 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.091179113 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125258432 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167748472 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164391366 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169157419 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118484622 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137317668 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192362446 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230898025 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176380305 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274305485 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104208434 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.175752378 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164098421 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218839545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137929038 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188912251 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15114102 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125321133 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176420463 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149777127 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174040687 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.101629391 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136931698 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176052926 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170790421 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.174250446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133145193 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295407309 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145363132 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116545949 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177440545 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180045852 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183236613 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162717889 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.115753026 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179808983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176358911 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1727207 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141715232 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.16085984 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094666194 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168805038 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18924046 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17297434 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165061706 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.206317919 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104677759 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158855186 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163577896 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147996702 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173360176 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158003948 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.091567278 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146005326 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107388846 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125036779 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190373322 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093760327 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197620892 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134562924 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16940511 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200972391 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15182055 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129020816 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159500455 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161118624 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142106844 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.086052002 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14252199 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148208517 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150772083 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102349449 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151661998 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139055593 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.096816859 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14631937 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.092362678 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155234707 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.123952162 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159487879 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157818713 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.095413219 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160208915 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145228632 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.119533628 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164494345 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179711588 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129687737 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101524687 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188801897 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153817455 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130821794 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169325656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179842763 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.151199049 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107459168 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162208342 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186369946 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137834979 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18403288 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136255009 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103198588 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137391812 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155454453 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151044671 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125503715 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12651962 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150734122 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185780315 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09341666 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133724532 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170490369 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097063441 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12665426 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138069441 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105629102 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133095856 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.110040666 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132774464 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151693331 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155876532 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121602951 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148675048 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138567493 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183781665 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12989004 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.119755146 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143431236 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116235351 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173376448 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179682055 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098766788 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19180904 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161519928 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216999551 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158310358 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101587999 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172824471 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124820277 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.088583337 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160456392 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156620851 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157478231 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.17644622 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188567397 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162487438 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148921162 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116834253 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159034212 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.159544277 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150823056 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13367741 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128678744 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153547911 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.118880238 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093152153 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124775431 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111358505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127344235 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128792503 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177170381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15884292 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181629639 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156472811 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110671926 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177111515 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122445202 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160109601 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.166453446 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108638827 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.177711364 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175660896 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163303579 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138274784 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169034144 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.088677848 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120567117 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129646104 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131270085 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128668059 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130193419 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112423703 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176830132 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166138721 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146586901 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195656223 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160504593 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18469601 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117250519 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.164415259 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136044554 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152971398 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172480035 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104949183 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.145612078 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172179302 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138219495 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183216853 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156251901 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134909326 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215583825 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145087981 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099783798 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143768929 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160071967 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10919558 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161217521 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142291638 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10458191 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146687642 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.123398295 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094841021 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167608969 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140893943 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170838461 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.142926719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163961149 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095448524 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140532168 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156291737 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141840645 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.084731569 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161354012 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178469465 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139680018 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153784329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167171823 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099622243 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303042183 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18347834 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176755165 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133769462 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138805324 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130417998 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155726778 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157378919 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173706875 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143576487 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174552707 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126037756 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.130624464 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132539537 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11575443 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146792659 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136477699 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100563827 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149089076 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.133290796 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171353694 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11022859 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157224069 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159238512 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14593708 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.112975442 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140296779 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195962961 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155027655 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173302573 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.11712176 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.160835627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218845562 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093773011 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125277758 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.096405483 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173921575 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129308794 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126455915 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.179005656 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218532258 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155676152 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160487356 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106677018 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.114743987 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126481736 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144951241 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192468076 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138141653 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132464343 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181500827 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.111409627 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127602592 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159283549 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27711973 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1407275 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168591475 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083445519 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.26946847 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095244014 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126896879 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156274803 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166726629 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.106624631 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.169856253 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161596258 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112459508 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15541837 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133423138 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182278372 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199220786 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164220224 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166985411 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.129571606 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152370528 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130094015 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170208895 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140389097 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.134871593 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130052913 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176817403 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.181315055 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129131009 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157689476 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159904582 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1554133 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164789318 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102752916 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192840401 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129028457 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160234643 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136311667 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093186804 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154438399 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.179237945 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129935159 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166756259 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126623276 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128893703 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09507863 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147280238 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155122239 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137938528 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094889927 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166742 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.120027281 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157400923 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146600043 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128578627 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149667717 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113671017 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133914901 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140269354 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113725665 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131980413 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135644546 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171352689 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.126030592 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170599905 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170808279 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158535786 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154352005 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140608415 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637284775 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.12588398 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176002739 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114958973 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178889478 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144834543 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161474398 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156256639 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116656284 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162432983 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14507528 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.227027646 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159783836 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154594315 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099393933 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142306968 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139869081 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.100128257 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148635478 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157351875 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108963738 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134342321 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153607852 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1402736 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.101872976 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135706683 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178673316 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115469434 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169724093 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175621917 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134930653 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161716048 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164922273 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09879464 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.155721183 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166602488 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139112987 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146257558 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.099920546 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131794861 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175579081 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.092508711 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158802388 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157871011 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156093382 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132048539 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.129597356 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156006839 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138572844 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128532433 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127253129 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148557911 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153174495 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100108035 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124939026 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123022757 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149209915 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146449223 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093681703 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.161716097 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177060554 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09135594 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131024653 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2771527 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154373525 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186311156 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110044327 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133303185 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110698902 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1436433 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150387157 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156375234 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.097659444 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130343309 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.12523265 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.135145589 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1393904 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151783422 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153507205 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152534897 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193630629 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133655757 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278031271 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109823866 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152324016 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118050024 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.099887698 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141041999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103511205 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143847646 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185858683 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176938441 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143103731 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104338122 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12437074 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.093276705 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130688173 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156854315 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122742703 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154646656 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138526586 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.083228177 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141040276 seconds)
  done (took 72.89560627 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.154287619 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.163597413 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164910494 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.215485335 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176126458 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.265501475 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.228686268 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247917478 seconds)
  done (took 2.702977784 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.088805139 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.139537794 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.128460998 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.136005083 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.112474652 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.08867493 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.321208972 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134753826 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086392347 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.142611575 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.128909166 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.112832506 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.485258816 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.114890137 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.113123661 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.080941648 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.112548372 seconds)
  done (took 3.611310276 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.23748936 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482380158 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.078499324 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191526257 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.176599994 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090322397 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.716815566 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.090627089 seconds)
  done (took 12.15049388 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115509575 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.107956365 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.156978857 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.154285133 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.11208667 seconds)
  done (took 1.74737282 seconds)
done (took 113.61537934 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.092412241 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095010114 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121895818 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.09654085 seconds)
  done (took 1.486755627 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099749124 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079529007 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103493293 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076937483 seconds)
  done (took 1.45388726 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188893825 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171073639 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401452202 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074722705 seconds)
  done (took 1.594855656 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109028117 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.126880143 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.100235186 seconds)
  done (took 1.4378739 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10140048 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096535873 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.125923252 seconds)
  done (took 1.421837688 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100383735 seconds)
  done (took 1.193272657 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106054041 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.134877181 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107862513 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.133996277 seconds)
  done (took 1.580152046 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.093500759 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094225498 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.13561835 seconds)
  done (took 1.417476738 seconds)
done (took 13.040029726 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10206638 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420725305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386627337 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13305171 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.692876298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411439008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045605087 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.142777519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165131824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094474686 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131803777 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.66915271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.029567119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340006238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.016409027 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339697319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.668990059 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116419191 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087188369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.115403173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.030022156 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114973095 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088221157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.086409852 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.698963715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.391806763 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117253967 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.338524806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114807703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095929181 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.374932314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116572767 seconds)
  done (took 16.765665147 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093820967 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174980114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098597198 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117756842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095202305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.089950751 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.119916152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088627492 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178341024 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.116378403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.105369956 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.115018263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092170146 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088276966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.136692333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087015526 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.116763937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088671672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115329882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088516093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134402919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088293441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087907834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.116260587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087478625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128824637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.088562054 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.115422887 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088439006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095298709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124363788 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.088589536 seconds)
  done (took 4.551392208 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139559406 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182749742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099132456 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150700486 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169591572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091000235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.194789318 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14339412 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181200154 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088847573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104486718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.116576885 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121369105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118026045 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107252809 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117182171 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088313858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116452078 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088407353 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116366253 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108165726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114733565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088673369 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087484639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117361003 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102057427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118310974 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088818047 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116575197 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096223471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090886174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116845244 seconds)
  done (took 4.884935795 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.09227539 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093157011 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132943425 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.104219676 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121182576 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092088137 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120677656 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09025765 seconds)
  done (took 1.95032435 seconds)
done (took 29.250571174 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.106971369 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.093871972 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131205267 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10022221 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127604123 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100493825 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116353923 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.100359114 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.100352507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126269894 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103597391 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.11631657 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089603413 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115545806 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10280141 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092421197 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130388486 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096600506 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131230999 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.101859267 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.119368699 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.100465531 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.126477122 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.103407395 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.131384195 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.10258449 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.103683445 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123817125 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088454168 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.119027558 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.101555467 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.144978675 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098231433 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140935778 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.093560468 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092815942 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119089381 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092349101 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133166032 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103081009 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124659349 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100306254 seconds)
  done (took 5.740438322 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113737918 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.151653398 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.116400147 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.11857564 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090792403 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082985755 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.143016857 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088737719 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.119656462 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.112559666 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.112104458 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080290469 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080860764 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.104423652 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079026057 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077470925 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.111441502 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077569094 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107883829 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079722242 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081930887 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.104220048 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081857115 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.081606665 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.106218501 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083507597 seconds)
  done (took 3.701320067 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.095899008 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102850338 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.13937172 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170855014 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121797398 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.12608038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.097617479 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.135338796 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105139704 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.086858701 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120244408 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.115781606 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136281646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.094850616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119978449 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.10257679 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130815066 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090302074 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.093088194 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13777025 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.10421114 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.128621673 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099974287 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128951864 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.088109356 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091613335 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122071185 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097810547 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.127034101 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.096096944 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.122761648 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.091355565 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.118172304 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.10063103 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.093721718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118858121 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107131866 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126903851 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097496886 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118482018 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096039011 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090662995 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139330676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156443755 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090142092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.094270543 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120926115 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.097879976 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119230784 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.106220894 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126014243 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.088362941 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.090986132 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118302073 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089552487 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133598016 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090020357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.118605031 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101589626 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093548838 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.129579095 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.092604079 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132592001 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.089383484 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123592597 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.089576351 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.089210351 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1163942 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.111163156 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126356273 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.128844767 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.125266139 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.088774221 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.124780884 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.094513654 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094568003 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118140342 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10222433 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128630047 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09168143 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.128238861 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.090703624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091030871 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135664741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.08977488 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.118772599 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.089335202 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.123283298 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.090944823 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.089332111 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131629185 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.086896289 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120549452 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.101609443 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118524576 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090577937 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.093768352 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122465302 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.087047783 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130976835 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.094200274 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.118875925 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.099471077 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.118623934 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091157662 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.097982439 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12263605 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.088180536 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.122347155 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.094939969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.118174082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092725455 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09099222 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.120481972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.098557734 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.124725323 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.092062245 seconds)
  done (took 13.897789909 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225397466 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.212183941 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.184588581 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.260372963 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.131590208 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116180775 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.208125583 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154673341 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.090973226 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.155355138 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.166635318 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.179885533 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167463174 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.177522575 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.167960806 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.088315067 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.137425417 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.133286052 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211998959 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288303866 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109231345 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.128287458 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.157711085 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.126315545 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132128564 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097934464 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.136535508 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100883478 seconds)
  done (took 5.577655121 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105241889 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151437696 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.094326316 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140359992 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115046793 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119309076 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.092914203 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120681482 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102093018 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133059068 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.087915008 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124003853 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.096365222 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097568232 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.119447735 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.097614098 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.128689991 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090087479 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.122069928 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093010087 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.09937946 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.135706674 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.122461259 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088662605 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.098603699 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117415156 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089074034 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139371621 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.117537057 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.111599501 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.086463719 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.127816064 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.102362153 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.119999743 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.089046356 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.090407518 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.120448942 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090336987 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120515895 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087746566 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087033428 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110581689 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088036955 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133510017 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095511132 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.114080897 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094806001 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.123958293 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089417508 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085675976 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122135529 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092120758 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122347001 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.097506849 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.091054767 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.119284138 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.091717956 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118532105 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.095237902 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.090660919 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.117100007 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.086757735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.123279873 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.092506752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.127946089 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094261014 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.116536509 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.09102642 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093211545 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125750107 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.090999662 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.124648085 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087090902 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.090464136 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122114834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.094702759 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.121694495 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.087403214 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088612272 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.119584389 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077723148 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.118494112 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077384232 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091442274 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.117063042 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.087734809 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.120324101 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.095572442 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.133856275 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.090109281 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.126304241 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.090733594 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08769167 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.122643116 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.085884379 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.121278208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.105615078 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.13830898 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.088729705 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116425371 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.104194105 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09066513 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118768707 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07911042 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.127874567 seconds)
  done (took 12.296236052 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127354682 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.149490875 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.090956128 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137084777 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.122624344 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.154857315 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095369393 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127254363 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.090406539 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138164319 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.088759696 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098151984 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.119572147 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.102900084 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.154751428 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099270529 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121250336 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104219423 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.123931629 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136390426 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13708881 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.107659005 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.136918229 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089347843 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126015224 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105546446 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.157721171 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.102838039 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133045604 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.111792225 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133158822 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126902978 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139659229 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.093209501 seconds)
  done (took 5.222962155 seconds)
done (took 47.540322637 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.214190204 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.418721421 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.194869848 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073987118 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.269611692 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.225332885 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.206524902 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.194113309 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.270225036 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196775475 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.468337707 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.795773739 seconds)
done (took 58.656734703 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.355953675 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.361329347 seconds)
    (2/2) benchmarking "String"...
    done (took 1.500006838 seconds)
  done (took 3.99920098 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.788347196 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.149768677 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.455259903 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.194150374 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200549133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.485408208 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.953266877 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.636330028 seconds)
  done (took 28.200086609 seconds)
done (took 42.472395438 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.229054472 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.204662973 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.202501472 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.182404169 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307784704 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.223752265 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.491915472 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.351055228 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216029683 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189325362 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.215096828 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.195554701 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200531309 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.501252819 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.195782339 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202832059 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.295106524 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.945040297 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.610523977 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.19639422 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.197870889 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.204081174 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.220402424 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206073508 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.253013285 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.195876307 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.213019373 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.20460012 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.796762745 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.202415623 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.22647672 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.620796518 seconds)
  done (took 190.824288528 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.196318701 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.197001253 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.338052107 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.23669938 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.719206841 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.401693255 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.345771719 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.814957444 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219269507 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.230719483 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.376113666 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197869836 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.434206495 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.167818473 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.230892742 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.274691102 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.431950298 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.475416004 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.236397061 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.312898508 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.210675917 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.290101888 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.228335635 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.371656585 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.240112792 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.271181137 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.231222318 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.230752267 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393401488 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.370964375 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.219116322 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.210840365 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.836287283 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051776024 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.212319264 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.204644664 seconds)
  done (took 149.538215163 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.198451397 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.198471516 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.19874666 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.231719733 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.198875288 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.797117345 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.801818033 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.770352638 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.539586285 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.712962115 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.549625973 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.204192123 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294565144 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21334756 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.200852665 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215178237 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.224475822 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.204539703 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198985421 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797339314 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216323045 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.296174193 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.382870104 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216174211 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232332158 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598071464 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.1990644 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232818271 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.536524784 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.251312123 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2009492 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.605614994 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.927472366 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313699824 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203149489 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.233003134 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.200303987 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483848793 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200797898 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.202002277 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.205238356 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.200714819 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.916313161 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.206444008 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.800308453 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20652414 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.22512064 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205993566 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201439973 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.476772933 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.931000657 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.206199262 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.200282866 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20460311 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200755843 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201407769 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.234870727 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.467963372 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.308783957 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.201757517 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.201891873 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.206865417 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234468483 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.20162527 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203150543 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202609907 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.593623961 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.261650521 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.323881699 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.016825216 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803051688 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207495168 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202670969 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303095038 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324237628 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203119305 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.203019753 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203638062 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.203034765 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314208786 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.203584741 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637873531 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.381336344 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221312913 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.703579466 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.301490589 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.203852488 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.657477152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.208703392 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.203119652 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.079364512 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306306241 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202924703 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203835359 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20423077 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.638010587 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.805141672 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.524434227 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20936158 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.570519865 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209660227 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.651587621 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804119185 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.92598287 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208774785 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.318021412 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.383155079 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22221859 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203212474 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.723151015 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.210014025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263445939 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210157608 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.603356207 seconds)
  done (took 368.239601428 seconds)
done (took 709.731259855 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.823259035 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.816679682 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.927389305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.803906307 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.769924017 seconds)
  done (took 10.276108453 seconds)
done (took 11.41201991 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398852755 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.39919554 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265780669 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400503509 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.237742154 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.419353208 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.379035423 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.226406264 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310848407 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289509254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31235535 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26140351 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243027566 seconds)
  done (took 18.27872801 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.538172325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518611232 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27139699 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568391702 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246715876 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52103938 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.409111414 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.41542996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443924074 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222511672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220912845 seconds)
  done (took 16.51365691 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.532743471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539270751 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273425983 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524745594 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249665849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536603029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.411896425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421369621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.422681732 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222537072 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220666542 seconds)
  done (took 16.49205166 seconds)
done (took 52.42112922 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.234228669 seconds)
  done (took 2.371732645 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251709303 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.422376181 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.234570079 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223295269 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.219777924 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.221024038 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22440245 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.218587429 seconds)
  done (took 11.153915681 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.21412605 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.217347122 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.215615126 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.215366126 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213984922 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214049505 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216809521 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216813597 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214331217 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215465436 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.213350008 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217220671 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.21662316 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217112587 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213444042 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214533685 seconds)
  done (took 20.585035776 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216067123 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214906419 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214109247 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.21420606 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.214123889 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.214950068 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21640622 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.213668555 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214312983 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.21496009 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.215390974 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215193328 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215712966 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214720267 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215003727 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216443298 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.216287487 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216172606 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220114421 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.216193015 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216612372 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.216863361 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217923179 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21691992 seconds)
  done (took 30.317716252 seconds)
done (took 65.566146025 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.894086052 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.921464818 seconds)
  done (took 6.955545341 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.276745912 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.27945059 seconds)
  done (took 3.697842207 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219456914 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.219905535 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.220627249 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219449995 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.219740357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.21915148 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219991234 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219583005 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.220089292 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219038621 seconds)
  done (took 13.337830324 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.218900288 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.219567688 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.21649259 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219132254 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219736688 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.217928614 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219786656 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219936613 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220107033 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216630892 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.219065242 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.216856284 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21937585 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217425253 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220400849 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217191309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217190202 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217567186 seconds)
  done (took 23.074619565 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.233212938 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241146067 seconds)
  done (took 3.615602949 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.347322431 seconds)
    (2/7) benchmarking "second"...
    done (took 1.259936139 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328744693 seconds)
    (4/7) benchmarking "year"...
    done (took 1.315730832 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.724619558 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.238785897 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259940255 seconds)
  done (took 10.616970778 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222133365 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.406098454 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.506933276 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79751036 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22322978 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.224699906 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.096701208 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.225883453 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227894222 seconds)
  done (took 14.073014155 seconds)
done (took 76.512001015 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.231438596 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.214628429 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.596678326 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215954296 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.251150389 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.512375944 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.225485428 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.339617849 seconds)
done (took 37.731273289 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.233431297 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.202268228 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.064304432 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.22832511 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.357039319 seconds)
  done (took 18.995648437 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.273511984 seconds)
    (2/2) benchmarking "read"...
    done (took 1.551594541 seconds)
  done (took 4.969332801 seconds)
done (took 31.342583232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.223628779 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223229901 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.220006372 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.223280662 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222622459 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.220491652 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.221084186 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222450475 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.223556013 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.223153371 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220473457 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.222589317 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223038298 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219861774 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219840408 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221977158 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220988402 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220692701 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220090159 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219710875 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222518412 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.220358767 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.21981884 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222724611 seconds)
  done (took 30.463276862 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223747676 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221029982 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221713598 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222351113 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.21946947 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222661649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222495255 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.22089525 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.224296617 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223848456 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220358418 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221639777 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223633696 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.220751898 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222701466 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221023904 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223649573 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220843181 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224350959 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221720834 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223105717 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222122227 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.2219115 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224768299 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.22279469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221783752 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224695161 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222861658 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224431262 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222008774 seconds)
  done (took 37.818660433 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.229800916 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232988837 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225229572 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224836789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.226004747 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225480031 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224838402 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224529691 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.226081473 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226639911 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225947215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225889014 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.226169614 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225226041 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.227025421 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.22640897 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.233090254 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226187223 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226185024 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226560791 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226336706 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226114651 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227107333 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226474317 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226477059 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226268869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226117551 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227594771 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226071276 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226502315 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226511052 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.227034813 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226726771 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226443799 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228141836 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226818113 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231503659 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234419905 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.227960256 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227628393 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227427916 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.228288043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227345906 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226871416 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226032075 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.228222596 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227728556 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.228165194 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22813156 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227209249 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227893408 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228255471 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228149356 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.228199174 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227520846 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228948468 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227252169 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228559358 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228778628 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.228751232 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228455385 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227483312 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.229229629 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.22874975 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229831156 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.22870129 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228433673 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.228506829 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.229148368 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.229392099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229830621 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.229236348 seconds)
  done (took 89.536991949 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229701999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227085788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.228052238 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227206533 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226201255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.229271373 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227811782 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229635871 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227319005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.230260774 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230984296 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.228233033 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227287084 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231371738 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229453275 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227066069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.229901617 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227249487 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.230581764 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23052389 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229811217 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.22795746 seconds)
  done (took 28.183369868 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.231755835 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233064487 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227906549 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.232474946 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230788693 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232457049 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.231920002 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.232458772 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232624334 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228306377 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228575869 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231443664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230937342 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229074714 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230049004 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229463058 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231617696 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23005227 seconds)
  done (took 23.306794602 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228399326 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.231307259 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.232637215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229913447 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230393795 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.231962355 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.23028367 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232333168 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231188818 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231399859 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232348453 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232215455 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232668642 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229734344 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23245573 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230422519 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232040944 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229558478 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23257053 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231247094 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230458027 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232934093 seconds)
  done (took 28.241013628 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233045463 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233322211 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232205634 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230979036 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229814867 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.232893691 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233000184 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.231039836 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.235065464 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.232737884 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230897055 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234657235 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.233972172 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232678159 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231376742 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231913172 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.235222961 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23244675 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234559716 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.232469956 seconds)
  done (took 25.808892596 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2383467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238187014 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.238721517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238912836 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239470148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238261892 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238105975 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.238657488 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23849397 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.239086216 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238068854 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.238968753 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23884983 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238812056 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.238877005 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.239280332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239054473 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240018422 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23912651 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238878145 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.239898367 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238927921 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240466455 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.238915245 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239265835 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240380092 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239611883 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23927603 seconds)
  done (took 35.849292639 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236460907 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235640369 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.234074649 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233902823 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233809517 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233608392 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.233775269 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233483669 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236722615 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.235066441 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236485273 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.236690733 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236718106 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.237181923 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236560628 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.237376815 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237477065 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.235295779 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23499203 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2360579 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.237549559 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23851395 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.238043256 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235818146 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235229 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.237831889 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236081057 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235118832 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237634371 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.235086038 seconds)
  done (took 38.236780381 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.282603189 seconds)
    (2/2) benchmarking "in"...
    done (took 1.282744254 seconds)
  done (took 3.723628778 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.236349271 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.238204534 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.238021254 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235925654 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.235922475 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23959932 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.238443597 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237170876 seconds)
  done (took 11.058305075 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.238672705 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.238899924 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.240570554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.24043658 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.242404548 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.240060327 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24769384 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.26016286 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.238998164 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.241200249 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248684857 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24765991 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.243551031 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.240827643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.239984216 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.241670584 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.241035673 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.243274036 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.243217497 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.242050891 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244021337 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24336187 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243627221 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241170121 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.242541499 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.252609921 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244955776 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.241596411 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240696909 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.244732754 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.241212156 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240171196 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244671781 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.244370578 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.242177571 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.244406341 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.249766065 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262563322 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248686266 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245129852 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.242872681 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.239492629 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.242734618 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.243187288 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243694874 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245359577 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.242691717 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24039905 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.241844501 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.246567235 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24910426 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242184182 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241445156 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24533138 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.244597337 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250192746 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.266368717 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.247183787 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.253074335 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253984371 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.256347198 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.252244521 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247158152 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245898074 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.255151014 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.267972509 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250919947 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.261880885 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.24125713 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.245067684 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.250807854 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256784122 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.270216858 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247115295 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247832174 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.244901046 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243867372 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24465476 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251724192 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.266075267 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.248295923 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248056298 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255571814 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.268705397 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.244261238 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24833927 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.248029733 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.248657956 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.247014997 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256490783 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.270251905 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.246511541 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.244040269 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.24498402 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.245944782 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.24826055 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.244643051 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246302369 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.2431811 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247163165 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248654985 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.249960078 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.254964083 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249194713 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249433907 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252804278 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.246623092 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245814542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253025847 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247762359 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.250287787 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.248800255 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.253358446 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.243590426 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.250372506 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.255579601 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.250040726 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.24874047 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249039052 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.247581321 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257591759 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.274880089 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.247602993 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.247381599 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.252834175 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262788433 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249896649 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.249947866 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24828148 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.245200159 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.244742727 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.249331326 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.248927843 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.248504038 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25115179 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248869689 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.246612822 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.248531465 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.252816707 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.249283105 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.248962575 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.248546551 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.249369646 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.249787182 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.251718922 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.249678895 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.255146548 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.248995817 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.250276858 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.248325201 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.247406546 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249252713 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.249701355 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.25164413 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.249409993 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253679505 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.248930444 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.251485389 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.251286089 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.249650388 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250299441 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.250239786 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25378865 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.253021032 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.25306824 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.249491016 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.247133525 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.250341368 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.250974244 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.249789857 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.25176139 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24962859 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.254849973 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262606382 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.251239919 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253710786 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.253763856 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254416992 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254383828 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25441241 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.255596539 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259303665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.254934741 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.258326427 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.254530762 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255201171 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.252015429 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.252531367 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.250325368 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254921632 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255404071 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.260622803 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.265310039 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.27779064 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.253059195 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.257436155 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.253437066 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259015829 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.255680494 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255081157 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.252578277 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25561806 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.251725812 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254353649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.25324315 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255603143 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.251912679 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.253020348 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254411285 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255329337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.252493799 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253260463 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253310858 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.249705511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254620322 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255930386 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.252410617 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.249813568 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252609935 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.252684332 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253785607 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256235461 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.259221213 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.252180118 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255921851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2556451 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.253073851 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.253115604 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.255127815 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255220872 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.253531378 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.260673064 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.27215433 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.254491919 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260920921 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.274972678 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.253565207 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255395518 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.255355078 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.252226243 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.258434943 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.263903057 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.255179132 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258142744 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257687177 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254302943 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255798928 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.261175088 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252940882 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.255236875 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.25601857 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.255904945 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.253978289 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.256391666 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.256171891 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.255655289 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25710694 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257015963 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.256435302 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257629833 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.259309523 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.259422888 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259972271 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.2604214 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.266935336 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.262745027 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.255241132 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.257946526 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.2582402 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.261766489 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.256389712 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.259803846 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.256429564 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270713681 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.286007417 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.264108938 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257698717 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.257235035 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.263285281 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.25908231 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.260913629 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.258569529 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.257931433 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.256850638 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.257069106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.255285501 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25806189 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.25817919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.258510794 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.259734705 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.262468248 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.258429205 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.2576895 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.261469907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.261781843 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.260035285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.258002183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.258667824 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.259511173 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259576901 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.257224421 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.259646363 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26541473 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.278719626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.259779966 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.258638892 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.259115829 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259051521 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.259234185 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261683235 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.262753812 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.270575671 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.263439455 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.267853007 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.263159747 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268894942 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.263943539 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.263989287 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271645476 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.259576657 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.25875641 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259957643 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263173589 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268209351 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.283365897 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.262556517 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.267340202 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.26406628 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.263051663 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.261091426 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.263325227 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.260645982 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264141643 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.269747295 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.285229368 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.265872366 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262571021 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.258696129 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.263985816 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.261909726 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.261357134 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263586096 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264046834 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.262237975 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.262852102 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261824632 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.262475847 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.264527509 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.263594399 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.259061387 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26325099 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268971485 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.284042841 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269907656 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.263340972 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.269681292 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266788247 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268772213 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.285340873 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261679582 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.264698709 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26300813 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.264752942 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.261922819 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263056626 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.265275798 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.264126595 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.267551134 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.265571189 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.264795187 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.263117791 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266368243 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.263741598 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273991877 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29145202 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.266252754 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268951642 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.261962759 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265337836 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272123391 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266641691 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.263916521 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267880788 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276209577 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272523095 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.264370352 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266848356 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26479197 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.266755753 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.265878022 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.264960653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267211446 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.265854528 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.265296792 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.267405247 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267842604 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.264368066 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.264709512 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266556689 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.26663189 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.275016021 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.268655029 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.265824436 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268871085 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.267556008 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.265376319 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.263816361 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.268889105 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266124164 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266906307 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.267741895 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274616055 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.273710504 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.267718993 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.266573432 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269081525 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26604837 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.266643949 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270509184 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26914021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270037211 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.267450901 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26912381 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.267846244 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266147638 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267835138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.266120495 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26792227 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270899439 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.27492448 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266613113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265021685 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268009287 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267433099 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.266380734 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.267875339 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.274660209 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272336315 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.279247336 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.27748642 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275336823 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.268303592 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.271798508 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.276066697 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.266749373 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.268827105 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271608607 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270268187 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.269313395 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.271447639 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272455552 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.274812787 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.267844009 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.269235623 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276860716 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.291990539 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.272209799 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.270653964 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273352616 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268504014 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.266622729 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.269969566 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268240765 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276403575 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.291072367 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272258049 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270784303 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.269545383 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.271027892 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276595375 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270922991 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.269231576 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.267600914 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270674823 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27298457 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270843794 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.267171003 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269454638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268970078 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.27472278 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.277285217 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.268163661 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271920116 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.270694167 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271181619 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.272583521 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271805292 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.268274817 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.268718868 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.270468626 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27335209 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.27113124 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27271079 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.27129853 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.274001326 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.274434013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275048917 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276135557 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.282558294 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.280124651 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268388236 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.271181842 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27298492 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274316628 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.275081394 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274188446 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272506507 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.273058842 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.273288434 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275117916 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272017587 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.276444066 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.288754391 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.295596855 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272744745 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.272956432 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275432327 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.273297779 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.270829892 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.273374763 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.273858538 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.277034467 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28414181 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276308943 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278755433 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293090937 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.274792594 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.27967576 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.277412703 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281411608 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.275198567 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276179259 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27703029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.279317543 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.290648589 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275805991 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284317076 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30617695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.292935114 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274129856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276674851 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.273954598 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.277623937 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.275644052 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.278128113 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274851894 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.275588359 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277496585 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.276609143 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280416826 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.275461928 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.276795353 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.275206302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273275871 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.275783372 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.272587842 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.277592097 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275531481 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.277102449 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.27770185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277993764 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274787216 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287957308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.303037263 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.276064291 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.27896312 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.274064601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.278494113 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.28005923 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287687741 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.285340685 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.279200384 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279229915 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277529765 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.279259167 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.27692896 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.277130693 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.275959814 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277487521 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.274990439 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.289474991 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.289492446 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281466591 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.277779856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280765548 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278601929 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278183118 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280142737 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.280471862 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278776489 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.280234248 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285345675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.277518085 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.279157029 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.281894267 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.287019706 seconds)
  done (took 753.331964099 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276025284 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276504154 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.275224808 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276751024 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276321718 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276076566 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275845947 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275828937 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.275503323 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.275299591 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.276253343 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276030597 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275655103 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.276807067 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276419914 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.277255507 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276581378 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27616964 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276931183 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276219556 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276553291 seconds)
  done (took 27.995454516 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.279298233 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.276873811 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.276940616 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280554431 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27805412 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279548845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278262672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279293577 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.279947739 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277307674 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.279100932 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279343366 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.278451133 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277695971 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.27779058 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280414809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28023182 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278179515 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281166525 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.2784025 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280989799 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279181705 seconds)
  done (took 29.334917552 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284073591 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.283952064 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280313051 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.277903536 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281721057 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279300547 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284449669 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.282399679 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282827693 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281111025 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.280952696 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282439986 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.289685462 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.288682182 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.283405197 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.283278053 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.427766999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285314835 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286094971 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.2849623 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.279756404 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.288419998 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.280965474 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280088537 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281536685 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285637598 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283543585 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.282822399 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.285748981 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.283805857 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289647166 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.283769826 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282902339 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28482366 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.282132713 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.284094322 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.287929322 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286489233 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.281058972 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.282476854 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.293514767 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305159003 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286195644 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289210348 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284365623 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283960555 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.287268087 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.294449368 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281924324 seconds)
  done (took 64.294492396 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.285133348 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282840769 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.281590565 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284309644 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284667414 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284745599 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284661305 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284496654 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281722415 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281243925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285266673 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283456883 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282754172 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285152564 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284231083 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.283193949 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.28212725 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282401706 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.28412253 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284368876 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.282924275 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.286152502 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.286460885 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.2840823 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28584832 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28371557 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283089403 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285588732 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.283726707 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28399039 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.286763815 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286276405 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.286682507 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283606263 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284497569 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.285911821 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28597278 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283406068 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288717319 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.283203697 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286763042 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.286875873 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.287111571 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287613054 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284784948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.285243373 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.284520844 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.284640012 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284702931 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.287521531 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.287273787 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284887332 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.288474282 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.284591556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286755014 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.288820989 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284933321 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.285496335 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.289154936 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286641629 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285957385 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.288013704 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.285332959 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.288141972 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287970883 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.285363325 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.285623165 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.28748471 seconds)
  done (took 88.597495794 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290454259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291172177 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29210815 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290162851 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290835798 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.292166316 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29073872 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292013186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291340648 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29147284 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29108547 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290025097 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292299167 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289332649 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.291322481 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291989541 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292067115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292623684 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291920566 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291768497 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292772171 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292310066 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.292677587 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292200458 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293064742 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.292111755 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.292380134 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292543615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292533611 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292834319 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294276605 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.292412618 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.292630539 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.293063541 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.293578051 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293536352 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293435598 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292133253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.292383073 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.293342303 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293389658 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294051754 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294146994 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.294116528 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293776234 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294749604 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29367448 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.2947642 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292729364 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293659602 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.294557081 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294553966 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.294702892 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.294534279 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.295293959 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.29323399 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294638387 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293927302 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29563351 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29498838 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295024124 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.292945065 seconds)
  done (took 81.362068047 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293350166 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.292957396 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291519141 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291313639 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.293427152 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29206031 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.294637451 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.2924508 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.292527586 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292283997 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293682494 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290768989 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291895874 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294028067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291460091 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293343086 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292106895 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292203937 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.292982139 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292194654 seconds)
  done (took 27.060147877 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.291541802 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293284043 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.290953495 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291637927 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294708826 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.291745454 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.294760667 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293899627 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292205782 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294242529 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.294388577 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.294271374 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292565655 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292965939 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295354728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.291727469 seconds)
  done (took 21.900088466 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.292846934 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294727021 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.296817123 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.297162346 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.292607694 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.291710832 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.294621602 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.292283601 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291579665 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295418922 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294991354 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294633381 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30633758 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.298096687 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.29213862 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.295974464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292667689 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292956394 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.295351175 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.29862539 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294683817 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292826915 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295860198 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296584857 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294553716 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.294549086 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293729908 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.293530514 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293582862 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296104873 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.294438983 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294811107 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.294336978 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.294573075 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.299160266 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.294942157 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297031239 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.297034073 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.297088498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29758966 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297247256 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.294623937 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297128167 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297348863 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.295036734 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.297611458 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294099029 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295153887 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.294633324 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.294693535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.297661023 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.300833871 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.298636725 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.298367032 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296769739 seconds)
  done (took 72.470597103 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297606532 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297961219 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.296012652 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298509021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297513098 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.296181231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.298365306 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296828617 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297074216 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.299163859 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296853224 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.300208144 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295448305 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299279396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297238621 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299329134 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296887314 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.297479882 seconds)
  done (took 24.572759689 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.297758722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.296614545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.299390372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.297264316 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296454609 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299767943 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29730564 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.300110205 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300455451 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297266275 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298337589 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.30038731 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300030631 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301019862 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.297720314 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297722976 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300271962 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300081124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.297771185 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297565196 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300699247 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.300518875 seconds)
  done (took 29.789837094 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.300257496 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.29928005 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.299683621 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.317194541 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.320258091 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.324259271 seconds)
  done (took 9.077600873 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309672686 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300751918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299691234 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303390929 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301569554 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299377475 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299589569 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300434847 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303377116 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299808076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299533077 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301287784 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302315745 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30095776 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301745648 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302743658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299904136 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301306579 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301062357 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302797971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300185267 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302484999 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300325295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300780062 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299911729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300336719 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302493902 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300188728 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300418956 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303135616 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304025971 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3004038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303247493 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300577536 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303812635 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303535618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302788787 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304475254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30412679 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301819757 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304543896 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302824875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302645057 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302193528 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304205189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30261374 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30198897 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30138182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300996849 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305460459 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304922681 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301577986 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304667674 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304100219 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30391822 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305233523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301383208 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302394448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30567745 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302577453 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303554834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305667017 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302779636 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302832204 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305625402 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30340816 seconds)
  done (took 87.202659069 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303249199 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302974878 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302948672 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30477397 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303367641 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303099564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30449141 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303047923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303504711 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30293733 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306872425 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303707262 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304651699 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304333117 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305023764 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304601957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304975916 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304739162 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302880118 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30708977 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304383996 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30533013 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305435787 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304466949 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304193474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307912962 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30580699 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305585594 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305754696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304448915 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304901583 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30557953 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305017986 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304093817 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305207249 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304357418 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305330912 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30473778 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305655636 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308492573 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305934657 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308255679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305694159 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305842934 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305756457 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305811524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306300176 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306200919 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307021238 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305918069 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30607609 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307101173 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306845022 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306301165 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306003796 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305831713 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306805204 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306692521 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305260426 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309091688 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306969793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306685971 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30977904 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307132116 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307797407 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306723869 seconds)
  done (took 87.387291857 seconds)
done (took 1757.749488013 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.47101109 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.424931644 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307593961 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.312448158 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308526081 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330891088 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309411691 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.307411829 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.308353041 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30778831 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.308369878 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.498454836 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.345827928 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.309233135 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.309557568 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.405293858 seconds)
  done (took 42.791550331 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.337403592 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.314824512 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.437657035 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.336141103 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.337953076 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.513498664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.376019053 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313524883 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.5013629 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.356847281 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.007940839 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337471824 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.313290391 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.520538024 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.332844337 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.515690753 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.591866085 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.063705878 seconds)
  done (took 30.73482998 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.823551557 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.324766542 seconds)
  done (took 9.375438879 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.334983978 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.314001319 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.315017886 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.312140917 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.305109035 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.322445047 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.313407504 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.309428483 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.385671895 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.453170299 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.324188299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.324462181 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.335599553 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.314928978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.312321709 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.353755437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.489294232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.312754332 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.311317244 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.319692994 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.314247328 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404538527 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.359654382 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.313339771 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.451210413 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.391674255 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318519253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.320987949 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.451513488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.314820345 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.315176504 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.316358639 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.317157485 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.222946214 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.846558496 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.316396157 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.341845362 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.324009316 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.314275249 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.460328209 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.316841628 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321306298 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307952856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.846255353 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.462892111 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44582868 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.679255102 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.317460447 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.317181918 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.381465898 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.317756689 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.317769257 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.361191772 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.126499956 seconds)
  done (took 111.935238807 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.366564579 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.712122584 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479608181 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332870031 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.020746689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.927166091 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.3280513 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.628056412 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.347170986 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312559532 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.648577353 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.845516367 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.328909794 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.373612774 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.497053389 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359564291 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.31185383 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.118176672 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.329746017 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.312066773 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840632159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320170982 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.312569359 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.478521953 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.350673905 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.795812195 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.845374071 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.783305864 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330499809 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.311484343 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.805271646 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.337202629 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.387131884 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.313936667 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.587381064 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700278193 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676401797 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.317965073 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334731477 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315013689 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.333400055 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789022028 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683526712 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.311941423 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312869646 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794614294 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312056681 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314154485 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.312909747 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.517837522 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.939481742 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313841404 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.853668396 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.313513903 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.683782202 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.384067317 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.392112266 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825606734 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314136972 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.402173449 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354312395 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.313530454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.319570874 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.319209005 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313895967 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.689271471 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.424239421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320307625 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688940405 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.798935004 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.331965996 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.864557324 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.242438052 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336203001 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.408899418 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314177056 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.947012987 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837113039 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334178657 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314055563 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676560792 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315627484 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.651056725 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.331641903 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334321745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.853357613 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.330286957 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.376000404 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.315917532 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.315595878 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.996208946 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.32007298 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617216875 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.385763159 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315981178 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.31566701 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.345896509 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.320026909 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.317248068 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.316798177 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.865090866 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.334469502 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.302125106 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333760949 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316284625 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.317106466 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.316275178 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.317029715 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53696922 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.846843703 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319959133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.317492873 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.317496341 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.344324712 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.484289326 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.32068841 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65241818 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.319582074 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316785529 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.321015723 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.958130377 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.368939313 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.316901269 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.31804892 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.25190669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.522338032 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.336511235 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.31821191 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329190821 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.317468418 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.684067997 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.338318563 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.375726328 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.321684016 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04511248 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.373287821 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.325224731 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.60358877 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325947193 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.293632327 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.342559709 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318564128 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616376245 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.598556456 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.431826759 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.32204744 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.336821758 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.026443681 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.344257946 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467112962 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.341565541 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.362802272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519306064 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.763946686 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.320017062 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.935416395 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.319185288 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535153794 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319045445 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.631274 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.835631064 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.337787984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.326206742 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049163083 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.03424634 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.013470727 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.324104347 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.65538995 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.301757829 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797440411 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.319662105 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.321174223 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.798562843 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.322537043 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330211338 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.320236882 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.320977325 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.38607913 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.495310965 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.473559868 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322337746 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.801028988 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.340830512 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.321179973 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325303287 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328840268 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.67215922 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.322105308 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.328436065 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352497289 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.323634396 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.323578891 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.819596916 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.264574805 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.328349548 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.476193058 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.981840497 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.340734628 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.33031973 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.010416083 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.380064395 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.861761323 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361690522 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.660891166 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330338415 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.363157453 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02974793 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.410703221 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823671649 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326913521 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.323499135 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.942353101 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.342492767 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.677136328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.323936638 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.324302157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.907699307 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.347292262 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330175882 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.677921352 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.353595628 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.574441573 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.323818838 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.329397886 seconds)
  done (took 1108.474114098 seconds)
done (took 1304.536681879 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.323851807 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.323311941 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.316514186 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330977476 seconds)
  done (took 26.539010148 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.336824237 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331333881 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.334204687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332092427 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.333259979 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.330750264 seconds)
  done (took 9.24564434 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.520489178 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32566772 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.331880783 seconds)
  done (took 19.424104059 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555641561 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.699312734 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.697281325 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.725785793 seconds)
  done (took 10.925300053 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336393663 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.337044289 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336725203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.335715224 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.338687704 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340053428 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.33644751 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.336760381 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.339978104 seconds)
  done (took 13.283931024 seconds)
done (took 80.663848446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.313664147 seconds)
    (2/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.339959309 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.314958041 seconds)
    (4/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416027032 seconds)
    (5/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.327605517 seconds)
    (6/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.082666355 seconds)
    (7/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.876993278 seconds)
    (8/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.328564598 seconds)
    (9/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.41747608 seconds)
    (10/286) benchmarking ("sort", Float64, true)...
    done (took 6.34569382 seconds)
    (11/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.428593584 seconds)
    (12/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.835303994 seconds)
    (13/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.591596247 seconds)
    (14/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.784712215 seconds)
    (15/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.331419542 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.37698172 seconds)
    (17/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.472218836 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.322449164 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.355218322 seconds)
    (20/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.354707981 seconds)
    (21/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.035705616 seconds)
    (22/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.315125199 seconds)
    (23/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.332380474 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.754354229 seconds)
    (25/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.174838058 seconds)
    (26/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.34077855 seconds)
    (27/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.800358496 seconds)
    (28/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.322751755 seconds)
    (29/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.793849612 seconds)
    (30/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.449981898 seconds)
    (31/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.315280064 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.787126801 seconds)
    (33/286) benchmarking ("sort", Int64, true)...
    done (took 6.330179764 seconds)
    (34/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.346631745 seconds)
    (35/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.662498072 seconds)
    (36/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.618941889 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.555340192 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.89202443 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.445088611 seconds)
    (40/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.379700701 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.281031745 seconds)
    (42/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.342653226 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.336607612 seconds)
    (44/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.88859189 seconds)
    (45/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.357386009 seconds)
    (46/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.607620586 seconds)
    (47/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.700879137 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.123265121 seconds)
    (49/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.330803778 seconds)
    (50/286) benchmarking ("sort", BigInt, false)...
    done (took 6.35701308 seconds)
    (51/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449925809 seconds)
    (52/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.325753581 seconds)
    (53/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.341282914 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.593479571 seconds)
    (55/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.859406595 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.148041189 seconds)
    (57/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.345897157 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.392825302 seconds)
    (59/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.305198972 seconds)
    (60/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.370511455 seconds)
    (61/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.397436652 seconds)
    (62/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.317935255 seconds)
    (63/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.317224685 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.440437159 seconds)
    (65/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.048391515 seconds)
    (66/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.366267388 seconds)
    (67/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.076204098 seconds)
    (68/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.384306986 seconds)
    (69/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.35705131 seconds)
    (70/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.358021876 seconds)
    (71/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.077393683 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.131722691 seconds)
    (73/286) benchmarking ("sort", Int64, false)...
    done (took 5.656165125 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.593328104 seconds)
    (75/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.360690023 seconds)
    (76/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.344927955 seconds)
    (77/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.985903753 seconds)
    (78/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.384272704 seconds)
    (79/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.320490681 seconds)
    (80/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.353615692 seconds)
    (81/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.885592309 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.343115489 seconds)
    (83/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.442834229 seconds)
    (84/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.325539908 seconds)
    (85/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.436276437 seconds)
    (86/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.319960191 seconds)
    (87/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.754074714 seconds)
    (88/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.249753489 seconds)
    (89/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.440389561 seconds)
    (90/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.354235605 seconds)
    (91/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.642041322 seconds)
    (92/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.873060534 seconds)
    (93/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.326531004 seconds)
    (94/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.339792778 seconds)
    (95/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.546895807 seconds)
    (96/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.71525353 seconds)
    (97/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.361773898 seconds)
    (98/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.357838973 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.114460652 seconds)
    (100/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.329655085 seconds)
    (101/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.177508238 seconds)
    (102/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.359835477 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.703287687 seconds)
    (104/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.340363429 seconds)
    (105/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.425547966 seconds)
    (106/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.397913699 seconds)
    (107/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.224231634 seconds)
    (108/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.873187751 seconds)
    (109/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.042476298 seconds)
    (110/286) benchmarking ("sort", Bool, false)...
    done (took 1.86877089 seconds)
    (111/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.358387645 seconds)
    (112/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.462453657 seconds)
    (113/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.615099146 seconds)
    (114/286) benchmarking ("sort", Float32, false)...
    done (took 5.36098257 seconds)
    (115/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.877673051 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.216156342 seconds)
    (117/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.599091928 seconds)
    (118/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.454574947 seconds)
    (119/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.177903843 seconds)
    (120/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.366276224 seconds)
    (121/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.36708002 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.376016338 seconds)
    (123/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.606552507 seconds)
    (124/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.466534925 seconds)
    (125/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.531307023 seconds)
    (126/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.004199924 seconds)
    (127/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.344183872 seconds)
    (128/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.171744983 seconds)
    (129/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.329517092 seconds)
    (130/286) benchmarking ("sort", Int8, true)...
    done (took 6.341777565 seconds)
    (131/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.069145867 seconds)
    (132/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.329098103 seconds)
    (133/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.36188567 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.249315716 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.370308255 seconds)
    (136/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.457173033 seconds)
    (137/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.323066784 seconds)
    (138/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.422238757 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.597174148 seconds)
    (140/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.340732806 seconds)
    (141/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.324007025 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.336279486 seconds)
    (143/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.931099855 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.367588775 seconds)
    (145/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.322858385 seconds)
    (146/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.469720755 seconds)
    (147/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.323661007 seconds)
    (148/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.572894766 seconds)
    (149/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.448028132 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.360371088 seconds)
    (151/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.354774379 seconds)
    (152/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.480506309 seconds)
    (153/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.349377354 seconds)
    (154/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.328258516 seconds)
    (155/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.47070718 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.323893832 seconds)
    (157/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.421031243 seconds)
    (158/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.323846585 seconds)
    (159/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.386031922 seconds)
    (160/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.362438256 seconds)
    (161/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.356983653 seconds)
    (162/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.274766685 seconds)
    (163/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.334221348 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.287733509 seconds)
    (165/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.045175866 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.364429727 seconds)
    (167/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.217459927 seconds)
    (168/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.553942299 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.75663069 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.354737158 seconds)
    (171/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395053954 seconds)
    (172/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.723407199 seconds)
    (173/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.127926162 seconds)
    (174/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.950590155 seconds)
    (175/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.052055302 seconds)
    (176/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.109108057 seconds)
    (177/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.380757665 seconds)
    (178/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.403166847 seconds)
    (179/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.330982504 seconds)
    (180/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.045447946 seconds)
    (181/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.810771192 seconds)
    (182/286) benchmarking ("sort", Bool, true)...
    done (took 5.371649468 seconds)
    (183/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.414913002 seconds)
    (184/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.844612978 seconds)
    (185/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.338870929 seconds)
    (186/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.373698011 seconds)
    (187/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.334081563 seconds)
    (188/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.43312257 seconds)
    (189/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.746082605 seconds)
    (190/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.960395054 seconds)
    (191/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.452957852 seconds)
    (192/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.048589437 seconds)
    (193/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.423002113 seconds)
    (194/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.38210083 seconds)
    (195/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.861529839 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.379572047 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546508517 seconds)
    (198/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.339138503 seconds)
    (199/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.465004636 seconds)
    (200/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.048506138 seconds)
    (201/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.46500758 seconds)
    (202/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.326993073 seconds)
    (203/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.205726872 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.03652695 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.098487841 seconds)
    (206/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.637825096 seconds)
    (207/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.428563246 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.36353484 seconds)
    (209/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.727125468 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.327908328 seconds)
    (211/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.228212685 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.382840579 seconds)
    (213/286) benchmarking ("sort", Float64, false)...
    done (took 5.689370496 seconds)
    (214/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274547338 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.327324056 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.712129368 seconds)
    (217/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.363763669 seconds)
    (218/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.375152477 seconds)
    (219/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.33765948 seconds)
    (220/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.332090514 seconds)
    (221/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.351687759 seconds)
    (222/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.449855355 seconds)
    (223/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.170094742 seconds)
    (224/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.37327605 seconds)
    (225/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.32802893 seconds)
    (226/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.341786762 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.364585871 seconds)
    (228/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.576149844 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.43112119 seconds)
    (230/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.497809694 seconds)
    (231/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.365236525 seconds)
    (232/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.363281052 seconds)
    (233/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.354327051 seconds)
    (234/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367899795 seconds)
    (235/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.889015705 seconds)
    (236/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.344329048 seconds)
    (237/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.93343658 seconds)
    (238/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.359433118 seconds)
    (239/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.724056319 seconds)
    (240/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.329679416 seconds)
    (241/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.369547243 seconds)
    (242/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.368898325 seconds)
    (243/286) benchmarking ("sort", BigInt, true)...
    done (took 6.342346243 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.340872937 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.678601846 seconds)
    (246/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.00895813 seconds)
    (247/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.416839785 seconds)
    (248/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.89277499 seconds)
    (249/286) benchmarking ("sort", Int8, false)...
    done (took 4.372896423 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.36895176 seconds)
    (251/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.330238572 seconds)
    (252/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.45040462 seconds)
    (253/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.427049058 seconds)
    (254/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.186471274 seconds)
    (255/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.427445627 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.172062285 seconds)
    (257/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.033822791 seconds)
    (258/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.434599051 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.97358653 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.462077826 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.222318579 seconds)
    (262/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.42728631 seconds)
    (263/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.05769349 seconds)
    (264/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.194229429 seconds)
    (265/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.362259615 seconds)
    (266/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.33353437 seconds)
    (267/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356333002 seconds)
    (268/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.291690191 seconds)
    (269/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387172424 seconds)
    (270/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.39146791 seconds)
    (271/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.545448527 seconds)
    (272/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.330744343 seconds)
    (273/286) benchmarking ("sort", Float32, true)...
    done (took 6.345352283 seconds)
    (274/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.648493332 seconds)
    (275/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.455861421 seconds)
    (276/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.330860877 seconds)
    (277/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.246299054 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.798434199 seconds)
    (279/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.386332003 seconds)
    (280/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.354107155 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.783621256 seconds)
    (282/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.497818484 seconds)
    (283/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.352811857 seconds)
    (284/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.148220027 seconds)
    (285/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.445667037 seconds)
    (286/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.430462686 seconds)
  done (took 955.02886439 seconds)
done (took 956.27694756 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.377477237 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374342494 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.355854815 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378470068 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.468846717 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.538648347 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.366182674 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.358323224 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.403972146 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.406115605 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.354867334 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.539929352 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.360960564 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.357233858 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.356238525 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372739174 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.497985936 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.359732453 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.373784491 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.367610167 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.37361022 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.356297868 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.406619239 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.538320387 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.361250897 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.360940033 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.360887382 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.3778096 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.469486999 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.361019323 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.359760558 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.368495049 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.499458389 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.355820914 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.352975448 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.378166073 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.369235219 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.367192495 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.361894692 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.390709312 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.951598296 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35847505 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.360239977 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.359176311 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358008807 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361895609 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.361713374 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.364061698 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37353815 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375518903 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.941123392 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.374989 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.363345438 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.360057063 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.370035149 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.359482888 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.363240548 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378260347 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.379242563 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.378194966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.489980103 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.366534381 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361556722 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.378190528 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369570506 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.982215304 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.356214254 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.36439776 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.957062974 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.36550129 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.984866296 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.369756745 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.36267159 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.374665872 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.392979377 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.506998245 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.356052606 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.360090454 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.37133784 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.359441861 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.370691129 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.375594297 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.365287289 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.361254291 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376570102 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.543680955 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.372200287 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.363497716 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.371905133 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.380729506 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.369279913 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.372299616 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.365154087 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.356579054 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372830041 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.366039371 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36644665 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.365216017 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367376562 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.37398755 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.957220351 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.381891982 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.359119222 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.359365016 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.362048211 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.377105946 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.95647144 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.364467097 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.385518557 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410320715 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.364998167 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.498597287 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.367528018 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382755391 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.372799951 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36634716 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358848476 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.500468965 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.952643135 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.379545619 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365695395 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.362477545 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382799145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.36667073 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.361310121 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.513220625 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.366112918 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380584977 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.485666635 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.374973041 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.397467005 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.363713849 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.367578175 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.402412675 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.383299099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.397577372 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.367899622 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382177592 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.381908846 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.36296008 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.375489225 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.375870421 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.367135971 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.372416581 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359466484 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.402718611 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381226314 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380420924 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.387777003 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.488877225 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.364195393 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.499159911 seconds)
done (took 232.470544647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.424637425 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.357288177 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.448166183 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.363210748 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.465204434 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466942634 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.361388074 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.360848384 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.360496882 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738573823 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.362238002 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.361959409 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.357759711 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363019878 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.447290058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.363412185 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.361461576 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.705247457 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.367239313 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.441080247 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.358368585 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.361133949 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.364833024 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744523861 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363924201 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.366432471 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.436893479 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.365879539 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.712231446 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.359148298 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.362877617 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.710426044 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.45632383 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.38220588 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.37588436 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.372756691 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.467052013 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.38713452 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.445842711 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.446833964 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.450567465 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.407357882 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.359598496 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.365028628 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.367915546 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369679856 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.364161663 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.392976805 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.362734581 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.364303322 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.707096626 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.376290241 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.363740018 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.365235663 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.364650266 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.397639236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.365626072 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.369977122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.465532157 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370617454 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.429905761 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.749253459 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.770370602 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.367574489 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364177515 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.3659374 seconds)
  done (took 150.592243528 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.434296378 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.440744595 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.488059177 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.373059954 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.419323632 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491871238 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.375393967 seconds)
  done (took 11.300127499 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.373331904 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.369511383 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.416730557 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.418898076 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.37136768 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.547369384 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.369737661 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.379839582 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.366484464 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.419880974 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.36995496 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370792336 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.375307413 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.363610621 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.416741449 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.380517576 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.484529346 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.37016278 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.372410045 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.52529308 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.367593041 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.375026522 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422875569 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.380884839 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.371810196 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.376282336 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.187734681 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372956403 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.367633818 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.370179537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367842569 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.444572562 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.371225962 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.368186634 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368258648 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.48487786 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.372811646 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.368322846 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.371159356 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.367142864 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.37017784 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.370312271 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.37207826 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.369000139 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.37000663 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.392748769 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.371664933 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.371713663 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.370155174 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.372122731 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.421480593 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.371755987 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.368293676 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.367870747 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.425364473 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378075199 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.374504171 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.368756545 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.371673218 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369945451 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527090849 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419300553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.372132371 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.419407618 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372575235 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.372286436 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.373013723 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.37222649 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.427576704 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.372957608 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420541958 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.369612863 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55144209 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.395403831 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.375893345 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.37563278 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.374865498 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376066697 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.368178422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.377886005 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.371433398 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.373855087 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.378659164 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37182978 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370080327 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.539403617 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.479404191 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.370525413 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.385609988 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.38043035 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.371711579 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427517011 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.37426634 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37087229 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.425033734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487908294 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.426368118 seconds)
  done (took 157.288197573 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.379085462 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.3822768 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.376842623 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.397822728 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.375689339 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.374814906 seconds)
  done (took 9.571263216 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.376119083 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.376487417 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.374392936 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.373671228 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.376700873 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.376934635 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378239616 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.375936118 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.383750764 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.374982351 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.376124617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.384533592 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.377600208 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379030062 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.3786996 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.375527369 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378139057 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.373603259 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.375435842 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.379140786 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.472404383 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.379842932 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378828869 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.377914665 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.381315279 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.377769395 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385221013 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.376992483 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.376329466 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.38211145 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38194535 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.37834707 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.379204357 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.38299351 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385237147 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.379298772 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381777034 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.387708688 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.375384227 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.378709608 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.388911431 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380141003 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.377757143 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.387451131 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.379948916 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.384181453 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.391592001 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386470326 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.38106061 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.387744026 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.387802201 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.378633581 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.378754063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.38803223 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.38163746 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.401172737 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.3926452 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.381686268 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.380786889 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.380301518 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.380663376 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378601708 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.379360437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.386363002 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.386120845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.388207309 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.380995854 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.38611232 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383011827 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.379231536 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.387874993 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.377076148 seconds)
  done (took 101.82090743 seconds)
done (took 431.847374543 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.647119989 seconds)
  done (took 7.936104813 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.390607551 seconds)
  done (took 7.682000789 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.986056941 seconds)
  done (took 24.547238852 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.39335776 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.505900782 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38150337 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.374938613 seconds)
  done (took 26.946431764 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.657767684 seconds)
  done (took 7.947162549 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.373978599 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.374488985 seconds)
  done (took 14.040826266 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.769307743 seconds)
  done (took 8.060470919 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.448141871 seconds)
  done (took 7.747617279 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.390060593 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.394645829 seconds)
  done (took 14.090485311 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.361265378 seconds)
  done (took 7.653417128 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 12.055557938 seconds)
  done (took 13.347779209 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.381768862 seconds)
  done (took 7.677120302 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.39241598 seconds)
  done (took 7.684383961 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.267493883 seconds)
  done (took 10.56050624 seconds)
done (took 167.212348632 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.375780248 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.38292728 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.384628963 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.383455613 seconds)
  done (took 26.819592477 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.417938001 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.415677094 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.41697988 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.42763521 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.418546264 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.4154932 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408602997 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408775225 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.426970091 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420438487 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.418480571 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.417922895 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.416999905 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409084482 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.419216675 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.418654584 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.427540461 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.418050793 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.408311096 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.419901091 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.383990911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428278096 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.420004262 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.383224987 seconds)
  done (took 35.261065984 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.9137089 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.457442501 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.539450261 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.435968288 seconds)
  done (took 7.639229691 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.436732049 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.438864016 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.45171416 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.490443642 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.515761864 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.447531539 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.411919179 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.407908772 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.393506449 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.439716597 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.513274317 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.453478304 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.527655204 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.385008568 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572529294 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.384262586 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.385218326 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.438651002 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.488506402 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515643346 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.385852907 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.4373035 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.44328262 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.455708147 seconds)
  done (took 36.114980123 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.38519182 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.404976087 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.38482245 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.385034164 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.393963855 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.384442909 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.385326176 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.387078995 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.385692159 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.390740928 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.385014374 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.397923761 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.385410416 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.384921768 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.391862709 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.386106653 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.392206288 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.385451091 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.385976304 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.392737256 seconds)
  done (took 29.070437823 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.378719183 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.234044658 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.730235702 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.636419287 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.380956671 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.379100685 seconds)
  done (took 28.035400343 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.468208156 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.611818945 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.387337899 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.812301891 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.883518817 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390098532 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.388186013 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.655253473 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.043249929 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.039632844 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.459254392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.463592869 seconds)
  done (took 20.90065821 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.397070074 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.387501613 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.395427692 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.405072066 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.450431167 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390717286 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.394254713 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.381415688 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.458252188 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.457195889 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.397247518 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.454195978 seconds)
  done (took 38.267440588 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470390978 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.433900084 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.465169913 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406249399 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109934003 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.59538118 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.492562501 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196732764 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.396375267 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659714571 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389201901 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475802509 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.641888371 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39250336 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.385078199 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.480663985 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.61201935 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913526734 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388492062 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.794248335 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411933831 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.391636592 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.868496511 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663449157 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606281048 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368364508 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.645690607 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162706163 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707682081 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400258083 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396249505 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385719335 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658944628 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116095966 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510590807 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638710158 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412769837 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.018474294 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.384841019 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.790172118 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389099812 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39039829 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396452339 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387289654 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.320233889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386755375 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155019336 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.392465365 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.09950168 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388048571 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690299485 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48305043 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.391138614 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.960874854 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393995604 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.393873828 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.391268961 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485485072 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96054181 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.052862724 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391812867 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.322022674 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.388093286 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.801493528 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065950487 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.394446209 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.392790086 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.391271127 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323274456 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.801254103 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406024802 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525824097 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.414318656 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050216562 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156716103 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392559075 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326921295 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979823081 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409028285 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.331140465 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618655816 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.165155594 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329900295 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.338314888 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.324116745 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146746058 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398288277 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.91232463 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412914863 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154809191 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66878504 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419616729 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41281848 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.613966716 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.274860406 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3908152 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.406707747 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506514562 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412016441 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.15801529 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347444343 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.393836652 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648713154 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.603245983 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390748888 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.493939242 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964198263 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420234534 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.432395495 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405606399 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653753878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.038290813 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408607047 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285130405 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418895221 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167569297 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186052776 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405657666 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.404765268 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392647046 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681443051 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.230978967 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.553275625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459342003 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397652674 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392837354 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.83096263 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245373448 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.551919076 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.639022959 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430117757 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.412000733 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.396101704 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355168269 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.397573401 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40146117 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.193108169 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618379972 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408029136 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676261882 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326983559 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529900273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.411934843 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.617397097 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.712508922 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.39979052 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656334584 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401553272 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402635566 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.412991913 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41190061 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492827837 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415248827 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.394476805 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662251668 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.398206451 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.398516869 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.971852912 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.177563957 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397441438 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400872917 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417553441 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038646662 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369220981 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404953346 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.290000292 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.40937383 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463700268 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.400836955 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.654165924 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.942352582 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403345031 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.423729222 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.397920895 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627850501 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405154157 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.999642033 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.482718472 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.967776248 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.079077185 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409929023 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.329664359 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.106384256 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.088103379 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396302216 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.59332899 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396323487 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.652973506 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420236518 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.394420457 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043187151 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398288581 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.011389829 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.410499273 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408767319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401217748 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398003353 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.921625729 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.307665613 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418021982 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.415531971 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540261756 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.411179741 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331250209 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.914154462 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401852578 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397861584 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.175096731 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43169413 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.833502699 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376213061 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667415274 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400774592 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.721486398 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.033747183 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.433809373 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.407540918 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41479415 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42089793 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.407461959 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407748528 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.409070909 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.841044386 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.848060926 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968211555 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247854071 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996576351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.88094638 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.415029743 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.307248094 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.227285038 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364087166 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059002408 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668583056 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238520255 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386222267 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981118649 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.728491865 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.264312985 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.706932494 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638807375 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.872963349 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.427104199 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711759405 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614593944 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435007256 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.4084005 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.338677151 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.694918658 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021765179 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.428232316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479790546 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176332426 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423003193 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.18217789 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.405814366 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.321288072 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896447506 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981505331 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.796612322 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419034437 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423051724 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284789304 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41067965 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.930737639 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084874124 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.419866445 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.98530969 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.374046324 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663848073 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.42553294 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406522113 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.204990626 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.399248024 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.665648495 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.704089998 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338838211 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410317492 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001657255 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.261712588 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.40811616 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404134771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205643759 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403992995 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735854192 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.411911905 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.970594682 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420273576 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.338560353 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337665672 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.0962881 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413208532 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372634707 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934342972 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.405283128 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419926412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424296746 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261761287 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.662637588 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.417222287 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061635339 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633059172 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405504183 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430089249 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.407536869 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405292617 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.39147582 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309649748 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640491954 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420214046 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652059856 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.569920447 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.322053271 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409257436 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638247168 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.287975957 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4093594 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694513716 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.126032143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.413554318 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186089794 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432175586 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413491193 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.424032143 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414133977 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427644122 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478040855 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66700517 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.427842645 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.417742919 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897936227 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451568957 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410292528 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.420146163 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500915171 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.349900859 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.916463759 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.179858858 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069972602 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212721578 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.063368281 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718353964 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.409333545 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41216005 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341590147 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.555956216 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936974404 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680793337 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526371924 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.411792066 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432455388 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414804225 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410083561 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648521866 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683257064 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.284070444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410180765 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080430481 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.290723967 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419985487 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.620153736 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945653298 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012952058 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53243419 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426361001 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193809519 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684414729 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501289045 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40990746 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.004321195 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.431225383 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.313515762 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.423379826 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418296198 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557996983 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.711796737 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150668159 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45068835 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.568941024 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.184776536 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.88624408 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.668524955 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.95222888 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675141384 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.074019637 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196569933 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676664383 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481492742 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674070982 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.547304841 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560026589 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.413066301 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.293183103 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412552146 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262639478 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12197422 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.421597996 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070009442 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.678059492 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.414751857 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.411821414 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435237804 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.4215459 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637011804 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187188569 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637207447 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422644383 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419866549 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.404949526 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06918431 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.726170169 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3483005 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.417255166 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695544279 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.657937929 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438149966 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.865929671 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.124202568 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015021021 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.388721921 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435450859 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427600626 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.208220109 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.069641162 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.993636965 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957990981 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.075626632 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414088179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696413612 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.41841004 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.417610199 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698236688 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.417837071 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.424566157 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685680017 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.0740732 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317956704 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.431590466 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.919711377 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.351594734 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.642924012 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423746607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351299399 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416627027 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.923073455 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445363641 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.53495343 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426441744 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.414982256 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417518567 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.181315149 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.695376097 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.420669094 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.446697864 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.401665472 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.42046812 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523402706 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089110396 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451677142 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.091378717 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.769322958 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.67402512 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.429022157 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.411477584 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.420255559 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416868976 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140820635 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.395514225 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418451889 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044342858 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.425317716 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.436042849 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421153366 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.632913205 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629296031 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.418788739 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684391183 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43786569 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440105366 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.32987189 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.192645093 seconds)
  done (took 1707.531893058 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472359723 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.460482076 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.473934461 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.497628173 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.457934458 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.517250988 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.489529822 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.543936494 seconds)
  done (took 53.244015824 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.427543406 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.576629153 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.452182139 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.43522342 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.426110698 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.4290592 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.929546504 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.420755526 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.426822202 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.427930335 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.42960103 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.420274993 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.098324156 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.428649627 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.426492799 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.42410672 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.426524802 seconds)
  done (took 66.945505947 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.161984133 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.637257791 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.982670945 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.512554955 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.458995476 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.438190329 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.113829695 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.438070075 seconds)
  done (took 56.076455522 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.436057573 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.437309008 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.437283954 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.436733833 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.437636287 seconds)
  done (took 8.51888029 seconds)
done (took 2115.72105159 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.424204267 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427001757 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.423182781 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.426088978 seconds)
  done (took 7.03308653 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.40567597 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.154460016 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.414435028 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.429066964 seconds)
  done (took 18.736182682 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.431774671 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.420594489 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.238418064 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.137017768 seconds)
  done (took 5.709956957 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.172718836 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.179814575 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.163282551 seconds)
  done (took 7.844775697 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.416755146 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.42381569 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.42287403 seconds)
  done (took 20.592039397 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.725396778 seconds)
  done (took 3.056059905 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.563770093 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.612573906 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.785356289 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.759791522 seconds)
  done (took 8.052009447 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804914039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.803264859 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.607549911 seconds)
  done (took 6.545442289 seconds)
done (took 91.756088056 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.752052703 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.445414751 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.63139911 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.718266142 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.647435176 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.62862718 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.966114414 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.686634899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.23068876 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.217993258 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.726819834 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.649567313 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.703176933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.445676923 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.709739941 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.443256519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.651511365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.808853399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.417011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422829997 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967908563 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.36536799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.552883828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.388980276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.651051114 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.579341204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.949167308 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.44527871 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41746576 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.976455043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.578345915 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.417512466 seconds)
  done (took 200.523829977 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420468675 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.418394325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.419373102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.431967064 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.419670718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.419762385 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.419807307 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417901968 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.418221068 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.437335985 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.434768899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.43451048 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.420482066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.419767724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422235865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.419534398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.43417734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.441355214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.419404247 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.42027853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.442481166 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42533374 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.420075076 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.419623262 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418826555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.420380783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.420626755 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.419923537 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.44961479 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.427303328 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.421535452 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.421124063 seconds)
  done (took 206.92860501 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.421715953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.42021098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.421755321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.44282483 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421393835 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.421865455 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.442227925 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.420569191 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420453547 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421960765 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421391836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.420454635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422281276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422962413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.422479224 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436291309 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423479882 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421877549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420954249 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.420929693 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422703068 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.429427243 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421593506 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422440297 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.424972805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423322719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.422607737 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.425325809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.422015695 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.441262275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.424418033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.422604067 seconds)
  done (took 206.925207333 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.619946832 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.430482659 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.431557417 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.388389148 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.431751099 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430773203 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.429450772 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.622047664 seconds)
  done (took 15.119645601 seconds)
done (took 630.82874384 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.905255611 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.603913898 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.641111479 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.45136001 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.340559346 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.471218422 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.450990938 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.641101559 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.391351897 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647955157 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.832747547 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448167332 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.984116518 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.44999715 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.725536159 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.55612083 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.382628205 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.47859753 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.794093541 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.091759331 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.730783023 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.015258643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.644651697 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.392054631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.997130569 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.006801925 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.247212594 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.364572013 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.452310761 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.800131456 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.318980064 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.55043624 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.500272051 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.503590309 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.560690688 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.559732854 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.501918507 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.519268432 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.641552851 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.770008504 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.106538525 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.203980609 seconds)
  done (took 98.013987855 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.42177172 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.421883921 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.421825113 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422654647 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.422001593 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.42137501 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.421003284 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.421034476 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.422100239 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.421357754 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.42208658 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.423861369 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.42210814 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.423730186 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421651076 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.421563327 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.423253597 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.424202532 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.422270753 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.422309223 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.423870114 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.423189327 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.42309112 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.422729463 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.423847251 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.423770729 seconds)
  done (took 38.324248449 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.435400521 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.699670947 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.886132317 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.44120767 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.434981082 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438839082 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.524956505 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.437335285 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.439364044 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439842176 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.601999871 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.439072384 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.473438602 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.925521842 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.445048127 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.438290998 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.436639343 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.437765908 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.708137801 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447091205 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.549099105 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.438100611 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.526741526 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.447578892 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.461094828 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.438019662 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441569626 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.032589939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.439769241 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.602343751 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.379953108 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.532642622 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.9684131 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.91537528 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.390900357 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.446914174 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.438475278 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.611818523 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.440222303 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.43840416 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.527712865 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.438992528 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.897557542 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.137868037 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.458487784 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.439375446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.05522766 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.606555081 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.723438086 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448112461 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.926535334 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.440372559 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.440490419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439510324 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.725269281 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446362618 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.438940731 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.075518844 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.463143583 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.529070186 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440303535 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.439772034 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.717530827 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.439043121 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.704811561 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.442331279 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.447344505 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.461683617 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.903834488 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.446307578 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.160071929 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.460348125 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.4401995 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.603439235 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.706044771 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.091274132 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444765949 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.720985216 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.98194677 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.528646778 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.444045037 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.023111841 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.532169223 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.443670279 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.443825761 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.443804213 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.442724967 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.493647726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.528512183 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.099785417 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.153726501 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.105647556 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.550769375 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.4490911 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443016412 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.076423504 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.462768074 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.442815621 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.897220851 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.163537913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462316072 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449899965 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.163398031 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.463249721 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.533634749 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.447764699 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.906598029 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.444140188 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.49270642 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443643656 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.449992339 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.468649235 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.533100595 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.446560524 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443821407 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.130691245 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633976959 seconds)
  done (took 190.610070374 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.447283885 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.436421593 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.446211162 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.436670189 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.436770322 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.446429715 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.436968049 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.43860308 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443030363 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.437464278 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.438257492 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.437041145 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.43846126 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.452591256 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.448866017 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444057546 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.050409958 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.437692907 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.439214518 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.438510682 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.275818456 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.446723684 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.439356756 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.437952611 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.440005743 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.440251328 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.469419663 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.441386849 seconds)
  done (took 155.172061461 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.446148289 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.096804103 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.449522486 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.596762723 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.470149549 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.443843158 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.593612949 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.509957898 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.447073069 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.445320229 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.443154434 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.79591108 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.448240812 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.041719784 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.67064036 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.596431778 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.040015873 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.467243426 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.444843481 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.444440502 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.599139961 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.460532102 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.796083978 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.099667859 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.448890022 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.09942075 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43685598 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.448242302 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.44579854 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.103140116 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.445402379 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.796405076 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.5349549 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.515276075 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.104053239 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.042480272 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.060734282 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.617636737 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.446644714 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.445655468 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.4450563 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437691082 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.103384953 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.448882639 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.448024699 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.099163803 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.467703732 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.450874596 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.455579084 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.446428707 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.516094016 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.516802552 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.80212357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109514171 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.536003308 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.461013251 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.599415504 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.857126533 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.453556108 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.044075372 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.438241865 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.109296681 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.472290119 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438472368 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449516587 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.454632838 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.620680518 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.598810089 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.045331341 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.468666703 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.045935501 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.640566477 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.448142021 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.448929088 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.451422306 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.110224147 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.04780273 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640402408 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.603406117 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.677144768 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.439671835 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.449785645 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.439509813 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.537484901 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.450377385 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.142949694 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.075920846 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.471054147 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.452264617 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.452365225 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.452478298 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.656180652 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.125178444 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.544864027 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.043494515 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.823206592 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.807573715 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.452829988 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.518150266 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.469003489 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805990063 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.452361054 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.516013273 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.927880618 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.815174624 seconds)
  done (took 174.42265059 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.721529239 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.796921012 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.550298881 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.610105868 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.100130755 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.057039651 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.844957756 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.603895777 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57214543 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.738739048 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.73318695 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.543065378 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.691858111 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.536082441 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.217630054 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527888455 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.553467621 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.610514333 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.604934813 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.556093164 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.16045787 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.76274419 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.657182369 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.479486851 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.552801897 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.329357481 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.047769801 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.028733119 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638846855 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.891879156 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.003354625 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.651640176 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.523075193 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.187944705 seconds)
  done (took 70.444995143 seconds)
done (took 728.32447886 seconds)
SAVING RESULT...
DONE!
