cset: moving following pidspec: 18958
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.428085857 seconds)
loading group "string"... done (took 0.60785705 seconds)
loading group "linalg"... done (took 7.969879804 seconds)
loading group "parallel"... done (took 0.183889831 seconds)
loading group "find"... done (took 1.214345724 seconds)
loading group "tuple"... done (took 1.991225251 seconds)
loading group "dates"... done (took 1.318246526 seconds)
loading group "micro"... done (took 0.248720424 seconds)
loading group "io"... done (took 0.974191144 seconds)
loading group "scalar"... done (took 40.483865036 seconds)
loading group "sparse"... done (took 12.84855602 seconds)
loading group "broadcast"... done (took 1.057174148 seconds)
loading group "union"... done (took 13.472405953 seconds)
loading group "simd"... done (took 5.161492602 seconds)
loading group "random"... done (took 9.63225467 seconds)
loading group "problem"... done (took 1.737701726 seconds)
loading group "array"... done (took 21.946413553 seconds)
loading group "misc"... done (took 1.702326648 seconds)
loading group "sort"... done (took 3.466853384 seconds)
loading group "collection"... done (took 18.150678986 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.536424906 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131389849 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135480536 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.128295637 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.155515493 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123106543 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135981967 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093296814 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.896403178 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154523024 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.122371095 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.441128277 seconds)
done (took 5.394676226 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177312442 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085883633 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087538921 seconds)
  done (took 1.328750912 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07160421 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129288835 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070355373 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070899845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070669221 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070059774 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069807737 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069538632 seconds)
  done (took 1.707429818 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076198543 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071693196 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069940758 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072450945 seconds)
  done (took 1.449266069 seconds)
done (took 5.899559605 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.817221624 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.219492644 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.19318731 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429396945 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.136026603 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.168001823 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654251479 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315940594 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.198353601 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.085442812 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113431018 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351660904 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114060331 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.644875137 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078141139 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094630051 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139603829 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.447711777 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071078205 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085710371 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092108938 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134690527 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089159004 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078470581 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147867782 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071845466 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.140822599 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083416692 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069964093 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224998516 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176859862 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.648299641 seconds)
  done (took 10.513201737 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103652483 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105889218 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071764253 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129228687 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104447539 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073094514 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.078858594 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073023671 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097945627 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.139145279 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096607629 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108227826 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069207756 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072340614 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089109343 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210645452 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.087662994 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088446817 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.077150188 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086168046 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116133336 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.084882494 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.086983721 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087338825 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.138184174 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183931847 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103341942 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103081285 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070341407 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087047746 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118695178 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.134426426 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069424492 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070176452 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131293509 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09754014 seconds)
  done (took 4.835728009 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.048666123 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150107974 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095255531 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139890337 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068744526 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.091211837 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.117262306 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.09902228 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071723914 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08824278 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.222080005 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.41063225 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.642648052 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115109168 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111162475 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070989295 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072302145 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071208292 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.582141757 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101126752 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111637597 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085133539 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073590498 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072420067 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.358825806 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071010994 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067499717 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071533155 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060218514 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.132991881 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071925191 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.99167726 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169175866 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071248535 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104890523 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.301856097 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095130655 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068972887 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150013198 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072973629 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068955387 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160866983 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075535808 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069948927 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088397007 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106310553 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.122724244 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.069122629 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070521898 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169633736 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068645123 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08551458 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.132387584 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158790436 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080913464 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068168342 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.262729424 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092497503 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074186431 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068430917 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.21171951 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130699708 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071185761 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070743565 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072570376 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072890428 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369350354 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070211378 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.224652072 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071643916 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08030608 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072802175 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073490536 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076539334 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078445769 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09432678 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069564658 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078446808 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069174054 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069483041 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070218591 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086551755 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.403174415 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069709472 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072047289 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068651803 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067510607 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09266884 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.200103837 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071762772 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.07076864 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103374978 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072412707 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070973138 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112160552 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071282793 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087009543 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072807087 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116517374 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070878157 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.11816619 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071622317 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102267308 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073220719 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101788754 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083955756 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072154839 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.446408827 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06901237 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069043257 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072361541 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069363246 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071023965 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070781646 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083449531 seconds)
  done (took 22.710149426 seconds)
done (took 40.263296481 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.269570677 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077381261 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07773874 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077398025 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077294177 seconds)
  done (took 1.826751754 seconds)
done (took 3.053955796 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128032048 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103909141 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0680784 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100992774 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067691794 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106572967 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105429043 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081340254 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106744562 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068635251 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102101329 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068264814 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067938397 seconds)
  done (took 2.425545511 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088047904 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088390451 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074271244 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087676048 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067301336 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087748321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086057888 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0932778 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086822268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077025563 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067114548 seconds)
  done (took 2.124338994 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088097923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089328304 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073867263 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08668082 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069455712 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087138171 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085960418 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090202922 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087307868 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078006215 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067436727 seconds)
  done (took 2.12144757 seconds)
done (took 7.887118898 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081265356 seconds)
  done (took 1.290575632 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.604259277 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.133268579 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085995809 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.115773962 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.197847259 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122576482 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27619718 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090791837 seconds)
  done (took 9.023009529 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093226534 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072960515 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087706625 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072270767 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076358129 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073301091 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.075653761 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073249975 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072073087 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073160021 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073670954 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07478105 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074505239 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075609943 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075995593 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074856786 seconds)
  done (took 2.498477718 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096586441 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096542171 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077469472 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078875962 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076007741 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075732281 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077689569 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077436254 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074057269 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076204433 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078169707 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07781011 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07524245 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068110876 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077488601 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07846268 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07448183 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077935287 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078444788 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079245111 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079118544 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068175909 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075003344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077854369 seconds)
  done (took 3.19028845 seconds)
done (took 17.220659395 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109946744 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070570769 seconds)
  done (took 1.395426396 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084730734 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087000746 seconds)
  done (took 1.39457684 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086157415 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069515683 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09395731 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081814148 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069825279 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069818138 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091550093 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069673305 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069630722 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069740645 seconds)
  done (took 1.995599991 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071615275 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080883041 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073602887 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086001285 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07685432 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067746138 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075673839 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071663621 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080674779 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066551036 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075795423 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086930093 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074420981 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088434369 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075261042 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071928726 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074809639 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071842419 seconds)
  done (took 2.599583378 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068842762 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070215357 seconds)
  done (took 1.369489205 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070722544 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067578791 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071072684 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0697286 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066936098 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065839092 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067170779 seconds)
  done (took 1.705439596 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391612539 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.12052217 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.325302914 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075388542 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08584689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.269337896 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069874851 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074450556 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074532051 seconds)
  done (took 2.759103603 seconds)
done (took 14.448928119 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.084194168 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092559775 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101122295 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394582878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095824776 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069865414 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117236285 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193670661 seconds)
done (took 2.390563377 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217907697 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.721727188 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.452170036 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219283896 seconds)
  done (took 2.627665006 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359520422 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.095462612 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065061959 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073649601 seconds)
  done (took 1.836273961 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069675996 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074047212 seconds)
  done (took 1.383678614 seconds)
done (took 7.307387005 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070626272 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069899102 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.068905428 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088965062 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071267591 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.069007146 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068240642 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070705989 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069806742 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.069493655 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069924125 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070118392 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069038917 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068552499 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06972032 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.069816265 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067077212 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067377627 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069776171 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06706087 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067020084 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069875775 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067088612 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06765827 seconds)
  done (took 2.952847192 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088925313 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069253026 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075845578 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075064855 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072833799 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074779117 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075282517 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069793417 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.074874165 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07188284 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072377459 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072525381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071709948 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073206232 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072036236 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073232984 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075333303 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069456195 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071604899 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073088396 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.182936051 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069299584 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073095021 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074243171 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072186501 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072580627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071980719 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069780781 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075017061 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073248339 seconds)
  done (took 3.554568748 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072907763 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067267061 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066840031 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074789776 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066615273 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068594445 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067658946 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067413219 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067558479 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067165012 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068242183 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066965611 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066878361 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067889747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068228249 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071043239 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082688107 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067182259 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066791696 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068144161 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070650483 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067437004 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066682676 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066639413 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066418938 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066987566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069220533 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068171443 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069724021 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068795055 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072214487 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072868971 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.069048793 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075333902 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072069946 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.066882114 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071627387 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067768237 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067666239 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066482872 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066489177 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067479217 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067038794 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074633045 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067188617 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068723384 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067313352 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068498488 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06799667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070249929 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067303078 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067023412 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070108985 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067974328 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071878669 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066861193 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067558398 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066809687 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068141612 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066852622 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066644698 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067469175 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06974782 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.067854234 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083013532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074327306 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067031967 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071107859 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067973242 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069755757 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068860538 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.0813958 seconds)
  done (took 6.234457209 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09499297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091478073 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069206551 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06919111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066031964 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067475619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073656678 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067896234 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069057117 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086115097 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068426117 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06875741 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068980219 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070953859 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067941982 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068722347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076436834 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065666223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067997074 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071033056 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068402049 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073212911 seconds)
  done (took 2.851209318 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159316871 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074527275 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110120323 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079055753 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073754801 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079103222 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073099213 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074065544 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073825635 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071087183 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071474586 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073786084 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074068891 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07130349 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071015205 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071028906 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073400635 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07101372 seconds)
  done (took 2.697702346 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079540986 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070180867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090561103 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069747419 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070508142 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072281165 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074011247 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077613144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071991637 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069431114 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077365086 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071855648 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071824835 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069507721 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071864779 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069470757 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071696622 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069470791 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077614927 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073645392 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074533621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0773735 seconds)
  done (took 2.876374907 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083522398 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071673839 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.08553267 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071707198 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065559717 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067802268 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073813364 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06944733 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073593981 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071655097 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069408627 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067650369 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071965581 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069562964 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072474637 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069369498 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071486321 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069524624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071681791 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065070992 seconds)
  done (took 2.690155044 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090485128 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071870714 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072165884 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080099579 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071559039 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07126116 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079146706 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07157005 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071710494 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09314792 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071308568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071900821 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079147455 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075787346 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071483257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078538555 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078893764 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078555081 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071167691 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071686006 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092849507 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071075716 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07898651 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071909925 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071712682 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071266637 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071438492 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075852745 seconds)
  done (took 3.383020197 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070709177 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069692185 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067259283 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066808792 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067662825 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067338714 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066769902 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067055859 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070181719 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067034086 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070037236 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069675546 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069778749 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069554108 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069699717 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069431387 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069574031 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067093116 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067074918 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067693029 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070099602 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06923756 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069614658 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06697665 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066905951 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069667205 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06707964 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068304498 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070862734 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068147822 seconds)
  done (took 3.317060703 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078803496 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077005573 seconds)
  done (took 1.418638909 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066780781 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083307141 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067402762 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074020686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073401712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07009487 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077162406 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072956424 seconds)
  done (took 1.840769592 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085813711 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081494221 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070963526 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08378399 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080961001 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08711368 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.140252679 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070365383 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.0763684 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068057794 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086271702 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069893353 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076805374 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070239872 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075612125 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076705924 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067651724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076180993 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071912996 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06830156 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071530038 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079569347 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072848647 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065261755 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071485688 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092956172 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081401856 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071551833 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073492697 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078285891 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075817572 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064164987 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070628927 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070424945 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068296093 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.08072247 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085264131 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073106254 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079027117 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0714711 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080282457 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064859807 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075098939 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076680852 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080652743 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.0709324 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071516899 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064782912 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067977199 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072483446 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065317914 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070564983 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064479541 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077380204 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074473491 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081331066 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069328904 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072169174 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07323017 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074255021 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076984525 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072856507 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072964552 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.07004714 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080385206 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075261562 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078653486 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065323539 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065366114 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.071350965 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.082787253 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095354218 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076558508 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071699007 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070867217 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.067600995 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073816673 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070895703 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075505236 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076756726 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069881965 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075200794 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078047381 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070482248 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074654349 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077470525 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068242083 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072224319 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068184318 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086881298 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.068656554 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06746019 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067530285 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080939427 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073480631 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069943392 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068122536 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077068285 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064474037 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069969102 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071228865 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070835429 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079941415 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074410534 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075174986 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078833961 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077759021 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069613827 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072565209 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065999703 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070229273 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.068831084 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076703694 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063338118 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07211756 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070482122 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069832312 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.077972793 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067845803 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068895755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07703807 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074628505 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06722164 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065703906 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071770742 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068985355 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071819152 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077051316 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067081834 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063753695 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063912416 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.073014283 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068362954 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07335598 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073393297 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07188131 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063282617 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066687297 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073309284 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07836 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068912617 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06988528 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074545705 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069911156 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068320439 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074992484 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07109767 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067932187 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074191053 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070307688 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063726172 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071782841 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07178043 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06774575 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072757519 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071650698 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07119233 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069558108 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067280846 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074900955 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069171051 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068680221 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069107419 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.068101123 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079019858 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070679986 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063713799 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066079808 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.0764159 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.0669292 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068322664 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068299704 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070957517 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06950835 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066382224 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068511084 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070917791 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078304225 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072580783 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069482314 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074046785 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080645067 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068534472 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071291962 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068457599 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068877097 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068173989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076772379 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073619126 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072131008 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069966631 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065423619 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073093303 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074856155 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067564379 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066354514 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066667304 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071962331 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074012501 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071029142 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068291486 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066701256 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069054089 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071377386 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071072296 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067588976 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067332299 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072848792 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066584529 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073595207 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068869527 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07806013 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071650964 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064121442 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070002068 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066675757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074316733 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062638023 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065561145 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068579194 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069156527 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067061953 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070304006 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062379229 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074317107 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075837308 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068998524 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067299802 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.067631697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074339081 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070205241 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070875625 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072726687 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.305115646 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082987842 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071390922 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.076385611 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08394949 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.072950197 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066641532 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079766244 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072116633 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07187389 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.071601953 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071215306 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075954443 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080668557 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.079927621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065584455 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.075469688 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070190573 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071335524 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.067558117 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.077041822 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.075612118 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.073732888 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080361926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072810937 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072903964 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075664044 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071372573 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073107729 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.072685158 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07486828 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07274043 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073816578 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07116776 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.075025233 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.07099283 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068643128 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07407394 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071274999 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071663081 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076525259 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.071057695 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071492813 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073922238 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071490936 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071613729 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071615191 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070842301 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074548045 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072048609 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072124076 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07439405 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066354525 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079463752 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070788648 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078544869 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071572347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06731463 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077559889 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073424203 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076235307 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071703563 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071454061 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072112474 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070181978 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073306393 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077948891 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069144982 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081947052 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078481061 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071880178 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073801032 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071265448 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072507099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069670633 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071783671 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071306067 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071231083 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070238196 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076195891 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073816223 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071092353 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072708373 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071623532 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071243544 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071904118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064670834 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069615759 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06995026 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.072337228 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079735353 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.071541234 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07149849 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068918542 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071353511 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069973259 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066226434 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077728523 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07874737 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.070749682 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076985211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069986042 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071504715 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080718837 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064419806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068183258 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06805873 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068104959 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077559928 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070601046 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079724391 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070127875 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069726269 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067223185 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070914767 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06864905 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064217376 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067817404 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073743359 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069553073 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069014626 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.203170705 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074254467 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071815353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081972509 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070828005 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07184319 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070664582 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067567555 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070318353 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069147458 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073357524 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.07085816 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067985318 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067858492 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06970634 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071494948 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07192354 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070208181 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071918833 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078473743 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071062566 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07354158 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073666324 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064586747 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07348486 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07021091 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070676125 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069915295 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074650154 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074119065 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071767819 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079737728 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069917858 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071393085 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070486579 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068013631 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070353563 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070275948 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070315745 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069863308 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071601364 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078446656 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06833663 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073355538 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070295218 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.07119009 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077097364 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071002872 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07333974 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076152428 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070650486 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072519502 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078392422 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073950409 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073644202 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070903547 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072418851 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076127196 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.069391194 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.076586646 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071267278 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070917039 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071624832 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068289449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070207074 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069926331 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069895351 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076530126 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070720185 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069866623 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.0694664 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068364234 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071402436 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073254606 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078106829 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072599765 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073724075 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065191733 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067504093 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070731779 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.067951402 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07256498 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073440404 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076493757 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072569656 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.070995382 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069048617 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0794768 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075822731 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074193608 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068971612 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073995322 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.071378938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072133994 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071061284 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070718429 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071160957 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073798261 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07136403 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069330193 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07675902 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073468849 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071150732 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071307836 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071386957 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07015261 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065277772 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069964183 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071717043 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074769092 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.072068746 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070208213 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080419634 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06771972 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070715728 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072976988 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06915081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.074635454 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064984836 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07190595 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071048954 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070779305 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064906605 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.205441665 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069671759 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073490088 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070605611 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065837652 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08222626 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079709205 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.073249269 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070667212 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069258455 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065817424 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065399769 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069549273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071613479 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071943434 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.080070572 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069895163 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.069692891 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065190585 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070438963 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073845557 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073504457 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.067214678 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065543963 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068987135 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073168025 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076165994 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068771994 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070189026 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074157136 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073344631 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068680238 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073241546 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067096087 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074470695 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082363402 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070348482 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071633598 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076694438 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078045492 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070222866 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065110959 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07034526 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073755001 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071346211 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071542027 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071230181 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085379408 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073525849 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070019121 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06904504 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072783482 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069453591 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078598765 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071347004 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.07129546 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074873689 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071617679 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07826299 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073271903 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077497661 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073303602 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074020397 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069596545 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070788657 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068374166 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069568481 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071568127 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070712253 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074607124 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078707917 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069988368 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081043249 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080214487 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072870998 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067232089 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069610147 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070148068 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065559165 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071417594 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068140995 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068709368 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068350786 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069248303 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071425456 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075423323 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07159596 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071403806 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070261303 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064143854 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072626699 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072516069 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070659516 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067131517 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069762771 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070133867 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074247237 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072717508 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068046101 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072316741 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071717292 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070733786 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064814604 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07653731 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069264048 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.072661635 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069426029 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070788764 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070898731 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073681455 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074374325 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070998269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072248917 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.07383716 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072492916 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067113125 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067333929 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076112341 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067753968 seconds)
  done (took 44.790941974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.107787944 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068378543 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06629435 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065976359 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077726575 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067142864 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066322291 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067077903 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066925378 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069201706 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06598441 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065793249 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074286763 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080926905 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077668363 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070590925 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065885872 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066790475 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065908964 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067096157 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074359316 seconds)
  done (took 2.897151223 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077962943 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08194906 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079634769 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085914735 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074839847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074505746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079227897 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074479948 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082470892 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076976977 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08225726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074611896 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076670167 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076509483 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076348412 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074882306 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084966125 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075390913 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074568892 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07917642 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074504499 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080137882 seconds)
  done (took 3.074480977 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071717921 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070361274 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072410118 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065014304 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070557314 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065071884 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073893682 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068141733 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07347145 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06938368 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.069912285 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.069200394 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072114694 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065093869 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071075688 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068690119 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112619924 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073667649 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070436947 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071767172 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065252805 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07240443 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066275283 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.06589349 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069341726 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073367522 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.070644493 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068305484 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070034312 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069362342 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070174235 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06776475 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072069925 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070961128 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069836262 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069046081 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.070345843 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070145279 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065497217 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068060571 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070734631 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.065616632 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07030197 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071516152 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.067724788 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067647067 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07291978 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070145976 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064952289 seconds)
  done (took 4.810985244 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083171903 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11494761 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071298977 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.0938936 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083961886 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076414234 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074654474 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094766943 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067826816 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068655792 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085604457 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08268383 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06958263 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073704353 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076585537 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068951602 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070197843 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068531725 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072973216 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069059239 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072871198 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076455126 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083996739 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081881721 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073814786 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068300028 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068805075 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073254311 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081805985 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073536422 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074162048 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074768533 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083728496 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07164389 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068620175 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071446814 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085238535 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069599126 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071842524 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.0676086 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072045643 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074401362 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076279648 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085638879 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069618743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0742632 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069357899 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066619813 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081382248 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071698208 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.0770131 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083867978 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073513443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070491181 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073839755 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084645567 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069223514 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067426541 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072034351 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081326449 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.0671664 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073190723 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082269626 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071672468 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076217043 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082382604 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073914364 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073031871 seconds)
  done (took 6.659876013 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080477877 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10043702 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087226588 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087354647 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079839103 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079918435 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079568302 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079446185 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079701214 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084167071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079805716 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121215528 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075177282 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081600847 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079842321 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079616753 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079853129 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079623874 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079644637 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079943968 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.080273542 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086753239 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080204355 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087192588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093505861 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.077418741 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082041303 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081930565 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089122364 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08132041 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083367652 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079709854 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079260452 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087593529 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082909535 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079150718 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069023459 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079327965 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079376245 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079513884 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075213284 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086432595 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079361997 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074763354 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078955178 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079079769 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087041435 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082808167 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082062041 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084159482 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079352665 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087200838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079603414 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079870595 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.087240908 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089723599 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086350506 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087495241 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081557398 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.088713491 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089828308 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092295031 seconds)
  done (took 6.532887267 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086916722 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077620472 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085991606 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065100258 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068462017 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075972003 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068022695 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067883604 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077781361 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077752584 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079645245 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075596522 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078034678 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080108299 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075509356 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078056289 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075232134 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075303282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078348883 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075331368 seconds)
  done (took 2.903909396 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079091064 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08632168 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070544789 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075328127 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072853653 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074873332 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.072714219 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073233091 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071126173 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07367882 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079736246 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080128407 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070643987 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075225091 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079338689 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074911432 seconds)
  done (took 2.583697439 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088387082 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07652776 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084599145 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070647611 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.070762096 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066639893 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069490181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065220723 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.065640735 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082332186 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069782323 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080492514 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069996768 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068469075 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066288113 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075200221 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065772928 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066761213 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069184618 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082333706 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073910811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069321226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07306958 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069590488 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071685382 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073697006 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068543154 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069620352 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066592548 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070145165 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072703214 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072705041 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066570972 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067451611 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069029598 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066947241 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069443426 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069821153 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074779083 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069525666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068021021 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.07118872 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069651667 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070979389 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06592964 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070815471 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065903493 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071944514 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067035285 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072315151 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069505766 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072117668 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070262588 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076361697 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072833158 seconds)
  done (took 5.289089593 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083799695 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074064376 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065548141 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068046467 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072462407 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07098326 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073247135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071086669 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071626406 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068044249 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070992138 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072631865 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071093193 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073681146 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071109025 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073661009 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065211583 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071283188 seconds)
  done (took 2.674621156 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074412734 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07057844 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076589932 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069402269 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069548878 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071889039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065502724 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067886759 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068288061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069849559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069336192 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071723323 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071055212 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071934257 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069498644 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069527477 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071764033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069054788 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069845626 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065348149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071893962 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068677312 seconds)
  done (took 2.923096644 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098357 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086659464 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144561691 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083018212 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089986262 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075318907 seconds)
  done (took 1.959554501 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095706378 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105948301 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070356964 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072909842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080352692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073577994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073272843 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073696835 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081858082 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079071301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073685027 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082120003 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082270615 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081261203 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079297772 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079266046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073811485 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073738713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069776699 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086847672 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073894334 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082075393 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073607465 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073572897 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073454033 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080746613 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081395585 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07959451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073601162 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081690925 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07914604 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073528434 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082342328 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079014802 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072763163 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082048251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073962381 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087265896 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079446906 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081486088 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072938695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079506134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082148533 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07825345 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082722644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074624454 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078450224 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073998743 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074617931 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089538415 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079635471 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081701441 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079815985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082509864 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081938574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089757066 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079623991 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081533531 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079972634 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080154229 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081335848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079781683 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081375669 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080295871 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079322318 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081262533 seconds)
  done (took 6.622831056 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108882763 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071542055 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074921447 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079484069 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081423006 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073803888 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074509402 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07403795 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074705385 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07073158 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112961458 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074317508 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081312783 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081924071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074440281 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0739004 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073883594 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08128671 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070971064 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088868026 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074019082 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081186756 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081418926 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081388722 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079555763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079562778 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073853656 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074002621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074095243 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073441082 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078741183 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074011271 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080883336 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07091524 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081081646 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074654223 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074207877 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078200759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073929366 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079335487 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081457867 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087154692 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073878241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074235289 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079124847 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073803212 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073457551 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070746709 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073661672 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070534795 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079061151 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079276397 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079194436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081088739 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073933528 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073782685 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073437114 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073526136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073704591 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079374783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081236179 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073896632 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089923236 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074189119 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074419826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081380216 seconds)
  done (took 6.533737006 seconds)
done (took 135.310673096 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192732627 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.17330071 seconds)
  done (took 1.742341857 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073528096 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103399524 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081310466 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133001118 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070390843 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104573694 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.102702469 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082362491 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069772222 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070106756 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069989649 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07332767 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134973196 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070830167 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069999502 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072439238 seconds)
  done (took 2.771808425 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103819817 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168364195 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108462111 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069606765 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104601622 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076112772 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069169622 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078875147 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074539303 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06959993 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076747614 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074347964 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068866086 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074728891 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075241593 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076478807 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069155988 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076153096 seconds)
  done (took 2.906260584 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102928383 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095538422 seconds)
  done (took 1.593110119 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164734609 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.140792269 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.212137914 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360450809 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.171425815 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.156983336 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.149382771 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148787279 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.122760376 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143745229 seconds)
  done (took 3.161921872 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10483011 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.159855427 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2811082 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.122712791 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076815016 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097817599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125194495 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081874706 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084356539 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083918968 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084365755 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080885762 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10469715 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076666408 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078047379 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080487226 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108053478 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077121463 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078849351 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079139375 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10568068 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070086445 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076481647 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07926873 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081738137 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081542639 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070067792 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069560421 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079687126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079161073 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080483403 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096607395 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080970138 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110412346 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075185926 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.111655643 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080217913 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076852678 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079003396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07705447 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081507303 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081529159 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077330591 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080368915 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069591337 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08065359 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070214662 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069954504 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081437625 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070737141 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081160786 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080274921 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110575525 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070811754 seconds)
  done (took 6.251260896 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10885103 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112462264 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075132253 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119077266 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110050424 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076404587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110806507 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102521631 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110770832 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074074344 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.07227535 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074473469 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085396633 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08620495 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120704297 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112989025 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077282566 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074890103 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.113061376 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111924564 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072757695 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103601916 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098121252 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109762971 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071107303 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074171577 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071846609 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07413168 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079959293 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081713407 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073918361 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084160137 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088402684 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081533351 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071961201 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071580676 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071897804 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083838576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083061778 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082800606 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081600185 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0725174 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071894596 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073480503 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074190302 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071687645 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08281599 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084080547 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082785263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073495912 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074541929 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.075100644 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073083713 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084111317 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081447251 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.084747937 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083775645 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073005899 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072257596 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076375764 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084249695 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083197985 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.0838947 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0735772 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083464528 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072092764 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084392281 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087569833 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072429612 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074188558 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072250471 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0739728 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077990011 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081400029 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081734498 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073823856 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073337885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072714116 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08354952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082235136 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071951543 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080272718 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071437005 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07192509 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073064194 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072975066 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080612478 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083177526 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073287447 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072067624 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07297208 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072232429 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070496929 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.080229112 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083353631 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083114546 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081984991 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073532514 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.082476573 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08253068 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073723227 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082751648 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072019129 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.202909817 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075385074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083850817 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083385978 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084629127 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073669819 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07360296 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082114965 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085695548 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073553564 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.08340166 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083815801 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083537944 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071585938 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086031617 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07310347 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083427619 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074531645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083464317 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072524746 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083696558 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071979629 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071823047 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072288662 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083497362 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074114309 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072763276 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073870607 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075042957 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082327343 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086293743 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074951447 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082476123 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082264764 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0741911 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082080619 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072748403 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082510854 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074226179 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074588564 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07109741 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085435876 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072443981 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072475696 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073261747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083800711 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073502777 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084011632 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081909168 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071650161 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084248911 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083748059 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.081703507 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083762282 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073540415 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071535912 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072653609 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073159853 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081403821 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082935277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074505155 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072958959 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081646107 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084411251 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070673355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.082660898 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082308712 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081839914 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07269512 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073103798 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083616341 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084533901 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081673742 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081416529 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082088969 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07300637 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081283032 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082185813 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071899903 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087751358 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071946711 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086519737 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082353175 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081073135 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08269492 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083643754 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.0838606 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083479957 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086709529 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071517732 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072581398 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.082785643 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072818419 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072997643 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.081327757 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.076222721 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073860857 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086845782 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072375449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083785312 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.071782032 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082659647 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071050989 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074144775 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217436438 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073501046 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074140374 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085428586 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07515147 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.081687648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084419241 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.08286748 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072691114 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074706855 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.084292309 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083431728 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071881773 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072910961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074492871 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081837842 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081230316 seconds)
  done (took 19.625732116 seconds)
done (took 39.453060314 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213946953 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.157124095 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179437587 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.122925997 seconds)
  done (took 2.164113087 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120761751 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105733935 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.096774361 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069095951 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103157389 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068550838 seconds)
  done (took 1.985867419 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316054808 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.21541298 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.193247071 seconds)
  done (took 2.146317823 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.214747255 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.199450831 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.456504102 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280755184 seconds)
  done (took 2.688476339 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.148481412 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092438652 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071347288 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088650726 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137422537 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164375494 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104284755 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129904667 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084195282 seconds)
  done (took 2.498977927 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.152549741 seconds)
done (took 13.059987217 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.132195021 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.220126433 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.259892137 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.105213663 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.230950937 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143648488 seconds)
    (7/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.183337409 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10938871 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096005762 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.252967751 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 0.207478593 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06959616 seconds)
    (13/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.139793421 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082391247 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106663738 seconds)
    (16/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116385663 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078603753 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.135852162 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078036296 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069247315 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077261863 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080303888 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079528642 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077167141 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.194061861 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17114137 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108524715 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075889294 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.152165533 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.225621547 seconds)
    (31/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.185089793 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117679039 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.119128933 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 0.136080195 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080410918 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.197081815 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093643289 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.069063901 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075830146 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194619186 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076861516 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173895112 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.133894167 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085233356 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073389847 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080711885 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.181323538 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083551345 seconds)
    (49/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087410387 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140561767 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075998403 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069189681 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076820742 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.211047447 seconds)
    (55/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.223044284 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067950657 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.08965812 seconds)
    (58/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.117511163 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110536527 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.114272095 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096407423 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068595408 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077566144 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.289433641 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070862406 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.082064635 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.076601005 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105595026 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.203195763 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077323758 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.108046211 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055056377 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081261939 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.207608023 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095296233 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093444849 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073098122 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141132789 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055110224 seconds)
    (80/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.095506648 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068669588 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.070277009 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053697365 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080535362 seconds)
    (85/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066897694 seconds)
    (86/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.295501232 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138473175 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.100371674 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10683895 seconds)
    (90/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121190398 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096397578 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070823665 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097118239 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05486967 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.198887492 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094468529 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095380081 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078185173 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077124062 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183014783 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070920278 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069118101 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077132826 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.119929668 seconds)
    (105/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.106784715 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.193341147 seconds)
    (107/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.105620663 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.106504528 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161820712 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.203800698 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069868821 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151443584 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066820191 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.160922585 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069157258 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.08016158 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081153823 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070149809 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077479927 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.183659628 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092206056 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214519423 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.143550751 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078208382 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.212761129 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148258866 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07762979 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098601235 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07033786 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.187715153 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075532093 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069093445 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094850564 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089005671 seconds)
    (135/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200563204 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081913347 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079799169 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053776242 seconds)
    (139/309) benchmarking ("sort", Float32, false)...
    done (took 0.136885926 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077419791 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069806031 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142811606 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076267981 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143361855 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160611103 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167308963 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068937856 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.145798851 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055916651 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068851016 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.0771773 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.073874033 seconds)
    (153/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084565873 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16031097 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.0934328 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.077541221 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.100609063 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077282031 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075699481 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069826832 seconds)
    (161/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076361006 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.184511108 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.074923955 seconds)
    (164/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071564518 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.05517631 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081228843 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087897456 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.055845006 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156124862 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 0.14888928 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082595515 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096181846 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092685597 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.070462167 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084862871 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069540044 seconds)
    (177/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.170938839 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053921134 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.080421278 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054266246 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055644734 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.080241012 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065234536 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055360814 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054633588 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.116697567 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.19086436 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066072959 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.232535605 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095144047 seconds)
    (191/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.190822347 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096622802 seconds)
    (193/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.055643005 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079960502 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079172374 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055222422 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.07611365 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078525619 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057306754 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076363765 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.054373746 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115981929 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070517501 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.161462435 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07252694 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06808973 seconds)
    (207/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066718788 seconds)
    (208/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055205109 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.055910977 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077899682 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079251411 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09547384 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072863307 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054309113 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05624893 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.0551949 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068648334 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092027783 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055952959 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095845654 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054564688 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07544479 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054240063 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069983519 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07282841 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068247614 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080753249 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.054443197 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113664148 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067641678 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053820458 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055215091 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.15468475 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.15910842 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.071316628 seconds)
    (236/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.055266691 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145293786 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.066432212 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090622098 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079030899 seconds)
    (241/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05482321 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.05458796 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068221823 seconds)
    (244/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078133931 seconds)
    (245/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080059663 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069653618 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054423184 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.069317807 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06926715 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068740716 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076398027 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.05528667 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094866417 seconds)
    (254/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073564226 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.071691213 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055321343 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127432337 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.14577784 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069072574 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069151258 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054815417 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076415879 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076227201 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.067507899 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077547382 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070662043 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068974034 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054452917 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083029724 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.188587532 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067718738 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09680468 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054372806 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.054302434 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.119357361 seconds)
    (276/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055935892 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.069992898 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.162199098 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071957917 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06648211 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.11494075 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053716762 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077104193 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067779212 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054379374 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.068158866 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069804875 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054343938 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053886613 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068137442 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094126673 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107930995 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073165482 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055723502 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076769712 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075162779 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069140079 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075616994 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054209853 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130157288 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.10082828 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057161133 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074619389 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055158202 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.054668186 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068376461 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055390608 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069616947 seconds)
    (309/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075597903 seconds)
  done (took 32.451862966 seconds)
done (took 33.887307511 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.089490129 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095862496 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07902209 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097803792 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08452261 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079744461 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076728422 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082686095 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083894684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085727231 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080996479 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057647444 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077987656 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078126132 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.078673441 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09503701 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082461024 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076971168 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076829335 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068244283 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077285906 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069534192 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.07049895 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057861564 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082274789 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075043779 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075835834 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077526424 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069383343 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069179613 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072449677 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077071603 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06887285 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082383428 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075726273 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07658316 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07846761 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081185496 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071269762 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069506325 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078605184 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069361182 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076671715 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077597487 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075520896 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07470059 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.076641624 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080978606 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094287136 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071128746 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078222877 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080053887 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079154007 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076585525 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073059108 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077162142 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073929474 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094575853 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076925345 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071087978 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078430237 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078829538 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074807306 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077275004 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076087988 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078955564 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079047652 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075261928 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078449485 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07523319 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068810414 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076929712 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072796259 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068697397 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080818362 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081656784 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067700632 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075072509 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076435528 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074721481 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068507662 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070955741 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072657119 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075839852 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070707365 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057259511 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07314272 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076435689 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067879852 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077126045 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075428815 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076026592 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070938015 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079583728 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068273594 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074096154 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069289382 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069459329 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071429134 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073194877 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068604194 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071298129 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078149685 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070831715 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076094382 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082192293 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069031427 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075512176 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067711863 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067894533 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082323938 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07809819 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068720705 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07075963 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06780343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075694267 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067892275 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068830873 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06828868 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06878411 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075198103 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068524353 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070508005 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0762938 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083246317 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06855868 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072730488 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070255123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068531852 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074815746 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.202355552 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070310811 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071286661 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.065789998 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071400522 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06961836 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07672462 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071690886 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.077239707 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071573395 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07674017 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.073848175 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075018778 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075095245 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06781925 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063039795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071587991 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070491142 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070630445 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069202793 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070934019 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069171866 seconds)
done (took 13.05026097 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069309155 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144839048 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099850449 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.101120887 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089648008 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070006285 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079547902 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102966123 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071937388 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104307386 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091523495 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090085353 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117832505 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06788036 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069641043 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073704446 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070459348 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085239206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10311442 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091068109 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.119188505 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068908521 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097174832 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093555445 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091661393 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10717979 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070298705 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073468814 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072561337 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096389932 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092430104 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073487813 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070016318 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101773678 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.09730727 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.087686899 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069747027 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086459437 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069926736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068975753 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070696422 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102842866 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084210931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084230087 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073581614 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080978279 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070510581 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087188119 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093541954 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082832082 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089420085 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105725303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072255497 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088052826 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067486416 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.0904737 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081336305 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071920675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069652826 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077514975 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069600203 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072914714 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084209737 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083992636 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073630905 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.088884465 seconds)
  done (took 7.110205775 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088715283 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.096493072 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087427219 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087691342 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068687567 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069281227 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070322729 seconds)
  done (took 2.093534001 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070514238 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092937282 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092918972 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094906513 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085631875 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09171296 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079304444 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069728525 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091872262 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071036205 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091444264 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105167117 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07306172 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077314574 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094470775 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069579027 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094797784 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06967892 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073269149 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094730327 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072686853 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100104027 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073171104 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069841443 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.0849545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069929416 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118776334 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074414361 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071913931 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073002148 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068011941 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11159077 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084194997 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078556058 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070772081 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085523064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085027228 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06825473 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087072227 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079844132 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084552682 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070450699 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.07099626 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068175863 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074402013 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080566092 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071127232 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070507443 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073622721 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090826321 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071360098 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08408793 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073044356 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076099627 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071891636 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076663845 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.080872346 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070765481 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090399893 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07160537 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087629498 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086343014 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084481008 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086384373 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072546409 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083967411 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084155568 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073336025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071945302 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073788414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088854986 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068951979 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071943951 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080811862 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072709263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094019158 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09389384 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072083705 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083864061 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070956876 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.07053779 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070797168 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093450806 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075405387 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070175337 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074194955 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072966624 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068632806 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069327715 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073960785 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067881334 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071440802 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.073055921 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07356493 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073471762 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08710584 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072949112 seconds)
  done (took 9.210056625 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072343897 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070592038 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073308313 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070793555 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071227839 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071414607 seconds)
  done (took 1.977967864 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097394201 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072365783 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083578907 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075311573 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110231726 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090278356 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091637141 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081399995 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087643921 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082372665 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.0902915 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091973723 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095685696 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07539084 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091169177 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074906167 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091761916 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078235633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081867122 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076157685 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089400954 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075620295 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07593902 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085014224 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079384716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075222348 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08111065 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082765395 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082074653 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081782386 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075449878 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079277994 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074046486 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081448478 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.091787875 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074264975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074850666 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.080902464 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075130731 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.079655984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09177302 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075962049 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.077608277 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.080427808 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081384868 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073683895 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.080493481 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082718178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090543965 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.080794723 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080298588 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074383943 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079090516 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.0805362 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075402793 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081086516 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.080970876 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090801047 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075585342 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075007898 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072318263 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079269715 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081250098 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079446108 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.083562211 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080431624 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074012276 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075768198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076153208 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075439856 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080729096 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072000386 seconds)
  done (took 7.379658495 seconds)
done (took 29.282717714 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539634823 seconds)
  done (took 2.054335808 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.634258996 seconds)
  done (took 2.17246084 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.573207481 seconds)
  done (took 8.105467958 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.402611894 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.509491579 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.750492418 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138010093 seconds)
  done (took 3.370412539 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.726560706 seconds)
  done (took 2.267261963 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.231255276 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220138764 seconds)
  done (took 1.999865405 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.384864836 seconds)
  done (took 1.917261586 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.159823574 seconds)
  done (took 2.694774969 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265708535 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183537401 seconds)
  done (took 1.986858716 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.48774501 seconds)
  done (took 2.024974507 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.892467124 seconds)
  done (took 6.430083826 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220999915 seconds)
  done (took 1.802804683 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241327914 seconds)
  done (took 1.780272903 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.766717993 seconds)
  done (took 3.306522396 seconds)
done (took 43.455921578 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086138507 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.088519451 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087578904 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.085109922 seconds)
  done (took 1.874606819 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079418087 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07755765 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079654752 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076222651 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080301624 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076243826 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.077290209 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079078902 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07645461 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075978502 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075778332 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07595467 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078125305 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077555807 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074575746 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077947205 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079042962 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076157456 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079041317 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075773633 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074171007 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07825108 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07816276 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074733784 seconds)
  done (took 3.395810131 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081737281 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076779464 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078599624 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074718996 seconds)
  done (took 1.861614353 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081301327 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095583518 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093234045 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.081565934 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096452586 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.09053642 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073292533 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071938454 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073905282 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.08041724 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070954761 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099470679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091722929 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080746471 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08315369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069039313 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072147569 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091236067 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081735831 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082341932 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073615355 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081467695 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071426852 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091966057 seconds)
  done (took 3.525284966 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089496095 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107998662 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083922966 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092358412 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094815402 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069119013 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091423075 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094528296 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.130699326 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068932911 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074111912 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068861299 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076478337 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068638367 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085349631 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113036733 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115256614 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072139733 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100592355 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068619041 seconds)
  done (took 3.321320831 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075296815 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072449659 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071119666 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069248708 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080370546 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075657512 seconds)
  done (took 2.000796377 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071881599 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070797953 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070628681 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070219235 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074896142 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070098149 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068948322 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071547628 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.071605318 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070819595 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070090757 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068887904 seconds)
  done (took 2.402031756 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205044136 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070943959 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072236721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068736699 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074464055 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069340932 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084416459 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071427579 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.095876023 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070337886 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070295612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071590595 seconds)
  done (took 2.578837753 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212200304 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079608486 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242252318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155327383 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114763044 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119525349 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116786598 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117274139 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14583751 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104201461 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171528647 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171827869 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11160615 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140407677 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092581888 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102546967 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157733083 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166856299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110335905 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169428293 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151784689 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129888336 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150729894 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106260248 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109244362 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125374018 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074532994 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083563572 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174151295 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137453041 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147727027 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115295891 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095740772 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180436341 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175677874 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144272776 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15191655 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088381677 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105837544 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.137811685 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204128234 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092586486 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166599162 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250211246 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084957513 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137900112 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122240973 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122712646 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109357954 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093870208 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149755383 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188966276 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.141866593 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092020865 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127953298 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117356752 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.118222069 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118420873 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186753082 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164898715 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130837468 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074728114 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112464599 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155520651 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136329224 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.111810966 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129039341 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095310182 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13806799 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157282297 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126223699 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147571457 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121389784 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092098372 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121583249 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143183937 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130524953 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164681752 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127261886 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075759339 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126730153 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104729542 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083878237 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.15331236 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078435458 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177692098 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10277264 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109542585 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129441884 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112495654 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112543019 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162484012 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147621036 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1064032 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.209523665 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109272376 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123975153 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149141574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091092403 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113143429 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120588467 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080352374 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141004553 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077979389 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125821488 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077881121 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127360036 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133143471 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.080750617 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126464518 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106632964 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103282716 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135457282 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162348071 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090802906 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08523685 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171443051 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125433706 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105498877 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146514396 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159239877 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101295632 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103449408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154104591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182252295 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092628629 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165505967 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109182072 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086484733 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09134894 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127019042 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114617507 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127265452 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084679856 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.121435507 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170855569 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078292443 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099047731 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136496959 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081603423 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083209808 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108227454 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108056686 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099326998 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102892316 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.105428643 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139205221 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125989261 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108247638 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127075827 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244255287 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178072844 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091140646 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105974437 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10735745 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.073474164 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140689775 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158950746 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082673937 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166621363 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.125216353 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11964532 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120738044 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08736543 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143944206 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081742514 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073772131 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149699827 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113066146 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11281168 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153487255 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119599562 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129235796 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124106617 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136130546 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135399279 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131654451 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108688373 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091564418 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113983808 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130050734 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076196828 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093582329 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082874914 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107978348 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098797579 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086564296 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14461751 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127423135 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113127119 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114337394 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099806559 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149453477 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079236456 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131312689 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121602884 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098475565 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154695828 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154374926 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134451396 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101751564 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141403305 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073721408 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076703922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090991947 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124957321 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228334531 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087252665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119294909 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150128714 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133534146 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141347065 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128140074 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125045779 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157935456 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073118685 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.123795362 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150603915 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125083496 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108111344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09440338 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102668509 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14442558 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110425109 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186624139 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116189854 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12580181 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155894861 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104378937 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082892964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105844711 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137837138 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107819896 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144866233 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10273519 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091681944 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11139247 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077701412 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102412057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130974313 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121678589 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137472225 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118139528 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13583493 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080603955 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119202175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124336899 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123670752 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067057551 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12201756 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164283781 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097884641 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120158559 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154822153 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081776478 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13798401 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176917943 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.291431221 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089030282 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112550411 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122804162 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131002153 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123819182 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143601182 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111729232 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139373729 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1139661 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088630774 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09144219 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101516674 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107815148 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09887822 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108057274 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117487583 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098507375 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134905837 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106740915 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114752944 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119526445 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104048937 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093713379 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100091215 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179118722 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122090813 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175903096 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.101591773 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147277663 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167429118 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078327608 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082663688 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081244975 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143000258 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087436419 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133615652 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111174835 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120901158 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126170134 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144940746 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09820791 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071571791 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113699057 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136258916 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129040168 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102753332 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107157794 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16555577 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102925623 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082339408 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116545247 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119874635 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106402689 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173271993 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064693678 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108633582 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079278722 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.224990216 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131764998 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158476518 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083676708 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.106802807 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121821171 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116150139 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131110903 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104537047 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112007294 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130675624 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155086575 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131636797 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09242929 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11513051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130448232 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158632404 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109012903 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099817157 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176890668 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153463995 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162405014 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090961217 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115590994 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115713647 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110673304 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140164854 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086374981 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166532877 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084898074 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139611832 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10625293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092484833 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132437168 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112809382 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092038728 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151011876 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120479035 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086626539 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081095916 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121408282 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122035481 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10969342 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078105953 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144958828 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.076471007 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134503504 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162801103 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083602465 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107936169 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098575486 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082435943 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253222599 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106563702 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091466718 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102237005 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175601001 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089440618 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151967013 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137714006 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115819622 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139398076 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105164127 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643214391 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080572818 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153835728 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119859835 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17746681 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103551269 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1201007 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111924125 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125819107 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148582271 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107314425 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.189249415 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135798984 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118921549 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082687538 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105159198 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107220139 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090118041 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110345447 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11593438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118616991 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095749937 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118549467 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12683371 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085147647 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099323444 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157763369 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119683072 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14743565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144186547 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088732932 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120152181 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140204028 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083562117 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123644599 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156775982 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110324245 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103459707 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.083475777 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103245929 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306246678 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076430035 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164273099 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123066801 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112009135 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115891107 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115355313 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134033508 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111058913 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124669698 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096035267 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1127862 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116269562 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084834452 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.080826515 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111021162 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114795229 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100542715 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101383981 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102539947 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153643057 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075283847 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101416004 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118112397 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147431196 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17791705 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091807435 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086489755 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121936954 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117044497 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115964101 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12397765 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082081052 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084951242 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083286325 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08168055 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111497988 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11593944 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118122802 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113310411 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166040595 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086726971 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.241379162 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098470884 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107939183 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073090192 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081259878 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099153458 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101993076 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110923505 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113347751 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162496763 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098034838 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092758769 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094026613 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077135426 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086069684 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130918362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112283744 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264347031 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104844358 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065785368 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111355232 seconds)
  done (took 60.626418087 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110380298 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086716742 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099621476 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149371243 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125582247 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204479906 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156257677 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192083823 seconds)
  done (took 2.781831629 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070493276 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098744857 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107069514 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.086069008 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069416496 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071768366 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233910037 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084122379 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069457769 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099873582 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080919404 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072589066 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.437908006 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069149177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070597249 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.064963409 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069904388 seconds)
  done (took 3.505980511 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.403715698 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.624104123 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359674601 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079557137 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.884706101 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.096507547 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.126749177 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139900744 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080232253 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.524505872 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.409146731 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132288433 seconds)
  done (took 18.519960719 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083658957 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07778803 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.09167605 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091351115 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080389371 seconds)
  done (took 2.078077759 seconds)
done (took 110.047683357 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084644955 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.627994679 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056602921 seconds)
  done (took 2.368311409 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086553948 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089031561 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089240316 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086646517 seconds)
  done (took 2.014377308 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077241915 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079593922 seconds)
  done (took 1.813071885 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.238189639 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169724602 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100256815 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085823369 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.082210653 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082370815 seconds)
  done (took 1.912754359 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074780412 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078701338 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.075789395 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079215876 seconds)
  done (took 1.966517133 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080154021 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055238421 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057015131 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060867472 seconds)
  done (took 1.912674859 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091765887 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082358756 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081599527 seconds)
  done (took 1.915866556 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104812746 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.089167835 seconds)
  done (took 1.85405884 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084789077 seconds)
  done (took 1.747319298 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09813814 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104055128 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135343112 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114707262 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142996654 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112494142 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087684018 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088966845 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079939628 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089149053 seconds)
  done (took 2.714519535 seconds)
done (took 22.46524703 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082410971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.3874395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362649474 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093284391 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672234827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358857991 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973274899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096035096 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11860645 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070126042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088488656 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652920095 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963696341 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327603162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.951955382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323321143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652237795 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071692523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070304844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070874361 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957909896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071059279 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070690567 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071849569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651157913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.3748086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071091659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323829817 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071321079 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072807846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358302823 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071035321 seconds)
  done (took 16.20242039 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073282859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124254297 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07609404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088332026 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073123728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072395478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074492717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086292174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124816488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071061199 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087971031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070476762 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075230431 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07170406 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090656322 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071106398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071610831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071529225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0709478 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071161576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08993421 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070717365 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071297118 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071980163 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070954536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083762793 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072297758 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07115319 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071398548 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073923828 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074559151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071996679 seconds)
  done (took 4.183525169 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118543158 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128028147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076442978 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107398261 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115357801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073490409 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147640789 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097933754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130365092 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071043382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.0886455 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07085399 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106330882 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072086448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091351205 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071284446 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072334154 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072170494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071556866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071644898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091620186 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071351967 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071284745 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071712207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071716462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08527661 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072094406 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071550843 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071324115 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07341037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074869015 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072343009 seconds)
  done (took 4.426804982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075562193 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078853112 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086524471 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086827688 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072406132 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075642417 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077023093 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072865204 seconds)
  done (took 2.302426911 seconds)
done (took 28.782764022 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082755956 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072241893 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075816829 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085199072 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077643432 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081625745 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070235386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078746223 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075176019 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076160457 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078804582 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070576216 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074472372 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069569386 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077199392 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070636731 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083187054 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.07545814 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08248858 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082642362 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073238421 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076305056 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078463303 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082803133 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082312334 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082661337 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080704762 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076122468 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071619708 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073750411 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080344989 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088027706 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071715087 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08227141 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070371844 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070657323 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074685749 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070656418 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081993228 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079761009 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073001794 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078752159 seconds)
  done (took 4.897851987 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091379736 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096257628 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088501174 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065082093 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.070199122 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068714361 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092594619 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063158061 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062441015 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.091792616 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059063343 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062541247 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066500137 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056791815 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063223402 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059571064 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065110878 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058573601 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063140527 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.0628925 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092567414 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056417016 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081240424 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066556163 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058986676 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065159378 seconds)
  done (took 3.513087903 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077234719 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087955347 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094606316 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133883628 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108780957 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083045843 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082653388 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099603636 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.091886435 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069880813 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074015216 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096536687 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092758888 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078228976 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070471911 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08994152 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.087286404 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072468649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076484543 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097802199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089865213 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.088867845 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098843533 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086570329 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.06988494 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073389428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074574483 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084541327 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074426508 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07985142 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074715126 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07464025 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072601154 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082867466 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074526541 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072469821 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098321391 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081270128 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082073906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071995577 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078495576 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071804458 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.107134848 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.13142935 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071453556 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077154468 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075143268 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080847684 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070124725 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091072912 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082622512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070821049 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073841373 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070076505 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069841539 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073948113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07237652 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073058213 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079257863 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.077026672 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095802134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075632643 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086479055 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070559352 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078817761 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069676967 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071589746 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069612032 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09916824 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073718589 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114582047 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071361468 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071807362 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.08019407 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.079245036 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077180048 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070300898 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086861765 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.08146012 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074611432 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080239735 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074098345 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07344832 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.094199361 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073406973 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072415065 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071742686 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076419445 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073334735 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072326897 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084127627 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070376662 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07361239 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087903946 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070505864 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072324497 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076260224 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075686607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070040286 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082125003 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075322967 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071360387 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.08056602 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070185266 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07386444 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083515638 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077212981 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068904262 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075053495 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076754022 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071174418 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072650201 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073996823 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072139178 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.079632623 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077593455 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07527288 seconds)
  done (took 11.054876965 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168788085 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162664636 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074369972 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154354782 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080646506 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082343866 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156355506 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098759297 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071605786 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071660684 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072234809 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114180059 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11011741 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122203193 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082226298 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071356472 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.087776117 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.118731076 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15793086 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.151229512 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087780605 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.080051749 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073193282 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072575156 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073391322 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082042804 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089037741 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081822335 seconds)
  done (took 4.568499282 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08466945 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109284697 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078590032 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094782117 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094407 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071087856 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07416193 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072904408 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085261176 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081810318 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070788571 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07723284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07802924 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074469093 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071646823 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078060794 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078763553 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072239294 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074493055 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076391784 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08172612 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09596642 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075243627 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070659638 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076120208 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070195256 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066508293 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08794501 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071599882 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098609924 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068853183 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.076558884 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.086257468 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073089912 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071052068 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071434752 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070617687 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071627028 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072726518 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069770262 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069378342 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060809304 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070377646 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08244281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07885082 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.059460135 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075813916 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076381388 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076626506 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068352118 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074519387 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073727443 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073946317 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078147532 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075227752 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076538343 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.071928129 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.077563388 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080809334 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070570209 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068467289 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069575881 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075575587 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068307676 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08053924 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075633113 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069721683 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070464937 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072699475 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078742057 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070371446 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076603311 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068665573 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073206509 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076040148 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.072962784 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.072374732 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069563069 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070568646 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071349129 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058061647 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071043343 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056052993 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074457255 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069332903 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07048518 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071025308 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076204561 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083239387 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072732597 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077658547 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072651048 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070819606 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073959055 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063128791 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074404774 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083132436 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086187288 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071165048 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068764646 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084791465 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076573976 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070405447 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059179433 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075451016 seconds)
  done (took 9.565062392 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093494303 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073304379 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087754632 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094116555 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090670897 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078465404 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081050527 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072665263 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087220812 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077190926 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080848986 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071409375 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081666973 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081007967 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07343146 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081490968 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075608845 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088205118 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086147136 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071739822 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079647664 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084499355 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094422629 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085324776 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084316196 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085388765 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.093974658 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081110149 seconds)
  done (took 4.040090688 seconds)
done (took 39.311305527 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.767798671 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.017668665 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.758144757 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.141723055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.843437547 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.984973089 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.842438402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.753041952 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.912412183 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788967146 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.036228833 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.978389307 seconds)
done (took 65.5166844 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.80333755 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.893004322 seconds)
    (2/2) benchmarking "String"...
    done (took 1.994725132 seconds)
  done (took 5.579210925 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.088559529 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.38011979 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.00193018 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.753671262 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75842704 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.07012052 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.557896346 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.271212315 seconds)
  done (took 30.487834508 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.958383537 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.97144342 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.481410949 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.506579826 seconds)
  done (took 15.664933874 seconds)
done (took 63.399946152 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.776345642 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.796566589 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.76362942 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.739691715 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.814969446 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.769212567 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.88207851 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.784447843 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.758401192 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.738814384 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.756421599 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.226869316 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.759775938 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.93873008 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.75404877 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.762541752 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.79823505 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.215156205 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.912981511 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.766016615 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.769515086 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.775945848 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.757351551 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.765653804 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.760321383 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.75668666 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.141990518 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.767758912 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.589135937 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.759790278 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.806557628 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.231849076 seconds)
  done (took 203.290699525 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.754884057 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.631856533 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.7299097 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.804604867 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.202644136 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.967828312 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.868754437 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.238240266 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.757865697 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.78874198 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.904041053 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.756383601 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.94012384 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.705416371 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.794823724 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.866069781 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.932548211 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.962501692 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.799404481 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.915051637 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.773416151 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.788059509 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.729669871 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.906398506 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.767018394 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.869918209 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.776819195 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.775615751 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.952556639 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.898827116 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.768041159 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766417228 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.951766967 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.631854452 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.758951238 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.778321873 seconds)
  done (took 168.910844767 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.92306772 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.757181961 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.756278973 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.7566974 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.763484435 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.756129712 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.756325147 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.756031669 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.878035547 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.883765509 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.374277861 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.460943974 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.811610158 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.56771402 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756712383 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.824366938 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.769127157 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.758301537 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.771765723 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.785807915 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76074192 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75823337 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881495912 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.770928317 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.778918212 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764468183 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758115054 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763572764 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.12855727 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.758313141 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764079554 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.999938002 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.758038403 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.757585825 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.603062131 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.846616951 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83997659 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.758697844 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.760577588 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764953099 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.758328521 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.975250662 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.758498269 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.758809932 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761941762 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.889595169 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.758544636 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879330102 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.761722087 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23844067 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.759340862 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.759484443 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.637686554 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.342532641 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.759036161 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.757884813 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.76046948 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.758777787 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758140726 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.765722813 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.590229217 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.834071298 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.760764492 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.763904898 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76638661 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.76000984 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.995407949 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758925326 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.198301721 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.821070376 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.992231749 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882951589 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.76389654 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.826391747 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.854137651 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.76036281 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.760435049 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.760238416 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.760300166 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.840382538 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.760886237 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.883346907 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.767748504 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.76147926 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.812732685 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.82862305 seconds)
    (86/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.76187718 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.760247712 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.605209013 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.761976792 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.760171118 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.027474999 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.827843561 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.761177518 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.761094362 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761592943 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.884502547 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.884166694 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.482188793 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.765902509 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.569312785 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.764353953 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.896317996 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.762673698 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.893561664 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.763014052 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.843085176 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.76888117 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763331689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.761967955 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.795139613 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.763019121 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.818891657 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.765440293 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.135099164 seconds)
  done (took 401.366573671 seconds)
done (took 777.238271841 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.413389416 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.390044628 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.486238477 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.407285489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.379836741 seconds)
  done (took 13.777528433 seconds)
done (took 15.478128711 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.850719738 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.858329012 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.787085 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.85439979 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.783578216 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.853528412 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835901243 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.788257449 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822351463 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.786176937 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.82417932 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.786523417 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.775281213 seconds)
  done (took 25.307383717 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.00729573 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02045833 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834235212 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.009075653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810395468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.004948152 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.93038789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.921271794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.922107565 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.78111303 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.776645614 seconds)
  done (took 22.721134863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.013736461 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.022933857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.842557782 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.007366905 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.815271621 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.02131305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.935013212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.926398337 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.934674674 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780532365 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777231211 seconds)
  done (took 22.780394448 seconds)
done (took 72.509682873 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.772797398 seconds)
  done (took 3.47566776 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.801451566 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.967012425 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.780833924 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.778463563 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.773136275 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.774258201 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.777437726 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.773538039 seconds)
  done (took 16.130571467 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.769734953 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76917962 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.77275968 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.769689335 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.771991243 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.76973952 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.772028996 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.7700253 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.769073131 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.771192034 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.770873455 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.773418809 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.772693405 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.772468772 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.772929898 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.77354879 seconds)
  done (took 30.04585234 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.77240024 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.769839632 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.769947129 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.771896697 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.770237373 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771347302 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.771052183 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.771059815 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.77008424 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.76997644 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.770984814 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.770618051 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.77071357 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.772114101 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.771122973 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.771188867 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.771872135 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.773003255 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.775510897 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.771556641 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.7716823 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.772183385 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.771108369 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.772090717 seconds)
  done (took 44.220734431 seconds)
done (took 95.575519938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.536284219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.645527391 seconds)
  done (took 9.887128235 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.776737488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.775667813 seconds)
  done (took 5.323531595 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.77575886 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.775466217 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.774588013 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.775185025 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.775832355 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.774637778 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.775758632 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.777224841 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.775961552 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.77622487 seconds)
  done (took 19.462892319 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.774635507 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.775720115 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.773725189 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.775922553 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.775910734 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.773249526 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.775850951 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.775368108 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.775852206 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772998334 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.777449294 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.773489865 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.776341829 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.774039884 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.777886749 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.775089457 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774313087 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.773902292 seconds)
  done (took 33.659296743 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.7769797 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.77708474 seconds)
  done (took 5.262339744 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.774797925 seconds)
    (2/7) benchmarking "second"...
    done (took 1.774303464 seconds)
    (3/7) benchmarking "month"...
    done (took 1.774217877 seconds)
    (4/7) benchmarking "year"...
    done (took 1.7752325 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.774956295 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.774988858 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.775101644 seconds)
  done (took 14.131782656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.779467932 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.94612799 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013271801 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.428279946 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.779090417 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.781761311 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.697004528 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.782242685 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.783226867 seconds)
  done (took 19.699442997 seconds)
done (took 109.132001005 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.617303555 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.772700515 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.025239998 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.831090597 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.826439546 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.113661302 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.794349224 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.078882822 seconds)
done (took 42.767741233 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.792030871 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.086762731 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.08449269 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.79786395 seconds)
  done (took 16.677935195 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.759057918 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296082985 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.81318327 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.363788592 seconds)
  done (took 19.973109741 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.146049407 seconds)
    (2/2) benchmarking "read"...
    done (took 2.124476537 seconds)
  done (took 5.985624241 seconds)
done (took 51.139988689 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778672491 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.778256599 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.776130387 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.776289789 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.778016825 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.776141933 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.775608324 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.778495253 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.779299207 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.779279754 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.779400097 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780396921 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777004853 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776639038 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779452193 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.778777678 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.776914199 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776860097 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.779757471 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776727774 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.778206357 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780354988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.776877263 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.779522712 seconds)
  done (took 44.384018543 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.780401784 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.778499353 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.779826868 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.780717177 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.778481727 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.780693694 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.782015545 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.777867538 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.781515915 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.780922536 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777127978 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777955634 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.781082607 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.778117859 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781107726 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.778389964 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.781742313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779955129 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781732192 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778481193 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.781830078 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.780600839 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.781146945 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781513731 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.778352523 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779077519 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.782347905 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.779997837 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782266342 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.780094625 seconds)
  done (took 55.116116313 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.786933228 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.788271978 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.781412218 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.781875877 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.78150852 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.781955446 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.781821964 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.782427289 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.783623428 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.782590668 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.782368537 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.782010643 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.782345635 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.782257926 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.782130683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.782386541 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.782767789 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.78250831 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.78256472 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.782737446 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.783848006 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.78320386 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.782470682 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.782206747 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.783511477 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.783567211 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.783660204 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.782780902 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.783397797 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.78279542 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.78363846 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.783128143 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.784332186 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.783725745 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.782863901 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.782719687 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.787537014 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.790621511 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.783351885 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.783901483 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.784179168 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.784437222 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.784127373 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.785100606 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.784294199 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.783833509 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.78495898 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.785357329 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.784850128 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.784455183 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.784509081 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.784379053 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.784650229 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.78431566 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.784602877 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.783618612 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.784367146 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.78351638 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.784982078 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.784654175 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.786455199 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.785217005 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.784739792 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.785303415 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.785346953 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.786276941 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.785426221 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.785781029 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.785083641 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.784969674 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.785018902 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.786031952 seconds)
  done (took 130.163920096 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.784426794 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.782496752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.782849212 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.783024699 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783272928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.786418418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.782901956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784965117 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782794133 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.786288839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785684216 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.783578052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782863843 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.785841827 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.785637231 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.783303736 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.785954425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782848306 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.78564756 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.787473889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.787243883 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.783279856 seconds)
  done (took 40.975467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786295723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787633179 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.785257973 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787495648 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.783695439 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787666311 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.78732758 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786957075 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787750554 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784583125 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78442186 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787036928 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.783906444 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785356311 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786220826 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78477125 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787499324 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.784585468 seconds)
  done (took 33.865899978 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.784943754 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.785937151 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.786912415 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.784114529 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.785362981 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787166636 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786319411 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.787954449 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.787911496 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.786005688 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.788491436 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788228166 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.789679832 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.785362579 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788113834 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.786038132 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.788137291 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785464158 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788409861 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.785690565 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.785721779 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.786939794 seconds)
  done (took 41.027746667 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.788574387 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.788829773 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.785317365 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.786156216 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.785846797 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.788104932 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.78881915 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.785797717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.788561251 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.788309938 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786980874 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789297822 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.786870761 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787973618 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.787075301 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786429423 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790216358 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.789183913 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790472174 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786885119 seconds)
  done (took 37.475203811 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791212272 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790546302 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.791934735 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790634978 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.791965963 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.791149652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791091376 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.791626329 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.790895851 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.793041502 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.791157848 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.790670107 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792071545 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792178799 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792106361 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792096973 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79074984 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791515048 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.791702419 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791743806 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79285821 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.791088727 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.791613843 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.79179316 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.792293825 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.791699468 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.791941989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.792699229 seconds)
  done (took 51.887754504 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.791122795 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.790067021 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.788252511 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.787675045 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.789056652 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.78953391 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.788268316 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.788778102 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.790477831 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.788061087 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.791916256 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.790989913 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.791529785 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.791303766 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.790920071 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.791711165 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791776902 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.790194174 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78905711 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789582339 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.791763006 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79284866 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.793753227 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789019137 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788877204 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.791979138 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.788583006 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.790031981 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792877252 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788943217 seconds)
  done (took 55.431838226 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.809851163 seconds)
    (2/2) benchmarking "in"...
    done (took 1.810499498 seconds)
  done (took 5.342991227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.789793542 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792157711 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.793242987 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.790199802 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.79061082 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794306275 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793379376 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790381461 seconds)
  done (took 16.057090277 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.793075993 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.793048764 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.793546955 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.793011085 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.794136185 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.79372294 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.798979556 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.793749217 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.795195141 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.794233025 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.800093508 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.802936509 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.795574149 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.79588813 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.793035896 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.795456875 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.793831137 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.795155945 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.794879252 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.794613877 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.79507871 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795794444 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.796556058 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.791336603 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.795535119 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.805908671 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.799958123 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.796309882 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.794113924 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.799831425 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79450118 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.791511123 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.795591047 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.795210686 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.794900651 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.796296752 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803866934 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796280413 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.80146699 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79612666 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795764637 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.792138881 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.79744575 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.797465771 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796270113 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.796060408 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.795992221 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.792187571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.796924208 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.797867222 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.800278255 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795542117 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.793254876 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79977014 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.797917032 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803091897 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.797403213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.798126539 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.804487557 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.806543693 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.809830227 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.803642074 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.797767827 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.798112898 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.805728757 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.818133174 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803083337 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.793052795 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.793209116 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.797242505 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.803756648 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.809352027 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.806288997 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.796957327 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.798785827 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.797157007 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796525029 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797593804 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.804432302 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.801874954 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.799560495 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.797587801 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.806046616 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818234996 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.797127812 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.797831901 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.798306921 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.798067697 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.797875873 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80920977 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.799931052 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.797456573 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.798497589 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.798198665 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.799913048 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.799019672 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.797827106 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799864989 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.795043598 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.797374228 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799882952 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.801005887 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.807969852 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.799542277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798792839 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.806009407 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.798697722 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798118648 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.805551927 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.797430934 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799705403 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.798977201 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.806478824 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.795669197 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801695456 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.807262244 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.798977543 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.800418378 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.798823954 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.798189254 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.807835012 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824817172 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.798772289 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.800016155 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.804497861 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.810339482 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801894988 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.803380063 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.79990334 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.796858605 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.797252354 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.801735281 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.800387252 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.800447376 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.800220123 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803159469 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.797270629 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.799402098 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.80076684 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.801841861 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.801585572 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.801613417 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.802625293 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.802484374 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.80173647 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.803102613 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.808401272 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.801753846 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.80325589 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.804549302 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.797999758 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.801633526 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.803657411 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.802869263 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.804269265 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.802110167 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.800729326 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.802129254 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802099706 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.801882381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802375387 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.802685714 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805938875 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.804336725 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.805390817 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.800883801 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.798436572 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.801785483 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.801354586 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.802686726 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.802100277 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.80128664 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.804451974 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.810023894 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.802075627 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.802551438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.804535223 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803891563 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803599726 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.802140481 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.806645028 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809706421 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.802336466 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.810823893 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.803764429 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803061381 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.802632376 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.803634771 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.802935804 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.803112122 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.805893028 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.809521855 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81534406 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812108131 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.805197814 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.806247849 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.805863179 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.807907069 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.806841311 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.803497306 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.803595715 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805891008 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803331947 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804118658 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804584638 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.804347727 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.80299782 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.804094776 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.804564569 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.804753549 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803936628 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.805989833 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805846721 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.801681019 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.803898056 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.805824427 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.804095763 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.801908593 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.803878712 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.804157553 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.804716314 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.805033214 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.812596731 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.801347466 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806015473 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805767085 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.804832642 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.804084478 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.804518271 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807174507 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.808225217 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810785224 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.806315468 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.806162486 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.812362464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.805614668 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80463833 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.808924325 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.806028654 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.802277767 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.808731699 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.81349936 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.805269193 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.80787895 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.806936259 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806232945 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.806701198 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.814064576 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.803305767 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.806356161 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.8053636 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.806959259 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.802302785 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.807653582 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.807468108 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.807860284 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.809548036 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806278543 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.806518816 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809077878 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.807361726 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.807388914 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.807291914 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.810335762 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.815643868 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.81249228 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.807479414 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.809126724 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.808142281 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.811322212 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.808098473 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.808693145 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.807017976 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819196762 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.816931953 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813198495 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809817268 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.80690028 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812313472 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.810006758 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.814493143 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.8081735 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807954905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.808051305 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.807828215 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.806543672 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809195209 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.807377511 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810544233 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.809239952 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.811346692 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.808329452 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.80768765 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.809088222 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.809731774 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80827331 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.80804082 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.80851191 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.811118008 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810206789 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.808169737 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.807449482 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813920385 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810081377 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.81104754 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80815389 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.80890573 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.808421223 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.81033483 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.809374741 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.811213261 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.816586094 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.812041397 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.820450587 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.810737374 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.819466035 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.810633499 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.813087551 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.818731974 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.806897073 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.80819083 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.810487542 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.811277172 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.815958819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.811244413 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.810720226 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.813958996 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810212474 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.812091379 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.810607209 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.811767573 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809499185 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.81008137 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.819048956 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.812422364 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.81544263 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81319181 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.807524732 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.81105983 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.811038517 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.810503017 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815756297 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.810655926 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.811865173 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.810681412 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.812162513 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.811810257 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.81165518 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.810358026 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808093015 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.810411691 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.818377014 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.812876497 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815244427 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.810436476 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.821527232 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812701519 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818344891 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.812206622 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.812750781 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.812026745 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.810883715 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.813610549 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.820828012 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.814457463 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.812900565 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.812606704 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.815978667 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.813159967 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.81540432 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.813386921 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.813753908 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.812356819 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82230559 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835023719 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.8132666 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816036165 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.80924609 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.814602529 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.817631347 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.813621381 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.811656621 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.81599809 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.822394205 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.821035899 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.812324333 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.814121219 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.813004876 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814082269 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.812650912 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.813817768 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.814026862 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.812947309 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.814844415 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.814342097 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.81923696 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.813254473 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.814828679 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814787604 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.814263675 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.824445499 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.814114923 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.815443644 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814787449 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.813750703 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.815188157 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.813781015 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.814720073 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816290858 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.814000307 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.816131522 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.821595733 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820362277 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.819593863 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.813948934 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.815072296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.815397415 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.815427498 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815310461 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.815589908 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.815928356 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.816794502 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.816205533 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.816238893 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.814490381 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.815688396 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.816651693 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.815325598 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819099399 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822756969 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815649023 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.812862447 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.814970248 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815595637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.81545196 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.817244857 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.825205068 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819035797 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.826810036 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.824385722 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.821350178 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.816157423 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.818798014 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.825440797 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.816104011 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.817038322 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.817190244 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.818902671 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.817980068 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.819893743 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817405197 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.824089601 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.816914138 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.817417104 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.824921642 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.81835212 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.816813454 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.817695337 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.820427312 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815384245 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.81329065 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.817081213 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.816164466 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824292608 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.819852199 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.817273934 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819397201 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.816108281 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.819397887 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.821357436 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818064447 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.818732489 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.815145149 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.818143879 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818314628 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.817465026 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.814199051 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.818116248 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.817931085 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.821503638 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.824707014 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.815265776 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.819982231 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.819950651 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.820805741 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.820076075 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.818909714 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.815056404 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.815389544 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.819510944 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.819149769 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.82027324 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.823048817 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.818017973 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.819994113 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.819943899 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81975602 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822342149 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.827624834 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.825847173 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.816704739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.819028484 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.821001238 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.823355863 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.819399288 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.819986992 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819731619 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.822848396 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.819461562 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.819975983 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.818540028 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.82264311 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834551877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.819396823 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82031437 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.820698451 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.826400578 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.819514997 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.816190913 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.820555867 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.823226913 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.824337809 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.82827804 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.820871661 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827575315 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.820734108 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.821743596 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.824263914 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.823931176 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.829870885 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.824693774 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821067613 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.820836214 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.825609536 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.836600505 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.820654964 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829837191 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848908626 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.822481535 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.823306327 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.821777677 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820793182 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.822744022 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.823269242 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.821678715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.823562338 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8218663 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.822081226 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.822864718 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.827792284 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.823490414 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.820956046 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.821832427 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.822745032 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.824132242 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.81870299 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.822206734 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.822248335 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.82230177 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.823041648 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.822466673 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.822055384 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83558147 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.831809244 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.821984118 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.823499429 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.820748671 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.825592569 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.824812118 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.832741009 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.83036297 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.8235455 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.822496617 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.825954956 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.823965031 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.819227055 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.824846025 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.823351141 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824072235 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.820037604 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.837138183 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.831225389 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.828459436 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.82438655 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.824168478 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.822901054 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.824597856 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.824790376 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.824930151 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.82598902 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.824585982 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828706756 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.825713051 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825754892 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.826606889 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.833176839 seconds)
  done (took 1080.920609469 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.821186034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821729699 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821640738 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82165971 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.821327517 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822810276 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822533385 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823705472 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.822178147 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821140136 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.821453703 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821948322 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.820772487 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82258624 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.823362796 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.821173759 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821800124 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822068226 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.822003587 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.822140777 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.822265773 seconds)
  done (took 40.015878796 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.823826305 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.821431759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823558088 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823785919 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822105803 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.824556727 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.822319188 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.826404553 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.825955798 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82319263 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824928821 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.824834601 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.82342699 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.822960063 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822224862 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.82503008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.824813119 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822214995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.82582568 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822267878 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82518384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.823644478 seconds)
  done (took 41.879292535 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.827787527 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.827359264 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.826924777 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.823210621 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.826345507 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.8241079 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.82928473 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.825933431 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.825985027 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.826183306 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.825868352 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.826937583 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.833663232 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.830840489 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.828358613 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.826364999 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.970663093 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.827627316 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.830263863 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.829205918 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.824340352 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.832492353 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.824784879 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.823907547 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.826485849 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.827980332 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.827792517 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.82742091 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.829620834 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.828764934 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.832886808 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.827424883 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.828029757 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.83023909 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.828307128 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.829913547 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.831387604 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.829044679 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.824475251 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.828743556 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.837776645 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.846677853 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.828331508 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.833565681 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.829001631 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.827895747 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.830750422 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.836804452 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.826533112 seconds)
  done (took 91.511152459 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.827916173 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.829164753 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.825597356 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828045374 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.828344648 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.828594889 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.827595994 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.828657068 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.825488977 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.826337926 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.828729337 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.825086042 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.824139801 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.827034281 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.826893807 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.825331148 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.825425568 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.82428438 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.824666459 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.823928717 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.823540747 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.826757886 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.828541434 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.824534673 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827816159 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.824260911 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82490563 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.827377532 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.825252952 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.824535408 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.828038113 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827240124 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.827288363 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.826647063 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.824197576 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.828220905 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.827903808 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824624912 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.826747479 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.824491359 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.827938017 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827669934 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.82797553 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.828176125 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.825372546 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.825408982 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.825457477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.825073727 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.82634302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.828382028 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.827745847 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.82845437 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.827952296 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.825127859 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828463197 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.828747761 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.826308256 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.826348111 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.828866838 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.826439676 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.826313341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829040151 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.826433499 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.83031456 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.829719904 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.82643373 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.827009831 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.830850372 seconds)
  done (took 125.98218725 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830235553 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.830711647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830992473 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831841947 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830579412 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.831470979 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831231171 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831403824 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831131932 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832329805 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831017248 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830530726 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.8309107 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.830875872 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.830315993 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.83107632 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.831637078 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831880005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831208631 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.831095784 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.831088644 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.831040324 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.831817729 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.8324035 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832341764 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.832055991 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.832679338 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.832575588 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833363369 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.831622116 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.833569594 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.832362369 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832561172 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.831549391 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.832723399 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.832487798 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.831954686 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832367765 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.832314282 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.833136619 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.83263767 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.832428528 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.83346022 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.833058586 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832309386 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.832653422 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.832384217 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.832852494 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.832470897 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833058765 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.832999022 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.83244816 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834103821 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.833576696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.834567284 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.833371737 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834660153 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833622582 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834100914 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.834349436 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.833839591 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.832567404 seconds)
  done (took 115.362964529 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832896964 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834343495 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.829947326 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.830698445 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.833168032 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.830691604 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832554249 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.832583914 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832609461 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.832608993 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833811319 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830505446 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831950066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832237353 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.83049383 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832313931 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830455001 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.830164612 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835069323 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831379433 seconds)
  done (took 38.403603711 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.830661676 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.8343253 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.831574035 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.830709571 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.833115237 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830990617 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.833574425 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834031564 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831075121 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834437409 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.834852687 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833950134 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831375286 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832556827 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834487362 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.831667673 seconds)
  done (took 31.086484555 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.831955483 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.835479457 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.836363411 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.836900236 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.832652661 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.833176658 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.83490397 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83276436 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832576544 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.835429628 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.836857875 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.835122562 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.835290097 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.836961673 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.833029172 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.836302292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.832896741 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.833195039 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.834890559 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.837267424 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.834517838 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.833655836 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.83526056 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.835060585 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.83265807 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.833819939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.833156932 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.833394454 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.834017792 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.836571983 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.833600212 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.833128735 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.834042568 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.833443959 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.837382652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.833639131 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.83642391 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.837541717 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.837018513 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.836224105 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.836607258 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.833913121 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.837065238 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.836630495 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.834527764 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.836965693 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.835603606 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.834793218 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.833815064 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.834619195 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.838023043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.837926831 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.83756334 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.838629121 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.838003848 seconds)
  done (took 102.700097781 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837355697 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838234181 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.835882358 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.837293819 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837798754 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.835235185 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.838620492 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.833680356 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833907641 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837479551 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835667963 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.837921118 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835843366 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.838474134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.837049098 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838065506 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.836057679 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835913891 seconds)
  done (took 34.827759087 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.83646912 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836812487 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.839267857 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835813737 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.835422453 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838259206 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836073825 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.838726904 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839227938 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.837488057 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836997761 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.838161869 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838582518 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.839366067 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837298129 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836024027 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.839636745 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839157958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.835952064 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836342469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840359125 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838892742 seconds)
  done (took 42.198741737 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.839027721 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.839122802 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.854991719 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.860416459 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.861249016 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.874710931 seconds)
  done (took 12.898670354 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836758578 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839408616 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.837844002 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839776301 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839284752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837331503 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837872953 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838278415 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841882424 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838974358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838315513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841950019 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841996141 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838458482 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841844436 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840326534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839269543 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838642315 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83854747 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841986433 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83975973 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841287894 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838888356 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839492058 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839571376 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83921384 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841683738 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839178876 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838958643 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841691084 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84149939 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839346352 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842033198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839155634 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841178855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841880137 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838346642 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841261906 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841647542 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840682826 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842058967 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842415449 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841871838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840045443 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842159607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840019682 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840281477 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839334382 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839899217 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843196775 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842274239 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84042225 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84346995 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842224752 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842976094 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843528516 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840796287 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840289819 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84321168 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840766435 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840839217 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843576635 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840630569 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84181608 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845037533 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840709621 seconds)
  done (took 123.24999683 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840675562 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841892634 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841248951 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841626081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842232456 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841276991 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840053695 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840849892 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841005294 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841305895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844861858 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841526829 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841500374 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841134874 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842164476 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840937379 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841172792 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842295472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842529112 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844699647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841649876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84228443 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842297328 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841496525 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842356736 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84563327 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842784098 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841345105 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841881955 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842594646 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841873856 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842011921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842022296 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842214418 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84289359 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843067496 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842635618 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84304202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843223353 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844860679 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8435265 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846441255 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843019596 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84330788 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843740412 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843231567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842996121 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842622435 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842519248 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842530934 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843959151 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843023583 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84411497 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843615065 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844250319 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844871533 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844200439 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844850796 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843191569 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.847338125 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843885894 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844331494 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846707684 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844354655 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843245458 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845527028 seconds)
  done (took 123.407000766 seconds)
done (took 2517.882792312 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.872465084 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.928313235 seconds)
  done (took 15.576440436 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.012773625 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.964328192 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.847268043 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.897195388 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.846716794 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.841739418 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.859514659 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.847536026 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.847620922 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.847052804 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.847371875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.037016647 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.896034826 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.848074679 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.84730819 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.940986955 seconds)
  done (took 52.012627041 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.850682977 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.852575664 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.862440598 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.854416018 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.851610804 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.864416775 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.886747756 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.854728274 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.88704106 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.866568102 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.921798707 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.86458856 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.850724508 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.901741384 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.867773166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.867486832 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.945651616 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.92914694 seconds)
  done (took 35.560344981 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.930417311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.854958989 seconds)
  done (took 10.57238559 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.879211479 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.891539559 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.866077883 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861623158 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.86061787 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.850246485 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.87058611 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.866121531 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.857395027 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.864890745 seconds)
  done (took 70.450180109 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.859687782 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.853453494 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.85506799 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.852210495 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.846265653 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.850143146 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.852409209 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.849665309 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.523923916 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.890145916 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.860369341 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.860699444 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854688299 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.857019265 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.853131378 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.879238788 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.952899964 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.852039136 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.851087195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.860620611 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.855890882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.906304133 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.870742179 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.858381106 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.887593735 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.524664688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.863424044 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.861140931 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.94392339 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852798001 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.854906326 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.856874424 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.858432801 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.24003594 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.168773961 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.856067828 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.871152296 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.868352863 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.853284964 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.948656174 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.856274166 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.86244239 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.518329423 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.14463952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.968322189 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.900084817 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.171715719 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.87458653 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.858213374 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.885150281 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.860774151 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858815236 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.869350133 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.338873932 seconds)
  done (took 131.471312195 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.851552355 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.204404492 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023113503 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852162795 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143928485 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064865538 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.85307543 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902681352 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.852525884 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.084963387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.110783732 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963359399 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85314711 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.849231425 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850295364 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.85005211 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.013517281 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.928266453 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.854777357 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.850176963 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885333509 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099305109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.981831348 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.854910558 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.883769392 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.068664245 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.98015013 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963388772 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.658489395 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.850752569 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.919372714 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853661046 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.853211416 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.851292263 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.012924973 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.95133586 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943626946 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.855735753 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853352132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.852729998 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.52779183 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058503935 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952731407 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.998570543 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.056682106 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.064919267 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.639204929 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.852153608 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.596122586 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024540516 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.087011715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.086492694 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.980251665 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854559742 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.185389958 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.849266967 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848554042 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104806105 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.99909917 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.951442323 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.849719592 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.846108003 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.845162407 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096006907 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.846842038 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.944636676 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.847551286 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844484268 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.945024661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.94799942 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.98580529 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059241095 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.878836751 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.725449612 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.374919914 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.092894972 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.913005049 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.097198117 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.842633884 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.839974675 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921790889 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.697516336 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.097314103 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.092836635 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.096351537 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879396779 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.56638108 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.840074866 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.070454731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.064856901 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.094358272 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.048210167 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.084446516 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.166835092 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838884121 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.837909885 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.059894241 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.977797642 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.840734037 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.185637085 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077135963 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.407725534 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.861165044 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15040781 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.973718959 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.840595054 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.483751772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837000932 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.0642194 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.882387514 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.839625994 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.837246969 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.061673524 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.813237277 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.837049132 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.489490767 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.902485559 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.83935694 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074640786 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.840022335 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104398974 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.839269276 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078519187 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.413214213 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.871480657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.015282256 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.042190876 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.837652532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.084783127 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.084413981 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955100629 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.060258702 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.46288054 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.836159529 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125595747 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.835021786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.831861516 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.007247637 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.831313165 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.978989687 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.831832407 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.117820096 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854800387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072403321 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830494874 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.085306283 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.864337382 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882896364 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.829314915 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954921139 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.826179983 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.754670304 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.985943832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.827062475 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.822201884 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.375170333 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.824195478 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98245516 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.058633371 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.84975775 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.897532574 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.495964362 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.820228407 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.912098363 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.848558054 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.22202992 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.822451214 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.076130234 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.822331262 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.818034925 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.818455856 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.063725489 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.007718974 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.819492514 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.822860077 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.713111085 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.815281348 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815089776 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.002945186 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.13285236 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.816676724 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023247485 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.816530953 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946798488 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.814813736 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.901649002 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.152981322 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.813015011 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.812932002 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.811660363 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.811114397 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.812096659 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.024536867 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840854395 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.350802933 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.951988912 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082767768 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.124589313 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.061391175 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.858839859 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.81106958 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076283081 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812111548 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.875939042 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.811279969 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831854217 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.043941574 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811367126 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07581505 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.094281921 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.847505811 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.857645224 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.809332802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805086846 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.804996366 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.954592648 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895840614 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.808155278 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.805196823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924342149 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.931677737 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022612597 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.80671366 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.849654441 seconds)
  done (took 894.913213828 seconds)
done (took 1212.33195928 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.804931988 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.805561614 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.794654741 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811093561 seconds)
  done (took 28.959105584 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.816490215 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.812533195 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.815301603 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.813280244 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.816544529 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812745641 seconds)
  done (took 12.632172146 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.827515782 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808675901 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.808790183 seconds)
  done (took 21.187881473 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880433495 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.197955788 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.926526996 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.23392428 seconds)
  done (took 9.981183226 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.813029282 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812139026 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.813350255 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.813212902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.814069968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.815732826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.812221705 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.812544935 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.81548445 seconds)
  done (took 18.064612113 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.211488605 seconds)
done (took 96.778922511 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.250280751 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.029466137 seconds)
    (3/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.293632919 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.139498186 seconds)
    (5/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.063897965 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.939007938 seconds)
    (7/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.960139114 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.0126255 seconds)
    (9/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.979108321 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.849836951 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 7.294074116 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.257212454 seconds)
    (13/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.868173181 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.906887605 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.246267818 seconds)
    (16/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.950209195 seconds)
    (17/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.890533177 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.952810427 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.889326987 seconds)
    (20/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.235403718 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.116181635 seconds)
    (22/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.969287546 seconds)
    (23/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.8860617 seconds)
    (24/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.890242479 seconds)
    (25/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.134177872 seconds)
    (26/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.867764455 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.544359336 seconds)
    (28/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.888340945 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.95910733 seconds)
    (30/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.374936768 seconds)
    (31/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.486552901 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.374308962 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.1019564 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 5.596497433 seconds)
    (35/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.863215394 seconds)
    (36/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 8.43096933 seconds)
    (37/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.974313548 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.196912537 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.968345473 seconds)
    (40/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.216388684 seconds)
    (41/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.962469555 seconds)
    (42/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.041982999 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.946315778 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.863014697 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.964326584 seconds)
    (46/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.447706189 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.983312198 seconds)
    (48/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.547293469 seconds)
    (49/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.966624056 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.888629202 seconds)
    (51/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.250460038 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.4855106 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.035304328 seconds)
    (54/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.03699609 seconds)
    (55/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.287459881 seconds)
    (56/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.006358569 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.123314811 seconds)
    (58/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.30352232 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.870776561 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.874001276 seconds)
    (61/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.873474996 seconds)
    (62/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.186481649 seconds)
    (63/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.897546189 seconds)
    (64/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081720861 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.92596394 seconds)
    (66/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.873022843 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.890082253 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.938308036 seconds)
    (69/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.284225439 seconds)
    (70/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891271216 seconds)
    (71/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.93402388 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.851435749 seconds)
    (73/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 7.545132752 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.341993198 seconds)
    (75/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.771350625 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.985668224 seconds)
    (77/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.938651361 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.965066899 seconds)
    (79/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.852721326 seconds)
    (80/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.571339572 seconds)
    (81/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.0668956 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.531181821 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.159958571 seconds)
    (84/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.88443016 seconds)
    (85/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.965145475 seconds)
    (86/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.854663507 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.086079917 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.984780405 seconds)
    (89/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.194642251 seconds)
    (90/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.853749631 seconds)
    (91/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.07725068 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.546561953 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.967324782 seconds)
    (94/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.929647979 seconds)
    (95/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.170517125 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.807496768 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.830897812 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.894993461 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.128265632 seconds)
    (100/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.861451321 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.969672979 seconds)
    (102/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.240716585 seconds)
    (103/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.061333229 seconds)
    (104/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.021307832 seconds)
    (105/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.957950171 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.859936113 seconds)
    (107/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.926009502 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.95569746 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.952776966 seconds)
    (110/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.196187659 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.185958576 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.857634995 seconds)
    (113/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.038681713 seconds)
    (114/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.386245468 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.191454182 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.889699746 seconds)
    (117/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.325211204 seconds)
    (118/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.952680276 seconds)
    (119/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.858372149 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.760329186 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.981257656 seconds)
    (122/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.836623455 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 2.201017219 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.870411631 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.831087913 seconds)
    (126/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.936260101 seconds)
    (127/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.101185343 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.843708064 seconds)
    (129/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.989957082 seconds)
    (130/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.844611588 seconds)
    (131/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.062582684 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.165724213 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.793016867 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.098433571 seconds)
    (135/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.92681481 seconds)
    (136/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.078809225 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.942443399 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.138388674 seconds)
    (139/309) benchmarking ("sort", Float32, false)...
    done (took 5.564158419 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.845554563 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.196615453 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.915202548 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.946377431 seconds)
    (144/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.842760465 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.950761923 seconds)
    (146/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.98424042 seconds)
    (147/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.171621356 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.831004954 seconds)
    (149/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.45031205 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.178145581 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.873289302 seconds)
    (152/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.926117331 seconds)
    (153/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.035432429 seconds)
    (154/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.106210173 seconds)
    (155/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.878675581 seconds)
    (156/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.844148925 seconds)
    (157/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.268785539 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.868766398 seconds)
    (159/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.437795504 seconds)
    (160/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.849959898 seconds)
    (161/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.033257608 seconds)
    (162/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.85322048 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.874588688 seconds)
    (164/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.948184059 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.837143939 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.39228819 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.725788184 seconds)
    (168/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.330290831 seconds)
    (169/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.928913784 seconds)
    (170/309) benchmarking ("sort", Int8, false)...
    done (took 4.797176189 seconds)
    (171/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.551066286 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.669702063 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.818029967 seconds)
    (174/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.858459124 seconds)
    (175/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.788152605 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.548007481 seconds)
    (177/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.343019974 seconds)
    (178/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.164257769 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.167167138 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.219174434 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.844174424 seconds)
    (182/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.949857519 seconds)
    (183/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.30617331 seconds)
    (184/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.233827998 seconds)
    (185/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.120816464 seconds)
    (186/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.924058243 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.857890923 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.018816505 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.889225868 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.891045838 seconds)
    (191/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.862523052 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.500815874 seconds)
    (193/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.947482574 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.897697892 seconds)
    (195/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.872263107 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.906672411 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.293833182 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.97675665 seconds)
    (199/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.839641942 seconds)
    (200/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.544645114 seconds)
    (201/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.159047692 seconds)
    (202/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.998773151 seconds)
    (203/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.862521494 seconds)
    (204/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.02403948 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.928251912 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.91334052 seconds)
    (207/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.092910782 seconds)
    (208/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.342584017 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.149039128 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.056432222 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.493316736 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.546525009 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.940803726 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.040758412 seconds)
    (215/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.27461269 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.241329695 seconds)
    (217/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023368543 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808257892 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.3623969 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.2365071 seconds)
    (221/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.161941049 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.885110133 seconds)
    (223/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.094228515 seconds)
    (224/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.862459822 seconds)
    (225/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.143712309 seconds)
    (226/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.937920195 seconds)
    (227/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.860473176 seconds)
    (228/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.519053931 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.848854277 seconds)
    (230/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.352202908 seconds)
    (231/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079254417 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.040931908 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.866837474 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.958429043 seconds)
    (235/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.861606627 seconds)
    (236/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.222653953 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.8434007 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.001708506 seconds)
    (239/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.885742101 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.909131651 seconds)
    (241/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.009019294 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.215362376 seconds)
    (243/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.7821887 seconds)
    (244/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.87635951 seconds)
    (245/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.860233172 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.201545574 seconds)
    (247/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.936466995 seconds)
    (248/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.860344628 seconds)
    (249/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 8.091367049 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.033348858 seconds)
    (251/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.891085993 seconds)
    (252/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.827675549 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.67173151 seconds)
    (254/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.959388005 seconds)
    (255/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.954381847 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.180866918 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.841274248 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.035517895 seconds)
    (259/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.852407503 seconds)
    (260/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.902157534 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.133369602 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.875349482 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.933728841 seconds)
    (264/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.075130654 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.20962647 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.948204061 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.144328486 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.423997769 seconds)
    (269/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.426077438 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.858910167 seconds)
    (271/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.831995589 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.492619111 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.994165063 seconds)
    (274/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.046795762 seconds)
    (275/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091384237 seconds)
    (276/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.887165665 seconds)
    (277/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.971629195 seconds)
    (278/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.337760915 seconds)
    (279/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.987308389 seconds)
    (280/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970044766 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.833687497 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.404886979 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.956098221 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.933106991 seconds)
    (285/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.193828484 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.928044265 seconds)
    (287/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.079495518 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.950606552 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.113738742 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.983576402 seconds)
    (291/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.836211581 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.013784605 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.81870114 seconds)
    (294/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.905899574 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.604100299 seconds)
    (296/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.849912507 seconds)
    (297/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.060994593 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.867610211 seconds)
    (299/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.749399268 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.859769929 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.816801255 seconds)
    (302/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.900982034 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.931749463 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.946549366 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.156335089 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.134317391 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.26080688 seconds)
    (308/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.832595711 seconds)
    (309/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.349414701 seconds)
  done (took 1004.406951818 seconds)
done (took 1006.26773002 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.881977693 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848815394 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.833164035 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.852651859 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.942845131 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.859561781 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.840299259 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.833114028 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.878969957 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.878805799 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.827082227 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.854415448 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.829376446 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.828040192 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.826443557 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.83908356 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.146377286 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.859763669 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.844428444 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832699579 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.8406504 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.823567469 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.873828191 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.850772225 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.828968487 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.826470676 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.826594569 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.842958344 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.934716027 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.8265964 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.826662284 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.834461508 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.142733264 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.853727741 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.81948572 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.842955404 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.834108541 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.833384455 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.827566945 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.85581164 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.233578787 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.866700089 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.826281498 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.825314435 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.824957612 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.829447208 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.825872449 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.831666616 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837155587 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.8384104 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.232202799 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.883542639 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.829070056 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.826407406 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.8364738 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.825398687 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.829074244 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841766058 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.844573324 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840537411 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.137215455 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.862047008 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.827406697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.841893023 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.832837982 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.26959175 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.863155481 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829582844 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.238331093 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.873844051 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.269755328 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.87660284 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.827121271 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.840235504 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.857969254 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.144940591 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.854076919 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.825891829 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.832945042 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.824468472 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836810583 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840188803 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.831681156 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.826999717 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839323977 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.855412529 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836547287 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.828164749 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.835886557 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.846693324 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.834162591 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.837991991 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830682154 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.822848854 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.836503786 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.831016286 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.830434106 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.830762832 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.832163984 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.839095645 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.236651888 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886601814 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.824378205 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.824171312 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.82745528 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.84203179 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.237970756 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.870349723 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.84987116 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.875140993 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.829561893 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.136698601 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.863984876 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844241383 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.836550705 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.832200419 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.822782055 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.139934638 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.269368823 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.884314455 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.830676162 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.827150588 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.845125728 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.830052515 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.824949982 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.149253233 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.862017337 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842488432 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.949066572 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.839528232 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860503659 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.827257323 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.832670788 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.858742306 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844972722 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.861617688 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.832370182 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.846116127 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.845013984 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.826237847 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.840281895 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.840152531 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.831752197 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.835706375 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824647945 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.85960483 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843986473 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843323273 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.851636243 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.955651344 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.828413898 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.139112931 seconds)
done (took 287.672337285 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.899389617 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.824767304 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.926432735 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.827223641 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.916211584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.914241559 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.824709764 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.824096069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.823959799 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.201815763 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.82449493 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.825102582 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.824113507 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.825040869 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.917239029 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.828279502 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.824883438 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.167013183 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.829298507 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.899861808 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.826936788 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.825640573 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.827211652 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.199494242 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.824945055 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.824826049 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.900203443 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.828314195 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.164953288 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.826681094 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.821640939 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.16588186 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.919256806 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.847088045 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.838970746 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.835131837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.912082914 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.83449122 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.909771464 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.917675601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.929344204 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.870200955 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.824250615 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.825861491 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.831754938 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.830785557 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.826132882 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.856833252 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.825607916 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.827507193 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.166948277 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.839333546 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.836850684 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.826069953 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825941856 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.851157387 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.827621874 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.830403337 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.920652447 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.8308268 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.892017302 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.201841898 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.238990649 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.83015653 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.825723634 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.82760171 seconds)
  done (took 181.575580012 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.896308324 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.9085912 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.896809224 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.835662091 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.88060662 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.896696417 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834732447 seconds)
  done (took 14.905997645 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.836754222 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.831506504 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.883715535 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.882946286 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.830570276 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.978421663 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.830649054 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.84271235 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.828020515 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.884418484 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.831572871 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.832645086 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.837473983 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.831776384 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881571054 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.84239776 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.9492523 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.832533174 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.831811187 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.980126423 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.825744783 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.836434569 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.882860328 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.843041979 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.827036466 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.83226317 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.409641043 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.826812593 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.825626249 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.82299756 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820058399 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.866540064 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.825250513 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.823439538 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817535627 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.936323931 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.820744895 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.819252243 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.820829513 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.821904387 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.822322907 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.820482457 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.821776307 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.819768909 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.823010085 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.847199657 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.821737763 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.822479504 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.822567591 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821562883 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.873609286 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823147347 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.818906106 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.819345905 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.875325356 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829702069 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822528103 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.818956241 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.823183269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818802106 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.972558025 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.87416236 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.822331874 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.872665903 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822174727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.824554326 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.823813717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.824711052 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.91958176 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.822782669 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.874506315 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.820163028 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.980310094 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.845745256 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822639564 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.825419664 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.825903384 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823798439 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.817178295 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.828961085 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.822392359 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.82442699 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.828551689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818280373 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819855628 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.934269136 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928730587 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.816536804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.831440702 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.827718747 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.81885321 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.875124087 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.818629138 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.815008561 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875987906 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.935986126 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.874570682 seconds)
  done (took 201.42268852 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.822666237 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.825010776 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.813108325 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.834468529 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.816739887 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.811087945 seconds)
  done (took 12.65758796 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.81719671 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.815908552 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.811509726 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.816938757 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.812018457 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.815386623 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.816404027 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816372758 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.818833654 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.814663269 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.812738608 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.814855921 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.815185615 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.813262869 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.81642856 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.809958733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.809975959 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.815569987 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.820377798 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.813342113 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.963298321 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.81669787 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.816688983 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.818572672 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.81635139 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.818677443 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.829793032 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.811649283 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.814884092 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.827965414 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.816075833 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.820484883 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.816873417 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.8176701 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.822275498 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.814340518 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825892987 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.820997327 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.81435898 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.820115474 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.822193377 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.806313222 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.806117698 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.807653512 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.807233841 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.807910435 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.816383144 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.818578399 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.808928829 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.810658687 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.810276353 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.809320919 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.805181674 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.80881224 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.808418689 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.810293994 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.811024327 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.808372224 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.803803249 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.804462849 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.804210826 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.801455216 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.805915437 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.806208179 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.811803744 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.804565757 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.804136894 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.806053737 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.804138769 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.804777828 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.805117888 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.799638937 seconds)
  done (took 133.409806349 seconds)
done (took 545.74468478 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.966437298 seconds)
  done (took 8.692404113 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.017118812 seconds)
  done (took 8.798670224 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.347552688 seconds)
  done (took 10.09060235 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.834108707 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.849606823 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.817917157 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.813558217 seconds)
  done (took 29.082562549 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.907889939 seconds)
  done (took 8.647719977 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.833348191 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.806983713 seconds)
  done (took 15.415411107 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.984576033 seconds)
  done (took 8.726258462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.90365135 seconds)
  done (took 8.667526538 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.825488658 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.838656397 seconds)
  done (took 15.416986024 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.794073334 seconds)
  done (took 8.533791559 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.446375691 seconds)
  done (took 11.280051662 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.83669261 seconds)
  done (took 8.68148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.863896078 seconds)
  done (took 8.60278751 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.893522541 seconds)
  done (took 8.6309662 seconds)
done (took 160.995968385 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.815942495 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.810856525 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.805115375 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.80996995 seconds)
  done (took 28.976478813 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.852522878 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.85159068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.85062793 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.860877196 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.852738821 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.847462278 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.844341793 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.842151048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.861217711 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.853806176 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.850531429 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.849947231 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.850203428 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.840959242 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.853023234 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.851925013 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.864114517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.851877317 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.841829165 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.854103398 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.81783866 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.861770171 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.856814774 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.817937066 seconds)
  done (took 46.117582636 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.01600461 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.888655469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.97157953 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.870753952 seconds)
  done (took 9.484358624 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.868470677 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.87245917 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.881796732 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.92199332 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.950901589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.878879305 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.846295517 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.83950958 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.823704009 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.871159208 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.948584036 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.867150002 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.955891557 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.819704048 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.023904617 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.819470627 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.819118936 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.869833452 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.920890033 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.936357291 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.816549289 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.868130328 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.874631346 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.863612734 seconds)
  done (took 46.897327349 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.815658649 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.824156064 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.825859344 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.81770342 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.819304285 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.818170474 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.826336226 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.817552817 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.838841794 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.819962028 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.817020153 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.817324503 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.816655417 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.817981804 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.818773884 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.830979269 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.830758061 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.81804741 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.820535248 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.826918549 seconds)
  done (took 38.179882928 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.812682047 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.664658507 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.16597879 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.067795399 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.812043806 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.810074063 seconds)
  done (took 31.07107365 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.833571654 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.826976864 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.817872479 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876055907 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.957237744 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.825602827 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.819346558 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.830538066 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.870080932 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.885970666 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.841669639 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.852737786 seconds)
  done (took 23.979778262 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.816735194 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.824448201 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.815352858 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.83879667 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.830693636 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.829140651 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.827190998 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.813030208 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.831277474 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.839382102 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.830288554 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.834184815 seconds)
  done (took 43.676854862 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903130242 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.704862456 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.847820039 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.535718159 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355025133 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.025695751 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.339578671 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.156709595 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.820869239 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.088037708 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.734285543 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061926252 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.070445921 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.818356643 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.907669166 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.256415494 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117224436 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043636781 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847472792 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44743161 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.02737201 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.517719703 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.589385409 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030905859 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.118543332 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.035409059 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.167784194 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.864774118 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040479925 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9470448 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916687833 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907385652 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180403726 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283703028 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025377811 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917042867 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564179033 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.62678927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.89476653 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.690820221 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.7645039 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.044918975 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9138346 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913578718 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846641624 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.508805825 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2547028 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.918290703 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.611139325 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.909819208 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917971384 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999427483 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.915431114 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.723579451 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862681395 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189259004 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.911743726 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918527016 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.47900667 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.968838716 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.621684714 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.855105801 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.002833143 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555905557 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37990586 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.057918007 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.912927614 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912474577 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84344522 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.632682064 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035764134 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053067546 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.927849962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55807826 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216939014 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.904643203 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.992694118 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198580452 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.874612026 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.853587132 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137660266 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867855318 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849365095 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.772556841 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846477742 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.17442459 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948978601 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.528667521 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952933425 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.246494703 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.924066408 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932811861 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917851208 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135854205 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.794756842 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913450252 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.608273534 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196938912 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93701573 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252048477 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846694871 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.91539098 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169288127 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.123305265 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.237569754 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.355058605 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072295226 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914523841 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.003443215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.910917866 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929353507 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.185412746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972945752 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.964843662 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043346075 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877023995 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220534682 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942581523 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.089060746 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.850983448 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180051279 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.229597536 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.168041166 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998474204 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923764155 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.91425611 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659626065 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.536594371 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.137046815 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.915198722 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.492792382 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933484396 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.916965564 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849243392 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.581810527 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.849655071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.026696047 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.13854047 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.939032561 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190223633 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.848179471 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061117719 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.030190493 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.138130887 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.563402905 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.993635149 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174038865 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4866896 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.257194173 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934075261 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934798897 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008484289 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937191418 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.433575199 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.178788543 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.919121802 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.919362151 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.64409309 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.988552859 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916819903 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.920716469 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714925367 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201094337 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939246355 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917399374 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.803598967 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.927333951 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984217838 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920902416 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9258759 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.422210578 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675136177 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.924891939 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.618790394 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153066496 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.926045293 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.635605898 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1074745 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.00183604 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.19251915 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97386353 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.850243591 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.618898378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.620046667 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.917223587 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.850055775 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913516232 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926690714 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927571665 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.115654147 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193289156 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958047556 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.633212807 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.030941959 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928406689 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.920753077 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920547415 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.413606898 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.988774733 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.628470856 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933555351 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054675127 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.930931251 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852987235 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920655112 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920806031 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919777908 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.883958004 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970664916 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.557711614 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371704517 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180840617 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567629519 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937794747 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.658200319 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.045684047 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.949322879 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.623906345 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.081673796 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.922445717 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001548445 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.929802857 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.556752368 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.699061208 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.487837416 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230626297 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237440506 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352285074 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.5029653 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.145972119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257469677 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156156764 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.448935292 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.980718483 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26462092 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86630724 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005488921 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.570840076 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278051049 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93667934 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148492198 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301087331 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.687110467 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080833964 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.133126108 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955116855 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.92209386 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847420758 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.123804706 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075087113 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.69057663 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147712908 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253304786 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630814919 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.03597174 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.919054806 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.615825723 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003914887 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.633311236 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.284270792 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.56950144 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.862061544 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411898848 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.926399062 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366375082 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273239927 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.339909856 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.016889207 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858171969 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932398408 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.932707175 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.920943133 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.900394027 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.836573075 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.202550312 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93325424 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158236422 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.287814373 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186172721 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.825225052 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.92743409 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921762072 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.225221218 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.884347603 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05661504 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.475919014 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.396097341 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931464789 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.85682297 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855696398 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.623791038 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.921786053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897335131 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160297626 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.034154675 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877151072 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386081626 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.266291025 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.177492649 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.9357604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.201008624 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.197840931 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.662358176 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95526522 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.022042414 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625076184 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.621263404 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.144687401 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.161940376 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.723421857 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155758353 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.959163533 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.888910589 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.923247249 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.139778988 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.148998584 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863812529 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174119843 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648060063 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.936087124 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306784775 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.982300567 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.852093216 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.142248154 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.01932711 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93299744 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004667738 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933657571 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.936788902 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938208576 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970094607 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.895567975 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.058657805 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.939238617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015008396 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.980594555 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.509402112 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.934087345 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205760905 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288318834 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.254693973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983872073 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924933666 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931079168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858629072 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0631555 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371520581 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.198942238 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.056535308 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.065275399 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952137308 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62641952 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.284015334 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.249891362 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201140661 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.820913824 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925157194 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.038530249 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.15099419 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936879573 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.137614013 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165469122 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.262940083 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401314252 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.147762877 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.377712579 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20244546 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.302869308 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926800075 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517769219 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.931780846 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.695113719 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.968680422 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.888515893 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217840534 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937766133 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308111268 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95224038 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.120470228 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.44420945 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.57770916 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.292066253 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.916626737 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987706491 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209267115 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319782679 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240028279 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99550357 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94006533 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.624365762 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064054949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.879420444 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190684448 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92755625 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141958732 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.638397838 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.939156492 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205832176 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237469898 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.926064843 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.90151341 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979150338 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.937316574 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152878615 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192593687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183653782 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938875369 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931371724 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.743628843 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205747052 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.987173276 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863260104 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.93321535 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026006073 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179971522 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94783223 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.446884478 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.630609563 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226271724 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.847258551 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951695939 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3981078 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377320058 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252049928 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.449824364 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15662929 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.488846633 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844862078 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.317610503 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.935169691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402310708 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.319228765 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.934272467 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509229481 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055101876 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.205414404 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255001559 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.946098661 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716221222 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.975072923 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155923518 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.525779527 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876404775 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938879997 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.992414803 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.935583551 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058565617 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941637902 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.918003155 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.88341773 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.784688496 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421638999 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.937985271 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.921083379 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.676985113 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.580108814 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050441002 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087199506 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941202088 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.63983961 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.223974189 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.186224733 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.496592971 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.012075172 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.935914801 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934630321 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859784463 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129896443 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.15455832 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236041029 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.343736244 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.055540018 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935998015 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.149645123 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14378846 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.854724104 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.088347703 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394433149 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055455474 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.853273804 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.646864888 seconds)
  done (took 1709.906507544 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936209422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.948279589 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.947807055 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.968358174 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.956717542 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.959409595 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.007856848 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.036555715 seconds)
  done (took 57.625506707 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.93701917 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.156081469 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.951833937 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.942387772 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.961472611 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.94079465 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.148351689 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.953936999 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.957585173 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.953152339 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.944947878 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.947230535 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.308244983 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.965414446 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.939087526 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.968314248 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.960646039 seconds)
  done (took 75.816438317 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.942045182 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.129772286 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.980600227 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.964297765 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.81139197 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.950627525 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.886622573 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.97862149 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.942672928 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.116645223 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.280777852 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.952074458 seconds)
  done (took 90.809994104 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.954078593 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.949715768 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.945878068 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.945251318 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.949763445 seconds)
  done (took 11.626511558 seconds)
done (took 2215.9287477 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.18641038 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.171832974 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.177610247 seconds)
  done (took 6.22320269 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.094468156 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.140812399 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.262681214 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.267403109 seconds)
  done (took 10.642516753 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.231196856 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.344755443 seconds)
  done (took 6.451770802 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.272494692 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.968477278 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.327366273 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.942255387 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.940105552 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945932651 seconds)
  done (took 22.708402753 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.94720099 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.950473453 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.949562854 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.95405118 seconds)
  done (took 9.674832048 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.925744855 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.698923874 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.930778674 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.944155303 seconds)
  done (took 21.375302079 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.698076473 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.346876291 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.691437348 seconds)
  done (took 9.609449381 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.44038173 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.113040538 seconds)
  done (took 9.427636531 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.200611075 seconds)
  done (took 4.076602405 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.976592516 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.219885206 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.474033922 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.472557193 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.563679268 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.767749359 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.252688703 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.183777079 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.392416809 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.406935637 seconds)
  done (took 25.58543808 seconds)
done (took 141.407333324 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.364295182 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974618442 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.145044352 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.298498305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.173320775 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.143495181 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.157349773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.289017835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.82650339 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.822393577 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.306838023 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.204794675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.101410765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.969222733 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.11372096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.969579486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.172495166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.381203912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.026273118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.225877816 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.165580523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.953190118 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.144786812 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.962892161 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.172300312 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.099925183 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.49317641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974936341 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.163515062 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.505743901 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.103672779 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.372118477 seconds)
  done (took 170.655295008 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.951623236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.947810722 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.951268177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.948373787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.262208534 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.949605823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948732062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.945329465 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.004348526 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.975483524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948504442 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.240714621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951124268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.948459036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.948585357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945871301 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.132711309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.952273341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.949870577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.949118981 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.950501913 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.106144688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.951400358 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.095907203 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.116739102 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952049463 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.944726767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956892774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.959051014 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.95988232 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961456196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.950701905 seconds)
  done (took 209.64021675 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.948604451 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.948762496 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950411066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.951095175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.953177506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947996139 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954287179 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.95037952 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.450250437 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456844181 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.964756542 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.95160437 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969458679 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.947559322 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.970611455 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950576594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.97016994 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.973442615 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.976083191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.962884283 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.967252182 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.640880657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.968355184 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.657082854 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.962963523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964601785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.948582081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971203502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.973616708 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.967415295 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.972897517 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.949822697 seconds)
  done (took 222.991776476 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.139347427 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.954939052 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.957455516 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.957243929 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95937835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.95868416 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.962156678 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.141899724 seconds)
  done (took 19.941411 seconds)
done (took 625.110023189 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.412551176 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.261409715 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.138269071 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.985148217 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.243029745 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.019687817 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.981527106 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.051251827 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.703245907 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.052429809 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.6745299 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.999872313 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.766885507 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.004534172 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.100532618 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.045366702 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.528549994 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.611782811 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.161864138 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.061053769 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.151596008 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.915533975 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.063494995 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.729151 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.788919537 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.974622182 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.140411714 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.525602987 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.990426442 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.140151745 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.737558522 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.370136885 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.996461198 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.978332934 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.03902252 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.013931693 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.317898307 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.992069427 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.103847431 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.716632527 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.065826913 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.584789087 seconds)
  done (took 107.025849274 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.949647291 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.949615872 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.944768011 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.94951602 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.950980153 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.950209721 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.947260575 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.946495505 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.944297598 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.948058034 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.948419949 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.950477589 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.948253117 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.949525059 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.948893518 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.947264246 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.948917085 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.950725906 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.947409962 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.947584092 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.94990381 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.949688356 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.963056744 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.945250483 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.949493834 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.949898394 seconds)
  done (took 52.565897722 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.961528905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.112876074 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.205603577 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985578785 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.962499531 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.965315126 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.982364227 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.968238703 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.963728439 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.966018113 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.060288836 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.966638241 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.97909026 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.203201563 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.980679499 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.961009697 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.959982186 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.963596832 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.115304043 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.979781816 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.981785319 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.968282904 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.979300485 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.973681422 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.963063801 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.961183488 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.966652851 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.464841861 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.969637148 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.060300986 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.005762004 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.985282662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.379352745 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.213371736 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.017863744 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.97151829 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.962999326 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.058754573 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.96896479 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.963611753 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.980532508 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.968594398 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.211125576 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.455411959 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.982788703 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.964480348 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.475144623 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.07296376 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001933511 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.973437807 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.204046573 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.979676309 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.966074064 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.965271732 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.000839973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.969839111 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.962578406 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.311463232 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.979110235 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.983052768 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.969176134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.964867858 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125195917 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.973010092 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.119461341 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.972971736 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.972497412 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.961768405 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.203725423 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.98330232 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.452197917 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.978500843 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.963883836 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.060529343 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.126342586 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.505146767 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.979206356 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127645852 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.397743867 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.985841023 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.970375877 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.451801754 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.994731314 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.970126414 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.966111434 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.967276906 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.966400474 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.012945188 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.982819558 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.393389931 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.46167065 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.332273264 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.993954928 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.982580262 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.965812103 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.315886864 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.972919347 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.964914576 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.198987061 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.46817167 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.980387777 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.974207729 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.445155785 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981614175 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.984094698 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.973576329 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.20568295 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.982633759 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.010142939 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.96432969 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.973695193 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.968058385 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.983701493 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.972682492 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.965732788 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.436558259 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.081511089 seconds)
  done (took 243.400965218 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.961483035 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.988123955 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.957474642 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.987854866 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.960715367 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.966904132 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.958520197 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.958571894 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.965173448 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.959029706 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955065859 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.95651481 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.962173104 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.966495177 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.622622182 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.970028933 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.566961907 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.965112182 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.958188599 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.969736136 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.750023995 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.968655955 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.963272128 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.961272267 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.961142126 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.964675634 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.995585802 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.963123773 seconds)
  done (took 170.98026599 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.964190542 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.151403144 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.986439442 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.011135319 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.975851055 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.965947437 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.991417728 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.990369943 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.973893407 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.966277939 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.967570743 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.029868267 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.980704342 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.109512759 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.002265566 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.001343542 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.072344997 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.974961983 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.964801997 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.966075265 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.999175056 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.965682624 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.029734472 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098784572 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.987342392 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.089428244 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.974607173 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.970293036 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.970409448 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.08741362 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.987291797 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.029687488 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.999284432 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.98951405 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.090034379 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.087687085 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076885718 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.998637901 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.975021594 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.968026933 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.969309574 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.952154463 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.087005265 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.987569752 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.968969709 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.07566856 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.988746187 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.973339879 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.978934006 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.967673766 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.982985356 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.986723731 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.039064867 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.10125991 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.005827082 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.998394838 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.993831276 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.259924935 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.980881398 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.06915343 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.964233436 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.088016482 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991764472 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.957377526 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.968141678 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.975652424 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.00124757 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.005305488 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074535655 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.978311851 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.066709584 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.00636794 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.980011561 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.971318024 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.973416952 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.09170649 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.087718829 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.008086619 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.01051255 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.00631209 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.968234832 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.972004297 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.957265882 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.990040041 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979665179 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.091279719 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.08811723 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.979599772 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.97588966 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.976040504 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.975040979 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.999807916 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.101975685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.008363824 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.069156597 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.040475903 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.048982688 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.988574482 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.986780866 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.975887653 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037915044 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.987468042 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.982809621 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.311608624 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.041816543 seconds)
  done (took 213.427049978 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.421647386 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.029671149 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.027130464 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.288450779 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.399614822 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.86145498 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.020124957 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.020071128 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.048223403 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.211855733 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.095639746 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.041924364 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.010601962 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.995529873 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.020792882 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.04685933 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.035312622 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.342839001 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.147870121 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.174722925 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.006586279 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.330494299 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.349946774 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.412912504 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.05946625 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.369995039 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.710002632 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.169835567 seconds)
  done (took 64.556315214 seconds)
done (took 853.840147742 seconds)
SAVING RESULT...
DONE!
