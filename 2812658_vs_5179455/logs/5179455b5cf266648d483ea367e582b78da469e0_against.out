cset: moving following pidspec: 1310
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.42839247 seconds)
loading group "string"... done (took 0.508636957 seconds)
loading group "linalg"... done (took 8.513362433 seconds)
loading group "parallel"... done (took 0.172349903 seconds)
loading group "find"... done (took 3.017058976 seconds)
loading group "tuple"... done (took 2.048236869 seconds)
loading group "dates"... done (took 1.399292239 seconds)
loading group "micro"... done (took 0.19503067 seconds)
loading group "io"... done (took 0.534309277 seconds)
loading group "scalar"... done (took 51.226907263 seconds)
loading group "sparse"... done (took 14.270277019 seconds)
loading group "broadcast"... done (took 1.347023607 seconds)
loading group "union"... done (took 9.872933765 seconds)
loading group "simd"... done (took 3.280805036 seconds)
loading group "random"... done (took 12.034541499 seconds)
loading group "problem"... done (took 2.196908076 seconds)
loading group "array"... done (took 26.055810053 seconds)
loading group "misc"... done (took 1.108979525 seconds)
loading group "sort"... done (took 3.933721583 seconds)
loading group "collection"... done (took 19.141735378 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.603215382 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129893619 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.205605695 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281364287 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230548159 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164487396 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14360622 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.238327741 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.56842774 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203446099 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140626526 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.420119554 seconds)
done (took 6.054129583 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.251179705 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.24060774 seconds)
    (2/2) benchmarking "String"...
    done (took 0.164341559 seconds)
  done (took 1.072032364 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078238796 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157894024 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.111348941 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097120582 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096070029 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.113263584 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096345483 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112198832 seconds)
  done (took 1.456062305 seconds)
done (took 3.531367364 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.500127751 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.903102664 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.510892836 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.148054721 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.310773347 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.292267873 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.269213867 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.201232459 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.095768143 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091935766 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176441767 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.423109811 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.391647039 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.994823085 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.092466278 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.0966774 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.133266569 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.780407961 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.082436068 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.123685741 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.499094505 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.189131893 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115221411 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105311615 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185738821 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.132726705 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160428745 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103145252 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.693904966 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.13439537 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.177199843 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098990276 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159526302 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.186274955 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194960075 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110670558 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.696075478 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.203066832 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101562939 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.104243742 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.67667847 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12161554 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.187157358 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.106955225 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090739198 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182188055 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099345963 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095011136 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095004345 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088731199 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168180528 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456811002 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.104688509 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.169156107 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093069913 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.716809523 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100062559 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.278573102 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132266699 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096510996 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090318202 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.089285353 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.158756222 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.097619248 seconds)
  done (took 20.170459512 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146772692 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165300367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.080901824 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.159658977 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.126899723 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.082744722 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105505054 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.08213231 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.128779513 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182859205 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14352463 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155756414 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095591798 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.09462611 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.133234374 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.253171401 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.112238024 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.124000222 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.092313216 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092890776 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144613121 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100075276 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110798231 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095790695 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174637662 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.206381374 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110857721 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123576834 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091903964 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098152635 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146431574 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144755715 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094771199 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.093730609 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192587912 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.112740365 seconds)
  done (took 5.286267643 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.217629825 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105353632 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.223195053 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197346582 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133710262 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.18278525 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150739709 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267999126 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.203657106 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178274252 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113822939 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114292666 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081697991 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081055403 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094852068 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.449443253 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148696303 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.189089508 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161654471 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111452731 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083064576 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362562788 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.107431119 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.087069617 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.114121662 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065375901 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.120886921 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.1013374 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201111458 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094290786 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.130440248 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083802496 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.118864075 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115274854 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.2133697 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126521434 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120988347 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110203959 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085101959 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225653144 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116028364 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080379852 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116321754 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13354267 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115268621 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.108103218 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123283442 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220917884 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087992622 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10992402 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.053882757 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196421049 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.122969122 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.086656872 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293075088 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126880758 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098167952 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108643235 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.797251873 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131366414 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.084440435 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08127936 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113178721 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155896796 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.0801806 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.43008687 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104800452 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.316655409 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.100698854 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.142461468 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113661902 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.117179219 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086648991 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086383255 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126408123 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085216943 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079726039 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.103184174 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079920241 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104773246 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113419567 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.084510235 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097684598 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146558677 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098580204 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.123244093 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109405942 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105886324 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08577988 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12710147 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083884367 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.08848657 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.164148599 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095525047 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.129347498 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110953125 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.12961001 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10181028 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.232086049 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08622068 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126996465 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103712247 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126291987 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.10066119 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081949482 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103994741 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.085792836 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080744789 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.101657495 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149365337 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.089818373 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098771148 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091380903 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.09517039 seconds)
  done (took 28.474434617 seconds)
done (took 54.599245365 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.449631419 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086383728 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085539785 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103042511 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.085181351 seconds)
  done (took 1.55220196 seconds)
done (took 2.273321725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323923701 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188469893 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104072158 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185806959 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089579187 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.193720912 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177275476 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096218784 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.2030775 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.084044387 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.182858483 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083557311 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103850554 seconds)
  done (took 2.760345727 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102139674 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110013029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103877742 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.121253172 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085540489 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102213208 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120202861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114309555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101483989 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113067778 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087874213 seconds)
  done (took 1.882102909 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097609505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105119556 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099415051 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1177858 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086690468 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099591673 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11702683 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109924692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099333561 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.11399391 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087359449 seconds)
  done (took 1.855468325 seconds)
done (took 7.216065141 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.086511426 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.21143636 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166887564 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207788834 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353491901 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236079064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555944565 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.154409629 seconds)
  done (took 13.83835386 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.168140341 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.110342261 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.095737336 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098486772 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093254885 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115327332 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09444883 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.097255918 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.112800859 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.096062627 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098005613 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.109463309 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097738621 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095015852 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114474886 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097345145 seconds)
  done (took 2.47874 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.147855644 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.145880047 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.100835082 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.101821714 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.115620411 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10295265 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105317008 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.118880272 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.097232523 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099163548 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.121603095 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102311752 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100338643 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.113262622 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10262793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121397097 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.113504451 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.102158777 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120495353 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117403919 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102150077 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099774448 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.117184651 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.102398389 seconds)
  done (took 3.482047106 seconds)
done (took 20.523898481 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.148618203 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101228993 seconds)
  done (took 0.976422722 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139746545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156604278 seconds)
  done (took 1.025531822 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112493312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091109101 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.140323964 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107842974 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.094439045 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110753752 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119107168 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.111175361 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096993653 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095140229 seconds)
  done (took 1.812382584 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095593864 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095066937 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.123557193 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.140628665 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.120348411 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0979356 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099554488 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.096785077 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11790587 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094364234 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.098679361 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.130581315 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.099616474 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128487039 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.099661358 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.101169422 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.119706863 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100098342 seconds)
  done (took 2.694057775 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091194434 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092312599 seconds)
  done (took 0.919584863 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095015517 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090155227 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093948962 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113014224 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094349821 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.092338662 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109652089 seconds)
  done (took 1.4248609 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.617564097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.260780816 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.368390062 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.112299063 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.149767066 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.352611432 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.147462556 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104432293 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10524197 seconds)
  done (took 2.994010782 seconds)
done (took 12.581957212 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090594348 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.221188931 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.614194742 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.115050997 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.094560057 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.161702632 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.287643924 seconds)
done (took 2.328495331 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338484067 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141211629 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081280888 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089781577 seconds)
  done (took 1.386330065 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082680505 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098908746 seconds)
  done (took 0.927101363 seconds)
done (took 3.056741828 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090090178 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.121299813 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.105975486 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.089029375 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.089133528 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088904488 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.106327999 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089765944 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.089952528 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.106861005 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.089467007 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090482286 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089790144 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108459828 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092456739 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091364105 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.107238367 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092577749 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092613605 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091493923 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108282346 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092776494 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.091957394 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107619511 seconds)
  done (took 3.103919066 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107115486 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091330272 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.109972205 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093636646 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094704604 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.113067675 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.096967526 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09377815 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.113702663 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.094808054 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097897621 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.112655067 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095269247 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096655881 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11087532 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09787389 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.096573417 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110517214 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095455913 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09804319 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.111728797 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095167721 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098696224 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095557902 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113509161 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097638478 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.093176837 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.112784184 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097667517 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096766715 seconds)
  done (took 3.779448978 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098583017 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088603545 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092395317 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117573949 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091657014 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.093745281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.106997111 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.092213069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.094346022 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09165386 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111171954 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094067866 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.089824904 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110497833 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.094136861 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096169603 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.119086577 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.091848014 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090573852 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.094707899 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.113216008 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089919505 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090820585 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.111077408 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093554892 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090252932 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093147264 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.110445679 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094647872 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092578438 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.112437495 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097429715 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092084213 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.119268795 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.096577239 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093651898 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097087674 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.107894807 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095199161 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.089370816 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.10687064 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093042855 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09182756 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.116674071 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.094049464 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.09469876 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089987791 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.110520984 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.093741314 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095017605 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.10705858 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.090919969 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095761489 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094383162 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.11348455 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.091531881 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093440278 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.106461802 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09466253 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09288866 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.106829759 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.090613378 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098608169 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0928935 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124084873 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098851208 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.089546218 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.112525123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.094457016 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097506892 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.112361414 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.104961807 seconds)
  done (took 7.88167108 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101976122 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098607793 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.09109434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109965651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092961396 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.092311659 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115165519 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094433066 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095337943 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117813988 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095224647 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094934657 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111295824 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094458739 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094315006 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.095606152 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118000302 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094053404 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.094741392 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112046543 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09421807 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098620447 seconds)
  done (took 2.957327005 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.235789018 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097490183 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140830382 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123906971 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112086181 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.125817048 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09801391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100092502 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115073811 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108548042 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103965272 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117415748 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113453056 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119005498 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105294854 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.104722794 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114411214 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105503646 seconds)
  done (took 2.893554956 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103825564 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09232346 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.131088488 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09697223 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.094478276 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097539006 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115567352 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114182615 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.113345716 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097396654 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.103592269 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112699875 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09755579 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096527427 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095629646 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11387474 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097704933 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096523497 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.120364723 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103040319 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.118045386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104868037 seconds)
  done (took 3.069232685 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10499328 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092099587 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125492246 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095610438 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092069915 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10770727 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097339476 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0916902 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.114985041 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.094963403 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097367129 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095864327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127769705 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097047004 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.101593966 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114054556 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097680416 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.0960813 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113351126 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09595707 seconds)
  done (took 2.808792596 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.168594988 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12263347 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108000517 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116493674 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124709334 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.108910862 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115344264 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126109589 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108410992 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135438808 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108337609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107310028 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132848022 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114909616 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124093025 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116952768 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117577485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134417133 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109259204 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125038277 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122299432 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108234746 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133053301 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108704971 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125121112 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108545237 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106636357 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.130170638 seconds)
  done (took 4.125707991 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09176355 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091175807 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.091350788 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111535342 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095559037 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095016324 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09385854 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112732939 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096694479 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094069447 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.112750917 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095362754 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0948536 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09425939 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111573242 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.095591611 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094345258 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.112707698 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096326682 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094984803 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095307181 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112532734 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.095747501 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095329641 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11332675 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096297203 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094711613 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095203645 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114212771 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096359433 seconds)
  done (took 3.742093355 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.102928059 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102992071 seconds)
  done (took 0.966937149 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098309868 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106184865 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091217321 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.111739837 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103722738 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096850243 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.122737668 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103410776 seconds)
  done (took 1.595520479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.139311341 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.160280202 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.09669367 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102991928 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.16120711 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149735016 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133628305 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.097620291 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.107798537 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085911823 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154762355 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086715598 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093781847 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109077846 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095168724 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102030336 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.114655212 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106819086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103559609 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099664315 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119157744 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101209429 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115703937 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.105718171 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088783297 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.115080551 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097504832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103432177 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109579903 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.097771599 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092827805 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096181857 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101773758 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098391019 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095910261 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.166518779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101346318 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109792178 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096687492 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098766875 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.148765527 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097127171 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.096984561 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.113759367 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100640871 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10166245 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.119901746 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097035875 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089115939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.109382865 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09861136 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092725404 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.113421865 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099361619 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.096751894 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117609831 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.098792955 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089030679 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105696034 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088619567 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091820832 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106095476 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096547745 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096063973 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10971526 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094203426 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092382089 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.092999507 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.112730888 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094131905 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09155676 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124867397 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094397195 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.097096352 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115913782 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094287628 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089289785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116599373 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093521959 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093121554 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.115703172 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122897402 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093812336 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107426214 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089012583 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098775174 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112560705 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096855368 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085396924 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119828953 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095762636 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094076912 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104438987 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093152917 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.089475571 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.117413728 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.090977647 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094104563 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.094363896 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119101982 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098848888 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091138648 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113466025 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099089097 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09833474 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110126785 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.137485156 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108443061 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089899254 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095314296 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117694113 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.091221217 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097827761 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096673828 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117010222 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.094707697 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103652806 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.118873852 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100338573 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101100428 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117688795 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.1011318 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09722008 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113894632 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.094700294 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098072624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118598245 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095874805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.09557945 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.111846423 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095135033 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.094055551 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116614053 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.0934344 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098954772 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108383567 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093480911 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094988771 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097752486 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113487532 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089251054 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09590983 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.11583685 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.097338077 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10058934 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.113775573 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089852137 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.08576073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.112641699 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.090141959 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094958222 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121083613 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091289788 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.096156592 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10787689 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101337403 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090684445 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.116479932 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097054931 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.099130112 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116319892 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087215419 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091149799 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.11305549 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09592135 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090904861 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095743311 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.111883901 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10080602 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086929157 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.115383197 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.087125866 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090344252 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116117556 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095852154 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.097023788 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106922516 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.13604439 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104426931 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115507178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093653184 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092622725 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.114732763 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094658711 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097276599 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116065994 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098911202 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091111354 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110256525 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099996386 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.090349443 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095837848 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110981247 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095582903 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08638977 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.114127636 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086250199 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09832524 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114010791 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09973104 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098871124 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113473875 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094083225 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10379078 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107305683 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099367034 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0855427 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.114792939 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105139949 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100217673 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098604817 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.11407224 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091680918 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094698877 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.121116199 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096837331 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093118315 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.113222134 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088423457 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087798051 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.117506916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098003671 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090185711 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.112458339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09708607 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095675037 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.109767918 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088495274 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098681445 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114546608 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091078029 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094468372 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109117851 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093083403 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101687212 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.105415809 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.101127451 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096592902 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098487562 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.113266593 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093753438 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096100732 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.119346408 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.098069925 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096772309 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110623465 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103688261 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092141999 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111668417 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091245074 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.106338193 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087933754 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.114243261 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095025302 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.09111544 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.108901919 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099007085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099735384 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.117417232 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093172962 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.09860681 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.118294444 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101777546 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092724517 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119048112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090992605 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088130417 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108749969 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08820457 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097538277 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.109044581 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.100057995 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093232108 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092766264 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117178123 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097089272 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110511075 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.100855161 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10449057 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105661828 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088851637 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092306558 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.111627661 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.092614932 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091650254 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095255983 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114542571 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.099253394 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096680643 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.110475563 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095906296 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099424328 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10999494 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.101585876 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099447975 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.117463229 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091708297 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098331475 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108485371 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100224662 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090718069 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.114186748 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.095555684 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094621749 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109200863 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.094276878 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.090599941 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105239005 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092037063 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100364564 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.109996625 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100116033 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093316495 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.091707705 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.111045352 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090757784 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1003318 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.112012507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101116732 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095864965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106704198 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089780423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09919097 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1128356 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101926622 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.090754047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.115556773 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101837853 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098012575 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094816905 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122036966 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104125231 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099531564 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118747831 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.08962627 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092638876 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117740202 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094766591 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.096676354 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115868516 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089349155 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096839131 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.117850251 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09723077 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092942975 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105763237 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097254978 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100779584 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.097064928 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.118242146 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097185012 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095261596 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.110267974 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098963528 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099695468 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113514918 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101939253 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093682096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.116573378 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093364976 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.099966869 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114341984 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090232931 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088109564 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090988423 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.120553268 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089200312 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098978579 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.116941471 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.093492468 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094034253 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118124975 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092185341 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096716351 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117236007 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094337454 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104155287 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.113307017 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094162684 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.099487105 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117962744 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089363016 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093437013 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092244751 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120619057 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093821797 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098724899 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113830518 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10077627 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096699264 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.117965549 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100642753 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100339263 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107153365 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102496849 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098083971 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.114743732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092656243 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094071347 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107680405 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.094334349 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101136923 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09143719 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.122990447 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101184973 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091420174 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11165262 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100787004 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09375977 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11965982 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.092652791 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096354669 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107974479 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097981354 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.09392474 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120454139 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.092769167 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.089903262 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117797763 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101315894 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099245565 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.115447626 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102630861 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088693381 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087674667 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.116447564 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093103426 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103449016 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117694817 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094390092 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092999262 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115930836 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098689675 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099925339 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.109609806 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093902203 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.094952515 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116088904 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094973716 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090049681 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.118331525 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095065538 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09777184 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112513205 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091469267 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.09339497 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.120110832 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094420131 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091409957 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.091828162 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120637871 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095048524 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09158563 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108179086 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101714047 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096554601 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121943775 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092768716 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094877234 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.112293305 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097164831 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104024351 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.112165156 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095576934 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.093557914 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119133893 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101544274 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08798877 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.11123961 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106617574 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099490735 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.115863657 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099480765 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094400856 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11954467 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102858206 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098003388 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.088647912 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109678913 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093806554 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088691015 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.116583642 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101118862 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093314189 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.11187282 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099638199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099137292 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117877762 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099191975 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089833691 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120416187 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093982121 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098601165 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08931996 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10961579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098943931 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100643213 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113197983 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.097031109 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096341274 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11713073 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091847469 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.093338233 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.119020426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100616722 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100429232 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113173123 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095701718 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098308892 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124965383 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097794737 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095058479 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102322255 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123744672 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097726301 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094173133 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121590682 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100944421 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097125116 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.122600711 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094098783 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.0952015 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121571968 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102642314 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103919648 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114692466 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090870275 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099360992 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.112743463 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091345241 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099608736 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121909774 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102419656 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094718371 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.111173463 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105569296 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10088048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114104549 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.09429534 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093900475 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.118357567 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094314818 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099665406 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.110396092 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105003281 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103451696 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100131302 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.12426814 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09129954 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100675525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118081547 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.104166292 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096334297 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.109262289 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091459266 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098162861 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.121128585 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104245939 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099244987 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098691498 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.119969482 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097179484 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095454004 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.112989673 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.10259803 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.100021874 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.116591217 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09852189 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094158287 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116760143 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098887531 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.100949167 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.121154393 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097524476 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105090591 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.12099013 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.096843746 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.093563266 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115665487 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09913848 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09699451 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099759814 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112782356 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.091367105 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101525771 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.123324456 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097098236 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103081306 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.123354865 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095338474 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098484793 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12225564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102845324 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097017848 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115258679 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100369324 seconds)
  done (took 62.052322479 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143760793 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106483496 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117976536 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098985813 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114752765 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119560606 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099397906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099865896 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11890969 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10779746 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098178618 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116667876 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114437014 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.13789906 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115177485 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107585805 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117651078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10010719 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098463528 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117301569 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113335276 seconds)
  done (took 3.179519323 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116665603 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111683986 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129250033 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112794756 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104352961 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130395395 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109200127 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129477663 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113080543 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106228099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132566037 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108879409 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.127766717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107357023 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106916578 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126580361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112561296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124711226 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.111456891 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109588552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127282866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110163334 seconds)
  done (took 3.385931505 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.13049818 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101284782 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095674154 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.118278357 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102233022 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098118337 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.12020694 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100435547 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105527004 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.111074809 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090450651 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093973292 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096758073 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119336549 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094280109 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098819395 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124739385 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103919574 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103389052 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119182245 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.089904691 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099407212 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098589076 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109284174 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.107857736 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104382795 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.11808661 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.101955822 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089217433 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120191151 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.09966706 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092915165 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08986784 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109878555 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090796018 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100560714 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119384387 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099261232 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099606121 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089097194 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.118622172 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103179103 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089186291 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.119077256 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.100091817 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092228213 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.120652704 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099521659 seconds)
  done (took 5.819237548 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129078678 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163111011 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103056289 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.136614184 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.134658311 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108620867 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124063654 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138952391 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101032556 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125382687 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.115601753 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134147734 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.34539997 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105711279 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.124379708 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104277304 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104850359 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121133632 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108761579 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101798969 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.127239863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10404317 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111315795 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.1339036 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10402338 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101826875 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.122275009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105450061 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.130670583 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108021006 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104719438 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126006376 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.113286905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104347079 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123200009 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104278008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112308171 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124152574 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103104709 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.09954878 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124346874 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105597952 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102672317 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136270296 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103255308 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.122956186 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10376196 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100501014 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.130073556 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105247805 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10935064 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.132540742 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10552195 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103943347 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126972788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.111853976 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.126749979 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102638243 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104108616 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.130227782 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101331482 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105426565 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133034598 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103985971 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106869233 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.133716851 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104621745 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124106324 seconds)
  done (took 9.033150116 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132257425 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105339673 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134012718 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114834464 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104965189 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126658712 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106605721 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125968972 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107437053 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11026647 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126157522 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.196504266 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124075141 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110614414 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105313188 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128362922 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106523894 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104744942 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128437616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10601325 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125263087 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115419198 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105530382 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134207922 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118039417 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123256351 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106432078 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105507764 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133803396 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107829062 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117104994 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126582177 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106540004 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.134494474 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118351116 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105771677 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121648533 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107653145 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105830398 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12719783 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103970113 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114360055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12835861 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.104164762 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106623821 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127768531 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114691483 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137256918 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112443606 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111091777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127368679 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114294015 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126939816 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108470344 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113127793 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.143606236 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114669323 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135174966 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107429476 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114856617 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136323276 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120742761 seconds)
  done (took 8.200285996 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101528314 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10055399 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098444237 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119632649 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102133045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100642124 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119335126 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101108496 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099983837 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098958685 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119998176 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100500822 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099501548 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119419 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10171208 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099760285 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09930763 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119795706 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099953833 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099700429 seconds)
  done (took 2.935703897 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110412081 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116191585 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121366748 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108460045 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101124677 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127146715 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103478823 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102976965 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123606973 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102900369 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110448631 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129173836 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102693715 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10709079 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130093604 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10883356 seconds)
  done (took 2.641354545 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120612957 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117881632 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.186197421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103424501 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12337159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109097774 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101966253 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124610251 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.10085185 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107627459 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105519194 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127056202 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.10327722 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102877439 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.12376882 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.10519327 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099761368 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126826197 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102511377 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185721469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105543255 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10435499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.123859672 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105764194 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103492576 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128498791 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10890734 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10151983 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124955262 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103843961 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103862478 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129101434 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101859849 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106688468 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123338928 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104274998 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103064914 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102098328 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125854217 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102712337 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.103293282 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124740352 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104324872 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106319264 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.12252075 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105062886 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100368819 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12882385 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104545521 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103764797 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123251483 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110805807 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106429245 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.130315826 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109336396 seconds)
  done (took 7.113143678 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113346417 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103742185 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133800045 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102110272 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104101058 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102836196 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125339412 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105466539 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103065944 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122879536 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104208707 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104556741 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123324908 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104342102 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102641923 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.124683713 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.10177839 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102841406 seconds)
  done (took 2.824087873 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107616775 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102766579 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10587798 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.124407676 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.1026613 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101548215 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122312699 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101969173 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100974916 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123228955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103771563 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103388025 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101286068 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123464327 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103508952 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102234282 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123053725 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102022117 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101974461 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122601936 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103693472 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101500832 seconds)
  done (took 3.228234748 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11335087 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181752195 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109054938 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.190876574 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098703105 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.09753442 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12880943 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.09894796 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113926753 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120579603 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097624155 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.096886348 seconds)
  done (took 2.290776191 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130903166 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139293255 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124524987 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104436047 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110785588 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128991403 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107799465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106253373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136527816 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11854372 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128239822 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115422954 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113948577 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136345278 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11157805 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133116627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108312368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1063975 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124752178 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122503816 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107596909 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136723186 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10826026 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128179109 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108495745 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114406334 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136459491 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118619092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12800427 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114947696 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110511418 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12869437 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115607429 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138641164 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10489852 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113791893 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12794341 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12301658 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111781571 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13769915 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102512662 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132430639 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115590543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113514101 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137219644 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106812185 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133469444 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108795083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107143534 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149838243 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112495429 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136745135 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113585176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115421773 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136723779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128605499 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139859429 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115085392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131018206 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120529241 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115487431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13429246 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116012468 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140011011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112571156 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135369971 seconds)
  done (took 8.881652035 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.14561562 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104142736 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12873643 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120048142 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136896776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109172147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108591948 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128976913 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108673601 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104506751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171723721 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107855646 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136956884 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118471775 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107914707 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129138787 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109573091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115561426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12707384 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128313808 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129816095 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117288745 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115195611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140414354 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119438737 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133516581 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108303393 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107975128 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130505368 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109658226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134280664 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109221897 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11581377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.12658795 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116443597 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107110995 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129799266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113869869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107707141 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134842315 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116346033 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14430395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109082412 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108036029 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140927209 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109270035 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129112385 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105983941 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10839809 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124775588 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120101947 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118213544 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.141506869 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116234266 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130991432 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108762255 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108005203 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130171102 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109042412 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112514783 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137291779 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108929409 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150692742 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10846544 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107347367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13958493 seconds)
  done (took 8.846716488 seconds)
done (took 168.104122978 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148842223 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185054474 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143589534 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177699298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093807038 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128903681 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146995175 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146061003 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092756496 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116048917 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093896481 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09636797 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.183340158 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094656706 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093944139 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.117854177 seconds)
  done (took 2.904927297 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.192026874 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305947607 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108367021 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120491523 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100319565 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098604669 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.11986587 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101556114 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099113922 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.127490801 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100075235 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094715271 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.128601659 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095658104 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098684599 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120020414 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107741478 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098118921 seconds)
  done (took 3.072592325 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120413264 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142771225 seconds)
  done (took 1.123806901 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129592284 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211654487 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278948295 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.167672266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12027827 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139670574 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148010338 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133227998 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188623514 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134108716 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11328932 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097565214 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146151912 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104872352 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135932233 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098371053 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127729689 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134835368 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11336308 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100526219 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143868439 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103158149 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103772779 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135518261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178722781 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134327823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103575436 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102018541 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124138957 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113483453 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127448409 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.116959854 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111510252 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178539763 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123559656 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154914028 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.127350569 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101755959 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.11304954 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.121081207 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104252653 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.102468689 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.133796318 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098285411 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.10223259 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.127841903 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103932092 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.123488821 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.10855448 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106891936 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129492921 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106242435 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.174207177 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107255936 seconds)
  done (took 7.831156586 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.861787853 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141534862 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099839525 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.006194198 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151027975 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114385982 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.851159873 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145315446 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254707416 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.884115331 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116562558 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.132796634 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23534049 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258155927 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.288436336 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.357312612 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.722277794 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114710431 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.129128123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.162544402 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109068012 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.147974858 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119496681 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.516170465 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100785207 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121238655 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1099977 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112482702 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176580661 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.099688362 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127323452 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196510724 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269529878 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206564849 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123462421 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100061364 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099170566 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183619066 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270647185 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216765486 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.19616908 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097461237 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099297909 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130967303 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119137319 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118171795 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157720274 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.189875123 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189572625 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103988027 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.136834005 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111736419 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128620958 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154980993 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120309074 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.358916676 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361069493 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099811258 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131182295 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116809452 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268192967 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123626622 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.235254159 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127640374 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212919639 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121482332 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.841761641 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.161077422 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122470528 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108755173 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.10710545 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129554661 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108195573 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.190734085 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.47611084 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137562304 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105435947 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120565102 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230972478 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102477729 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10025179 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180652094 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102012561 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130910091 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115592043 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133255295 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165866004 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.269603211 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134684097 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111387731 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10555801 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13543547 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101431094 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23356235 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225558688 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174452806 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210379049 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131962984 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179552561 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.162646041 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130240735 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.186485315 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108779521 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116229025 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131802687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222655309 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155577437 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.106383743 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10702745 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130935798 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137656405 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104681451 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13166551 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185368462 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.550536676 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162914027 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.118664301 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107105728 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11067056 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178900009 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10801586 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262518393 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13287529 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.183353208 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109702506 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098195998 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129560234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.158608419 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134302285 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109457535 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130732318 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.1110531 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279332846 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221456093 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114638545 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249630542 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.200739155 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108662483 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192177738 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108626402 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188660492 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133757072 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111620044 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101705034 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834493818 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138775573 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110052705 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127883621 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185297372 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122488001 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104588645 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100802453 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098790021 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821833023 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127385423 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100443621 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103833654 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.130499556 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109694491 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129707734 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107968962 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177787176 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243639218 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113850886 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129877412 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101761122 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.17864795 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102821297 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101198193 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124092247 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102199834 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109385593 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128093432 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104922538 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191411031 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.174674999 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227541297 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.652088614 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101739011 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100975801 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.261698932 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102242955 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322034952 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108611446 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.255337743 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16088606 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.121066319 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.359387999 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185442264 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184562387 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125401129 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167126945 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12099356 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110383096 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179945446 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101416504 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128553261 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.156019975 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137741933 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115201793 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274070087 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123358676 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22841235 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121869848 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.164747423 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125955661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109125513 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322748796 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123955518 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120979757 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178164853 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105432652 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123700619 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.612229982 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125034785 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113773417 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130374283 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23472852 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.183179894 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111586387 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109931978 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137916112 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178734291 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213110441 seconds)
  done (took 47.731948149 seconds)
done (took 63.518547383 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265247899 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.176743654 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.279582983 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175907147 seconds)
  done (took 1.854048376 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.24141033 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155659136 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.199605157 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120717511 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.204683587 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11992208 seconds)
  done (took 1.926628519 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.173143944 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166986618 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144340608 seconds)
  done (took 1.367016283 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198821065 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214007244 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.321835739 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255683971 seconds)
  done (took 1.961896641 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.267245084 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115903814 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12466503 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204361141 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.217256435 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197956258 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122561185 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.169835432 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130682669 seconds)
  done (took 2.474472804 seconds)
done (took 10.474361934 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.380759024 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.338424233 seconds)
    (3/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.300251024 seconds)
    (4/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.145442991 seconds)
    (5/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11695879 seconds)
    (6/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.3752486 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.191742436 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.147034719 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106543736 seconds)
    (10/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.126015624 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.100945869 seconds)
    (12/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113397654 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.112606503 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.224889332 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.258335858 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.214478061 seconds)
    (17/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.287186887 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.211351644 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134243058 seconds)
    (20/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.325758417 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129442369 seconds)
    (22/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108483943 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.120407254 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.22067269 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109288646 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.125245296 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102976041 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.296615192 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.244353072 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.155106392 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.090145651 seconds)
    (32/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114534672 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.17274983 seconds)
    (34/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110440976 seconds)
    (35/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.180312565 seconds)
    (36/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.270563267 seconds)
    (37/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.127507789 seconds)
    (38/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.208329766 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.120419936 seconds)
    (40/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.106808115 seconds)
    (41/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.143855932 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.102531491 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20516156 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.158093273 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.108995936 seconds)
    (46/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.099004022 seconds)
    (47/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.103011133 seconds)
    (48/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.129755091 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.08250454 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.134974106 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.352726869 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.228967984 seconds)
    (53/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.134518181 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.190329328 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075640056 seconds)
    (56/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.132125867 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102616823 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.076671384 seconds)
    (59/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.190743342 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105542933 seconds)
    (61/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.140903335 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.190121766 seconds)
    (63/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.144334599 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.211477123 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120983251 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11927102 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.13786972 seconds)
    (68/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133503313 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.076753369 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104066236 seconds)
    (71/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.292992968 seconds)
    (72/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.128188328 seconds)
    (73/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.168026362 seconds)
    (74/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.243849798 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082764053 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.140856198 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104920075 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.128591822 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.099948999 seconds)
    (80/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.184254167 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083297049 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12395906 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.109268108 seconds)
    (84/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.165786396 seconds)
    (85/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.129558849 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.178411512 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083601657 seconds)
    (88/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.135871004 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.120023479 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.209277406 seconds)
    (91/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.235367683 seconds)
    (92/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.08286224 seconds)
    (93/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.083424469 seconds)
    (94/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.146066449 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129151249 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.129881555 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099735923 seconds)
    (98/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077066169 seconds)
    (99/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.100966677 seconds)
    (100/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077114372 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111805325 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082550787 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.124263121 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.111271227 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.077192539 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101825211 seconds)
    (107/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.146290847 seconds)
    (108/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106863858 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.128869213 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.149843861 seconds)
    (111/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076800025 seconds)
    (112/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079650652 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.211744042 seconds)
    (114/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.124821202 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.101614164 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.107189598 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.102402569 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112683833 seconds)
    (119/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135657831 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11186312 seconds)
    (121/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079575462 seconds)
    (122/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.078008942 seconds)
    (123/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.159976572 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.080840221 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083297286 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.079566026 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101910175 seconds)
    (128/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10163303 seconds)
    (129/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112771295 seconds)
    (130/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083682967 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.083521991 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.10644003 seconds)
    (133/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.080082157 seconds)
    (134/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101251669 seconds)
    (135/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.07724654 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.075702006 seconds)
    (137/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133277608 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.104290944 seconds)
    (139/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.082703314 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.146710692 seconds)
    (141/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.085046801 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122988006 seconds)
    (143/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107556368 seconds)
    (144/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.147520484 seconds)
    (145/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079621061 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.102080933 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.102406969 seconds)
    (148/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.101365798 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.159196567 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.132748201 seconds)
    (151/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083305093 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.083152398 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083874199 seconds)
    (154/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084982904 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.102584121 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084881601 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.100062265 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.101789088 seconds)
    (159/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.133659395 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.140251054 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099882227 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125485081 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.103352941 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.079145244 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.108117717 seconds)
    (166/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.101420293 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103491749 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.122528873 seconds)
    (169/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.07934043 seconds)
    (170/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.15205262 seconds)
    (171/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.080500556 seconds)
    (172/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082343076 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.122638438 seconds)
    (174/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086054713 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085117915 seconds)
    (176/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077266116 seconds)
    (177/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078760529 seconds)
    (178/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.076403032 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14670891 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102860434 seconds)
    (181/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.082541231 seconds)
    (182/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106152639 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.104301933 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.084133181 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079225349 seconds)
    (186/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.134787626 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.080914936 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083588751 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.07672348 seconds)
    (190/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083115983 seconds)
    (191/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.103318115 seconds)
    (192/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07748047 seconds)
  done (took 26.271977632 seconds)
done (took 27.164368012 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.204837709 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.125221177 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108664393 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10794876 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.197864264 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116159463 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.147458735 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111681307 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119461595 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.131639276 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.100908209 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121903463 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108012166 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202572534 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111687197 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126403229 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102462655 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119596085 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149095553 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126062685 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.20055326 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103956975 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119952032 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125974237 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.176184605 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12719801 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.109810338 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.110916773 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.146340848 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11140202 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.110197634 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.125071224 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126626344 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12559988 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124972408 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111774135 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102006901 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.08372998 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135381313 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112889465 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122263364 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.13468788 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110952228 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.102035468 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.136770946 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.111057044 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101388599 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138408472 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101321266 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110951658 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126799631 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.12651126 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10955212 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.122787338 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.10192664 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102876321 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.142181278 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103684186 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.122823048 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101003261 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127183086 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102534872 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111371709 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.1262849 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111362074 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101878638 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13757874 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.113990568 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110899173 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.12731364 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103177874 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110560589 seconds)
done (took 9.770275011 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107084146 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146035489 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199608558 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210126854 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129531182 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.139838826 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116967339 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126797715 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138705222 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121076318 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138211673 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.158889559 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.182472354 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.141668805 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117725005 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113470615 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138858226 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111490772 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206722857 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127373815 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.150203423 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.118895833 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128607787 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.143199655 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.10654732 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136763471 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134930427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114459218 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104676306 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139376806 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126018554 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.105880043 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134154509 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125529268 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.147545239 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118940685 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116460932 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.136986723 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108273388 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10666886 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137633448 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.121817803 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10535328 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141834743 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115017739 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119988583 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137314329 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119983499 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106358224 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136819558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107328874 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131211009 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.142760163 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122766088 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117139645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143901013 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119369445 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117381535 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134000295 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119146915 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105208194 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131058406 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108669685 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.149159621 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110203118 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119283101 seconds)
  done (took 9.516438301 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125627044 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135313692 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141026355 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117813097 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110213273 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123908903 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101019954 seconds)
  done (took 1.790822758 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102755426 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.182872272 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208714568 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.207615993 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179537117 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217727239 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148582003 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102685836 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136195114 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136975688 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184150466 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236972132 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11155842 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142086513 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185122948 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128563079 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.210460031 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.103738848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116296133 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210108661 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118721401 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157534582 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11524817 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102135598 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20470445 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103495144 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26156043 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118729915 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.137499704 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116810684 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116142085 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.205787096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.206805303 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116581263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109871313 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208428279 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203710717 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116169691 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219067078 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106395696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.20510134 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.115777596 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116446297 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142522072 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117373785 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195666631 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121042496 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11675853 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.14142858 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.187120314 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.1384765 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182172568 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138382767 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117499799 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112546571 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.144684987 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123785865 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117526121 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.214142619 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118719161 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209460367 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210023082 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180778673 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.211573908 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124273535 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210632651 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.203371116 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115809317 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11028001 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.143493004 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183575694 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140983758 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114453339 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198915313 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119157774 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210789276 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.209297342 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115097869 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.114560716 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.129866594 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115719438 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103126953 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200413674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116047078 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113584431 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.146334988 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114916071 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117162509 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.134337439 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.124898555 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140232805 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116046337 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121537972 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141482514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119354529 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21596719 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113454856 seconds)
  done (took 15.616331518 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106962233 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104359779 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107202518 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129772346 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.10519285 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103430458 seconds)
  done (took 1.615427091 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141437001 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117365906 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149959569 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118985162 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.185850218 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.191037429 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.21842234 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111742902 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158794725 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126343467 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214197891 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.192457094 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.217035985 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118913577 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.219751091 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118162317 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.220855071 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.115534237 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151583743 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113815974 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.141929113 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121650787 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115152446 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.2064049 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118471927 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.142762237 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.111959198 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125536471 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.150447392 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112953023 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.119448847 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.143108174 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110389203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112138156 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.220472724 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108624771 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140505851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120747467 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.119292171 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144867936 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.218640322 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115593019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.123811267 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145971049 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113098417 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109980525 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.146849298 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111953262 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.221786888 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.139902714 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119626135 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144810841 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119255433 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119528161 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136779502 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112000159 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144084069 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.196864104 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146376228 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.111475371 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118201922 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145976815 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112924922 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121385971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.145837471 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123419533 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110649408 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143758741 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115398874 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117709207 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.146167747 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117175884 seconds)
  done (took 11.162337473 seconds)
done (took 40.630747806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.554309564 seconds)
  done (took 2.506620569 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.881317322 seconds)
  done (took 1.835356282 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.808081518 seconds)
  done (took 18.791869837 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.420176601 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.463315751 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.120473415 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.147101469 seconds)
  done (took 3.104813112 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.816458763 seconds)
  done (took 1.791283875 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.279401142 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25837181 seconds)
  done (took 1.496883719 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.704626326 seconds)
  done (took 1.670421831 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.489935895 seconds)
  done (took 2.445363816 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283945352 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239116938 seconds)
  done (took 1.493280657 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.612349401 seconds)
  done (took 1.580753301 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.477522935 seconds)
  done (took 20.448515405 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255838577 seconds)
  done (took 1.229723046 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.287445839 seconds)
  done (took 1.26232904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.510951988 seconds)
  done (took 4.489275795 seconds)
done (took 65.111770175 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114866365 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116538041 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.140255194 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.116932181 seconds)
  done (took 1.452756382 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122680448 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117670252 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.144868389 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117337292 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124564032 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117087696 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143471814 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120502444 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.118479462 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145972588 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.11904137 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117527443 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145285028 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117104399 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.11464467 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146912429 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121176069 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.11722539 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143514744 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118860702 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118597479 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144386553 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121842512 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119601864 seconds)
  done (took 4.014996102 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114599486 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108583978 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.109416989 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.132376868 seconds)
  done (took 1.445131147 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.125619154 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12870479 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150927996 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124478711 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129742081 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152942088 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116399085 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113262072 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.142055845 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125751839 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131499495 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.155701113 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128279729 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.143226388 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127928937 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111400763 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117815947 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.153404804 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124016173 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150249726 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11845459 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.122390536 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147020313 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127506532 seconds)
  done (took 4.145816207 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190746372 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129552162 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172314965 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161155795 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174956304 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.115606807 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.142954099 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147534813 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122369617 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143802571 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.12059998 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160436475 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148384222 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119879983 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117804204 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147680639 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128788305 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147154464 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.162843883 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.120213105 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149607534 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.129206034 seconds)
  done (took 4.13544708 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12027686 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107487785 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.127951162 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.109158669 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120877602 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135270689 seconds)
  done (took 1.705899163 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107923639 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103337425 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103090869 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127085081 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106342079 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101776844 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127443662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.103934688 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102840847 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103955321 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128103536 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10210534 seconds)
  done (took 2.29750236 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.326248047 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107712316 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134963159 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111246656 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.113330348 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.104826181 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.145414366 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107524561 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265018253 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103956257 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.1302019 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.19619757 seconds)
  done (took 2.833920102 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198150232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148100214 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248375024 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.365688027 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18232651 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157578581 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.288375475 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187947613 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176043344 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160651769 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181024696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184209327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150645095 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208059257 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13740666 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.182501315 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1592645 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231094974 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165656228 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20731326 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180946984 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194918549 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185722147 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172876021 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137709905 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183165368 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11936924 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125922992 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189533123 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16018007 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19492928 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174098587 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138838752 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212051883 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25028348 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170436992 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269375479 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157219862 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167895554 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211364316 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252108578 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139302422 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209691817 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176034336 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128008457 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2068501 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151622394 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209147069 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133473236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167924935 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178726349 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202868758 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170848102 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161821493 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302403635 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133917645 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165154606 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164671759 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210174519 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193275479 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203126553 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120924464 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201757465 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211843278 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236042434 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140722207 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185138975 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123709849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188076352 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201811818 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204259755 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182714871 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223155527 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129956877 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166149397 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193118732 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175275835 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200388626 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192739089 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118734245 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173643243 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132397624 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123856191 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213283666 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120223101 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239931356 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128782003 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.342568166 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209284926 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178853867 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159471248 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183582213 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160641099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171696968 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.10000772 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140455294 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.185705296 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153417259 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153166132 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153261858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164774933 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125237404 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148708329 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.146556469 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164544905 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.158904282 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161325559 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192902312 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.129764319 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203638712 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145621757 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.186737179 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164411728 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215884483 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128053713 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158384469 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241265382 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169057237 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.162234466 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173252259 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219818788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147405692 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161208676 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160958147 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217295673 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139570688 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221598891 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161684715 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133975926 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132856123 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197146237 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182163567 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.152902573 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124279989 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189621615 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21234388 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125268269 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136470561 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203223636 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155965762 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124220871 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134653692 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159461387 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14133437 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.145347493 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.164926699 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148908086 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19040646 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163088869 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180038625 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130607016 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195332011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128545509 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.192723634 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144359583 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.144604174 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169955745 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220618861 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126536475 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206289746 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1858266 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183240927 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196739599 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126819914 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208491034 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125423509 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.147553012 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158151912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197049361 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158108346 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210672001 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205805851 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.162170095 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187323177 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172880338 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16517012 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.20742196 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153279765 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.169763558 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16987978 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193183828 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120407918 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147949357 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.127492013 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135089009 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155006466 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13649983 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200031429 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160621325 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205547107 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191916772 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137405414 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216037814 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1243302 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183194706 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.173714637 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163453823 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18623365 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21552033 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199576704 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139720575 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18423881 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121322792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124416872 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.157296324 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160344704 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134083042 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159383457 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137548141 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216010924 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194730382 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146095607 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217282791 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187818634 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198069278 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.146422988 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157602823 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191715401 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164591372 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.183992373 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154714794 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.156274358 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2174903 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136842597 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216493923 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191652254 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174685552 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218155827 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.188260879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129603964 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145949247 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186101158 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13504682 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188779872 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144297766 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155569655 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150723271 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.162461211 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139098943 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206765172 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141115052 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20160823 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155379374 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193585861 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123131105 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166686476 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172848118 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170889079 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10336597 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192815567 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190674326 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174779227 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151942272 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197551579 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12813341 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.341529817 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182029321 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201313971 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159711864 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136529412 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193348445 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160186863 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185471216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182541263 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168294016 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202439694 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195760364 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140618268 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158466467 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146899556 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176344973 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136100981 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.175574035 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160263866 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.167312715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179177518 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162512251 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166848246 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200228107 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.141857771 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175314066 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136851369 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24678177 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163564262 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197795296 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.187974529 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.163371853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208060009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123434706 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12531681 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.158323786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182752839 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155236392 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172948356 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.194889354 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210591883 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198016697 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161569315 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137251075 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.154818495 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163873261 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173762958 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210936931 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13288473 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13573972 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212181368 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.124526843 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158047628 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157906049 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297532972 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145294453 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196945113 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104990629 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.294472222 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127607798 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158039117 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159075253 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194185581 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.131000977 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.206132641 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172099394 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164645911 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1608024 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132079239 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208183104 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211792162 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161021695 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198758833 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.169187283 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160015469 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184378117 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172174303 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171850278 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145321374 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183922686 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190969644 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.205818845 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130853242 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194389969 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165725064 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198154311 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194319365 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13874172 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178065364 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154088055 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159569532 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163966397 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123727231 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185882934 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.168294226 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157333672 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17199431 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195503628 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129099326 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153186862 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144514209 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189741066 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13807576 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127127429 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206419814 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.154133649 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177532783 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230975526 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128646853 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19235175 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145178141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128468179 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16429822 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141977304 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159728263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172747894 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203947485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131051088 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199448182 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161145851 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188139195 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154635185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168392934 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.332987311 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126325867 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215059321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175177383 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193005796 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176473036 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171829287 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196550542 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146837259 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189518375 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144192116 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245225484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161571228 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.194619301 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129932762 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169274416 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137266993 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130630191 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179340325 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164522491 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167333746 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135078654 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.192798052 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143134476 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.172744609 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139841265 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225750595 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149040813 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209322432 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211724585 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1376057 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199837023 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17220922 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155550817 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16162129 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197933543 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141576977 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175220884 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132960213 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136619247 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237487617 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123977088 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187128863 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171581802 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194248588 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167391302 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.162181113 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173472854 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165919105 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171890131 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153473573 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152038174 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19697807 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13310031 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153447708 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169897469 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182893167 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.162769174 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168024207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173565969 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217483557 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123670951 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132350532 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298313857 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156809778 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219291989 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.132140433 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164088546 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142634709 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184022379 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162184472 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195967468 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129635141 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156834574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144667883 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.178071427 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139494883 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193860238 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170422488 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183112393 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182756845 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130468938 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278334677 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140105748 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197838732 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113682317 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155072126 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14004918 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131998895 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168183849 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208586011 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209392619 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.190895692 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.145006958 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162797973 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.12640391 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130956661 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192059823 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148717858 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194958667 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144715187 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129654197 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139394849 seconds)
  done (took 84.84284813 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161497333 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151854461 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167018544 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220730394 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193084348 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287895115 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226908934 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24571279 seconds)
  done (took 2.725778443 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.120037011 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158827769 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141229668 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.14367735 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.108968996 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.439653244 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129729464 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144924371 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160758521 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.14933676 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134677044 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.526623283 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.119629018 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142695126 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120578308 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133793027 seconds)
  done (took 3.937671774 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.637394147 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540374224 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.452110882 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.288276521 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.256379286 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199235008 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.739674212 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.194295275 seconds)
  done (took 12.374310633 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152787852 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.146499737 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.412710497 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.248331029 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.201530301 seconds)
  done (took 2.236919609 seconds)
done (took 129.116012804 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121660613 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122385249 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121711832 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.152138493 seconds)
  done (took 1.580869954 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.172991745 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090065349 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091811477 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116456867 seconds)
  done (took 1.547668871 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422160142 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08905688 seconds)
  done (took 1.612440718 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.146498586 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134894048 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163141144 seconds)
  done (took 1.532981018 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.137405271 seconds)
  done (took 1.213242602 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126702073 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.115229151 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.234945697 seconds)
  done (took 1.558783375 seconds)
done (took 10.126321929 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117944391 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.919668936 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431444183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131466825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.709891308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425244168 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.429948441 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171692104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17342902 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.136178868 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131075337 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687078189 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.435393546 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875654955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.39377182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.897268853 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693935555 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110440329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.143220941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111035762 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.408028199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135809189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109643253 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110378492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718054559 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418217531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107529395 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918045925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108048861 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11177414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425134077 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109821136 seconds)
  done (took 20.875226562 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115887934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164373824 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144474893 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111195516 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113174255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138267633 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121835984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121952447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201419411 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108215024 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158501611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109732874 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113643651 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.137280674 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134127428 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.108974842 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139363168 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112735286 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11640158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138963566 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131125146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107001239 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138723215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111974516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107906076 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158042871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109761128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12079847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136806571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114943206 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113770561 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137789421 seconds)
  done (took 5.185656764 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156856323 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173678613 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145783521 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145626596 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.184742273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112558063 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222221636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148304781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202892497 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112985615 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130392101 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13723797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150412475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110019881 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162700344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110037889 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112276086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139450623 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117049054 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136830208 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132058558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109565634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.137756114 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11356935 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110619769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158608771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110173319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12173608 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135219753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113503496 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114113372 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136727396 seconds)
  done (took 5.489208057 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12327436 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123947972 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131022991 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160169355 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119463168 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121242975 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151724349 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11934199 seconds)
  done (took 2.135030347 seconds)
done (took 34.76713582 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133255991 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127049045 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127213552 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150747532 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.189173933 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143739312 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125092398 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114949711 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148584102 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128919942 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108686357 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115575177 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.15496784 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.11905174 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.218533983 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122375891 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.22106322 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188637113 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.144313236 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124369684 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116290111 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.223035443 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119171528 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114680882 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.218469803 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112950864 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.211215967 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11851169 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.146840551 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113587761 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.217293785 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12008539 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115355416 seconds)
  done (took 5.932549583 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.204943187 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120782615 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148535738 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118477046 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119994545 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.145575 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208095457 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.147920009 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119469257 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.118151066 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.1169557 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.221628586 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123061016 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143069876 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.121252914 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107769669 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.23742042 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.121139644 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109012487 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.120193945 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11460229 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116663728 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.249895366 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.113644751 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11733556 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.147704974 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.121348111 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122202587 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148741664 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121355002 seconds)
  done (took 5.346477288 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124305585 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132254824 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.162704344 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185397109 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146855524 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.159194552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.138035309 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133366216 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.168350899 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.113162113 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126712196 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176716953 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128326386 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122403938 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145530539 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130438862 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132419879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.143136371 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120381927 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128458518 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161201419 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129749058 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135049244 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149027835 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111456985 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118783832 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.151694057 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127010765 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119134458 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.156300045 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115527396 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115243993 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.143179236 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147744204 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.1158447 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.15442615 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136991217 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123689612 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.156342191 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.145136825 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115431591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.143200892 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138827575 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165736455 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143918209 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125784425 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125073501 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.155998667 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111480791 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129927029 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184477931 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.115449416 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132664726 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.14087361 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112795614 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.120368554 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.141962226 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.11694267 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127446016 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142333504 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.138220275 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119253103 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.151803222 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115322113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122410839 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.138582914 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113973992 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117381879 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138270433 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149469132 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148910546 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111943897 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153055286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126782287 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.1228138 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.153753156 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113469932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.12294646 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15184407 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119391539 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126171044 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.143308743 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116847484 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.128307422 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.160442461 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128324248 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124189847 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152873981 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.116988852 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.113404766 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.156855874 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.11563446 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.116808268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125103256 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.141769334 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117235942 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124892207 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152366366 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110875828 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137707217 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.145035522 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11313959 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137571101 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.144727398 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.118707511 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12125162 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181690009 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113447834 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123206803 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.15466952 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.113404906 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120351655 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.144102307 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114291259 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129415913 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155509508 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122864056 seconds)
  done (took 16.825606133 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.313505081 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.271950725 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.210946324 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.307519677 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125897512 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238242751 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.299591864 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.302373861 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.11317807 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.179577626 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162730669 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270031492 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.14425017 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141868678 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.303172173 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.354152828 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.172620105 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151383294 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.179034335 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.126428209 seconds)
  done (took 5.485579326 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13374254 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146861594 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164792344 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141676024 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124334219 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158995414 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.112769685 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134702267 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.153287467 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123785503 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114834226 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.157266867 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126463299 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129093775 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157220328 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143970566 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.11964265 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148778087 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.135061546 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.117228605 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129594026 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.1386333 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.14966196 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.136109627 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131520275 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152364792 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.113830678 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118895771 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118720619 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151061228 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119141098 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130767626 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.152053045 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103425092 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124588832 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.156946481 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.119940663 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115794356 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.145801873 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.119012716 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12725203 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.125686482 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.151910183 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096695175 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132165126 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107962064 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157311947 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125686109 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104189856 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162486473 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127111549 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127290282 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.149900809 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135874108 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119928491 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.158902102 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124661931 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.1268432 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.147312542 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113060294 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111935576 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.144439443 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124128214 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12806312 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.15194757 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135521178 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.128476051 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14168147 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118838164 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116662142 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.144721529 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129242956 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134079802 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.150698604 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121093354 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124826464 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120010257 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122262126 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.122981622 seconds)
  done (took 11.593707394 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139234631 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121592779 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131390806 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176726014 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125102925 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119319729 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15162661 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.133024857 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.125494923 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160249753 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127893044 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125992265 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164160628 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124331195 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120843661 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.15856975 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125243974 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.149383593 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163445873 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.140487044 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.154532268 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120101488 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126332712 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.124783184 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171586284 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.124609565 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.168478656 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126865771 seconds)
  done (took 5.029399245 seconds)
done (took 51.306777767 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.238751707 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.443771763 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.22493359 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.219249649 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.259655804 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.241213673 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.221973726 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.232248862 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.576759788 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.192579443 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.222361578 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.228326157 seconds)
done (took 28.422845186 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.284428563 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.780265497 seconds)
    (2/2) benchmarking "String"...
    done (took 1.507797293 seconds)
  done (took 4.40161163 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.211937523 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.210736973 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.461384723 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.210680483 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.229815546 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.214114665 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.212656784 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.214525639 seconds)
  done (took 15.865773875 seconds)
done (took 25.878620819 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.260185509 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.408675365 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.459005652 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.212977548 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.235994964 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.226015528 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.215525111 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.234031728 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.215951543 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.224555365 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.616335663 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.47503392 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.229264141 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.585110116 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.221688446 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.243076475 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.213885043 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.446061345 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.214034972 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.242483954 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.18984343 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.192926179 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.244828556 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.214758799 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.219107609 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.22907853 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.271348739 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.213793088 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.408090844 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.23853731 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.243628836 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.21749497 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.269517107 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.214422642 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.218957563 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.222082925 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.410595758 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.222767701 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.203427362 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.233111509 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.404028077 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.22925093 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.228481296 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.214541408 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.222800855 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.251201691 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.196133691 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.346588878 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.234677398 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.223657034 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.28628441 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.602181179 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.216529247 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.227722545 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.229514402 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.438489563 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.228281734 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.272585701 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.239528807 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.228078106 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.228173069 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.220997552 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.226198908 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.215269119 seconds)
  done (took 144.585928359 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.216246578 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.218929668 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.218986051 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.220411064 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.219122281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.219728664 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.216233851 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.216022572 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.220245473 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.246411466 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.221228977 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.216852012 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.21966768 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.194033 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226585199 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.233381727 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.229172958 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.22144942 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244110856 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.217487833 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.222617835 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.22116494 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.220391526 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.220976295 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.264478838 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.288633218 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.246935396 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.247084778 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.231969717 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.21879828 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.265520396 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.222083351 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.846218602 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.088369308 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.222982208 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.235713356 seconds)
  done (took 80.818471644 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.218434796 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219215898 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218643448 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.250587868 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.219363334 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.787628861 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.790553726 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.19695124 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.844322919 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.568470715 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.419633919 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.220274209 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311102936 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.231874669 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.220104941 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.23476069 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251194689 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.220065125 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220363881 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79111739 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.237174374 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.244954965 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.395647717 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.236373378 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252783663 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611154739 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.221049905 seconds)
    (28/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.220505019 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220000687 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253657521 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.552279559 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271297759 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221161547 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.548567854 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.603340307 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.330707279 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.222745188 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253949612 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221489675 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502281067 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.220262367 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.221751438 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.22460845 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.853076527 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.225373431 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792018884 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225461821 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170110088 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.220510139 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.221928618 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.210948013 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.886527605 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.22384781 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220081237 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.224844802 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.221016314 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222143857 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.255736203 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.137528074 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.318938605 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.221330903 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.227729692 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254766805 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.22261209 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.222152147 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.294446097 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223742284 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.195362449 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.283304238 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.324635157 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794710785 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.225199303 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.317071468 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.340379022 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223088496 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.222229936 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.224350618 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.22394383 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.334838559 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.223341061 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.906292011 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.39894872 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.24170969 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.575712838 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.323316584 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22325808 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.542365005 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.227683313 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.223566758 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919446448 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317725824 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.224441168 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.225124789 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.225069256 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.911203713 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794310647 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.479269519 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.229104092 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.773619359 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.228051741 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.088140077 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.781722871 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.848091329 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.228150388 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.333968646 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.401873522 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.242229248 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.225898942 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.22402283 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.586411726 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.228804985 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.284856312 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.225472546 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.626701413 seconds)
  done (took 376.392860218 seconds)
done (took 602.910401283 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.141782787 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.092572996 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.203686466 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.124013537 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.084363076 seconds)
  done (took 11.770850519 seconds)
done (took 12.895001101 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.416832371 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.416990909 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.28704048 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420294343 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259181318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.433520054 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.397808773 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.242777124 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.336414786 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.307281423 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333132761 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276919716 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.259585689 seconds)
  done (took 18.513231942 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.489091104 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.235110494 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.288432211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.481898629 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269488341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50090689 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.53432904 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.232925444 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386612574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.264259441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245270638 seconds)
  done (took 18.053051712 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498431529 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.23473454 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.291245691 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.505047451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.268695782 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.516926843 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.535797714 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.235989601 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.386781543 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246457382 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244329615 seconds)
  done (took 18.087486382 seconds)
done (took 55.77910812 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264561993 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.324950859 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.259327878 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.242977465 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.23987564 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.241064467 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.245894262 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.242837664 seconds)
  done (took 11.185424913 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.240440955 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.239054928 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.240253824 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.240717077 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.239141766 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.239391887 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.240264828 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.241146813 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.242909495 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.239915336 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.240784225 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239955134 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.239971831 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.240735246 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240638135 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.240096684 seconds)
  done (took 20.968807338 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.242014471 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240918671 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.240720813 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.240266156 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.239088638 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.240927205 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.240892104 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.238941187 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.238327004 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.239095862 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.241211937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.238991659 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.241677035 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.238838798 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.241795082 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.242793432 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.242137578 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.240114675 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.244975265 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.238664774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.238835615 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.239550752 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.239441279 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.240974047 seconds)
  done (took 30.894926705 seconds)
done (took 64.171828887 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.224153138 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.225436396 seconds)
  done (took 5.572598599 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.296263718 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296952284 seconds)
  done (took 3.717464802 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.239308176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.240333506 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.239677479 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.239716474 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.239218989 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.239464919 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.240497322 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.241131818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.238857233 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.241060921 seconds)
  done (took 13.522153859 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.239081798 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.239285944 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.24037629 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.240405732 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.240377302 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.239489321 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.240764612 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.239825975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.241264924 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.240418721 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.240221638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.239672655 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.240634432 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.240979843 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.241828927 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.239119702 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.240319864 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.2403607 seconds)
  done (took 23.448000251 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.254557393 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.259103613 seconds)
  done (took 3.637277142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.368599511 seconds)
    (2/7) benchmarking "second"...
    done (took 1.282075403 seconds)
    (3/7) benchmarking "month"...
    done (took 1.34586701 seconds)
    (4/7) benchmarking "year"...
    done (took 1.338121565 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.282422169 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.263036875 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.281375075 seconds)
  done (took 10.285063274 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.243146274 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.441931766 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.578198887 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832029091 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.24321511 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.245942007 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.150229044 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.246161319 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.248324303 seconds)
  done (took 14.352874303 seconds)
done (took 75.65799376 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.226455021 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.307995472 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.25623791 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.246022468 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.536881494 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.233800306 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.233090085 seconds)
done (took 16.165056678 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.21327541 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.208998788 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.218534472 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.238645023 seconds)
  done (took 10.004297747 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.227601886 seconds)
    (2/2) benchmarking "read"...
    done (took 1.552379333 seconds)
  done (took 4.904135899 seconds)
done (took 16.033806281 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.244056453 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.242888635 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.243816268 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.24158435 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245261363 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.242090483 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.24362512 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.245645068 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.244100171 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.24240012 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.244818017 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243903346 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24491728 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242950779 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242799168 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.243282839 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.243577628 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244190607 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.242851845 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.244422529 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24394534 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.243759924 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.242962896 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.243367585 seconds)
  done (took 30.972717388 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.246150934 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.245277292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.244787526 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.246148049 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244030987 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.245425822 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.246476381 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.243414631 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.244839043 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.244877953 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245687956 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243890156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.243423158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.245395638 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243954021 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.245104146 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.245007668 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245164953 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245447173 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.246494762 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.245897879 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24295132 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.246277286 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.246699221 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.245374654 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246322873 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.244623228 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.244869487 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244868132 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.245629471 seconds)
  done (took 38.482237431 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248566227 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.247825487 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.247257104 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.245574885 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.246693731 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.245942654 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248205022 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.245914135 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.246000961 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.247191489 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.247661671 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.246446755 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.246292989 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.247224875 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.247506333 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.247774634 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.246421479 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.246652048 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.246162016 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.247691142 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.246952175 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.247609219 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.247549211 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.24893248 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.24739242 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.246906869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.245370216 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.246697469 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.247653692 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.246401891 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.247242436 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.249396052 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.246020129 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.246442993 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.246429185 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.248232361 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.24951863 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.248085637 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.247296553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.248088629 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.246364942 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246951562 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.247786645 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.248326486 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.248736203 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.248240431 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.246809878 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.248527648 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.24776783 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.247879897 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.248908619 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.24844126 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.248016206 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.247939336 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.248778366 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.250059762 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.248363005 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.247960686 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.248695978 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.249211948 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.24869052 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.247249625 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.250136844 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.25025642 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.248886658 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.249875793 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.247725458 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.249303553 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.250848208 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.249126234 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.248171779 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.249607603 seconds)
  done (took 90.971294936 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.248382297 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248218131 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.246754418 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.246903251 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248394568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248563271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.248245027 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251706661 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249040679 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249199237 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248215329 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.248702131 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248490545 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248853167 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249987615 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251956633 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247701513 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247933922 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.249740445 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248716453 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.24958364 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.248559203 seconds)
  done (took 28.605000154 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250390799 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251878131 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.247968642 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.250844122 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250897626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250418063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.251210284 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251732876 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250279417 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248277169 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249510575 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249431424 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251279077 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.249810413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249737024 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251593284 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250816743 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.251308539 seconds)
  done (took 23.637533088 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.248602224 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.248481596 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249535588 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247954277 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.249184148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24930584 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.249812364 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250964355 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.24887818 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.248157216 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249790346 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250412928 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.250369403 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2519431 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248969815 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.249923099 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249663635 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248470901 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250065497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250571243 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250998712 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.251373264 seconds)
  done (took 28.625113201 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251131821 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.25117839 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.25065308 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.25002754 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.250252014 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.250844952 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.249960203 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.252737673 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.253157102 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250872432 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250481933 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.251050414 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.252092148 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.251449871 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.251840134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.250406426 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.251307225 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249594354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250488112 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.251438761 seconds)
  done (took 26.154182423 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253781657 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.251724138 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.250430301 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250722849 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251700285 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.255442089 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250266258 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.251347808 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.25137429 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.252759023 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251233425 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.251787166 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252309197 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.251958212 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25187988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.251788281 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254125369 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.252296581 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249166586 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.252244298 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.252543164 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.251592009 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250184409 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24902556 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.251768534 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253278631 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25292997 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250692101 seconds)
  done (took 36.183158036 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250331341 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.251268213 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.251217636 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251027086 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.250441504 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.249836808 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.252086358 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.253013448 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251749653 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.250586992 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250862509 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.252009169 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252825104 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.25250273 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.251406577 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250743145 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252566677 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.252332959 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.250177084 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251129388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253120411 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250876637 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.252680903 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251978315 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251710496 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.252771509 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252345149 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.251218336 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.253065862 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.252058927 seconds)
  done (took 38.682284221 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.271011199 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268946714 seconds)
  done (took 3.672632641 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.25439133 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254372354 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.253337199 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254295476 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.252598324 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.253154125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253323336 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253431494 seconds)
  done (took 11.16162769 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.2441318 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.25273682 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253175331 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252912249 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252633066 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.244079082 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.253011782 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.258338001 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244956273 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.246488736 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248055 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.247794281 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.250262302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250227151 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.24972989 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.249593722 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.256760593 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.256462127 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.256969908 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.254574055 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255242042 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248414458 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252770252 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.258365781 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247117405 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255530599 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.25581828 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.260031213 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.248582613 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.252898979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.251935124 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.258039137 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.255322698 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.254699307 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.255541184 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.255716542 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255179848 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254944114 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.255698955 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260921621 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256085423 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.255304957 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.24991322 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.253275831 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254198457 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259586575 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.256462032 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258478363 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.248265019 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252468191 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.259270392 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248387511 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25736398 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.25413726 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.255447515 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259530412 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.261993055 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.24961212 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250851073 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.258672163 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.265035148 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.258665239 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25503712 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.262806121 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254231509 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.257699803 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261295814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.264329987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.259379191 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.25718337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.258908343 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267622961 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26433283 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.262011961 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257783705 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.25694306 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251562991 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262764787 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259096721 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259858949 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.263122644 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258799854 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254815529 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256709291 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.252640768 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.26235851 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.260025093 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.258541056 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.249358887 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262618574 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268332352 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258931056 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24853653 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.254187051 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.255301932 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.261185873 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.25094342 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255487858 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.261317938 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259277437 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259800195 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.251614723 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.258616987 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263969299 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259815341 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.26045552 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.266670127 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251979178 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26287818 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.267078885 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259494148 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.254522692 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.254789184 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.264026395 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252560545 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.256546146 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264000489 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253842508 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265980657 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.259658242 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256044613 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.265459843 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.265370635 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.258085805 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.25313702 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263115243 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260340943 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.258614896 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.268141173 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.259559142 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25981421 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.256384218 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264924763 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.25390993 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261841523 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253801603 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.263086342 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259561919 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260494342 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.25517083 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259673295 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.257654086 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.259002916 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.261980744 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267010336 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.257755466 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.265892779 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258914128 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258513491 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261042179 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264266513 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.261829392 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.255837864 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.264863318 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.252658914 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263264655 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.253611632 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.264690214 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259777902 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260510187 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261688343 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.252732846 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256021788 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.262897807 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.26041399 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.261303669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.263219431 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.261920311 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262192007 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253071372 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.26268314 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251878096 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.256072896 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.264364023 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.261824848 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.262026819 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.260567244 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268536815 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259936348 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262061759 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.253893453 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.259225137 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.26897769 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263225159 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.271454142 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262675549 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.261193378 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.256100889 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25845598 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264731424 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.255165796 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.265603984 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.267862742 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.26916628 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256975755 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.263671438 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.254737237 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.263009555 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260751379 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268396995 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.263437572 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262408781 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256076088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264334185 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.256699819 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.265074041 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.25329749 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263335236 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.264625017 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.263368498 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262461473 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.25721237 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259324059 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263975242 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261129905 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261648244 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.258254579 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.265994064 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.254826751 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257608504 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.265614966 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.262204472 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26581048 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.270388077 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260508236 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266610131 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.262054738 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258414629 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.264291931 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.259579956 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.262844428 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.267207183 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26798497 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.257351352 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268774188 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264743346 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.255656385 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.263213229 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.27093429 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.26412388 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.256719179 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.266362533 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.264626936 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.263392918 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.264337382 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256592738 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268111886 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.268459232 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.272643278 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259056024 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.26682924 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.258600776 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.268094229 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260939214 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.264805345 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.263685194 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.266467588 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272867505 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.263864719 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257888446 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.267936645 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.264634276 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.264674349 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257428489 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267336531 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265488686 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.266438988 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.263608109 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.262290904 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265202869 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.257812594 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268231261 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.258384596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273533475 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.279823846 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266333667 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.268577344 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.266979699 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267632066 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.267465026 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.257073983 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260229567 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.261716279 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.259936077 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.259871687 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269388732 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257944702 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.269320042 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26209205 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.26614544 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.266532331 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.265176347 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.259169813 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268003513 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.2643525 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.265481911 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.256264758 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.267861175 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.258830736 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266828809 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.265136981 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.262696161 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270751986 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272457865 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.262769367 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.261460133 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.260102339 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.259317382 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.262637963 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270473587 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260046785 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.268799469 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.257905094 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261116492 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.260403892 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268109744 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.275584448 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.258981306 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.268918668 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268241214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.258078549 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.260573629 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269731646 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.267709183 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.277337376 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259293424 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.26928265 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266485585 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.266521072 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.264623215 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.266728865 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26700208 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.265922355 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270520902 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271720647 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.259509604 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268784628 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275773186 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265482204 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.265881608 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.259356438 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26677774 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277185472 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260546144 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265980602 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.261661835 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.268957496 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.26621695 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.267576985 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.267469739 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.268326657 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.268842349 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271678724 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269391795 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.266501015 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.270317724 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278704827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27064777 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.280084581 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261957913 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.272321482 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.266598381 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.262413441 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.26247607 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.263957269 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272862687 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.260287259 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.269781567 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268575997 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262491682 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266353859 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.272863024 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.260793611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266872326 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.274834965 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.259145819 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268903034 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.267130615 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.259947042 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.271066707 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.266679793 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.259477414 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.263041898 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262985383 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269464077 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.261146778 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.270639651 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261530327 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.271277725 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.26722884 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267194653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.264640577 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.266678799 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.261398425 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.269369286 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266372414 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276650177 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.262602063 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.266650297 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.262013035 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.272253436 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.278227275 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.262373535 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274160856 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.26898727 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261600672 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.266128131 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.271304335 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261506102 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270560683 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.260704909 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.263122531 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.262092083 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.2697317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.272324897 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272716753 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.261577846 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.262428385 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270351743 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.268781059 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268906025 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266411684 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.274816383 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.261263062 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.262332089 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.269080682 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264156363 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273608855 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262504123 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.266289949 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265524444 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.272026318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268523735 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267581537 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.261813019 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.264450883 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.275014072 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.272669919 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265217018 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263937846 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271850734 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264318592 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266582291 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.267413515 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264386099 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.264593484 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272944345 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.265735749 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.263810919 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262702069 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272008227 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.273871309 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.272980703 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.265058403 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.276527728 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.279725057 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276454016 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.263668026 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.267247331 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.265765532 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.272124195 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.270423635 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.265745235 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.277166561 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.277535023 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274592913 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269930484 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.270857842 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263686467 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27228742 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.272060359 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267906716 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.276097518 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.265122019 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.277795592 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27101256 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270389242 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261984881 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.264428726 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.265854435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.264322624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.2718605 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269170657 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273646521 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.270015609 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275549902 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.270307049 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.270439132 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.26938263 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.262898372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273207044 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.263383544 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.273219768 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.273052746 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.264359347 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.273312371 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270474633 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.265065345 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.268398592 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.274437802 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272286683 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.263550062 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.268230996 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.275676961 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282373996 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.272276483 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.266850123 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267554843 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.27603777 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.271442761 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.272775172 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264700734 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281291858 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284989375 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.26626628 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269984519 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274593374 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.283849077 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.273112156 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.27269506 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.268600452 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.270596926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.277020569 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.273191488 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27650843 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279311564 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.267804342 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.275452098 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265664229 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.267442534 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273257618 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.283157832 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273537676 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.266281091 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279218955 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.282971875 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272611716 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284194924 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.279978833 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.27506916 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.278801156 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265397523 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.275816193 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.270170354 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279288948 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274459717 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.273846079 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.274255363 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.266104188 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274487893 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.280286813 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.283299974 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.273693788 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.266960265 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.269369078 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276939199 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.274218815 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.275994241 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.275199535 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.274930431 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274609042 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.270056951 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286497301 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.288978438 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281012578 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.275688515 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275529718 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276951261 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.279316765 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272415611 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.278624916 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275878327 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.276588767 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.273986878 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.287874622 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277448893 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.271248529 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.271472351 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272394875 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.280117171 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.282504811 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294611025 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.278792476 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280243572 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.279129909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.277906916 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270823148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279183659 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276997207 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.271956639 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.272790638 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278884452 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.278129686 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.277574729 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.271631356 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.280489204 seconds)
  done (took 755.086582033 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.276516069 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277595399 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277054442 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.277474589 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276763682 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.27813803 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27732767 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278509969 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277294609 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278373461 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275937848 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277396833 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.277927998 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278660464 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.27720522 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278656913 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277369863 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27803113 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279088687 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.277081614 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.278244818 seconds)
  done (took 27.982241727 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.27810545 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279265383 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280135584 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.280361274 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27717925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.279852548 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.277829035 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279535532 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.280359986 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278452238 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.278843038 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279522988 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.280791395 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.277824732 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280012973 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279055132 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.279891433 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278432373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.279261876 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.279426014 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279936094 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27798694 seconds)
  done (took 29.295259004 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279128249 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280488661 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.272724253 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.28480001 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.281442442 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.280612238 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281751331 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.280613702 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.281557714 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.273906996 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.274414363 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.273968994 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277088675 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.285426238 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.276559091 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.28684448 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281700979 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.280794484 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281636286 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.280758107 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.284418122 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.294241507 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.281493169 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.273739475 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285022247 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282790139 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.281594921 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282475339 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.273243298 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28501413 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.282473532 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.274707145 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.284915028 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.284856068 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.275279589 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.285160939 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.282983071 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.282671641 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.281837034 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.280945315 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.290390644 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284086876 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.285583278 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.29546077 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.281652294 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276802597 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.288316673 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.282976713 seconds)
  done (took 62.677938835 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282493393 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282488887 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.282067779 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.281516152 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283804808 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.284602432 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.283602566 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284695315 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281996202 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.281865847 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.283858325 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283223897 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282365202 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.282014748 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282925884 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281629189 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283276101 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282739082 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283240705 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282965941 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283759167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.282257227 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.284167738 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283097375 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284801656 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284845885 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283522156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.284638466 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284994446 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283471179 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.284838635 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285438819 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284494211 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283929813 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284597688 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.283712323 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.285882005 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283412402 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284812152 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.285378995 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.285668803 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284887087 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285146112 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.287852945 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286582658 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286363935 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285209182 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.286226006 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.284630201 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285866155 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286962083 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286171616 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287035281 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.287095346 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.287049266 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286490076 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.285811165 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.287077745 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287178633 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286784453 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285826505 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286178168 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286094737 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.289106739 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.287957164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.287800431 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.287416008 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286913592 seconds)
  done (took 88.525789992 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288732136 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.286828761 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288058287 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289334259 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287916043 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.288168208 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289185374 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28900898 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.289309123 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289815375 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287077211 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28731765 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.28914644 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288083853 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289058193 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.286944382 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.289221806 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290405066 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288335887 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289181297 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289293263 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288856252 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.289697025 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289706451 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.29013732 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289314887 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290466403 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289158628 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290812326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.288660883 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.290200491 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.290944561 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290289838 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289771812 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291429466 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.291170529 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.289904024 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289894429 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.290452888 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.289874847 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.290258268 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.290164843 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290670541 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.289428852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290508296 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29110109 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291605375 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.291783386 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.290744117 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290626086 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.289929328 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291412375 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290980171 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291588911 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.293238973 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.291733128 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292497053 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.291659687 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293064995 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29307132 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292347972 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.291881125 seconds)
  done (took 81.144327857 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293302408 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.290508724 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291790582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.290448291 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.292778434 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29271246 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.291336326 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.291734378 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.293653761 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.292597916 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293336218 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291552501 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293675007 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292168121 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292907868 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294262084 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292995826 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.293329927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294191244 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.292614611 seconds)
  done (took 27.015406465 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292953422 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.293676276 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.291929096 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.291516736 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.292605831 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.293910766 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.293247978 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293029967 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292788974 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295167556 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.293360012 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292937371 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292346038 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293750863 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.29580355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.292964866 seconds)
  done (took 21.856599604 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.293959478 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.294152623 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295730633 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295069381 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.295455585 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293797799 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.292856538 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294792638 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294064291 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.295156831 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.294986931 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294415983 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.295396444 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.294670884 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293078404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294996414 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.293816528 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.295765613 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294313135 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296255837 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.296297408 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294444802 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.295069095 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.295957297 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.297387183 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.297504683 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.294734284 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295867631 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295608483 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297037113 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.295531126 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.296427815 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.298146354 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.295447337 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.296188029 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296215198 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.294584277 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295979282 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.294728916 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296936732 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.296118613 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.296297016 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.297027471 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.297685294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296846805 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296654376 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.298194271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.295902836 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.295731041 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.296757045 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.295939984 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.295476881 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295400164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.297945229 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297678577 seconds)
  done (took 72.429606894 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297036907 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.2967495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.297170615 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.298132104 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298125421 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.298121279 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297375814 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.300908875 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29596113 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.297277442 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296712123 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298930798 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297234352 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.299098702 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297583386 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298015368 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.296570134 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298202942 seconds)
  done (took 24.526782993 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299454631 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29920987 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.30053458 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298111555 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.300265172 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.299900609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298723141 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.299470266 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.29967115 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29938479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299205737 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299006099 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299322481 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299383926 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.29965787 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299158922 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298940003 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.30072209 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.299362763 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299556262 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300451028 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30025336 seconds)
  done (took 29.759333103 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.290027728 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.29016976 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.289589871 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.302520127 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.298375458 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.29006639 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.29164048 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.290322436 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.306933607 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.312314875 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.303168049 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.293522634 seconds)
  done (took 16.728675015 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295003624 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295509958 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.295256265 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296620876 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28623185 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285788874 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284797674 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283959976 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285139903 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28354455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286353094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285047774 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277068559 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276296109 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276891853 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277951144 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277845365 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278931903 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277719653 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278050486 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272216536 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274023834 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27357223 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274070868 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273464449 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273262762 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272984841 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272657511 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268960997 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269915905 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270905037 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270214019 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269063418 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271480005 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268935095 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269005625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.266538317 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266128097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266116858 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.267499369 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.266249167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267019879 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266007744 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264044846 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26252374 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.261054688 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263812628 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.263390495 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.262519132 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.264717045 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26445451 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258465773 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.258834742 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258468378 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259353955 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25916005 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26005603 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.259724601 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25948048 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258211505 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258524534 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.259151692 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258767189 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258975992 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.259732675 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.259398378 seconds)
  done (took 85.054693093 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.255948398 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257824289 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25665939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.258100878 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.256242832 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256127671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258453673 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.258578535 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253605406 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253827128 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254248363 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252640383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253518384 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251987729 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255396836 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254687483 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2542822 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253314727 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251969928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253132916 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254003318 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251713794 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253642592 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253476882 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252884318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252197304 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253908946 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252061498 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252501901 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253394182 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254068506 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254088458 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.252709327 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251548573 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25379156 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253581443 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254025095 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253018246 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255510824 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253389238 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254510114 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253380826 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253374092 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253659847 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25604927 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254250524 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.254167764 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255032532 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252953315 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254592068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254141313 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25184136 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252663327 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252970612 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251924711 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25275973 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249205014 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249899937 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248192915 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.249202411 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.247791667 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248967823 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248711686 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.249176176 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.245669553 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.246446256 seconds)
  done (took 83.84882397 seconds)
done (took 1764.207669981 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.401417445 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.355480431 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.236342252 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.251204415 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.232834769 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.230792136 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.245368959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.233739355 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.231723545 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.234052875 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.233658328 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.424785125 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.268689867 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.233540886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.23340418 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.330369593 seconds)
  done (took 25.504957121 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.255181172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.246209603 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.345707693 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.243166343 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.265749538 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.413189851 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.301333618 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.244819639 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.393700928 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.265555527 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.245128279 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.271019397 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.244133393 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.247707936 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.265704804 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.412787728 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.485632545 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.241030567 seconds)
  done (took 27.513821136 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.636506169 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.245371081 seconds)
  done (took 5.01359907 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.262344243 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.244498665 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.244470947 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.242586266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.23652468 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.238452964 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.244416661 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.244397364 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.242825879 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.360827017 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.252201053 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.257918661 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.260643906 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.245961534 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.252262576 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.287784699 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.405371496 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.254696478 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.252613042 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.253103748 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.24508107 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.33372541 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.285835595 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.2572029 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.358309232 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.247898034 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.249595845 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.253407041 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.359167451 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.256173853 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.245424927 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.247382177 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.248078114 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.170855628 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.765674815 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.238932516 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.269053312 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.255500025 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.255249735 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.391790941 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.24860083 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.253889609 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.239786083 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.761632949 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.353330574 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.357483286 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.255322187 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.262066996 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.250270837 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.308741698 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.24978713 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.250421698 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.305637084 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.015722201 seconds)
  done (took 80.465328923 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.252932036 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.241676123 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.423263509 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.266480387 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.240329906 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.242203406 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.2416067 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.497045554 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.27407008 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.242084464 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.544753199 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82447248 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.247537223 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.307687687 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.285182037 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.297579189 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.244104154 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.240481648 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.250374188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.244811827 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.786686981 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244821401 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.243242219 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.318224866 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.281484779 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.749591064 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.24187916 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.243768419 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.237630644 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.237869481 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791017133 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.245087411 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.292663183 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.235448142 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.506739013 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.59431816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55365556 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.241120143 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.286340425 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.23109186 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.257735182 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.733375232 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574710881 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.233407088 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.230826001 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731560148 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.234613204 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.239542031 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.236618898 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.502724888 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.238045237 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.231832235 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.234559977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.234665152 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.231114034 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.291005284 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.291816994 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.743583827 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.233864577 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.231347847 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.252956706 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.233027853 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.240148151 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.231720617 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.233387296 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.576526193 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.491927744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.240354917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.574733714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.776016468 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.234317686 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874067231 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.232781207 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.244723946 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.266005865 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.232360955 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.250194976 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.738987618 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.252830796 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.234253841 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.55397137 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.235412697 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.524841154 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.24800796 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233607171 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.793090163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.243420466 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.28001331 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.232707037 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.236630481 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.238102409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.240091791 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.516304252 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.298193109 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.23460349 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.233647352 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.237220151 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.235129546 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.248881921 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.235083684 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858923549 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.239266055 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.245848912 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.234397181 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234440773 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.241252588 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.237285336 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.236774466 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512674757 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.234612313 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.252804157 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.234335181 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.235143648 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.240058982 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.314806331 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.238333742 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.518323778 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.24096005 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.235508397 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.238990977 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.237814185 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.274203093 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236239214 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.250422833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.219729094 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.537914697 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.252041435 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.249237087 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.23659456 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.240548723 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.235413579 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.236489833 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.294157223 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.241484307 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.011071603 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.276138155 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.236502552 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.237498078 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.250494053 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.238042363 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.261363968 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.239356931 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.533683977 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.517548143 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.492450116 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.242379282 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.237762048 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.018330067 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.276439691 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.418215377 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.253809479 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.236951364 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51712323 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.486318354 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.242057916 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.239037409 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.239506863 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513721466 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.237524346 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.551691051 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.811142305 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.238739143 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.239487375 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.004299838 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.043854926 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.246039766 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.243766341 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.526177028 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.253255055 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.238766305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.237779553 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.239060675 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.240071356 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.243736 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.241364888 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.239245337 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.239696768 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.580761724 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.43291332 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.253729036 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.24387748 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748395084 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.263360738 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240715213 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.247987415 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.242837118 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.240261882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.296785338 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.243799604 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.273493755 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.241733183 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.24179136 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772861885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.23996644 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.241037732 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.433209024 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958033597 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.240855594 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.240541896 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.240013001 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.298685105 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.783239658 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.291661263 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.524547237 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.242903147 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.281794533 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.241333787 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.263963705 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.779387517 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.246926551 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.239492987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.949484019 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.241569157 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.678796514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.243003289 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.24595827 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863351357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.242418982 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.24247656 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.241102715 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.241480244 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.559398969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.242245321 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.279730539 seconds)
  done (took 476.685780248 seconds)
done (took 616.309302816 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.241474166 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.247130241 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.246208245 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.24819301 seconds)
  done (took 10.118991518 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.258707114 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.247280338 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.257906506 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.24954867 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.257907714 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.249112323 seconds)
  done (took 8.657282528 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.241603706 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.248351078 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.248974334 seconds)
  done (took 7.876023528 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.441657195 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.259303024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.578165203 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.256198165 seconds)
  done (took 8.671838938 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.260226353 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.258800412 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.258085956 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.25907272 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.260654739 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.261426902 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.259710012 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.260446643 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.260985348 seconds)
  done (took 12.475284797 seconds)
done (took 48.935957129 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.309237088 seconds)
    (2/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.220658255 seconds)
    (3/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.247745277 seconds)
    (4/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.293978344 seconds)
    (5/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.256904158 seconds)
    (6/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.392056119 seconds)
    (7/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.3867952 seconds)
    (8/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.259231005 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.316182155 seconds)
    (10/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.234854173 seconds)
    (11/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.239298171 seconds)
    (12/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.289031508 seconds)
    (13/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.281213769 seconds)
    (14/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.448631178 seconds)
    (15/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.263887964 seconds)
    (16/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.322616245 seconds)
    (17/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.221820933 seconds)
    (18/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.481208982 seconds)
    (19/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.338280534 seconds)
    (20/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.471416808 seconds)
    (21/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.356000036 seconds)
    (22/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.277932303 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.387024814 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.246112084 seconds)
    (25/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.277797322 seconds)
    (26/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.394709742 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.396671634 seconds)
    (28/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.227711936 seconds)
    (29/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.536714208 seconds)
    (30/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.328423888 seconds)
    (31/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.244446266 seconds)
    (32/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.24753669 seconds)
    (33/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.263033796 seconds)
    (34/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.281773937 seconds)
    (35/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.223351095 seconds)
    (36/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.349067443 seconds)
    (37/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.344370989 seconds)
    (38/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.324490748 seconds)
    (39/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.400096283 seconds)
    (40/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.223818429 seconds)
    (41/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.487688175 seconds)
    (42/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.487260275 seconds)
    (43/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.462254948 seconds)
    (44/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.242098985 seconds)
    (45/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.289502895 seconds)
    (46/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.237004536 seconds)
    (47/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.265860433 seconds)
    (48/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.337533254 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.224002467 seconds)
    (50/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.317694156 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.426148463 seconds)
    (52/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.225551357 seconds)
    (53/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.323599004 seconds)
    (54/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.224419593 seconds)
    (55/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.235507488 seconds)
    (56/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.283268438 seconds)
    (57/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.289830475 seconds)
    (58/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.244927171 seconds)
    (59/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.371831402 seconds)
    (60/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.360522691 seconds)
    (61/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.44631692 seconds)
    (62/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.497143927 seconds)
    (63/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.366615484 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.370858544 seconds)
    (65/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.376478027 seconds)
    (66/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.247332007 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.366644602 seconds)
    (68/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.395278048 seconds)
    (69/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.226206405 seconds)
    (70/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.336650511 seconds)
    (71/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.226742987 seconds)
    (72/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.423996682 seconds)
    (73/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.408549085 seconds)
    (74/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.460236163 seconds)
    (75/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.469608597 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.283245658 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.311326383 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.37619958 seconds)
    (79/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.353399402 seconds)
    (80/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.584689954 seconds)
    (81/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.407915862 seconds)
    (82/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.344159199 seconds)
    (83/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.286073595 seconds)
    (84/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.363377574 seconds)
    (85/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.332999054 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.224709143 seconds)
    (87/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.489938101 seconds)
    (88/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.3307119 seconds)
    (89/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.340697313 seconds)
    (90/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.460549324 seconds)
    (91/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.285301735 seconds)
    (92/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.36578583 seconds)
    (93/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.233094518 seconds)
    (94/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.411828155 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.365154596 seconds)
    (96/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.353393429 seconds)
    (97/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.364429031 seconds)
    (98/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.278134337 seconds)
    (99/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.228680193 seconds)
    (100/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.232691314 seconds)
    (101/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.38345122 seconds)
    (102/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.260191952 seconds)
    (103/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.370164537 seconds)
    (104/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.288588258 seconds)
    (105/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.375476614 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.407819396 seconds)
    (107/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.375884529 seconds)
    (108/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.367961427 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.47903507 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.331910625 seconds)
    (111/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.22817494 seconds)
    (112/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.484064731 seconds)
    (113/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.656778442 seconds)
    (114/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.410214515 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.361210891 seconds)
    (116/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.404738985 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.357480042 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.40585185 seconds)
    (119/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.319628633 seconds)
    (120/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.292211231 seconds)
    (121/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.314331821 seconds)
    (122/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.326816614 seconds)
    (123/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.325144493 seconds)
    (124/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.229356988 seconds)
    (125/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.550776204 seconds)
    (126/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.244263333 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.488820268 seconds)
    (128/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.348447846 seconds)
    (129/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.322885642 seconds)
    (130/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.541458184 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.658299952 seconds)
    (132/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.42217205 seconds)
    (133/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.40646077 seconds)
    (134/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.327957963 seconds)
    (135/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.323376778 seconds)
    (136/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.230973809 seconds)
    (137/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.292484219 seconds)
    (138/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.252556884 seconds)
    (139/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.43274995 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.350235994 seconds)
    (141/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.407666097 seconds)
    (142/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.383896363 seconds)
    (143/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.288022927 seconds)
    (144/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.356679516 seconds)
    (145/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.337777521 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.348129122 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.404403946 seconds)
    (148/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.436191407 seconds)
    (149/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.231734373 seconds)
    (150/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.318019971 seconds)
    (151/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.368740093 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.436974119 seconds)
    (153/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.39570905 seconds)
    (154/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.245083471 seconds)
    (155/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.528970797 seconds)
    (156/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.266419414 seconds)
    (157/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.345777951 seconds)
    (158/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.256322313 seconds)
    (159/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.306234498 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.427630311 seconds)
    (161/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.314183911 seconds)
    (162/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.357846175 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.374442279 seconds)
    (164/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.353065971 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.294340252 seconds)
    (166/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.32395575 seconds)
    (167/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.405044277 seconds)
    (168/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.369203972 seconds)
    (169/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.476487439 seconds)
    (170/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.339777797 seconds)
    (171/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.486404974 seconds)
    (172/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.464196585 seconds)
    (173/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.367195829 seconds)
    (174/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.2328565 seconds)
    (175/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.265131238 seconds)
    (176/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.23293142 seconds)
    (177/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.488964071 seconds)
    (178/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.28932607 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.454021571 seconds)
    (180/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.256557175 seconds)
    (181/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.565782287 seconds)
    (182/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.597438481 seconds)
    (183/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.261186904 seconds)
    (184/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.506815752 seconds)
    (185/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.479212455 seconds)
    (186/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.33496234 seconds)
    (187/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.336419365 seconds)
    (188/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.544176057 seconds)
    (189/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.240243244 seconds)
    (190/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.45958849 seconds)
    (191/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.412522217 seconds)
    (192/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.244010301 seconds)
  done (took 308.488784548 seconds)
done (took 309.626036312 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.285205567 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.349045579 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.265145359 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.263866591 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.265771612 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.257286323 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.293114284 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.266343056 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.28039641 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.280941579 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.249229183 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.275078447 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.282174187 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.27763664 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.300377942 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.266437761 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.265687891 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.276426524 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.28124469 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.283347782 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267401301 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268061209 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.295268381 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.266008014 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.275532681 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.274981154 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.272297351 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.260963784 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.274806346 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281796406 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.261928573 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.272996508 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.283897287 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.2790994 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.26889556 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.278824285 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.26789912 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.353186876 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.289323782 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.279151377 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.276594206 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.284429861 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.273941866 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.2733992 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.279845843 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.296124468 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276661154 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.282664876 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.262659471 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.243738751 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.288659785 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.282248228 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.278288316 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.255895264 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.26403415 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.284234159 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.280110446 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.288084359 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276820648 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270751111 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.301484214 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.287141918 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.281250896 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.278120158 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.276370737 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.283786931 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.278685039 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.284648579 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.276565043 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271940182 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269724969 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.277537212 seconds)
done (took 101.176078065 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.391717197 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266259668 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429836688 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.276532554 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.437016953 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.395402291 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.276188781 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.278188101 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.277578302 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.069499153 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.277391521 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.27714528 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.267275346 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.276904167 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.393213326 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.278446616 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.276517898 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.971608082 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.279766546 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.409843573 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.269691245 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.278322721 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.278877089 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.079797766 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.267009402 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.263329773 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.410229412 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.278785904 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.976704478 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.263682212 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.266847661 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.975889918 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.41185067 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.298412517 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.28863126 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.288069425 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438354291 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.28239994 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.395026304 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.394112938 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431459128 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.31734065 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.264265287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.269257676 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.281574475 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.281592787 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.279120659 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.30983229 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.268024626 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.280905169 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.968232818 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.289085271 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.279703711 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.280307778 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.281219213 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.309725718 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.281027119 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.281660651 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.411875973 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.281745594 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.397224956 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.079776827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.074846608 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.281728916 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.268657798 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.281127051 seconds)
  done (took 104.398792713 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.341885385 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.346035539 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.379241299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.273252671 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.321135956 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.378714807 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.273323811 seconds)
  done (took 10.469496039 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.278531109 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.282373985 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.322117631 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.319996444 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.281982007 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.44540181 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281167356 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.284300794 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.282206487 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.323201457 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.285640246 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281823817 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.292154198 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.272268768 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.321898926 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.285950949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.390869702 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.275429505 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.28194072 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.425027238 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.283464528 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.292894192 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.325030166 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.285443679 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.284961322 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.281827922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.056776643 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.284566696 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.282656236 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.284542306 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284527165 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.341097177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.283949403 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.273250244 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.282999214 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38855603 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283451594 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284166319 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.284635082 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.268693652 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.285037257 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.284583486 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.284681347 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.284612879 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.284665323 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.302469428 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.285028116 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.284848793 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.283881013 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.285023733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.324545915 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.284389978 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.284683772 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.284195416 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.330008944 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.294446567 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.284111835 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.283868122 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.285185627 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.284227761 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.427745995 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.322486011 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.286075925 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.323209482 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.285376135 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.286511972 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.285788573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285722563 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365358522 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.286921839 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.324051321 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.287267402 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.459269037 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.301090701 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287750743 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.28038186 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.279838049 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.285660466 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.275231657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.284686971 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.285639648 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.277363139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.283249959 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286627939 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2870003 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43690655 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385134584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.286980406 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.293519153 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.284675188 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.288111742 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.329094557 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.286387553 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.287497411 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328955413 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395958617 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.330264902 seconds)
  done (took 132.389634043 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.290305108 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.29199175 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.282591182 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307198994 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.28014092 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.27919931 seconds)
  done (took 8.894206316 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.28241719 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.290428523 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.288880139 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.289356293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.289145999 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.292205533 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.289362859 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28166067 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.292033953 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.288141097 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.292732014 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.292306875 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.289662088 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.290147835 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.290303149 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.288806624 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.289420277 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.289428372 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.289700976 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290830326 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.278730636 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.290587429 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.291182887 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.282696909 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.294494011 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.291045527 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.307328955 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.290582789 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.289139887 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.286367919 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.294704459 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.293669923 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.285682957 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.285376674 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.292807394 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.28282144 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292070571 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.293451515 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.290219256 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.290975845 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.292862166 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292192786 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.290215071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.292714823 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.283697495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.286564881 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.296072163 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.305900181 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.290215517 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.293344361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.293057056 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.291789758 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.293579793 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.293951428 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.285582079 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288639094 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.296216989 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.291213055 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.293460444 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.284292053 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.295932608 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.294474663 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.285509705 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.297565841 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.293789812 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.294750086 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.285702727 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.296353833 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292127861 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.293266454 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.295790225 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.293934722 seconds)
  done (took 95.111996063 seconds)
done (took 352.416107936 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.570111619 seconds)
  done (took 3.737176424 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.545524616 seconds)
  done (took 3.714551005 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.733770191 seconds)
  done (took 22.145413121 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.36687832 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.369511224 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.295516405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.287180476 seconds)
  done (took 10.487020066 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.53390474 seconds)
  done (took 3.700778924 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.288546402 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.288020448 seconds)
  done (took 5.74601435 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.428520028 seconds)
  done (took 3.598516348 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.495783434 seconds)
  done (took 3.665592183 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.308648869 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.311173961 seconds)
  done (took 5.797365486 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.258125762 seconds)
  done (took 3.428213829 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.238010046 seconds)
  done (took 20.407037439 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.301498638 seconds)
  done (took 3.473742464 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.357666112 seconds)
  done (took 3.525705765 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.699753507 seconds)
  done (took 5.868525278 seconds)
done (took 100.463712562 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.279506275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.282022861 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.2848334 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.280777765 seconds)
  done (took 10.297933316 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.358977322 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.358500593 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.368848885 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.354372882 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.354757476 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.363521913 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.321632022 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.322358953 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.352274446 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.349636037 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.364223804 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.34954523 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.363114825 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.322119017 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.350404213 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.364170505 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.353289398 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.365451533 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.338198221 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.355164296 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.298173035 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.356644313 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.34920104 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.298253121 seconds)
  done (took 33.503581356 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.784464276 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.357320407 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.44170975 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.339816976 seconds)
  done (took 7.094760195 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.400335819 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402383941 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.419078665 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.464554712 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.497451855 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.416258382 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.325036512 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.319219507 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.305644862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.403068878 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.480794863 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.401446713 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.620999776 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.298681028 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.617700491 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.298241415 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.298732469 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.402709137 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.452164272 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.483514759 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.298688594 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414711018 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.405407992 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.401473434 seconds)
  done (took 34.999988561 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.306240265 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.316452835 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.300342258 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.316139319 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.301614077 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.300482702 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.302061239 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.307247248 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.300744623 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.300334937 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.301217976 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.314361969 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.300323895 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.30098238 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.307920887 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.302517599 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.302690193 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.307650099 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.310972846 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.302108309 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.300983997 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.307990434 seconds)
  done (took 29.884846599 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.284522808 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.286288178 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.636081179 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.541974605 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.28472404 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.291121074 seconds)
  done (took 13.498438462 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.357355414 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.490073961 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.293776249 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.619584269 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.712128705 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.298406359 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.293508586 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52537337 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.80612677 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.805135578 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.345451673 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.359501437 seconds)
  done (took 19.081365917 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.292856369 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.292284513 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.295650472 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.309697601 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.343047734 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.296265725 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.300506602 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.286898538 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.350868859 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.347856064 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.296319141 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.344476889 seconds)
  done (took 20.931765765 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376434841 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29613596 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296710893 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377458767 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301366266 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299062194 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.295233311 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99461943 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.309546926 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573345247 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298791906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401960235 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.544602796 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310264001 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301237016 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.23019849 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.529640278 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.756845089 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304187432 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299465137 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331177379 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.308197699 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304307843 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515484541 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30633404 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299046443 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.561590727 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297309977 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563840267 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544381798 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542569918 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307388815 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57637197 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928624136 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411886707 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493882961 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299395962 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306923624 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.283590509 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.306398481 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320737212 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304887329 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536785149 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310034591 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299801149 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302024609 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996762415 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.311301402 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.299924784 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301703369 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.538990039 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390807879 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.307443236 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3007821 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33953573 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299870837 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.306354093 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419592111 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939736498 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300903317 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326115647 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.308325816 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.290997318 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316887753 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919942763 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.309033756 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.307889956 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306811566 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302229346 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307426825 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325065343 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301795992 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.322061435 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301600594 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.038351735 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322037772 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309431613 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.817434582 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318921861 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.307640959 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527195159 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302697596 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303058615 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.301304814 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.302497409 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005824542 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313013262 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.269653119 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.341696964 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.997811789 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.503958138 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330840463 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333156421 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523718995 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.271377709 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304696939 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.309408957 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312065758 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325486403 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998070752 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307599929 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.311607258 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.549961379 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.515467004 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303304673 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.266007437 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.759035502 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322626545 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.331411736 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305288007 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.506160731 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.904060367 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.550033711 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312862057 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346014952 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.304990664 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060700113 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31916515 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.315895259 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318462046 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578005924 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.081654715 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305669102 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378963657 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305774005 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.306089117 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308445226 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308395465 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305646178 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.47830336 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313696714 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553732647 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.316447015 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306555047 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.318333677 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325226713 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.314590813 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527343504 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318518474 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588442414 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306048669 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30726344 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307887657 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.527262298 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.322839187 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.320714857 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.646184967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319182669 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326111987 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555672824 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346721978 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421015102 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33780336 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.321270123 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.560874314 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.314662353 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.31381706 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313814198 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310522844 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314051849 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.316602373 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31487247 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908005199 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285762755 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314066288 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308882551 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.32549182 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382339357 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31675689 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.506138658 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.317470425 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307993213 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.337699995 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.312771771 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.532028946 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55039164 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.315887447 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485009254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.764731515 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908691628 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324807576 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.309140271 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.310500811 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.309247015 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310778387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310627076 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313285151 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506811156 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564486389 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306852116 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.915255191 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313152522 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.311188229 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.318305141 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.553252016 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.321541149 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311557021 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.322492395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316810175 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317987424 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558907974 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535700205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.327071594 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.311610819 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830654657 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.31805103 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313788983 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.312373552 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339248168 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.31121029 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127353376 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650702526 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302605138 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573971732 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319173139 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.33553785 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.310661435 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312088032 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313581069 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.356997745 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326057262 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.50994076 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.334152404 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315419182 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951361584 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075317506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859534605 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318768261 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.331480404 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320442338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000698479 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314104928 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315642203 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553526711 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.002825579 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314595674 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770327884 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.318969836 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054610892 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.555627394 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.545529431 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321699345 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.327203608 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56251538 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532622964 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340401879 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315339427 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321982941 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.282980176 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838709967 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313726613 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493047851 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004997851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31432474 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315876986 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.385986933 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323907822 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.697897207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32092557 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317104003 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326645931 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324265365 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.132624795 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.320586302 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316761113 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937693809 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.327826801 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.782912918 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321396979 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.515752961 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.567305805 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.54064307 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.329361135 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.319854888 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.560526474 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558183799 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32525639 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320673651 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865044823 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.17562954 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.325693082 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31972477 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072057995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325437941 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593077667 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.325710502 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.329936289 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324320812 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317595401 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319131631 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.317930287 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324393772 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295191588 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784702712 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.315378096 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326006703 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33072414 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325986984 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.565041645 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.334691325 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.915760435 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544157866 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309294514 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372546136 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.323935469 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318827562 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.302340059 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320599706 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.319730157 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333925487 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544501892 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318996359 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.2935828 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310739505 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.535199725 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.320192355 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.331661741 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530586373 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.326793498 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.327805978 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.095081594 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358860039 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.318950015 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321479347 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323199569 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.363955654 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395758171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518947227 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.570878385 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.573931077 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707846498 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340804325 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321933449 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.336183303 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401945161 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321473539 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.336396241 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.327897613 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915058265 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081122016 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.932690749 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567318403 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.329545657 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332011148 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321147625 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563179675 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321323346 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598739688 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322442208 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.314653298 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35052232 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33311059 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328653941 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538425661 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597878016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320801067 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330179573 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328996338 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.323839684 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.570571949 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.541161672 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787852484 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837789573 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324348512 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.322332272 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02074231 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.598508551 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323794477 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323962538 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322890992 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.339637966 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.358143751 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.336026972 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337395052 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547855806 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566733129 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96633141 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.571033221 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.515991926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.325223232 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323488363 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571349374 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157884672 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523521973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936119319 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021325893 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.5820614 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400033024 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.525368842 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.330025676 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561636018 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.335044271 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330273949 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327823401 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326712485 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.326462583 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567932121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935350526 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57947286 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.332636337 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.334134896 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36314655 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.524694969 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.555051118 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03620506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.553688342 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574483563 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341400673 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326449953 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934306484 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576020069 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333469091 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.332192329 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536178158 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.334272256 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365804291 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.203722611 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.327260336 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846039005 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.539048774 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349653068 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337314864 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032429999 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941351992 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.341465697 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798506491 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330417295 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34104874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61006079 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.335446598 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333399824 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615567212 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.333797535 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339808452 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.537178309 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.934484788 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.068386053 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.357367156 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364917163 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.331025126 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33178727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406487822 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335656012 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331474975 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.711218934 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.336804138 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329886619 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343078161 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.330744675 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346379202 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.336711986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331177553 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.339564636 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.336819568 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.306204593 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.351029385 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455523536 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862697369 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333959153 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.943645149 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.664966522 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.577677747 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34465359 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.304952892 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.336863686 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333782661 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331695123 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331194697 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343069009 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858041823 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.345333799 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.583329744 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344718371 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.542877644 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542973772 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.332876478 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535253369 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347138915 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.358684001 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.300255873 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332356986 seconds)
  done (took 951.780455332 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.322711704 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.327543623 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.333002692 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.381072308 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.328940513 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.323950938 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.329433351 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.378924332 seconds)
  done (took 19.932709535 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.330600416 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.33311103 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.328614426 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.332528045 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.324077865 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.859028185 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.329958629 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.333867326 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.344826881 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.335921859 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.332084716 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.977599252 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.339095637 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.330961532 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.333055217 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.334878434 seconds)
  done (took 31.708552781 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.017119106 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.33602606 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.816661386 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.347412811 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.353255369 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.345048391 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.45866932 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.326406523 seconds)
  done (took 25.209634441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.338136493 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.337966526 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.340363742 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.337523411 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.338158497 seconds)
  done (took 7.900240792 seconds)
done (took 1206.99411064 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.341684413 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.342461978 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.34165227 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.340602113 seconds)
  done (took 6.575715813 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.304499263 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.303926484 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.306243107 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.320826181 seconds)
  done (took 9.4453288 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.986072411 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.839485542 seconds)
  done (took 5.036060563 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.872997892 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.874709186 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.867743334 seconds)
  done (took 6.826271625 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.625038619 seconds)
  done (took 2.835644489 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.315532553 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.333290813 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.057320143 seconds)
  done (took 7.917753326 seconds)
done (took 39.845954576 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3356506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.090266926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.501069771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.336959822 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.487873098 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.483632994 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.577465606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.332685656 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.335850317 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.333242605 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.336945785 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.486792778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.564525228 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.088134578 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.565027114 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.090941426 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.511956441 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.328398866 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.330130439 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.327562504 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.57820379 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335647382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.33041877 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.338685357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.599055795 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.52900535 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.328735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.092411464 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.331132338 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.33036549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.473085877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.328701439 seconds)
  done (took 81.251676553 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.328149681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.32890623 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.334913874 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34336425 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.329063932 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.333255445 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.332105837 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.328951594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.329298268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.349867633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341591217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.329239658 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.32997063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.339977652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.332978146 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.339583047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.331696486 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.32928244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.330384565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.345131903 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.333281133 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.33640609 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.331732937 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343000624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.33042765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.341957391 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.332561691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.348795879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.330499933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.34262532 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.342128405 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.330590899 seconds)
  done (took 75.943665287 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3353649 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.331208849 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.354164488 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330354299 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.332012157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.338116812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.332099271 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.331021624 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.355721617 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.340765189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.341000473 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.333348939 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.349390337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.34779139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.335172211 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.348698671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.331107071 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.341591624 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.341983486 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332374215 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.335797468 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.33639137 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.332609933 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.335463784 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.332251304 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.331907883 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.337812198 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.332180193 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.332026748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.345009551 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.336189473 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.338929288 seconds)
  done (took 76.025264148 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.570852897 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.348394986 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.352053316 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34376515 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.351114153 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.34832452 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.342229459 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.580315487 seconds)
  done (took 14.453614334 seconds)
done (took 248.885318528 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.355517804 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.823679196 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.36773584 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.350042308 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.35980056 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.367662158 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.5597077 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.368257595 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.557853885 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.362791537 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.373219421 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.354882381 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.117751513 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.500444677 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.147499365 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.250949878 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.19473893 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.334620694 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.889214798 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.614190655 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.372437931 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.342994253 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.134318256 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.205265706 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.312676153 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.425083871 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.436103072 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.564828246 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.501441012 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424890428 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.831672765 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.343184385 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.350752249 seconds)
  done (took 62.713902505 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.340809579 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.349766147 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.351875617 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.352539206 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.351720594 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.352157192 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.34146205 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.350868967 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.352003351 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.352366902 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.352601237 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.351525038 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.353178694 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.352084827 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.352781422 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.323492251 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.342662639 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.35340856 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.341992209 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.323963166 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.352189838 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.353120159 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.356387459 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.352924599 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.355359519 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.354227184 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.354157663 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.353018174 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.352740335 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.35181623 seconds)
  done (took 41.697844459 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.353051765 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.881348564 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.062151367 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.354491349 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.344085684 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.34924844 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.621131975 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.359871178 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.348749259 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.348659787 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.801186271 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.364924099 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.378555532 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.069168616 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.35286264 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.356206876 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.354463544 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.346647338 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.894065017 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.362340129 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.619817971 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362347306 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.622716702 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.36244007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.348716846 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.348063483 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.351200966 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.162154717 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.372109238 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.798462131 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.091571853 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.622194009 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.098889768 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.122445008 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.085685509 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364315458 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.356169421 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.80152326 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.353583953 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.347147374 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.621332331 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.354610284 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.07523374 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.043411833 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.363102937 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.357167184 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.19552727 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.804038109 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.58642393 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.359289904 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.103648856 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.356631005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.358490674 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.349656 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.579948558 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.355171666 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.348107086 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.181978236 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.358749515 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.623306633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.364850609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.349178733 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.897956272 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.355297093 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.889151993 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.355517159 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.356746534 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.349779967 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.074792555 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.35926657 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.049418834 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369326191 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.360545129 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.799901123 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.896826026 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.246075496 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.357685657 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.899405938 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.129428483 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.64461601 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.360067905 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.137634171 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.644225909 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.359703572 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.364077442 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.360524087 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.359357813 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.420947593 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.620839451 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.959427181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.036336353 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.203750373 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.63314948 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.364482944 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.35170825 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.188644649 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.366569019 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.360495787 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.073152031 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047763765 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.372550337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.359772393 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.034220879 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.375731292 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.627667088 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.362198731 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.110231942 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.358415603 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.43284624 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.361472463 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.35865831 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.355014212 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.627746191 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.362628514 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.362735991 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.023970778 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.833344164 seconds)
  done (took 189.132324859 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.347518076 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.346575345 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.345739558 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.346230383 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.345243662 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.35395703 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.346775243 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.345604286 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.35129663 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.345526457 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.345854383 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.355485772 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.353056325 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.346034143 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.357943365 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.348686997 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.347109728 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.36553134 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.347797422 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.347815154 seconds)
  done (took 44.217058615 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.362730494 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.896655325 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.862225906 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.371091517 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.362629403 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.353705694 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.408112623 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.363622568 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.363347523 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.643251003 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.523714245 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.371493443 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.363670219 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.364626979 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.8598424 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.341453602 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.644034351 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.903012544 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.371159965 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897420434 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.341500401 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.364418316 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.353915634 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.889080641 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.654341516 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.629254623 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.416578913 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896857838 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.370918014 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.364785533 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.889326733 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.365406031 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.356055019 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.872786982 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.366310112 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.377984382 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.365762957 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.411130745 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.411923289 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.642795125 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.897702622 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.639522578 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.376830863 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.518482877 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.371534683 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.335658259 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.902755087 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.366472931 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.33667376 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.367841904 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.371868948 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.874632116 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.365434026 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.876113874 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.374069572 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.367027906 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.894497161 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.87652409 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.872287919 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.526723903 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.365157244 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.632717884 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.368891551 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.904699393 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.368271601 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.367401023 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.36844773 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.522588607 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.900612988 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.632457911 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.651553858 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.647340208 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.371995375 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.425115429 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.368349586 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.644497244 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.422349807 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.745280189 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.651445938 seconds)
  done (took 123.07280565 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.622006396 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.473661334 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.727742458 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.920518324 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.84572255 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.492352172 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.467630308 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.597775577 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.369719519 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.46691184 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.97774638 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.445570586 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.112552053 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.430329714 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.459802756 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.476816549 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.741660313 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.283970887 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.988556195 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.964622137 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.37428882 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.45978216 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.868889839 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.570237711 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.360019761 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.90288383 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.258834339 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.859962062 seconds)
  done (took 51.75462731 seconds)
done (took 513.804453103 seconds)
SAVING RESULT...
DONE!
