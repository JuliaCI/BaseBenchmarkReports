cset: moving following pidspec: 29192
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.396778558 seconds)
loading group "string"... done (took 0.500131719 seconds)
loading group "linalg"... done (took 8.500536212 seconds)
loading group "parallel"... done (took 0.174087274 seconds)
loading group "find"... done (took 1.21521902 seconds)
loading group "tuple"... done (took 1.830149623 seconds)
loading group "dates"... done (took 1.325681529 seconds)
loading group "micro"... done (took 0.189516098 seconds)
loading group "io"... done (took 0.494226359 seconds)
loading group "scalar"... done (took 50.268343861 seconds)
loading group "sparse"... done (took 13.733819888 seconds)
loading group "broadcast"... done (took 1.289364599 seconds)
loading group "union"... done (took 9.111951893 seconds)
loading group "simd"... done (took 3.032421853 seconds)
loading group "random"... done (took 11.356407397 seconds)
loading group "problem"... done (took 2.1761615 seconds)
loading group "array"... done (took 25.055438909 seconds)
loading group "misc"... done (took 1.104746968 seconds)
loading group "sort"... done (took 3.741562615 seconds)
loading group "collection"... done (took 19.229939622 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.599943161 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129169458 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.265253143 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.280176562 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.234255108 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.167940226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144832738 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.246450401 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.689178209 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205184992 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137252385 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534309517 seconds)
done (took 6.44730956 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.253773384 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.24114138 seconds)
    (2/2) benchmarking "String"...
    done (took 0.163326769 seconds)
  done (took 1.159969235 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077231315 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.155547216 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108290253 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094191501 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093242866 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109267734 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092902675 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111274921 seconds)
  done (took 1.527249367 seconds)
done (took 3.776506471 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497552704 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.853344668 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.486169357 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141166491 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308436866 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.290878111 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.270340512 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20109491 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.093508504 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092006384 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173998704 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.382255737 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.385240364 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.926264934 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.091490637 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09574405 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130742993 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.748718203 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079995811 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122723503 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.49297709 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.17773607 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.098610983 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.122104371 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186181643 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134092411 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.158875689 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.103306349 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.656587501 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133194372 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176749387 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.098589368 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158095794 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.18504654 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193901469 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.111410502 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67896611 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202920514 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.086996533 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100680271 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667842167 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.119091239 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184625225 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104153534 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.087782874 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178961976 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.089144973 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.078886655 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.110309044 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086059776 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.1624424 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475842676 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.109340282 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171427005 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.09319664 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689507848 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097612133 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274064807 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126473475 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094568904 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.0919827 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088603712 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.157972697 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.094732532 seconds)
  done (took 19.860071323 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145922453 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.16516916 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078588043 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.157412584 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.124108185 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079225735 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102033692 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079473526 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125848056 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179622929 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13955619 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150636741 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09307359 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090942341 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.127265871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249537834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10730621 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.12203614 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090424025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089775561 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.140750667 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096576936 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109406594 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093000315 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170463089 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207104148 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112685153 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12674856 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095046635 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100045056 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142981325 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148316482 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096128393 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088863476 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189310999 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106733212 seconds)
  done (took 5.297924864 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202317909 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122471469 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.208789085 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162512271 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153500732 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.171013291 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125628231 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.270043055 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.200456095 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181160378 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116037137 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.122080864 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081783552 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081114847 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095678314 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.467656856 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150868033 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.18087977 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.157456397 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086639685 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099566192 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363257341 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100939792 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.077954623 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082104538 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063439568 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.212888362 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099672001 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.109147137 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107146274 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087341767 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134677815 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.199644553 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129698297 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.141361001 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083472232 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.085373711 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232632311 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105697414 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.168508481 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099670109 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.114853774 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135916747 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116612661 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100307351 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.090252123 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.229203048 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104030367 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096441587 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082331905 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.090873427 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087490565 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198848463 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.126232741 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09501428 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300210701 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086929168 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083841195 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.098133602 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084028822 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.82318022 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117676103 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082883336 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.100074393 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084305757 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078829243 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.439500431 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101034808 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.283711277 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083696957 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157357496 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085762755 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103326381 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087279254 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085324932 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106647239 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085550487 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079437479 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.10196681 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080808304 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089567594 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.127384235 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087311933 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081606164 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163903909 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.103326541 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085357498 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126114868 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082109698 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.102664234 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113278431 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098364559 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089430665 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.165077469 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083622326 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110335661 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102201627 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143362016 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.092577419 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.2513091 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098803336 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123496469 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099708507 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115631502 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.120928023 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081862757 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084749812 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096451663 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082352827 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.147341077 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.10401504 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082074424 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080485852 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110039585 seconds)
  done (took 28.25518111 seconds)
done (took 54.17156515 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.43507678 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081400984 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080703713 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.100352251 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081671085 seconds)
  done (took 1.614426705 seconds)
done (took 2.421846885 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319293868 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.190178026 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104472796 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189309675 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086563438 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.19479119 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.180999606 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095500026 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207416811 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083508381 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185262396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085215849 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106674799 seconds)
  done (took 2.867434953 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104685087 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111518445 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.119448866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.104769395 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085197339 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102096709 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.120389949 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111772969 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101498243 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113799222 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087537311 seconds)
  done (took 1.973303438 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101589759 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107116628 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099229881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117802376 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086411752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099874541 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118095153 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109702845 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101599637 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116370987 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086716236 seconds)
  done (took 1.955812692 seconds)
done (took 7.605894855 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.081819393 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.392539262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.166608146 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.209622681 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347705061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.238225656 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565449788 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155096844 seconds)
  done (took 14.115122859 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.163689139 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110692022 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.093711123 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094072507 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.095681763 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.114189517 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092181756 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092260829 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.109868985 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.09396602 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.094346657 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109241975 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09590306 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090115179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10982526 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096625925 seconds)
  done (took 2.530115777 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142652761 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.142046189 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.099559301 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098225012 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.112689472 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099617449 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10299207 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.116063585 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095505665 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094316106 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.119962127 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098671663 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096794166 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.111983956 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100292479 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117376893 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111060591 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.099378988 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116185522 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.117443378 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099947933 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095695013 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.114524963 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098603605 seconds)
  done (took 3.500950956 seconds)
done (took 20.958869682 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150028711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.102048935 seconds)
  done (took 1.067795489 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14194132 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.156974778 seconds)
  done (took 1.116410501 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113597754 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09062123 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138435299 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104995275 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091086137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.109126578 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117800544 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110215029 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091162601 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.092431003 seconds)
  done (took 1.88082315 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.09539707 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095716558 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124099486 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.135415733 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.11644957 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09461948 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095238344 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.093949081 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.116275378 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091391107 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.096152314 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.127141102 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096451577 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127652714 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.095679143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.097231801 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118338457 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096711114 seconds)
  done (took 2.73901822 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091925971 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09322155 seconds)
  done (took 1.010506745 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093849743 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089548289 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092551067 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111589195 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091256529 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089658323 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108127304 seconds)
  done (took 1.50178028 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48615148 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261177499 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355564856 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.110296232 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146837578 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.47063784 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148894672 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.105673954 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103520269 seconds)
  done (took 3.048860864 seconds)
done (took 13.185788045 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092440871 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222434419 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.629644189 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114331873 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.090102662 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162204637 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290479239 seconds)
done (took 2.43024597 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342388759 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.141948697 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082384858 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092369928 seconds)
  done (took 1.482850989 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083399179 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099873951 seconds)
  done (took 1.014581815 seconds)
done (took 3.327928284 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091039592 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08962189 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.089340808 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108614922 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.120189259 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.089377954 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.109968706 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090409152 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088549298 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.108764664 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.091231079 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090215785 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088284522 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.10857313 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089245278 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088535278 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106053863 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.089090705 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089502219 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088614795 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108044508 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089823045 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089274281 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.106246038 seconds)
  done (took 3.17252955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106433744 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091715235 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111300737 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095415088 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092989818 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110539412 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095545033 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090846836 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.110985819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.0911905 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093534287 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110723048 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092388808 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093559235 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107836326 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095044907 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093905477 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09032637 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109604905 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093711508 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092977983 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109831173 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093265403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092104736 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112027996 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093089528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.09113106 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110493025 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094706662 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092611372 seconds)
  done (took 3.790241236 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.100083909 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086713959 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089861908 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115623009 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086867773 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089615858 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.104499957 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.088156778 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.090217282 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088273534 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.110214269 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090473235 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085879143 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.109023746 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092023536 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092630375 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116820248 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.087640365 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086639206 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089952819 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111686197 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086946033 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088623903 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108718428 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.089954572 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086929393 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088915988 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109146751 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090426689 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.088291411 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110076871 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093836354 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088985062 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.118391414 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.093252157 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089618383 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.095204058 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.105654053 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091357406 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086575175 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.104439555 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090130983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.087850941 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113987338 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091440285 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.091263479 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.087375337 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109786268 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090772247 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092848926 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.106475493 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088253354 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091917221 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090701864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.111291252 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087604081 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090217596 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105844876 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.092187727 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089575842 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104038685 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088400583 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095470384 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089128661 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.123675632 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.096063632 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086824951 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.110693834 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.091697349 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094525737 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110949622 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.099738258 seconds)
  done (took 7.76751222 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103080208 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098665686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089870446 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109666318 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090584899 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089400595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113790222 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090912377 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091585968 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11520886 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092694593 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.090856207 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108786548 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094331833 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090784632 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091374927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11539732 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091191356 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090035335 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.114299807 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090882314 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.095657179 seconds)
  done (took 3.004734981 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.236530578 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098305745 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.136992889 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123152014 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108489324 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.121467874 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094849819 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096033443 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113188854 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101771569 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099259507 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113995948 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108093042 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117101694 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100879016 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100692028 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11179891 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.102525988 seconds)
  done (took 2.931998864 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104154476 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092814753 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129340228 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093849149 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093537052 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091725187 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.117434304 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113520346 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.111853143 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094412971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.100236573 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113519505 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093728712 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092199966 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092424031 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110322359 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093163819 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092632062 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1179617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096962539 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097066977 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.119459098 seconds)
  done (took 3.109887459 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107492747 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093250966 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.128181606 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097905702 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.091600789 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110571931 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.099282881 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091964595 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.118365308 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093949707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092787584 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.092596093 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124388372 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091860063 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.0973524 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111073176 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.092148772 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091880489 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111968287 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092166732 seconds)
  done (took 2.880745828 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.169807006 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12561696 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109481592 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116243697 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126022816 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107775413 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116351477 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.127887034 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107248092 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.136779294 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108607771 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108681183 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.135438118 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113281001 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12686106 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117786319 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115065417 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135124754 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109006336 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126057938 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120705646 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107036669 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134096449 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108206695 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.126501712 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109997843 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107931417 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131743203 seconds)
  done (took 4.237754841 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091619585 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092051226 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089735652 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.108925688 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091494975 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090565099 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.09028379 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.110505694 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091007917 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091593915 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.109742474 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092889738 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090762489 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089824232 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.110254847 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090911312 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089531008 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108826807 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091720258 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090909392 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.089832579 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110530866 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091430642 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091426387 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109574563 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093900768 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092124849 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090359578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110361276 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091268312 seconds)
  done (took 3.73225155 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105146493 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101393359 seconds)
  done (took 1.06303139 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099611351 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106116915 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091712677 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.11070287 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09920218 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092081712 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118671414 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098567633 seconds)
  done (took 1.673487896 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140032207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.162144916 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096764942 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102988197 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.161846216 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.151708006 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133786888 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09462963 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109562109 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085901463 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.154834066 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086090986 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092784274 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109595366 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.094067811 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098597183 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.110550014 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103019279 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098075137 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0927815 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116680331 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098450127 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112144171 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103556913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086319607 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11204337 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097019282 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103596893 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106299174 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095101977 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090103273 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091667416 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.115071304 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097114061 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092834323 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.163016582 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09814304 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108320759 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093703121 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095132521 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.144522949 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09388424 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.09361569 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109494548 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095889143 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09596502 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.116194034 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093775254 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08434043 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.106416625 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094300249 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087809355 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090402626 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112592678 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.094868123 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117146057 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095815708 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087998557 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107023677 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.089902207 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091340447 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086937211 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114206137 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095820739 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111798325 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095005385 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09247697 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091958935 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.113793832 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.0940233 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.092195988 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126968113 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095157239 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096898512 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116534636 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093541708 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088720785 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116908367 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092712204 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09376244 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.11619984 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.122360484 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094309082 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108319766 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090516298 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.098932579 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.114980096 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.09577674 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084602496 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120778889 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.096347287 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.094407953 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105543871 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092632814 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088363389 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115076872 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086416261 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093065998 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090352081 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.115238536 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097740877 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090774627 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113617546 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098092396 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097648899 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.11137242 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.135698854 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109307878 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.08923685 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093947121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116058742 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.088398901 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092924559 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.091503171 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110635195 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0894112 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096566975 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112419031 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09405457 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.095703299 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114422453 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.096285759 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094288192 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.11200117 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0897672 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.097131837 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.12012577 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095529195 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095465374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.112029507 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094893896 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.093202643 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.115192018 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.091370542 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098064737 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108882285 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09522689 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.094786381 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097484351 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.113488785 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089484769 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09281491 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112767877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091772472 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096095825 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.115355266 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089599392 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084841391 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114292169 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088674037 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094225915 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.120613465 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090890859 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.093389847 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.109905937 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103263609 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089463067 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.117337897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096294137 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098309148 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115711914 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087270118 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090656471 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.094419182 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.115964042 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090657018 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.092882245 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.113878603 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099855323 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086455629 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.116949276 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.08643665 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090480394 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.115896633 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095962735 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096567141 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106728078 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132652751 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104759845 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117000857 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093790289 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093010566 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.115125285 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097814188 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.098118764 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116194124 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.098562374 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09056696 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091287954 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.117876941 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.089810687 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097200537 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110973899 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0957977 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085869658 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.1140092 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086375338 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.09731017 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.114182084 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.098215897 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.097993325 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114632566 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093793311 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101193455 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107556443 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098329935 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085423132 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098039929 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12524371 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.099926388 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098340193 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115394079 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092136798 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094647241 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120935383 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.096112715 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093107522 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.114534746 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087309139 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086477208 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.116148272 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097308202 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090575387 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09257609 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115709566 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095121311 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110196348 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088722157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098669481 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09555293 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.110024897 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095562271 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089564339 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112257111 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102128568 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.085824555 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.110767979 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.09668189 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.097538143 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.113249136 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094417319 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095893227 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.120400032 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097036082 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095064394 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109807439 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102798234 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091366945 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.111564857 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091699801 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097467951 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08672133 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115344858 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.095025813 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090342437 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.110999329 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098787164 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099467638 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.11875008 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093155447 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.099678893 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.11932271 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099867141 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091078988 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.119218532 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090910514 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.087383307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108444905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086940807 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.094697479 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08929802 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117906506 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09258079 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092886067 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.117143149 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096727864 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091874904 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.118530451 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103926392 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.106649421 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.088264868 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09254082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103275599 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111506838 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091036742 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.093993302 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115138263 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097576503 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095392114 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.111045624 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.094233299 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.099179443 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111211205 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.100233343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099203628 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.120323371 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.091937414 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098284397 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108668464 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.099412801 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08742368 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112110799 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094118579 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093604102 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.109483972 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093957662 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089799214 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086882386 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.110922315 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.099797321 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.091857379 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.128382974 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.093648478 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092169693 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.111015759 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091436291 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100418718 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.113064041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101232873 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095061584 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.107455081 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089325745 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.09960703 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112721446 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101839646 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089932542 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.097048087 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121728604 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098400171 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.093786507 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.122154208 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103727032 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.098608334 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121715211 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087633757 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.092310878 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118567724 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095297878 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097191445 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.115776161 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.089206846 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09637473 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.118381785 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096216923 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.093056891 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105732733 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097524774 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.100494039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.096760142 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.119522026 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098283584 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095034598 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10944756 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100234468 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100180954 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.114315255 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102605047 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096152567 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.117481491 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093554439 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100466034 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095545175 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.109629932 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089436054 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092843383 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.121514395 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090161324 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099482681 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.119336121 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092930909 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093247647 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118872802 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092234025 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097640395 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117970063 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.094275715 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103591599 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096636839 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.113988905 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100524008 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099110601 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.108774584 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.095203378 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093356565 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121818313 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094421355 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.0991656 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115291955 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100962434 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097731772 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.119828521 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.102039672 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100317146 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108602454 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105007042 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099123121 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097565368 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.113984732 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094307236 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08943115 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113681831 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10282054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092849924 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124997865 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102596035 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093834791 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.112386141 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10281129 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093352849 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121329971 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093629124 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096815605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.107873596 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.098419361 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094828947 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.120599929 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094752441 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090339073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119334666 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101430611 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098738159 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096930715 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.123255624 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.089697816 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088449816 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.118179699 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092172309 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104698655 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.117805453 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094363675 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093716479 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.117233271 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097249595 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102031939 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10912398 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.094841491 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096390261 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116405632 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094597349 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090428391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098916262 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114889297 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098370713 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093840273 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.11145851 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.095375229 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101734857 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113690532 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092853655 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093042616 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.12262456 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.095573044 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09215019 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10885205 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103312385 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.096957236 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.121920754 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093398589 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.096617153 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.11507541 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098620263 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102079085 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.114266373 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097419204 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.09410848 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120049944 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10218283 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.091603994 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.111674387 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108073075 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100652413 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.117099143 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099580165 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095742059 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100554268 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.123544425 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098865559 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090443146 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.111120093 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.095650356 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.089954825 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117280886 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103457484 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09441508 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.113490129 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101064934 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100711891 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097784981 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.11866881 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090921681 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10193113 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.113802633 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.100307093 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.089341133 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.109508975 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099317461 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100584564 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115121534 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.09892039 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.098214055 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.116362058 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091795726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092974798 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.09855078 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.12128668 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102628369 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094468616 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.115022228 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.09805273 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105152202 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.117927141 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095108154 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102862115 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.122610586 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097309533 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095238767 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.119974657 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102291309 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097899133 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123520983 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094654253 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094747292 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.122313354 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104532091 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105643641 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114729249 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091528165 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.099685538 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113709648 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091646865 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.099794693 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121985661 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104256255 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096173167 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092361132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.126713813 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101634362 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115567129 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.096089162 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094127816 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099790969 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.11522175 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099391613 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092174551 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123236244 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103491695 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100243687 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.124706556 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091712449 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101168122 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.119044913 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.10605673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097144891 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110065164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.091797147 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.0991257 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102055966 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.123122879 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101059737 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099537833 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.122337584 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.097947732 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095662333 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.114604048 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104564471 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101105274 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.117616809 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100488417 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.096762063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116038753 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098475009 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102088614 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100953204 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.118686096 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106634679 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101021911 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.116566422 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094653558 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097176674 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120355303 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098253009 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100462038 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.113773287 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.092622173 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102559145 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.122061814 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097299707 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103975602 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121909769 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.096909087 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.09996302 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.123352631 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103818905 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097930419 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096951711 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.120426358 seconds)
  done (took 62.080734818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14558071 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104527637 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119670452 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098289544 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116287271 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120680595 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09937242 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099050316 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121111687 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108352836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09810685 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117308794 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114314221 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138509636 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117655958 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108418377 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118092031 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100507603 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098322837 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11933261 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113957051 seconds)
  done (took 3.279504863 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116179151 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.113118366 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.131648764 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113245768 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105714665 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132949438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110979894 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130159285 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113030537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107121246 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134330072 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110529248 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128327421 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.10834642 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106935715 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.129800015 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113044544 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124711778 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112247963 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111010737 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.127959357 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111566773 seconds)
  done (took 3.497290996 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.12963956 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102364497 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.09690619 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.11974028 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102946943 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099325944 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122486213 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100081445 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105955209 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.113241172 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.090944027 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094393142 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.117462164 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099477068 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.092783307 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098790913 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127105285 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102779748 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.1034703 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.120154743 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.092495021 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099253381 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.118957993 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.092012804 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104006672 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103918874 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.120364504 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102764324 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089163816 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.122281509 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099864556 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092740628 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089373115 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.11134037 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091099264 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102303303 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.123378221 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.100572901 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098971437 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10943852 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.102748706 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.103379627 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.089564732 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.120892384 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099453459 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092022948 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.121801421 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099916206 seconds)
  done (took 5.940262232 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130229966 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164149944 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103808126 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137209124 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136642815 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.108633785 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.12463266 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138197234 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101140301 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.125542717 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114839823 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134299966 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105103553 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107222499 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.126870013 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105470854 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104673219 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122052464 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109138786 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102744847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.365039831 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.105516035 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11425126 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.135030816 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105650391 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10272468 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125817148 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.106797179 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131518053 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111216202 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107350157 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128949481 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.115114541 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105318595 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.125230644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.104161686 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.11371621 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124103432 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.104090153 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100281423 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.126282273 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105619969 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103551072 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13628052 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103629678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.1256977 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105474641 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.1007436 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.13253572 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.106145245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.109124352 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134009928 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105342734 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102751984 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.126939928 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114263371 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.12394943 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103699853 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105315097 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.131935344 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102087346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10753511 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.133345369 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104247564 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108520497 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.134082534 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104783311 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104146152 seconds)
  done (took 9.161740426 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134090584 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10673663 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134499602 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115406311 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105702484 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128587223 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105931207 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.126778834 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108164277 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112252689 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126230546 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.195946103 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.123872286 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111163154 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106041194 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.128854195 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10640764 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105116469 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128145774 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106941162 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.126731245 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116596693 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106062731 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13531958 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118474278 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.12336912 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106933511 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106495336 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136352952 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106920445 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116925674 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127465925 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107209825 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135519224 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.119026125 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106061012 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.123326754 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108109066 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107242751 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128094677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104494664 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115080279 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.129604038 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105626158 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106193538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128500238 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.114944149 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.138700974 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112354519 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110534011 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128477371 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114392633 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127144073 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108112425 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113640472 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142806322 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11488533 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135992143 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108072831 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114547422 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13526721 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120163093 seconds)
  done (took 8.326341579 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102446512 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099796182 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.10044781 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119743551 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.101364045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099495349 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120900502 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101776573 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10017157 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100962765 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12186776 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100486341 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100163564 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098685327 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121963608 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100067518 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100072933 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.121621822 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102189626 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099884861 seconds)
  done (took 3.034835351 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110299321 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11789948 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.123117563 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109709442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101959675 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128556026 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.103436171 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102261476 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123704086 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104581592 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.11014395 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.130502702 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103866256 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107536871 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132046786 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110248372 seconds)
  done (took 2.741047992 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.121607772 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11871267 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.188564759 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104296655 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123504075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109856335 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101951757 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125026644 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103210588 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108040887 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104333107 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.127968328 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102509566 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103254436 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124907258 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105898571 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101206603 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.13011768 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103995022 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.18582814 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107005727 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105066777 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125284795 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107868006 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104389905 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128707074 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107667766 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100656595 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125411506 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104972584 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104579261 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.130695035 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102710151 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106540468 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.124734451 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.105175933 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103313417 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102467053 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127551727 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103015583 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104249094 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124627255 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103222301 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104837924 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.122816847 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104736411 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.10074002 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.130180248 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104371078 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104880887 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123133971 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11074431 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107694792 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.13177818 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.112329951 seconds)
  done (took 7.237401548 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114830192 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103713601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.134030535 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102736158 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103829856 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.10303773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125231962 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.104957744 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103895631 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123361844 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105453533 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104435084 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124970866 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104638333 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.103959603 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1235338 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102524075 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104769449 seconds)
  done (took 2.924094008 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108508148 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102492458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105250888 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.12501905 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103521071 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101514238 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123931252 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103258998 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102235786 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.124007778 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103186764 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102372018 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102030693 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125218931 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103739617 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102820714 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.124214177 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103664202 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10218666 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12382515 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103866037 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101690227 seconds)
  done (took 3.329258086 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113752707 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182335666 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109497679 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.18996697 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100458789 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097984291 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129352321 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.101234927 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113837443 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.120067623 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.09884354 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.097813225 seconds)
  done (took 2.387750572 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130754378 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13848612 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124483953 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10388296 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111456109 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130380028 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10710344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106962782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138167891 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116701888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127941388 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115705509 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114484426 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137240291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111290799 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13266952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109007818 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106350631 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124638461 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122855574 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106070607 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138075588 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108011862 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128121594 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10950709 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114982761 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136997494 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121303023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128456575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117104316 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111608748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129644472 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117580671 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139518932 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105593736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115418029 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129698701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123505359 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112616382 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137265673 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105065697 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132101545 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116442266 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113470122 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136260097 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107780254 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13355477 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110146993 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107658903 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15068976 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112361829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13822202 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113692741 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115504581 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137167547 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130004379 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.142197307 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115636065 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133434639 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120964054 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115826268 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134321998 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116717234 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142201037 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113087588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115713411 seconds)
  done (took 8.989473414 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144409529 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104783908 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129063962 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122250041 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136417517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109953983 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111651535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131166947 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11079911 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103691963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.172889105 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108874649 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138009146 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117519611 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10885196 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130072789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109342752 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114664041 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127443309 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128428782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129604945 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115954145 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137003701 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118934233 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119337978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134771726 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109462041 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107952972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130348085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108747247 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134528083 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110337949 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116274706 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126900871 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117399757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107918109 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130307254 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114667708 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108038559 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135837626 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117299597 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143430052 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110153396 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107980894 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143155471 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107688064 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129119078 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106119704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109225221 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126670562 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12077468 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140635545 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121925435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115548417 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1305111 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109312667 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108482661 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130870594 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109660169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112435892 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14060694 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109559203 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150256932 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109112197 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108660148 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139321109 seconds)
  done (took 8.976576541 seconds)
done (took 170.101370886 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.148643205 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.185823138 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145843565 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.179173278 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.096293532 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.129465137 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.150380353 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146916713 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.094218235 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.117461545 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.09447712 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.095993726 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.184628611 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095700093 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09519196 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118488951 seconds)
  done (took 3.014639011 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193984999 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30380301 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109524588 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120621459 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100927939 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09887897 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120699184 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102053822 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099469574 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128602403 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099687011 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095410648 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129024994 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096783382 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100467038 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.120967555 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107783374 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098617062 seconds)
  done (took 3.169326671 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.12031879 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145020165 seconds)
  done (took 1.210665801 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130676776 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.210997818 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.280670385 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169333076 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119731169 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140239682 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146666517 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.135006196 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187651579 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.136312678 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112605207 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097727538 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148586417 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105629567 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.138592512 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098797242 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.126040032 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.136092412 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113705195 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101662737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.145296769 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103389779 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104288961 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135869472 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179587336 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135355318 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103213596 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10211567 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126372113 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.112685146 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128183506 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117567821 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112345366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180178835 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125584751 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.153556798 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.128751453 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.10176827 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113086452 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.123150807 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.105282999 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10415416 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.137048253 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098484068 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102857966 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.129463266 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104460257 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.123120056 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108829362 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106496079 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129064356 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.107036784 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175959294 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10725801 seconds)
  done (took 7.951224003 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.853320638 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142044116 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099999401 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.002778396 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.151833857 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114503852 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.847603382 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14581955 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254015505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.879062812 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116262898 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134807994 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237249952 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256705969 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.285387018 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.356219115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.720594862 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114290258 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.128168479 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.163420567 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108283275 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149743445 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120127816 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52169677 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101824318 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.124200598 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109973867 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114262191 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178092081 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100589344 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12842579 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196860197 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26988407 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206299225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125896461 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100476307 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09904769 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.185648619 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268904227 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216720981 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.196484406 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098138055 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098964987 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132643786 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119792946 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120730463 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158717336 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191345672 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191910851 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104478978 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.138838827 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.112932795 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130158474 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154062859 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121965996 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.360943748 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364372243 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100381017 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131796265 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.115666506 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26525905 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124508877 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234477346 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127320043 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21327939 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.123041347 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.842083679 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.163187278 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.123312042 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108225053 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128441864 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10939192 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108612452 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.191225735 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.479982151 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135371362 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105546466 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123594659 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.23114589 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102613667 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.101098525 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182335455 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101934592 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130858376 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115299783 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134919292 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.168259877 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.270103692 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134518286 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11306166 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.107949436 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136280768 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102620589 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232240689 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228297605 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.174265147 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213776362 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133389727 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181838738 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.163330267 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132380435 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.187807828 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110784117 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116894461 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134017516 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221387252 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.155303895 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105604684 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105680614 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132516883 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.137667809 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104398612 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.133888106 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.188600111 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.558049918 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162716178 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.120264338 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107192706 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111326549 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178807247 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108388955 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260056406 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135364683 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184066825 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.109182415 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098678803 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131318683 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159139292 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134221126 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111007261 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131428381 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111686681 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.279730757 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.221262713 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114999281 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.248233154 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19863582 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108868222 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193556638 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110032802 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187300977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13411554 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111182433 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101210089 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.831257104 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139289412 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109547284 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129344967 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186040631 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101161718 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12668349 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101187374 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098545421 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.810847477 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128115126 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099355515 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103637472 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132105147 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109993293 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109947929 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.137007874 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178820381 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24350639 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114059467 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.132085808 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101841923 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.18066718 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103567676 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10221559 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125839692 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103548916 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111398907 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.130680226 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105314228 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.19348574 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177009733 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.229358083 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.641696445 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101455833 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101922743 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.262621192 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102938931 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323201174 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13001061 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23590407 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164170241 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.123373949 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.362004741 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188748263 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.18599464 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.129283842 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.168553697 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122651007 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.110224423 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.182231508 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101734819 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130564147 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.154367033 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.139824943 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115897782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.275372665 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124752212 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229019203 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.122404183 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165810485 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126665789 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109064915 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322796067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124256922 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120420425 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.181737439 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106248436 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125026901 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.651785651 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126764472 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113725959 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131473188 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.23438188 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184667558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11093567 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111706378 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.138855197 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180313573 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.211242216 seconds)
  done (took 47.987180255 seconds)
done (took 64.276759694 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318193012 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270738357 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.462442045 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.225799915 seconds)
  done (took 2.320844115 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.246500569 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.162843188 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.211263623 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.122773192 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.216003875 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099356084 seconds)
  done (took 2.031622946 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.677430417 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.405756773 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.353466654 seconds)
  done (took 2.414533452 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.301800841 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.28733476 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.336786528 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.422281595 seconds)
  done (took 2.414450316 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.269440341 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131765964 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124861646 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.206047109 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.239822649 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.218658627 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.134132675 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.187863887 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.151513245 seconds)
  done (took 2.687015998 seconds)
done (took 12.842053367 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.164059885 seconds)
    (2/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.321117708 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.191426744 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.330257582 seconds)
    (5/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.229846128 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.312795984 seconds)
    (7/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.13651898 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.166468273 seconds)
    (9/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.153570963 seconds)
    (10/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.26656586 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134126142 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196863855 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.136475284 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.289024845 seconds)
    (15/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.204322554 seconds)
    (16/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.22119043 seconds)
    (17/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.131193785 seconds)
    (18/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.077518778 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.182514084 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10682311 seconds)
    (21/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.077795331 seconds)
    (22/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.163567079 seconds)
    (23/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.1767742 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.203963393 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.203370786 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12833541 seconds)
    (27/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118487659 seconds)
    (28/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.203668069 seconds)
    (29/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165282115 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.177311769 seconds)
    (31/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107085367 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.158337536 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.100947368 seconds)
    (34/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.205978976 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.171806398 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.101772477 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137207761 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192396353 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110329117 seconds)
    (40/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.260200233 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.225279133 seconds)
    (42/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.18753264 seconds)
    (43/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.099959266 seconds)
    (44/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.111003109 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.1638357 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109474787 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.189389492 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.137233684 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.125144018 seconds)
    (50/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.169950812 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.239756685 seconds)
    (52/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.141171845 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.282792666 seconds)
    (54/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.149215135 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.112914462 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.161309358 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082255441 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.082146025 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100774044 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127339109 seconds)
    (61/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.077517831 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.192683825 seconds)
    (63/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.100740666 seconds)
    (64/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.098066504 seconds)
    (65/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077247927 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.101403349 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126102651 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.1040034 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.123170381 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.206826989 seconds)
    (71/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078404099 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078071065 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.105974615 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.161569244 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.180139451 seconds)
    (76/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159971788 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157581999 seconds)
    (78/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.210465456 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.102804163 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.121443644 seconds)
    (81/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.166927105 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106389154 seconds)
    (83/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.139985601 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148361795 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.082216977 seconds)
    (86/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.173731866 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.101071706 seconds)
    (88/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079855922 seconds)
    (89/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.243308504 seconds)
    (90/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.102463941 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.181781207 seconds)
    (92/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190959596 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101641173 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110980914 seconds)
    (95/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.134848173 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135993831 seconds)
    (97/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.15765992 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103254312 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.132951369 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126555595 seconds)
    (101/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.196454968 seconds)
    (102/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.07812595 seconds)
    (103/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079330684 seconds)
    (104/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.100325767 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181044451 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110651415 seconds)
    (107/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.165601686 seconds)
    (108/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.102749988 seconds)
    (109/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.084572832 seconds)
    (110/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113280943 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082090005 seconds)
    (112/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134411862 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.078667197 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.08301083 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081768893 seconds)
    (116/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.132954273 seconds)
    (117/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.104429666 seconds)
    (118/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079092106 seconds)
    (119/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.082958592 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.081567544 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.13331404 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085626618 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.111745442 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.114132062 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105629358 seconds)
    (126/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.084103909 seconds)
    (127/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.141689904 seconds)
    (128/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140242133 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.134482237 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105673316 seconds)
    (131/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084268892 seconds)
    (132/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.138908697 seconds)
    (133/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.192499042 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.10339765 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.14315304 seconds)
    (136/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084573696 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.10284217 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.081508982 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.172687029 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.128604948 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.078124892 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.083587354 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.141233958 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079323653 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10279041 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.136493916 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.106364566 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078534056 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110692864 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.127821299 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083278424 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.101695389 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.08256939 seconds)
    (154/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.102590091 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085592871 seconds)
    (156/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07911092 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110119575 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.128154351 seconds)
    (159/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110332845 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078053569 seconds)
    (161/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.198818409 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165453151 seconds)
    (163/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077575954 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.078202292 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.125279598 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.079953488 seconds)
    (167/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.078183266 seconds)
    (168/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109491603 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130109205 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.079525463 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.109816998 seconds)
    (172/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.078195815 seconds)
    (173/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.078431194 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.149948524 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.083910727 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.103892755 seconds)
    (177/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.07845114 seconds)
    (178/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.109044593 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.079342354 seconds)
    (180/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.112574321 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126920859 seconds)
    (182/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114945214 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12227068 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.077531967 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.128709923 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.111160628 seconds)
    (187/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083673079 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078449705 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.107253379 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084921198 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103809385 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.079053486 seconds)
  done (took 26.471409302 seconds)
done (took 27.453296975 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178232923 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.104355377 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.1359474 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111722997 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.200754725 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117109386 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.125369389 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136498512 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120981439 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.110946732 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125883977 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123875954 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110034151 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.20302089 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11300174 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12771046 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102940729 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.120165017 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.150169749 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.127312155 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200380972 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104966693 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121397672 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.127896494 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.178876543 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128051801 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11173573 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111831022 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.147071267 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.112448051 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.111561819 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.101772745 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.152984004 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.12696437 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101624215 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.13733321 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103479013 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.085390262 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.135263711 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114400635 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122820141 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136487796 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11208248 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.103545298 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135879596 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113716112 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101971639 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.137240851 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102977705 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111839253 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105144566 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.154036309 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110085102 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100937689 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.126935754 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104203771 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.121127687 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128315174 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125580916 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.103550436 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.129190821 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103000856 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113105358 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125950658 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11220017 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103409379 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134532206 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115872727 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110557766 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.104280723 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128020977 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112753955 seconds)
done (took 9.936698359 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108758121 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148258819 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.199912323 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.210322086 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130255327 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141937455 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117677397 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126060291 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138991753 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122186213 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139315024 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15794909 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18158745 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.143977769 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117800167 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114181525 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.139721509 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111067572 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.207045668 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12751127 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152022462 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120181381 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129265284 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.145473792 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107464179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136624606 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.136977714 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.11417817 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.106740129 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.141024144 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.127288702 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.106279418 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.135994401 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125726021 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146834816 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118364057 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11710423 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137833032 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108319748 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106396179 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140938333 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122969932 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107565781 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.143174623 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116058857 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121381123 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140537752 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121118742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107488536 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.139089967 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109660454 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132616766 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144622049 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123792739 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118985685 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.146202963 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119908886 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11969605 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.135348196 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120633724 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10712752 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131448133 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109420421 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.153562873 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.112401876 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119829008 seconds)
  done (took 9.690088885 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127097981 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135900222 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141539074 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118686802 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111931431 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125699114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101423586 seconds)
  done (took 1.896407535 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103939856 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185207356 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209206288 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209700976 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.179122844 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219203977 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.151958376 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.104091857 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137383798 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137615587 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184519998 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236548936 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111358291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.144631744 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187157619 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.128793364 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18722373 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.129865668 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117404321 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211938538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1195602 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15747883 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116961753 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102894316 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.205066325 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103519953 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.261960031 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121098251 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.139782886 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116362987 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116271663 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207318561 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.208209901 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.118111603 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109929839 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.210231797 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.204864867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.118669754 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.220908259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108141646 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.205276878 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.118204668 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117866744 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.145238368 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118166341 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.195550353 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.122634151 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.117929088 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141366375 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188046218 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.13993601 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183601946 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.139965544 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11768708 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113423015 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.14457553 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127374383 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118275731 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.2143434 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119999061 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209500848 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.210293854 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.182149688 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209615288 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126078435 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.211810704 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.20260601 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116740026 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.1121057 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.145291593 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.186174798 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.143070147 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117287522 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.200594444 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120528737 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.212912681 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.186282087 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141458076 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.116684435 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.105621311 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.142058056 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103571402 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.202933125 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117558243 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115042532 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1468242 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117277303 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11774092 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136081885 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126654779 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.140204002 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117766343 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122371509 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.142329967 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121721775 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.217348836 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115188502 seconds)
  done (took 15.829813275 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107570811 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105651411 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108646573 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132237464 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106059965 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105118842 seconds)
  done (took 1.717914709 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14217053 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11873709 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.152169662 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120069414 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.189184556 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.192210706 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.220390682 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112248047 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.160785169 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12839416 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.218086885 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.19310875 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21720656 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12077854 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.221480078 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120171915 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.223449464 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116753835 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.154227225 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115957317 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144143712 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.124872064 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11661637 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.208888984 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11854336 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.145088821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.114057471 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126593931 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.151565533 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113835665 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121323447 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.145338543 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.112054926 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11306295 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.221661091 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.13666505 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116295992 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121085095 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146388999 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120877611 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.219725777 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116824287 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12395751 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.148082705 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.114617928 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11139791 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.1476871 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.113031827 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.222052217 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121289839 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120410279 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146617392 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118764044 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.120629032 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138535235 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113781968 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146720319 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.197376091 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.147619949 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113027056 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119133364 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.145403986 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113830504 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122814504 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.146355989 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121587104 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110269082 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.146669722 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117039431 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119256497 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147649135 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120298973 seconds)
  done (took 11.342125079 seconds)
done (took 41.503025642 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.506697574 seconds)
  done (took 2.555772775 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.877419436 seconds)
  done (took 1.927931461 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.615696231 seconds)
  done (took 19.696856419 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.53858048 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.629140275 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.165038003 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.168847106 seconds)
  done (took 3.552358876 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.047824079 seconds)
  done (took 4.115646961 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.291983299 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.272579948 seconds)
  done (took 1.619667213 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.737773218 seconds)
  done (took 1.80619529 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.500905051 seconds)
  done (took 2.55623946 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.406099722 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167169587 seconds)
  done (took 1.643530566 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605200632 seconds)
  done (took 1.680087838 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.089874481 seconds)
  done (took 21.165507844 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.256542843 seconds)
  done (took 1.331426218 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289053074 seconds)
  done (took 1.364811654 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.760982314 seconds)
  done (took 4.840909835 seconds)
done (took 70.917036161 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116787177 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118853259 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.161250435 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.118054634 seconds)
  done (took 1.582035319 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.124075989 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118530989 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145703918 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.11852523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123552314 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116759028 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.143810033 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.120673491 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117575552 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146405942 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119465422 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11754868 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.145742814 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117141272 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115760286 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146517832 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122849275 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117704536 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145350451 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.119649773 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119743344 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146983594 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122181811 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121287316 seconds)
  done (took 4.135837367 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.115630362 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109967485 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110836773 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135134868 seconds)
  done (took 1.554799545 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126311921 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130653382 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.152965545 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.12551254 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.13014675 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.154726465 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117374864 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.113856556 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143577995 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126952724 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132590183 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156424181 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.130432026 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.145217121 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129483925 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.112658246 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118511446 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154700134 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123930608 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.151344387 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11982769 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123615655 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147981687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.127329476 seconds)
  done (took 4.272617591 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.191851554 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130226448 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.175046206 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160931371 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.17690823 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117535583 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.144322923 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.149455973 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124173256 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.145043688 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.121673955 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162445452 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.150033352 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120579323 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119060484 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149991137 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131166969 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122222913 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.191930768 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.122307649 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.150907025 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130524431 seconds)
  done (took 4.272610052 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122210194 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.109785675 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.130005927 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11142332 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.120682073 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136886879 seconds)
  done (took 1.814522505 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109142318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103981612 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10306168 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.129597562 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108132273 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103589168 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127275446 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.104954966 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103767151 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103442967 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.13026942 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104351009 seconds)
  done (took 2.409379633 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.331875409 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.109267661 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.136500608 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11278904 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.116441667 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105511581 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14870014 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10890331 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268526075 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.10448641 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.133671413 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.195471555 seconds)
  done (took 2.957632657 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199731997 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147953332 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25164318 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36713824 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187765959 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161479655 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.293755886 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190321874 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.177367172 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163845733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181806665 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185694302 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152509267 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210397432 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166277855 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.158125054 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188072172 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204499508 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169136089 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206638659 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181972122 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198423867 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186567275 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174902747 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139490808 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185046883 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118796001 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126198311 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191715674 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18689756 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170290822 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174758141 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139779721 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215467603 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251287694 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170159504 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271773812 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160541486 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.168214138 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.215820087 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255822832 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140250856 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212695349 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177139926 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131184037 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207671957 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151923595 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210465086 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134038428 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169500496 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179793343 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203053973 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199776377 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137035107 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303130689 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135958608 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168763097 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166098505 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21371051 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222186731 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178908924 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121387817 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205661196 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217921111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236789805 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141903473 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188197119 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125235645 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192369025 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202373632 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204794514 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186637117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.227943009 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132653375 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195123354 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169230836 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179164474 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20180473 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196170635 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118120333 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176398344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132943289 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12394021 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.214800111 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120459607 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241654676 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12929614 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.333520042 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208486872 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179509311 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158128902 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185185293 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16226809 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173673646 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101265799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140266873 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187612703 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154983903 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156114759 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154412519 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16585231 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126426583 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14766346 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.149402936 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166040007 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.160738063 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161991 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195270051 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130055756 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20512069 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145920403 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.188890779 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164431309 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217262845 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128137594 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160156895 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243298383 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166935016 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.163554648 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173943433 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221923054 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146581334 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162170145 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16020927 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220253761 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14172953 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224499068 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163229007 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135388283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161541172 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170900185 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184204088 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154691881 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125418333 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.19145588 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217479699 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126107508 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136337599 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205728434 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157515656 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12421083 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137246151 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161513801 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.14063021 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173992243 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.14027446 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149421968 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195160863 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161897368 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183414031 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133293383 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195485936 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13023907 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.19385925 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146491198 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.147418595 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170257733 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222416856 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127345537 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210113219 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189957983 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186330812 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203118821 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128248041 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209644086 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128123153 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.148017513 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157980019 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19691833 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160710174 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214456315 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207127658 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.164153485 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190317709 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173594094 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166608961 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.209532732 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152969616 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.171177653 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168760229 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194335501 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120113078 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.150695093 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128320018 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136230809 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156576878 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137259034 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201765993 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162126354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205846494 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195996094 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13706092 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21687456 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125065724 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185923482 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175141951 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164100708 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187950979 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216329097 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201143385 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141517254 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18682266 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122167173 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125932904 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.159823164 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163080257 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162265015 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136527018 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139469856 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.217979242 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197937871 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14744183 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219625631 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191354722 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199628879 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.147640672 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160500301 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194945478 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167351366 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.208737388 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13366558 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.157296461 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218466966 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168092543 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190869063 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194990357 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175904628 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221678226 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.189241588 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131287249 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146981418 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187486875 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137155687 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19029928 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144505731 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158484595 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15113031 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.164806159 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139719319 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209883076 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140659374 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206080726 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155695504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199007742 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124979203 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167767364 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171487166 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173412475 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.103129133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195012671 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192472326 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176630265 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153091405 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199474233 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12948595 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.348705963 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213001096 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17687036 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162423908 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139018835 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1973026 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160377645 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188654099 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184343262 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16911834 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203468081 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197702329 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.142247699 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159149925 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149439291 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178888764 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136679651 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.17845451 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.160934539 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.171430881 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184728247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164629263 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169962184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201936833 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.144267125 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177713458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137218418 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247215209 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191233658 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171442849 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.191219447 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.165222449 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210152009 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124513236 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125951579 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.16081504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184438087 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159141356 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175165671 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198329738 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214759449 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201591081 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163388087 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138314225 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155712902 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165040438 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17507699 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213776448 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135459233 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136712444 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216787694 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.152888166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131235489 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158211301 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299337244 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176618685 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171390439 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104246245 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.295003921 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130637898 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161453725 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159007005 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196571019 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.132922092 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.210288965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173920016 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166572388 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162342601 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161880371 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183418622 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214292088 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190176799 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17279669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.173083116 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159883828 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186029328 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171903513 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174314215 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.145956781 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18551334 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194280682 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.206429833 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130171096 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196444204 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168253477 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200885181 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199037674 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139543005 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209621297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128742035 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16113887 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166184281 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124793702 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187729048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195225923 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130735155 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200508742 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16993916 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129965537 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15701401 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144597956 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194249337 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139021727 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156259558 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18210017 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.156594033 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179500846 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232914622 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128912219 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194406351 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145717732 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158692833 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139272326 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144540698 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158631301 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.17472957 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212267094 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131962322 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202379531 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162348217 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189858745 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15505986 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172579248 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.330573122 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.157381749 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190897376 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177305006 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194404132 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178205615 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172080885 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196544753 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147778351 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19020284 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14576958 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24757565 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160054468 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195027881 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12993636 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172138857 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137487826 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.162055823 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152287322 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19667265 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140843858 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134524489 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.19481796 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144078907 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.174744271 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141219692 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226209027 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148864497 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213198369 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214619567 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136981999 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202862605 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173115561 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158301374 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16250576 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19896423 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143267896 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177446893 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133983942 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136570198 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237629841 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125629947 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18671542 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197602845 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170317736 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198926544 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.136371656 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201920437 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140747272 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202412349 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131287773 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.152421691 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.198773647 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134073858 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.155602762 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17211155 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18590434 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.166379454 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172026844 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.177213668 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227308423 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.12617659 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134379994 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.299510779 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188852918 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193750775 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.163330727 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137412873 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142860227 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186784502 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.16201843 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200347711 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128777647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159117424 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144955651 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.179492217 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142976205 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193728239 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171254965 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187482161 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184593241 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163756672 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252296935 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168974656 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171516201 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.113269175 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.159463588 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140128598 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160449544 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14336269 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210743447 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240893937 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.165201531 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.173175135 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137079519 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126443565 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156717283 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164044428 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17651863 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168513381 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173043065 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.103557727 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138919325 seconds)
  done (took 85.783018847 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163558471 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.154338888 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.169444595 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223482233 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196237202 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291576932 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.229923215 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249209154 seconds)
  done (took 2.849850858 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118672714 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.159705759 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141529326 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144402408 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11054723 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.441591858 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.131841558 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.148889842 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161728035 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151384725 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137086954 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529279176 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117008717 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.143938281 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.121319848 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136236323 seconds)
  done (took 4.059618582 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.856047133 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.562270434 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.734797406 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.275504019 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.260065668 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20253674 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.793732983 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.195865796 seconds)
  done (took 13.048408994 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.1541951 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.143755987 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.415606745 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.249691425 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.205645247 seconds)
  done (took 2.34317223 seconds)
done (took 132.152141543 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.12431638 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122345545 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121949018 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.154359206 seconds)
  done (took 1.686451262 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173919082 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089931134 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092765036 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.117253174 seconds)
  done (took 1.649979726 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.422666841 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08990388 seconds)
  done (took 1.713689406 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14833614 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13591492 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.170532665 seconds)
  done (took 1.643569225 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.139308847 seconds)
  done (took 1.319812905 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.123133754 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117241135 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.237097368 seconds)
  done (took 1.66077036 seconds)
done (took 10.851968009 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120542038 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927372939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432994503 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131294184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.711403552 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.427338399 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.45729245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.176069186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.17476409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138038642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132000113 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687692282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.471408272 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875015051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.423554454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.902211937 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693704171 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111274791 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.147451956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111147075 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.435985303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139675586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111403777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111199115 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718681416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.419553087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10901237 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.91557809 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109581964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112852908 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428695523 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.110503345 seconds)
  done (took 21.143561244 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118949136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.165929485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14793861 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113051409 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113762641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141087702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12338855 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12326718 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203016767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109651667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.16017293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.110137783 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.116136334 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139669185 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.135378675 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109958734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.142798678 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113502322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117491497 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140512726 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132811267 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.108982342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.140838842 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11350749 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109968695 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160993725 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111487571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122622363 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.139440306 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114816855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113920641 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141148044 seconds)
  done (took 5.344199689 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.158386938 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174924775 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148566867 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146293482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188528143 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112180943 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.225504254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14996483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203929116 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111531581 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1315488 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.1386167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.151588976 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110574248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165307785 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110111973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112683845 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142818214 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118457264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138730542 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.134733355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109352133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.141996238 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115705634 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111695125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160084806 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112125834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123009394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137740086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116302802 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114834948 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.139916587 seconds)
  done (took 5.647176505 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.125832793 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126711166 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132700966 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163084759 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.11981442 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127366184 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153948126 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121100154 seconds)
  done (took 2.259753004 seconds)
done (took 35.574019556 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.137982034 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130481491 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.1307697 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.154996558 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.187504207 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.148482089 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.128131591 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117221314 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.154327362 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.132064419 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.109756164 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.146937863 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.132394074 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.12098611 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.220882877 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.125379003 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.225183372 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.18884898 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.149466885 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127157044 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.119829649 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.224559094 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123080717 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.148810379 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.191981868 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.113116925 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212679081 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120911322 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.151051059 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112907816 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.221515583 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124425482 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118251153 seconds)
  done (took 6.136216134 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.20937992 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.120549101 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149941751 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118817009 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119641556 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.148534014 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209471579 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150846429 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.11885766 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117297748 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.11798791 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.225820291 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124906419 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.147614083 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122325224 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107969001 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.240056805 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120277327 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.110723753 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.122993239 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.11707654 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118093374 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.251960881 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115673037 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.119586149 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.150614901 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123505119 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.12298961 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.151267302 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122808093 seconds)
  done (took 5.501413049 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125577954 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132852854 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164510229 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186378544 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147782483 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.161725425 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140441491 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133412304 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.170787023 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114310471 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127153802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177835042 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129428887 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122183333 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.149532229 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131565554 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134042317 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14433 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122455878 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130173863 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163823555 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.130498309 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.135764748 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151066007 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112229209 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120231675 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.153738057 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127861758 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120931253 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157595416 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115558009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116484178 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.146360102 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147984373 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115196498 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.157224047 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.138865166 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124848998 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.157001501 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.146817002 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117141581 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.145750649 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.139158287 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165018081 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146059381 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127553301 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125063377 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.159313953 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112541772 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131532972 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.185725452 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.114374766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13358736 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.142942748 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113247193 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121604468 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.144069007 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117692717 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.128625447 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144439564 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.139104879 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.120856663 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153460219 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118427572 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124556589 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.11214456 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.144768447 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118109247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.139044691 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.152628339 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.150575436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.113119512 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.157109089 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.128983388 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.12477371 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.155762544 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11515929 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124269762 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.15429922 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.12171436 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126621143 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146008847 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118919635 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130653995 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.163736867 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.130342439 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12449701 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15586078 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118492373 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.116350715 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.158659082 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116827339 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118880279 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.126469552 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.145800572 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118682646 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125882414 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.155548602 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112227244 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.140004289 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148156352 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114519988 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138106067 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147059708 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.1201601 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123682292 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.185674309 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115558392 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125216115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.156855991 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.116156513 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121802023 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.145896494 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114864144 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130944731 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128490191 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152648467 seconds)
  done (took 17.116845391 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.319217922 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.273837665 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212107804 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.308906255 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126588534 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.240695589 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300871736 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.303870812 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.112925709 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.183598362 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165548533 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.273326072 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146093657 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.143720097 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.305015301 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.358582846 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.175665766 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.151553583 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.18190521 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12754289 seconds)
  done (took 5.62454077 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135162422 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149033826 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167524451 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141177256 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.123148021 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.161003962 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114959163 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134854523 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157438225 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123888952 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115760685 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160520723 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127628499 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.129889785 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160504091 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.146779166 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121286647 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149666491 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136856629 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.11860002 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.133621348 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141030899 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122767899 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.169908517 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.132435457 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154402146 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.11576989 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119420602 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119582703 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153352989 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.118835185 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.131102616 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.151664598 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104818468 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125534483 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.160126269 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.120949629 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.11685306 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118020947 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.151322193 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128758299 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127377146 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.153537544 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09821868 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.133111013 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.109014672 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.159905916 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126982447 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104952392 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.165114361 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127450445 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127753239 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.152391364 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13713369 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.120372025 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.16217403 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126066121 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127676704 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148999971 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114531518 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113426607 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147855647 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.125575501 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128566652 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.125026003 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.163881026 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.130311476 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.144076187 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.120593184 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117022347 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.148106733 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.131091484 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133999427 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.151996177 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124075124 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.130016002 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122530273 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.123832594 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125930772 seconds)
  done (took 11.824894078 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141542011 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12530629 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.160106335 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.151743642 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128658777 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.149505077 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126428385 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132993641 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128684005 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163976921 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.1290477 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128109559 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166909604 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124841092 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.1231675 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161443375 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128577419 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.181650607 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.134966314 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142019169 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.160010613 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120519851 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126242773 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.156440681 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14417664 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.125869331 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.171501126 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.130065173 seconds)
  done (took 5.191253736 seconds)
done (took 52.59339794 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.369765797 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.560496256 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.324299377 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.320869362 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.347790489 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.327486381 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.32084071 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.320356628 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.874775132 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.294942039 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.322395441 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.321492374 seconds)
done (took 29.922448693 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.431073162 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.878998996 seconds)
    (2/2) benchmarking "String"...
    done (took 1.617356759 seconds)
  done (took 4.710179106 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.316402601 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.312294349 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.560591967 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.312356743 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.314876424 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.313115875 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.322219135 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.328495478 seconds)
  done (took 16.675364491 seconds)
done (took 27.346180245 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.37965992 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.506147853 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.544668175 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.315064123 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.318028323 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.330757615 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.31669719 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.346727416 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.328819099 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.318169953 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.733320084 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.573707517 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.31769919 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.696729908 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.318778178 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.324306982 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.341990841 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.551395834 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.316467682 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.34813957 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.292741516 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.292889971 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.357297161 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.318387345 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.324259509 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.322417436 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.354309422 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.326673895 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.50684779 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.332242462 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.35312353 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.31748075 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.350074626 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.323834839 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.316888052 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.333119884 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.503090941 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.32369834 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.29515037 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.343840448 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.504708434 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.321957957 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.314177327 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.324376259 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.316171726 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.368576104 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.31663965 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.429730363 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.334538319 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.322258059 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.333082866 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.679448223 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.322790427 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.322211138 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.317601414 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.538392578 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.336658976 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.377160076 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.33992715 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.325166874 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.313266477 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.314836014 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.331805507 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.331560345 seconds)
  done (took 151.067386442 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.313661522 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.317302803 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.317834971 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.382044443 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.317856157 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.312376485 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312583932 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.31121423 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.313410735 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.31807794 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.316484909 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.311608661 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.319627514 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.28190112 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.319887951 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.327284522 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.310477384 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.315094968 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.321336728 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.309025096 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.312119708 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.314637461 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.327583727 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.308004825 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.358560985 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.384299073 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.338872151 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.340586068 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.321010707 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.308349864 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.349787527 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.311776044 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.939973182 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.176283039 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.317208769 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.3257062 seconds)
  done (took 84.29816745 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.30856728 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.307315127 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309304168 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.34009557 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.309353003 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.883118253 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.885417915 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.274615509 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.312242361 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.659954723 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.563305693 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.310878033 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.401670913 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.321309308 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.310941684 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.324600346 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33515218 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312804504 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.308901595 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.881116846 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.322095739 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.492010625 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.485544899 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.325934309 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341476656 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.701451313 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.30877275 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343380324 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.642418767 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.35893141 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310488023 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.651400199 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.827926558 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421623005 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.31262624 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341721324 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.30955642 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.591805873 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.310304484 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.310769538 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.311513182 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.314291288 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.954593835 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.313519482 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884521114 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314294929 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.284481325 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.312725567 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.311742689 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.3112451 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.285028722 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.314395798 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.011294048 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.314571099 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.310415405 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.312084317 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.311563908 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.31095007 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.343999964 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.311236684 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.290313653 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.406368081 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.310543422 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.314798413 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34465138 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.310494472 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.456619787 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.315340374 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.632716849 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.369876409 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.4062668 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.877900275 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310154736 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407506546 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.428068468 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.312967875 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.31050972 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.310228735 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.311093566 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.421650315 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.310603858 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.9884803 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.485324111 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.326411565 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.640060303 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.410460255 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.311378834 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.630331594 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.313244509 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.311290749 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999558823 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.403301851 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.310898591 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.310436295 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310243723 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.985817005 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876630809 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.549285784 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.312433408 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.888090366 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.314055424 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.160573641 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.857539638 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.934869207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.314045281 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420864023 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.485214782 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.32784416 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.310851299 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.61487792 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.313262349 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.365702317 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.313416693 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.710434248 seconds)
  done (took 385.687867927 seconds)
done (took 622.264968382 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.174681762 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.12480768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.278052485 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.132341004 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.116593778 seconds)
  done (took 12.034147514 seconds)
done (took 13.241541877 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.496879488 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499403617 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.369419653 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502157019 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.346059568 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.515482236 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.481884627 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.325959777 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418236373 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.389361128 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420621604 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.362305897 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.343370966 seconds)
  done (took 19.679107437 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592840225 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.322818062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.376993073 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.582776402 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.358156242 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.600689803 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.629679492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.324328002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.463547197 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333776501 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.334943696 seconds)
  done (took 19.128420744 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597240065 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.32458179 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.379919067 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.583085734 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.357439083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.592847399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.641293611 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.323219428 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.462621332 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.334627571 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.331761883 seconds)
  done (took 19.137966512 seconds)
done (took 59.15325873 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.349482188 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.406157702 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.34564306 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.332334109 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.32666024 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.329067902 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.333479003 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.330354612 seconds)
  done (took 11.962164551 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.327552365 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.327229045 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.326767287 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.326894719 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.326165411 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.325614762 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.325876113 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.325947543 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.327322836 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32677057 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.327121727 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.326257134 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.328444667 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.327519186 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.327022574 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.327484319 seconds)
  done (took 22.439719939 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.33081257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.327306421 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.328991212 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.328311247 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.325855705 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.327311903 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.329372287 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.329045521 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.327640889 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.326739513 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.328627628 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.327714415 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.328930656 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.329277757 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.328381117 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.329296168 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.328716186 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.328597328 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.333215656 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.329344915 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.327345166 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.329808783 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.329738094 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.328327143 seconds)
  done (took 33.100753645 seconds)
done (took 68.71173349 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.316930901 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.325771223 seconds)
  done (took 5.854570797 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.386208476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.388672201 seconds)
  done (took 3.987251506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.329058469 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.332183496 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.330352476 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.329573382 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.331466361 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.328321252 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.33019532 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.330338872 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.33088482 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.329877803 seconds)
  done (took 14.514190223 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.329940127 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.329806121 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.330443169 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.330716081 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.33129316 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.32895256 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.329600829 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.33008768 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.332312142 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.33193796 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.330020018 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.329800482 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.330972565 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.329503385 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.331702069 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.331558948 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.33170064 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.33090634 seconds)
  done (took 25.164470314 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.342360006 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.349113239 seconds)
  done (took 3.903369535 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.460113519 seconds)
    (2/7) benchmarking "second"...
    done (took 1.373441392 seconds)
    (3/7) benchmarking "month"...
    done (took 1.435819312 seconds)
    (4/7) benchmarking "year"...
    done (took 1.428796635 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.37217528 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.35081078 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.372302431 seconds)
  done (took 11.006243786 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.331515893 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.533813555 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.659952333 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.899902864 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.33312567 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.335701732 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.195180748 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.337319296 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.33807691 seconds)
  done (took 15.178046448 seconds)
done (took 80.819237607 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.327782543 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.355767636 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.343341746 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.335540337 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.628077228 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.320739892 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.321038235 seconds)
done (took 16.846866466 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.300760274 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.314474335 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.311203504 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.329741196 seconds)
  done (took 10.470714494 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.317148315 seconds)
    (2/2) benchmarking "read"...
    done (took 1.6601551 seconds)
  done (took 5.191542587 seconds)
done (took 16.876587895 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332331241 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.334016938 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.330775261 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.335154266 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.332676984 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.332164089 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.331776638 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.331182275 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.333091848 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.331641512 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.333885643 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.33309563 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.332701003 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.332182841 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.330706978 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.333653263 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332237751 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.334328782 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334096337 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332889073 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333015926 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.332528388 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.332282783 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.33123912 seconds)
  done (took 33.199580316 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.336463832 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.332377481 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.334102457 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.333617373 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.331506383 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.33275963 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.332015402 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.331970742 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.333510738 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.334521375 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.331644135 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.333341388 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.333340568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.333038404 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333218257 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.33438088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.332820031 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332763023 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333679536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.332769568 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.332483449 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332893983 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.332263536 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334838292 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.332768316 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.332593298 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.334206401 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.332366954 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.333639913 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.333017952 seconds)
  done (took 41.211405302 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.336400099 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.334455553 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.333473516 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.335797327 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.334179594 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.331802493 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.333391933 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.334717325 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.33217893 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.333472818 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.334180826 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.333310071 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.335792215 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.333581446 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.333248726 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.335017839 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.334890357 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.333477756 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.333819573 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.33607501 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.334542065 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.33329281 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.336442565 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.333486067 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.334839706 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.33554784 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.334206363 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.335180193 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.335698991 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.335878776 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.337458989 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.336236382 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.335246162 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.33459613 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.336197517 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.33574275 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.335890177 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.335582509 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.33491218 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.334643703 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.332449526 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.335976082 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.335081778 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.335463843 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.334605027 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.338013922 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.335228729 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.333242502 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.33425575 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.336872997 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.333628835 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.335354059 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.335424924 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.33593601 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.336042874 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.334393057 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.334840291 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.334609476 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.335220829 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.334990111 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.336629813 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.334945881 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.334940294 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.334720695 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.334942279 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.334099687 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.335447882 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.335700001 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.335979154 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.334405643 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.335454494 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.336168266 seconds)
  done (took 97.330724056 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.335838984 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.336384406 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.335016889 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.33321896 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334857245 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.335566833 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.333680255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335083363 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335069477 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336711756 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.334353133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.335566644 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33574443 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.334403124 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336869099 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.335887389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335887829 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338658388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.335509874 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.33496861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.335818025 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.337164077 seconds)
  done (took 30.599825651 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337820328 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.338057788 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.334890863 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338791727 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339467039 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33634699 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334205528 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.33753893 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33561652 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335248076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337287367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335733152 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.337235309 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33632694 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335831129 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.338508187 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33769925 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33779757 seconds)
  done (took 25.282075533 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.334711892 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.336017632 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.337428686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.335463804 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.33606659 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.335720911 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336588955 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.336544656 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.336551193 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.336641809 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.337958701 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335268755 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.34006958 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336336535 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336739672 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.337547115 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.336893054 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338419814 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337613859 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337484553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.336526345 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33737722 seconds)
  done (took 30.626960845 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339901807 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.336544724 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.337121388 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.336478724 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.337183648 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.338472228 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.337434641 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.336021221 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.339436264 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.336582243 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335451096 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.335817761 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.340416742 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336643206 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.337143139 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337648358 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.337670518 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.338680629 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338727282 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.33685189 seconds)
  done (took 27.96617952 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336076515 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336701473 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.336449482 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.336315017 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337167011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.33824097 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337157362 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.337277036 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336074764 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.337297116 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337012643 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.336360431 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336214599 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.33832552 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.336485339 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.339600112 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.336876455 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338180987 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338177221 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33737552 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336504119 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336898399 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3371236 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.336749952 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.33674408 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.337165291 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337727848 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.338580793 seconds)
  done (took 38.659174191 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337062526 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.33889041 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.337286949 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.337511515 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.336827211 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.33582638 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.337727566 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.338931618 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.337218921 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.337647327 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.338434371 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.337494089 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.33795108 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.338250408 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338372636 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.337454711 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337468258 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.34005547 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338066866 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33801773 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.338603033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.336745024 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.338113833 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.338305771 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336866485 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.338702831 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.338739685 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.336216052 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338341189 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33853117 seconds)
  done (took 41.356058465 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.357207388 seconds)
    (2/2) benchmarking "in"...
    done (took 1.356599423 seconds)
  done (took 3.931034747 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.337510716 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339451771 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.338266024 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.339972922 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.337452558 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339372692 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.338892283 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339248829 seconds)
  done (took 11.929139568 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.330526655 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.339101536 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.33802783 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.337258339 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.338512454 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.328982106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338190561 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.343925045 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.332114614 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.333729365 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.333237606 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.333406244 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.335582038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.334991851 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.334341466 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334639667 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.34284315 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.340305963 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.339652761 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.340280952 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.339828714 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334695 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.337425862 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.344116415 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.332563223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.341690668 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.339525793 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.344857487 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334022366 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.33742543 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.336110804 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.344283818 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.339519314 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.339553778 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.341859114 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.340681854 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341559601 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340813989 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.341227319 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.345378983 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.339334483 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.339347408 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.334916133 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.337859169 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336892681 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.34431409 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.341481545 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.340256447 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.332213158 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.334013028 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.342029248 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.332579796 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.343267393 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.336704597 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.339749489 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343773903 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.347819009 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.333801372 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.336119605 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.342225141 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.348187283 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.341718137 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.33954856 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.346033261 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338145907 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.342106561 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346101112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.348954396 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.342599628 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.341381779 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.342545125 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.350179177 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.345204375 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.346926927 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340793682 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.342019101 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336481656 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345855684 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.343596857 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.346284122 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.346232919 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343263121 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338750786 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341650031 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.337666795 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.345750269 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.342751025 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.344294638 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.334591855 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344821362 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.349886793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.343597274 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.336365503 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.338368472 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.340704373 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.346720726 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.334547544 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.34046066 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.346786926 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.344503888 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.343634351 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33526647 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.340944958 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349236409 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345171122 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.342824175 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.350847638 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336122362 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.346152442 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.351138815 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345511161 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.335487247 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.339177513 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.346674157 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.335654925 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.341098442 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.34843012 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.338624371 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.347892834 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.343903198 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340793234 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.347237079 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.351376581 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.344733967 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.338157404 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.348121597 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.344560881 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.341730987 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.3507858 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.345323078 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.345187965 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.341479091 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.35037622 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340496398 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348021973 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338503535 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.348643503 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.345527377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.345911914 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.340985647 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.345659455 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.342039742 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.344643579 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.34882708 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.350397792 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.343882171 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.352428673 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.348783484 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.342975301 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.34833923 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.350511962 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.346994065 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.339838261 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.348510626 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.336691566 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348526714 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.33902372 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.350043715 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.346624872 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.348012248 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.348094147 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.340442451 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341791071 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.350817492 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.343882245 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.345563345 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.351015609 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.347763939 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.347673596 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.339142486 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.350335174 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339322809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.34207686 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.35178406 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.348782126 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.348081477 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.344553728 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354914239 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.349339297 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.346225765 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.341089896 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.344961167 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.351781752 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.349662247 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.355639079 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347234207 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.347778618 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.342485351 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.342844682 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.352521517 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.341074942 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.352005143 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.353967079 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.354393256 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.345997378 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.350753833 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.340114778 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.349834357 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.348652141 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.354476475 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.34809449 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348223367 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.342605251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.354987599 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.343622295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.353111174 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.341509811 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.352081985 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.350797712 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.35107955 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350516744 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.343849467 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.346775405 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.35394186 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350205088 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350261572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.341922118 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.353412943 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.3421281 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.345225093 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.352606772 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.351481751 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.35162485 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.356938196 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347863647 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.353541996 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.351690812 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.345542701 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.352079953 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34916822 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349584185 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.353878973 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.352110171 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.346860206 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.354971673 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.353046993 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.34454379 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.350995176 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.359006545 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.350657411 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.344986079 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.353920374 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.352825661 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.351290583 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.352465864 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346641909 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354052548 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.355201553 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.360327817 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.346070225 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.355636926 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.346593154 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.356303361 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.34897636 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.353468922 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.353383294 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355462458 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360898747 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.353941361 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.346487257 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.356295426 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.35313861 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.354020352 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.345949308 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.35446696 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.355381298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.356072572 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.350152564 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.350121711 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.354445111 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.346351366 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.355006268 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.347041264 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.362479827 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.368327327 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.356545321 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.357940669 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.357251917 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.355972165 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.358225883 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.348479952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34980184 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349263415 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.349552563 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.348864701 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.357542697 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347496094 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.357751415 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354049608 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.354722305 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.358348832 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.355581747 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.349123449 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.357482653 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.356683465 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.354173781 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.346713359 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.356856114 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.349487506 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357651985 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.356421898 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.35050285 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361245675 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.358169003 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.353192422 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.351670438 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.353246247 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.348454944 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.350873126 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.361509426 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.351397997 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.357759894 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.349818469 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.353793425 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.352415422 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.360919973 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.365059467 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.350031784 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.359841402 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.356461068 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.348843551 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.35173817 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.358909653 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.360791832 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.368963972 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.350076894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.358708603 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.359238708 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.356514375 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.356309908 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.355684039 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358668387 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.357393979 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.363970886 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.360626519 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.353409026 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.358434776 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.367228348 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.358516439 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.358386171 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.349425169 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.35923856 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.366854448 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.352713353 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.355978258 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.354504106 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.358763544 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.358100606 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.358091635 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.359788827 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.357891518 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.361204282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.363196502 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.359827568 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.360599105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.363472127 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368613396 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.362701113 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.372150732 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.354343957 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.364449274 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.359636713 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.353550477 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.354827935 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.356526912 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.362553087 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.351408175 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.363089936 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.359351589 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.354339416 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.361490803 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.36616495 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.35343794 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.358792734 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.36799991 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.353761144 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.362453727 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.359958485 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.353216145 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.363206058 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.361037102 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.353045149 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.355319126 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.357207834 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.365280325 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.356602957 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.363267261 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.356018459 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365866988 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.362641245 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.361096152 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.36324574 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.361702794 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.357587274 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.363783371 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361037082 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.370309427 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.357237713 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360403569 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.356792363 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.368950591 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.372697843 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.358834593 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.367754033 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.364987049 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.355169824 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.360077572 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.367700517 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.357329854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367085136 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.354507792 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.357399034 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.356830125 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.363234317 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.365008991 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.3663624 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.354970875 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.3582576 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.364322998 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.363645332 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363190033 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.358999324 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.370592297 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.355993384 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.357668589 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.365061216 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.357924248 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.368843062 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.355978644 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.360342029 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.360279723 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.366478279 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.36404115 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.363189898 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.355277579 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.35837294 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.370041006 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.368236542 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.360331993 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.358204081 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.366599042 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.357346238 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.359560006 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.362480075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.360956027 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.360070138 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.369014589 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.35905634 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.360802769 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.358810651 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.3653662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.368426566 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.368885051 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.358578999 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370850651 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.373377903 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373432771 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.359247902 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.361481997 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.361385299 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.366397878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.365785653 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.358534739 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371474043 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.373199939 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.368402536 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364106148 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.366232592 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.359860528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.368818229 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36576826 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.362282622 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.37145905 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.363228041 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372968811 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366877925 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.366759102 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.361082897 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361885171 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.363073173 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.362065281 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.367773263 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.365787817 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.3706841 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.365214499 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372099017 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.366727067 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.366544701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.365075057 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.360246901 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.362872527 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.354186089 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.362409449 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.364084539 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.355449611 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.36353068 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.361950646 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354581555 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.352185488 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.359727723 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.356786301 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.351244512 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.355756737 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.361805407 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.366761986 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.356310192 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350011221 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.354758822 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.358294079 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357572719 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.357515125 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.349228729 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364980968 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.368851719 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348747372 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.352685429 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.359150647 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.365414355 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.356032933 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.355108141 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.349269384 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.349437198 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.354783022 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.351044854 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355817762 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357980068 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.348620506 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.351148026 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.341958417 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.344137185 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.349029005 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35820585 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.349633711 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.343707054 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.355266446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.355257782 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.342443926 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354407151 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.351033352 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.3444911 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.349680904 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.337037189 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.341794636 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.338500849 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.346693116 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.341925444 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.341640793 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.342470767 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.334380296 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.341450411 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.345246378 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.347607138 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340211797 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.330089667 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.33397612 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.340294443 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.339402808 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.336319726 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.334071048 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.336219242 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.335389244 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.329848835 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344657795 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.349058797 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.339468873 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.333801466 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.331350557 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.332595393 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.334990122 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.328310303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.334673071 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.331861368 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.328960002 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.326806461 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.336494657 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.328963121 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.322739418 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.32542952 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.322830211 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.33145245 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.332173676 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343028066 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.32818363 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.329502669 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328202743 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.326490217 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321363276 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324865767 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324229604 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.317670675 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.318671556 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.326143923 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.324478474 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.322306639 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.318712195 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.325007392 seconds)
  done (took 806.040803537 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320935919 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.321718341 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320581068 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.32059201 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323711571 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.318337833 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320771756 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319568042 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320244652 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319971492 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.321073206 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321240236 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320794041 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.317892599 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319499093 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.321182416 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319515843 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.318820843 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.319223134 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319633667 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315367274 seconds)
  done (took 28.926257158 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.316638983 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315298021 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.315794438 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.316240204 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.315961469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.317462408 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.314975324 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314563979 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.313979189 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314833655 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.314090804 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312624832 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.314698871 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.314014152 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312990028 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313536485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.312729321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.312871734 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.313370489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311947744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315164708 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.312229132 seconds)
  done (took 30.116644308 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.31136216 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.312190966 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.306054166 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.313203629 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.312341326 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.313751593 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.30924108 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.310959294 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.309278261 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.303253434 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.30406124 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.304670141 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304625537 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.314272127 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.304610756 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.313744063 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.308975513 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.310221256 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.308468477 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.309261498 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.31412097 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.321090056 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.308637914 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.300291369 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.309304376 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.307686805 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.307856179 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.309517483 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.300732175 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.307822031 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.305969507 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.299607666 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.308845683 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.307856454 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.300527555 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.309378629 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.306961014 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.307561276 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.305098625 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303683863 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.314473789 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.307014421 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.310456698 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.319097387 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.305199789 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298252946 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.308629214 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.304533264 seconds)
  done (took 63.993420214 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.304460233 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.305960518 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.307262759 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302856696 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.303769912 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.302847438 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.303918099 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.303042497 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.303854808 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.303622942 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.305725144 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.304137662 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.303361232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30249028 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.304953548 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.303958279 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.304027669 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.303091831 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.302424009 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.30247349 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.300907955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300843234 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.301733595 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.302261787 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302045516 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.302862387 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.301109162 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.30247834 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.301613182 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300655688 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300889049 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.302146947 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.303063234 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.301197108 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.300246742 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.303776109 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.303635388 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.301355603 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302152645 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.301305819 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.302017141 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301179637 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300941452 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.301657727 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301621158 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.301900325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.304332561 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.300433369 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.302576431 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.300504099 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301105789 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.301508837 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.30033825 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.30043489 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302181552 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.303173108 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.302359618 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.300511644 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.29974941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299454196 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299864986 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300672148 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.30087414 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301509512 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300033316 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300863752 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300750577 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300893347 seconds)
  done (took 89.741689351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301406023 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.300191656 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301709454 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300125597 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301277778 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.300667733 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.301890944 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300464848 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300445018 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300259199 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.303562347 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.299173386 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.300828509 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.30290241 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300937428 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300573789 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301158963 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301164915 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301668691 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300698734 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.300267615 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.30066095 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.300469337 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.300012172 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301656305 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.302484931 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.30033842 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.300027244 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.299335714 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.300335807 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.300181747 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.300367852 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300647138 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.30098504 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.300547716 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.299969146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300486108 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300610325 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.298967958 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301320768 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.29891615 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301717785 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300355401 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.300867358 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300470377 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.300923553 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.301695948 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.302236806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301806076 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30032094 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.301079147 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301689538 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301488222 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300079926 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.300504854 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.300490834 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301419046 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30146923 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301945659 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.301581977 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302600124 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.302512637 seconds)
  done (took 81.845978299 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301476805 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.302667682 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301837403 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.30331975 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301628631 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301100675 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300865513 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.301432267 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304214003 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.300987104 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302418449 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302441019 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303610171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30315612 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.301787658 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304130105 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304152909 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303927854 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302721669 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303360492 seconds)
  done (took 27.239378096 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.302904183 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.302933285 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30419216 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.301606993 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.302401503 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302557613 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.302641733 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301779049 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305087862 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303683937 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.303075907 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.303881247 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302904058 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302765113 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304841844 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.304516231 seconds)
  done (took 22.041015552 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.304271188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.304502017 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.30437373 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.304523111 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.303288706 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303927026 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.304106517 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.304145373 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304801029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.305855082 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.303188315 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.305034412 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.30438426 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.303424522 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.303755494 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.305781667 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.305174511 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.30493054 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.305472395 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.304735561 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.30542088 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30573386 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.305149958 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.305843284 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306614195 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.305987259 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306469551 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305542236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.303956831 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.307576892 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.305753244 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.307145074 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.305643745 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305221948 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.305279763 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.305688697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.305739773 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.305130573 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.305204866 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.304895457 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.305820347 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.306429972 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.305461108 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.305700067 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306328176 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.306740171 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.305510184 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306598842 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.306736226 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.307111393 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.307556812 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.306917745 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.306411145 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.307290875 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.30737496 seconds)
  done (took 72.993110358 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307352846 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307642018 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30770866 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.307767122 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306557889 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.307291478 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305929389 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.310898526 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302082284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.304415654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304421851 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.30766153 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.304430981 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.305269036 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308153084 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303225653 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.303398338 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.301187439 seconds)
  done (took 24.699982095 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302812488 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.304211384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302719635 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.303245265 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.301278763 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.300959196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300248967 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.301002959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301149368 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.301892899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.300905849 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.299753701 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301952724 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301227796 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.30135894 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.301241206 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.300761397 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302044864 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.301162382 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301557288 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303293552 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.302033802 seconds)
  done (took 29.825939427 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.292330194 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.292413396 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.292425119 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.30588517 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.301595966 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.292351618 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292209339 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.292029112 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.309557 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.317083744 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.31128557 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.300309067 seconds)
  done (took 16.787499962 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305022827 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303871454 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302796246 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303543663 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302084891 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304295884 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303821897 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305594446 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303538006 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30368487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302397436 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304223868 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302928464 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304678272 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303182381 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303634311 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305282698 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303599177 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304499449 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305780913 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302935765 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305527143 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304666863 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303908127 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303590242 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3038832 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304941489 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305117258 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304296964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305508729 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303909859 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304715492 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304672188 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303948198 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305489967 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305461448 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305246328 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30653541 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304593464 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306089352 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305018417 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305748285 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304906359 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306762924 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306340889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305673319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306031402 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306240766 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305538787 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306488602 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305419513 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306874069 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306629506 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306083542 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306477211 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307126362 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305854252 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305979196 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307371746 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307053755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30655597 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306951427 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305680771 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306969008 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306065227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306987248 seconds)
  done (took 87.326628375 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30863781 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.307479381 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306735233 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306641773 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306508407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305549555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307273675 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307542244 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306147561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308028285 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308902295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307196221 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307330323 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30782615 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30792157 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309341512 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3069489 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30726428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30690111 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308316035 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308920841 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309609354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307228535 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308998629 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308697249 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307445971 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307933312 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307326116 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30813216 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309753888 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308846267 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308192724 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309396376 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.309184081 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30775502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309589824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309734576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309790227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308006425 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308463113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310182464 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310005757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30986741 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310208454 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309368248 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30901462 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310435712 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308790795 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309564519 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309657385 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310283095 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310308527 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310199335 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309000175 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309990088 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31150821 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310601316 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310083437 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311509678 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310979133 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31135692 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31051836 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309710689 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311091708 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.310465494 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313102417 seconds)
  done (took 87.584321592 seconds)
done (took 1852.47018685 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.469827774 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420432496 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.300885119 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.315047153 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301715864 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.301951725 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.314032311 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.302303947 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299678717 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30244208 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301760784 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.497263661 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.336713499 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30124846 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.301875589 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.396828063 seconds)
  done (took 26.659636833 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326533418 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.310711979 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.415564049 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.310805437 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.330786993 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.488697769 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.367757829 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.309080387 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.468501247 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.327103817 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.307428693 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.330312113 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307729289 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.307756984 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326395482 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.489061561 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.561043054 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.315443977 seconds)
  done (took 28.797432456 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.72487498 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.31656662 seconds)
  done (took 5.240648365 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326924095 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.308842669 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308281654 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.306619286 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.307292466 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.301728906 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.307615584 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.312644396 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.302265187 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430501731 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314162494 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320259043 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.308014203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.310818621 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.316631851 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.352719169 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.471484088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.317811065 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.31655983 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.314976609 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.309363127 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.401199199 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349584058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.319677529 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428377908 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.30643697 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.314612155 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.315690839 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.425439408 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.318578824 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.309057132 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.309215718 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308246299 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.248511539 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.841251046 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.309232997 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331824008 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.321527555 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318500553 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.458102055 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.311046713 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31649572 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.302347189 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.840938993 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.417974162 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.421823074 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.309087415 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310790098 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.310630938 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.372241415 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.310498086 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.310699648 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.366687301 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.094269492 seconds)
  done (took 83.998125338 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.356827221 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.302490613 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.485343761 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.324300441 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.303117988 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325865546 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.304458559 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.575311015 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.329188519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.30521429 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.613262208 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940435772 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.313972084 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.370714261 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.340367104 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.375782292 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.305388694 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.317817262 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.319130366 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.309778457 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877656898 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306979734 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.306548942 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.394436352 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.345818969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.828619282 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.30494506 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.304090843 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.313518549 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.306841573 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884380668 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.310008754 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.353366873 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.307721205 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.589618434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.684612348 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644430781 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.315178734 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.344103714 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.306395764 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.332993118 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.825096954 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.662443111 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.306414367 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.305911745 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.819306984 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.306964044 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.314863484 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.311453285 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574777071 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.306326444 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.307673505 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.307355686 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.307778591 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.307101357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.393176699 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.393916167 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833975043 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307915511 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.308627279 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.321416791 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.311597216 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.31684506 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311611068 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.307299764 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672106004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.569062642 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.312080124 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.670741102 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.880404209 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.324410947 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.949129454 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317181654 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.332352971 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.354063894 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.308357833 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.308466688 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.837707089 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.321583768 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.30946712 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.648003763 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.312633605 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.606644402 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.328246683 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.313119268 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913683237 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.323877634 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.352399379 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.30890858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.310637798 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.322987229 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.311769591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.594910673 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.359754501 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.308285612 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.309555265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.313211863 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.310601409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.330210637 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.320025028 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952684044 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.316268413 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.308104042 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.328971072 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309689138 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.314976663 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.313031834 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.30991338 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605601206 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.312208317 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.319228482 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.31209412 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.310309451 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.318149182 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.40334448 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.31134946 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.613870897 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.315563249 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.309828706 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.312783308 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.311165167 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330504839 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.311864197 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.326867575 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.311650542 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.61204665 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.327893099 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.325890886 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.311699834 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.310368331 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.317479057 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.313153081 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.367182064 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.315210624 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.238646262 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.33228369 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.325944933 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.312608155 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.32440932 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.313049804 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.334975582 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.314912554 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.611094838 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.597610743 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.570234546 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.326051161 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.314811485 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.19173535 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.325134592 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.49734068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332081333 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.314275337 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.593601815 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.53823862 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.313584848 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.311674483 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.316672208 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.592611993 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.31381631 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64380381 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925814676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.317507182 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.323026448 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.239369431 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.132606048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.319450082 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.318643816 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.607989326 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.332094213 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.313824081 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.313470046 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.316479415 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.31590808 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.32001612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.325686428 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.314033332 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.314726485 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.612351406 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50895959 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.331120744 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.319319527 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842543683 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.342017139 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31540451 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.327663862 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.319987796 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.315717519 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.384150481 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.320202797 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.320139956 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.317290032 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.322975443 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868080013 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.320509936 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.33573672 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510579273 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114768206 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.319341189 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.31606621 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.316744333 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.373194865 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87437323 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.361094762 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.618601048 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.327346144 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.356485715 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.316767171 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.330384569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.877672599 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.324770408 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.32961684 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.051770042 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.321125622 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.797347871 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.316828305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.317010764 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977405427 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.322171844 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.316976684 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.321398247 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.317072805 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.665182516 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.317587897 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.352817639 seconds)
  done (took 494.657768278 seconds)
done (took 640.548498203 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.3188063 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.316392465 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.301741959 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.322027338 seconds)
  done (took 10.471871881 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.313230363 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.32690681 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.308696981 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.325839846 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309619446 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.329492566 seconds)
  done (took 9.127682465 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.344169093 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.334517207 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.323490235 seconds)
  done (took 8.215436456 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.528157051 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.338939223 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.665087601 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.333593021 seconds)
  done (took 9.081863667 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.336068688 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.335576777 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.336207303 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.334186784 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336403213 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.337513073 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.334684491 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333589797 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.336770045 seconds)
  done (took 13.234173379 seconds)
done (took 51.345445695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.388673952 seconds)
    (2/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.662526822 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.441111383 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123207824 seconds)
    (5/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.302681886 seconds)
    (6/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.056387255 seconds)
    (7/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.355469822 seconds)
    (8/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.387854805 seconds)
    (9/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.401816087 seconds)
    (10/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.076091283 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.360340732 seconds)
    (12/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.300422458 seconds)
    (13/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.355476964 seconds)
    (14/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.299314322 seconds)
    (15/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.464522429 seconds)
    (16/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.980139469 seconds)
    (17/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.38269697 seconds)
    (18/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.299521763 seconds)
    (19/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.017898985 seconds)
    (20/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.301718839 seconds)
    (21/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.464228137 seconds)
    (22/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.032092514 seconds)
    (23/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.300093048 seconds)
    (24/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.304075992 seconds)
    (25/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.531867171 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.404878105 seconds)
    (27/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.339817614 seconds)
    (28/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.439878782 seconds)
    (29/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.985269654 seconds)
    (30/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.478383206 seconds)
    (31/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.499708282 seconds)
    (32/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.47107115 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.433650167 seconds)
    (34/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.468490842 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.40604936 seconds)
    (36/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.125959268 seconds)
    (37/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.568332695 seconds)
    (38/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.304317903 seconds)
    (39/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.411733167 seconds)
    (40/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.300305498 seconds)
    (41/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.327065464 seconds)
    (42/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.401592338 seconds)
    (43/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.390361535 seconds)
    (44/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.301267114 seconds)
    (45/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.421690873 seconds)
    (46/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.410601372 seconds)
    (47/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.453904637 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.437138297 seconds)
    (49/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.401959414 seconds)
    (50/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.301335569 seconds)
    (51/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.194920744 seconds)
    (52/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.49026881 seconds)
    (53/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.305926594 seconds)
    (54/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.579974473 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.480289651 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.436454288 seconds)
    (57/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.012447787 seconds)
    (58/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.159791247 seconds)
    (59/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.475999885 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.509206924 seconds)
    (61/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.308793214 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.30713063 seconds)
    (63/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.305397405 seconds)
    (64/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.320877519 seconds)
    (65/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.302447734 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.437066853 seconds)
    (67/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.445724654 seconds)
    (68/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.447891222 seconds)
    (69/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.41646757 seconds)
    (70/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.50029026 seconds)
    (71/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.354414189 seconds)
    (72/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.416924264 seconds)
    (73/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.440039459 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.471672243 seconds)
    (75/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.11469785 seconds)
    (76/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.424068999 seconds)
    (77/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.269157098 seconds)
    (78/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.397090754 seconds)
    (79/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.483153386 seconds)
    (80/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.412201384 seconds)
    (81/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.353752047 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.437975074 seconds)
    (83/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.401666529 seconds)
    (84/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.415083139 seconds)
    (85/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.110245128 seconds)
    (86/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.54131463 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.543619743 seconds)
    (88/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.411747912 seconds)
    (89/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.566809185 seconds)
    (90/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.511832225 seconds)
    (91/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.321564045 seconds)
    (92/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.204609325 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.449677779 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.363423145 seconds)
    (95/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.352201181 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.359791061 seconds)
    (97/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.453893333 seconds)
    (98/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.325679538 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.469081164 seconds)
    (100/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.405672626 seconds)
    (101/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.308600436 seconds)
    (102/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.309494632 seconds)
    (103/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.102449472 seconds)
    (104/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.444527771 seconds)
    (105/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.440863166 seconds)
    (106/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.367419182 seconds)
    (107/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.325194253 seconds)
    (108/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.276459012 seconds)
    (109/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.312790367 seconds)
    (110/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.40706234 seconds)
    (111/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.304855858 seconds)
    (112/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.379695478 seconds)
    (113/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.500544965 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.312851169 seconds)
    (115/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.168964681 seconds)
    (116/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.410631923 seconds)
    (117/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.422452508 seconds)
    (118/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.305550197 seconds)
    (119/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.540113111 seconds)
    (120/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.482376344 seconds)
    (121/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.367324065 seconds)
    (122/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.578149375 seconds)
    (123/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.37180751 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.42616181 seconds)
    (125/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.170349922 seconds)
    (126/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.465207794 seconds)
    (127/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.541946031 seconds)
    (128/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.320965424 seconds)
    (129/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.35893499 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.570230519 seconds)
    (131/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.350193446 seconds)
    (132/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.442994812 seconds)
    (133/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.330390137 seconds)
    (134/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.356094072 seconds)
    (135/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.356241416 seconds)
    (136/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.445288064 seconds)
    (137/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.332974264 seconds)
    (138/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.506454298 seconds)
    (139/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.458450877 seconds)
    (140/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.419526974 seconds)
    (141/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.394881381 seconds)
    (142/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.443307 seconds)
    (143/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.329354306 seconds)
    (144/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.450367912 seconds)
    (145/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.435096178 seconds)
    (146/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.399791293 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.572773062 seconds)
    (148/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.340888709 seconds)
    (149/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375731897 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.432975433 seconds)
    (151/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.596396772 seconds)
    (152/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.435533897 seconds)
    (153/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.308497923 seconds)
    (154/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.41676853 seconds)
    (155/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.590207871 seconds)
    (156/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.313299539 seconds)
    (157/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.380205738 seconds)
    (158/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.332962155 seconds)
    (159/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.384467705 seconds)
    (160/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.045788702 seconds)
    (161/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.322000914 seconds)
    (162/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.137129089 seconds)
    (163/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.330180657 seconds)
    (164/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.30924765 seconds)
    (165/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.394100839 seconds)
    (166/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.47275664 seconds)
    (167/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.309123197 seconds)
    (168/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.389191344 seconds)
    (169/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.482773803 seconds)
    (170/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.310271631 seconds)
    (171/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.3840585 seconds)
    (172/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.508210198 seconds)
    (173/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.134535071 seconds)
    (174/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.449185791 seconds)
    (175/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.069524577 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.332473648 seconds)
    (177/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.361042571 seconds)
    (178/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.310448497 seconds)
    (179/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.321273334 seconds)
    (180/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.422737062 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.438389327 seconds)
    (182/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.405274239 seconds)
    (183/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.530600757 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.310140496 seconds)
    (185/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.33463716 seconds)
    (186/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.3769215 seconds)
    (187/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.541011128 seconds)
    (188/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.31510612 seconds)
    (189/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.51674523 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.166030011 seconds)
    (191/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.489679663 seconds)
    (192/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.460996459 seconds)
  done (took 338.428855454 seconds)
done (took 339.644653495 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358364572 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.43547964 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.340526026 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.33853548 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340774222 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.335801588 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.362098006 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.340685363 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.353613542 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.354079149 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.336371929 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348399196 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.355187165 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.351617284 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.373590504 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.339386681 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.339646303 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.352107126 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355681836 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.357974808 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343217928 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.341227906 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.367262943 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.34252277 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349934064 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349414729 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347825576 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.333592576 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.350761264 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.356313261 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.335328257 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.348491171 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.358657663 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.353794335 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34276503 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.351872203 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.342154119 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.438627434 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.361082422 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.353642197 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.351074176 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.359954948 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347534405 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.348803578 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.354513309 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.370263537 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351306357 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.358390753 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.336822632 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.336019654 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362844089 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.35572284 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.35037051 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.347811877 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.338979245 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.362921697 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.352653519 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362022505 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.352217879 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343840503 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.376470565 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361951018 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.355588722 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.351862656 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351200956 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.359507891 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.35347161 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.360640242 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.35243067 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345299031 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34527407 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353968935 seconds)
done (took 106.678170883 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.467153282 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.340779352 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.500480796 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351080687 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.510198988 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.466999089 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.350792696 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.353069098 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.352018278 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.141825259 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.352445827 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.352737854 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.343561367 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.352773672 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46674618 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.353254309 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.352289473 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.038983674 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.354067175 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.484321945 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.341862523 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.35294395 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.354035443 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.142508471 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.34359135 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.339151241 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.48595536 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.354228719 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.041124207 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.340217453 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.343655075 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.041762925 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.485132888 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.37285246 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.363324764 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.363272747 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.511532963 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.356193883 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.470024858 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.469134789 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.503391725 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.391701341 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.340578955 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.345453832 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355321207 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354643347 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.353616746 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.38323849 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.343347564 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.354586115 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.040881444 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363661318 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.354934918 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.355742308 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.354029669 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.383496346 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.355137327 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.354690083 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.486250654 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355529144 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.470998753 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.143134819 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.143147902 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.355833859 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.34333318 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.357100191 seconds)
  done (took 109.33382591 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.416533372 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.422659016 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.458585597 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.349907653 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39665614 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458027602 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.351278678 seconds)
  done (took 11.086053939 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.353200712 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355669509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395727825 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.395801613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.356448247 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520995382 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357229389 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.35996983 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.356690249 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.399295636 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.357978954 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357407422 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364396624 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.347812324 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395647288 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359721263 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.466432808 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349234246 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357520001 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.498697341 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358544267 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.36672267 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.399391066 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.360091268 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.359590255 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.355826402 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.132952904 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.359089336 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.357834162 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.357577 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357097206 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414201761 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.359496956 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.34990828 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.358135458 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.462125491 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.358865456 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.356973157 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.358583983 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.351814281 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359260359 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.357822627 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.358562498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.358469329 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357734774 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374300022 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.358645139 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.359719745 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.358924961 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358640267 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400232968 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358486116 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.359332924 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.359799662 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405350727 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.369132689 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359776331 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.360184552 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.35997415 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.359361577 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504566423 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.397993125 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.361213279 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.396493448 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360049881 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.361761079 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.361982182 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.359895584 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.441361102 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.360751852 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.398929387 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.360563356 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.534145448 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.376323923 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.362060188 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.355595381 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.354949372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361461564 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.348589202 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.359061073 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.361121562 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.353407865 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358909539 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.360709488 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.361476281 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.509995555 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460573888 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.36123246 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.36863455 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.358667763 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.361984271 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.405604275 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.361884243 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.361537528 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401391768 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472462119 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.404280039 seconds)
  done (took 139.713508586 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365411741 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.365437988 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.357357699 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.38005255 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.353990259 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.353297367 seconds)
  done (took 9.41440991 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.356706874 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.366109883 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.361604206 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.362280955 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.364882009 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.364100586 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.363355983 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355630505 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365540485 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.364589577 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.36515069 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364367842 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.363346346 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364545321 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363020888 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.363678467 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.363606473 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364290876 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.365113667 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363477774 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.347971538 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.363954212 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363446569 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.358063302 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.370103498 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.365303149 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38065453 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364979226 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.363680337 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.363839278 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.367194218 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.365009272 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356486195 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361351433 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.367946947 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.356861424 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.369038545 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.367824733 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364298331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.368773557 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.36788065 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.366731087 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365458296 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.367515386 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358588401 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.362031336 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.372626368 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381815544 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.367424503 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.36797683 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.368718719 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.365180496 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.368397299 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.368999744 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.358604097 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361345259 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.372689091 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.368113372 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367506927 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.359667191 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368593706 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36862668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361099193 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.369189916 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.375004522 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.370575309 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.360718666 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.371043015 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368559938 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366327072 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.369936406 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.366332669 seconds)
  done (took 100.547926672 seconds)
done (took 371.324981473 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.614004646 seconds)
  done (took 3.856574701 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.356116388 seconds)
  done (took 3.599487948 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.485548753 seconds)
  done (took 22.731214057 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.356270398 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.457759624 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.358563921 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.354630709 seconds)
  done (took 10.769994819 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.962446539 seconds)
  done (took 5.20590156 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.361768845 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.362744238 seconds)
  done (took 5.967836669 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.546635517 seconds)
  done (took 3.789227701 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.541170079 seconds)
  done (took 3.786382928 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.369590864 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.383870778 seconds)
  done (took 6.00548063 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.331935957 seconds)
  done (took 3.576195075 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.385423409 seconds)
  done (took 20.630162379 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.374934178 seconds)
  done (took 3.621425058 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.393412676 seconds)
  done (took 3.637146947 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.882784978 seconds)
  done (took 6.127584073 seconds)
done (took 104.548802044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.352759534 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.359821928 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.355983459 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.35344246 seconds)
  done (took 10.666700399 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.431219596 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.435746638 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.439674513 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.426953182 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.42667721 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.434864602 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394310321 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.411161279 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.424630555 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420315677 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.436445665 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.426182506 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.436509357 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.394025595 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.420643512 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.435932832 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.424239858 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.440434225 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.39569347 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.42724126 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.370782643 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.428273252 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.42200161 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369496354 seconds)
  done (took 35.319731321 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.857267577 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.431623596 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.514717172 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.411736631 seconds)
  done (took 7.461475844 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.473331136 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.474972195 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.491324221 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.537882825 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.575860249 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.488268468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.397081121 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393874461 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.377789621 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.47542736 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.553828783 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.472901446 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.690235721 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.370651276 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.688751575 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.37099457 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.37234932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.474554112 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.523621491 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.552165654 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.372084122 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.473983458 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.480081432 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.474192039 seconds)
  done (took 36.802671366 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.380984267 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.388738736 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.372043655 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.386296466 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.373755861 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.373789612 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.373872922 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.378500399 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.371231803 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.37272977 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.372156511 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.387056137 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.375388562 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.373819153 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.378584923 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.376038611 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.376442869 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.380525877 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.383105323 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.374110629 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.373552152 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.380609903 seconds)
  done (took 31.551659124 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.359361036 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.358416587 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.708935625 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.611688832 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.358107754 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.361631467 seconds)
  done (took 14.006213557 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.433275428 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.5666308 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365801695 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.710647371 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.799067795 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.371542212 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.365805793 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.604101478 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.901497396 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.900284449 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426042885 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.434684968 seconds)
  done (took 20.129667996 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.359908828 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.36365579 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.363363118 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379623209 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.41922441 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.368554105 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.371655024 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.358758458 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424800605 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.422384451 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.369900461 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420299651 seconds)
  done (took 21.872717853 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450763362 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370179143 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.369634102 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358219915 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374140722 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.370376542 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.367348694 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.066167503 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.374972867 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644938483 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36972317 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452498993 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.617537119 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379978997 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.37422292 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.316236938 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603649935 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878989815 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376194885 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370759387 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407669809 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377622042 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376343579 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.603689075 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.376570336 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370852888 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.633961465 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371542588 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66068527 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640168913 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.640518513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378117997 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648325704 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004255929 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476131348 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.578999584 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377680744 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.377064422 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.348820622 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.373369134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404622583 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374603934 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.637240667 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380436921 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373966008 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376317835 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075359968 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379991592 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.371522561 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374226896 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640585374 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460451694 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37851536 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371782358 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363647357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377279176 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.377949333 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494138915 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0101846 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378173058 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382285935 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.37815788 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.363072035 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384306223 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036739291 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.37820078 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.378417539 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378535839 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375264577 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375433714 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398507581 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373528872 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.395062814 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374480186 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166744295 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373564808 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37535354 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932733073 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382596914 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.379669501 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.599200847 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37541461 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376279748 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.374489129 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375253408 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102503617 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38114701 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.344472191 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411633589 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.068594951 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584441529 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39691754 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406012217 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596200419 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.345275779 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377282022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.377260952 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378941996 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396748113 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.074280642 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376311863 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.383120539 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622320687 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587339386 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385518293 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.326150798 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854276429 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383793953 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401385959 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.379678039 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590260529 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.015161507 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646867723 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3830356 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431119546 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376085393 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167001912 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379983683 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.385487015 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37717473 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656137796 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.184834075 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37782932 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448802351 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379651955 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.377366484 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376769674 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384496899 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.378167686 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.566916701 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.391688391 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650104124 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.384367063 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378867603 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.389151656 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388596842 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.37973797 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.601117053 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392085059 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660139379 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379753518 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37863363 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380007656 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.599493863 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.379136366 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.388951791 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.717745737 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378349383 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.390162148 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.654234408 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416114499 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492553576 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411379635 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.381569104 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630399029 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.385087891 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.386236484 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379775323 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385897732 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384661971 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.388596064 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371281944 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.023745313 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358968303 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386329868 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380588065 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.396600031 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455023609 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387078466 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590766761 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392377401 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382669924 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390860936 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.389132214 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605417377 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647687932 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.386126224 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.561097821 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.854504484 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.019649201 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39613735 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.380873702 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.383062233 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.381167521 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382957227 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384773003 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.382854533 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.593350667 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656151642 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381457999 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031172369 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384272353 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383289204 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.393443243 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65017952 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.397254629 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384612981 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.381957166 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387231542 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398227545 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65324334 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607976193 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.397529906 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384230025 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.902707886 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.390088673 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.382529538 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.384523239 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407294482 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.38310595 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223077924 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721381037 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374712112 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657706955 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38857698 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.404588718 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.383311948 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382905736 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39104804 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.410077214 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396120942 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.595387743 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397001084 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38968871 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020584913 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187515599 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967525808 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386351853 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.387528739 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389570391 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.085382905 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385750628 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385019121 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.63417402 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087119521 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383993807 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857505477 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.383655453 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149227764 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65745741 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613520804 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.385216545 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.3857365 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.655147275 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60102527 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.412517385 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394526104 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389373656 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.355251321 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937110578 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383764824 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579357908 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084208843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384864663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.38714465 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.425194592 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.398390749 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.767887483 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.385224601 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387581516 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386345149 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391794585 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220896429 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390416237 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388355997 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053336231 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386968377 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.867789451 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387129171 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.598138243 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658896204 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.639011044 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.400009435 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.393446515 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.637512995 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657555054 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393998029 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.393165162 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977332422 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.24050702 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.395226828 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388560472 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.182845782 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403337716 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685532439 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.394554284 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.405079488 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396965867 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.390627722 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389077796 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.387641784 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395261384 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366178618 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899948307 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.392430816 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388619237 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394200258 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394442122 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634622915 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.404839947 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.032204346 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.616149652 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386356629 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443921107 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.394780775 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397640157 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.361384483 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389818843 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389974905 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441427513 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614141934 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390751094 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.35856792 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429190372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.603435999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389980927 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399700086 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617794509 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393942143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.395244869 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19744106 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420133704 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396700454 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392098642 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.39450692 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431834406 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461700745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602234742 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.664235044 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665402958 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781000388 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394704042 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392864672 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.407823028 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471956711 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399779119 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.397543019 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.412275906 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.033144058 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19505895 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.040445614 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662772179 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397449412 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402764987 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390842661 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632044401 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393727946 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667922591 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392565754 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.396911978 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417687454 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40064749 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405847111 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.608157461 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667312169 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393374437 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396686276 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398306407 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394288976 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665474269 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.611218265 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906384161 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963297808 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39842908 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40068078 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099547548 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670850998 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394085368 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.39321448 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395573133 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.410017785 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.40735494 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400109973 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40529599 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619125982 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663192057 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037196429 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66324413 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.578878547 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.324123897 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39522781 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644746027 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.225998 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.605161837 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049750463 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.151105554 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650508637 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469140796 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608298816 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.398134587 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632243128 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.404968204 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400014965 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396674458 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396769947 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.395237892 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.666262128 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.048185084 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645321509 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.399896808 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.408165126 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429595116 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.606676134 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.619024978 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136491364 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.614814298 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669396514 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.407181709 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.396208471 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050196233 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.6688336 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40086397 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.401237448 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.62179471 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400416842 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432926219 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.27713954 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.396028848 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965283949 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.611595229 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416489136 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396431241 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161240835 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052248778 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396846607 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915041234 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402952156 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408269864 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67770161 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.404215358 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.410300137 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682705958 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.404765688 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.397763143 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616971852 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042296638 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16903187 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.41946329 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403312959 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.404349042 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398979122 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.425184778 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403555193 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398254464 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.785445429 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.398371774 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400865143 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412437515 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.398618713 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403044381 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.404380654 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399079587 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406346917 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.387539387 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.376935801 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408467905 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523282842 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953695174 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40122305 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.016379833 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.733756901 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646576997 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407236211 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.373900251 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.404628297 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400914536 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400045575 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400115267 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395157257 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992955925 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.407967602 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.676389294 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411457585 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.610809528 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611692174 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413485432 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61641553 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405667742 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44593296 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.369903863 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401151251 seconds)
  done (took 988.043970332 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41820018 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.398039983 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.416625036 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.393375707 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.425647368 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.411787423 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.418129828 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.470967485 seconds)
  done (took 20.63007849 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.394515249 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.403811457 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.395309064 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.406090623 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.393880305 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.877521615 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.403206303 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.400780201 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.414136689 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.394396444 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.396510468 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.03198295 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.40212534 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.395961657 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.407181035 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.408114722 seconds)
  done (took 32.805435584 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.192473396 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.454215149 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.072193572 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.415857361 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.408301762 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.407121719 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.573524427 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.401465021 seconds)
  done (took 26.205850063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.407088209 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.406398978 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.40780846 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.410096973 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.406974848 seconds)
  done (took 8.318488269 seconds)
done (took 1255.059182787 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.409152424 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.408444709 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.409218466 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.409825574 seconds)
  done (took 6.915995554 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.375424554 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.372653134 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.373872886 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.384866687 seconds)
  done (took 9.787309687 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.130979313 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.913902772 seconds)
  done (took 5.325105048 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.951850439 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.952633661 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.946163245 seconds)
  done (took 7.130704556 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.690747009 seconds)
  done (took 2.971113003 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.383493488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.399636041 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.1284886 seconds)
  done (took 8.191895821 seconds)
done (took 41.600985239 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.394623646 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.159546244 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.550037656 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.394500253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.554892009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.551798045 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.645816458 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.406938037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.407603238 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.407756464 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.394612096 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.556720259 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.63293776 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.160485586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.632027682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.159331053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.556643566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.405088727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.401811551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.395133254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.645101327 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.396228491 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.396350261 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.415034139 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.556866877 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.540433138 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.407420165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.161406796 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398292207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.409454233 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.542076379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.396821618 seconds)
  done (took 83.314459559 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3969019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.397493914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414697949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.415509973 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.409306558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.396201058 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.416600353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39727137 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.396003964 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.397904098 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.397565142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.409512817 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.398985457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.396856686 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.400154656 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.397638919 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.409992228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398208712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.397345226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.398011551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.398220756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.397995191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.398540488 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.413384144 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.40508504 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.397515071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426733941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.398499715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.399025166 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.407334584 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398483214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415072084 seconds)
  done (took 78.180621756 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.401196049 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.400391359 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.413188332 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.397747412 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.411330342 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.408583574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.396622745 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.419122458 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.398431401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.397922642 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.417099399 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412188565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.402816199 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.399933991 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.400782453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.398802089 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.399220729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430406451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.399009514 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.400219148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.402456918 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421084223 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.39839614 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.410283835 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413350222 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.400271663 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.404966626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.404418952 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.40709124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412378019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.406183246 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.407584519 seconds)
  done (took 78.278671603 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.64116132 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.416768971 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.418088735 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.410174301 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418577371 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.415798406 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.409926057 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.645756589 seconds)
  done (took 15.062638799 seconds)
done (took 256.117894493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.409581812 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.904011324 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.441924199 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.420732694 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.430886842 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437223527 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.632907353 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436659946 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.634109856 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.427079923 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.429163333 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.418522593 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.217727794 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.566646274 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.223828438 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.33254438 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.295814294 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.407859419 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.990954356 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.697377171 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.436571853 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.40376093 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.21949981 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.314099479 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.38659355 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.492402481 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.504979144 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.642648655 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.570987808 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.487537601 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.912043573 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.417532456 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.415614221 seconds)
  done (took 65.247444649 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.408487732 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.418386249 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.418624636 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.417901224 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.41757443 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.418526043 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.408734042 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.418126956 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.416491107 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.418282233 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.419053059 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.419170531 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.417860917 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.418402412 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.418713127 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.392586282 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.4112231 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.418106871 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.409269355 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.392530495 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.417340939 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.418054609 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.419960696 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.418793044 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.419282137 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.42037857 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.41935013 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.418807193 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.418990422 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.420585208 seconds)
  done (took 43.758221254 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.419274963 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.971759723 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.155487835 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422989307 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.411675506 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.415595889 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.70292201 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.426175504 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.413909798 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.414967681 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.876046426 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.428469328 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.445468788 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.157811739 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.419164704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.421715667 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42178982 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.413430523 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.983475354 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426209142 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.69812316 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.429020445 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.701893515 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42490248 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.415878233 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.413013985 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.418361411 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.237580986 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437095174 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.878410196 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.203884148 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.700623693 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.172785805 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.204205487 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.200136463 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.429045772 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.422559434 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885926824 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.421859941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.41399552 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.701817162 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.418477967 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.161814846 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.107184626 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.433226288 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.422632473 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.262325496 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.881326237 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.662107739 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.420582378 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.193766006 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.423451847 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.425254439 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.415501046 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.658182298 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.416932486 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.414914511 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.261352642 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.418869756 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.7005076 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.424530324 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.414253896 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.977161247 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420113409 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.976004339 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.420666097 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.423144041 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.415793132 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.165835667 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.42375412 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.132709838 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.433863526 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.4253853 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.88503502 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.980790293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.315107898 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.41833192 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.981639272 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.195514579 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.719426501 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.420450426 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.207012787 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.72185594 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.420210305 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.426899659 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.426372552 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.42597768 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.489601705 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.698808593 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.032801606 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.110884333 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.270566772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.704910404 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.425436447 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.417812917 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.267208129 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.426138066 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.425390343 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.162626017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127774028 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.435791598 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.424263459 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.111308414 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.437271292 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.70692749 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.42460979 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.201630919 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424933171 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.534638616 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.425920022 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.424292537 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.420569874 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.704513573 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.422307295 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.428137052 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109916575 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.909106138 seconds)
  done (took 197.655702997 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.414575627 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.412633775 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.414225776 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.41307433 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.413806666 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419855408 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.413185016 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.414088557 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.418753614 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.412571587 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.4114555 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.421572252 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.420353854 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.414452813 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.4235607 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.413925279 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.41489164 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.425996543 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.414663357 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.414488928 seconds)
  done (took 45.619241858 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.429259613 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.9769385 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.948876679 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.435570284 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.428579233 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.419684885 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.476312084 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.43051972 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.429534776 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.717591926 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.594046308 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.436455323 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42977651 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.429493855 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.951629195 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.403355405 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.718161977 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.977109923 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.429432729 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.975959799 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403434463 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.431022267 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.420458614 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.977818007 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.731802822 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.707305815 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.47982292 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.97861974 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.431093826 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.430876898 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.980179173 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.430984496 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.422403619 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.96673466 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.429806565 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.44409604 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.430469532 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.479597709 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.481678943 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.720808356 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.986249171 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.720815588 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.442699658 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.597620798 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.435863498 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.403524124 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.994363589 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.431933623 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.404027847 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.432116573 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.438119951 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.968808891 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.422480039 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.968444709 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.437013367 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432452745 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.981651522 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.970468202 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.957545643 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.595494683 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.423069273 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.709937689 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.432433201 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996098099 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.433421552 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.434149597 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.434024125 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.599091963 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.987591953 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.711266536 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.729814332 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.727154325 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.438424173 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492531418 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.433630867 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.72503 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.494918955 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.840393874 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.729534229 seconds)
  done (took 128.91291025 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.704949451 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.543141748 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.80157956 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.001223776 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.925003548 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.562726345 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539405596 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.673344505 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.451299362 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532979695 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.070343417 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.518895272 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.143096054 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.496738601 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.536992969 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.547871282 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.820655216 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.376975463 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.053345397 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.055413894 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.429400825 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.531813527 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.955591613 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.64148218 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.423936371 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.000748235 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.361848453 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.942028082 seconds)
  done (took 53.945268711 seconds)
done (took 536.426463002 seconds)
SAVING RESULT...
DONE!
