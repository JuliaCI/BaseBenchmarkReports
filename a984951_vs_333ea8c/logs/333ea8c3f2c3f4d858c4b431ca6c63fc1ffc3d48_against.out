cset: moving following pidspec: 5277
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.038522626 seconds)
loading group "string"... done (took 0.605564735 seconds)
loading group "linalg"... done (took 9.576383705 seconds)
loading group "parallel"... done (took 0.18340825 seconds)
loading group "find"... done (took 1.522947105 seconds)
loading group "tuple"... done (took 2.209207952 seconds)
loading group "dates"... done (took 1.502887082 seconds)
loading group "micro"... done (took 0.239692483 seconds)
loading group "io"... done (took 0.593389399 seconds)
loading group "scalar"... done (took 47.85844178 seconds)
loading group "sparse"... done (took 14.306396287 seconds)
loading group "broadcast"... done (took 1.157705399 seconds)
loading group "union"... done (took 13.015420541 seconds)
loading group "simd"... done (took 2.70797169 seconds)
loading group "random"... done (took 10.958050464 seconds)
loading group "problem"... done (took 1831.916625225 seconds)
loading group "array"... done (took 27.468828561 seconds)
loading group "misc"... done (took 1.223834963 seconds)
loading group "sort"... done (took 4.030649246 seconds)
loading group "collection"... done (took 20.347153489 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.714114045 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148244015 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.179322087 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.375495617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204404531 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.172996661 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159007237 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.605194338 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.038313446 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.227253074 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154961429 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.605384877 seconds)
done (took 6.291702778 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.290184757 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.457173182 seconds)
    (2/2) benchmarking "String"...
    done (took 0.122136819 seconds)
  done (took 1.240770339 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.099673014 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.191063529 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.103342705 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.121213 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.122228769 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.120308366 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.104195905 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.121453762 seconds)
  done (took 1.539024041 seconds)
done (took 3.831184111 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.527137864 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.927288019 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.548656571 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.1398776 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.166275719 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.158021966 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.328573635 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.170349877 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.125214039 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.091743791 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.182642851 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.422949738 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.50864687 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.045704395 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.093258386 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.140582418 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.088031005 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772342016 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.097025471 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.13603391 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.55854151 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.119296884 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.123829489 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.146045317 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.193962565 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137521994 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172451682 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.104265321 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.844198971 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107832955 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.194621553 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.104915896 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.168224052 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.263982121 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.10141846 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.098582148 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.738850112 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.186151068 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.119610712 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.109774305 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.751314712 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.089268927 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.212049538 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.107159435 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120269464 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.203742071 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125062478 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.086484025 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.111894637 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.099122684 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.178411801 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.513087238 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.113409282 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.15583525 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.116004068 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.747895189 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.102898568 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.164068593 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.155715701 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.101955288 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.100814047 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.113977453 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.171037884 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.118830836 seconds)
  done (took 20.780729586 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.127875104 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.150523718 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101422087 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152187517 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.15511152 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.104952825 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.091041778 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.10190371 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121237765 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.201316228 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14697397 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.152790756 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09864847 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087053864 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128299347 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.261150491 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.114666092 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.132624597 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088576327 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11607512 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.151400524 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.102963637 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118607858 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.119222768 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.179687586 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20963835 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.114460792 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12830641 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09821784 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.10603653 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.148411092 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.168280198 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.080312214 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.099721574 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.192883913 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125021748 seconds)
  done (took 5.446893473 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.21271961 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124491563 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.20698652 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190365635 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.157336234 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.175991472 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.193482699 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.126826193 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.27156294 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.217876297 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193757544 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090172168 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.138942063 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103208019 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100447626 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08519934 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.101237731 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.817406511 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.192554607 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158929481 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116620626 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111655836 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.103544686 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.737089088 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093063984 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.103844586 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.092258819 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.097190453 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.189106634 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09027235 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.412456649 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.107154999 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.116419633 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137299126 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205243203 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.141434883 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.1342558 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110753949 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087945381 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.248838266 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116140821 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084265742 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.134456809 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12227202 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13919097 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.10636976 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.117905672 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.24222306 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104974805 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128134604 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.176169486 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.092220278 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.210700952 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.117278258 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102270945 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.383789258 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103767003 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11269402 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.102681919 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.303075253 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.144584261 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.107018618 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.085791129 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109027157 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084230676 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.770101241 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.115755706 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.263818111 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.103791401 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.171851344 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106969589 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11347684 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092008253 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107858492 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106994576 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.103160916 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084380368 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.102895955 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08436505 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.107765643 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.087939494 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.121629183 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106898521 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084933494 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165807718 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.108529494 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122798738 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130033767 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091576301 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.10082195 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119079972 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102638643 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088978051 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.157070697 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110692578 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.12060256 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105523978 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132694538 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.102642034 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.199735933 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.088880179 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.133372262 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106119061 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119222597 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.128647155 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102754711 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089527773 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.100830094 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085686906 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168024814 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086632572 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084943974 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.106562965 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.118461762 seconds)
  done (took 25.949182843 seconds)
done (took 52.830837789 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.505828897 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10515378 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.122618101 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.122318693 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.121125539 seconds)
  done (took 1.710702358 seconds)
done (took 2.416540059 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.39371676 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.196565593 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.127114528 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.194339037 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094732014 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.219705223 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184874248 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.126523316 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.215637513 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.107622603 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191710113 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.106996356 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094806922 seconds)
  done (took 2.988492685 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100952515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.127525595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086639026 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118069472 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082301477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118507508 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100377099 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144309194 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098545035 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108056878 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08114096 seconds)
  done (took 1.870010463 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09679935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11977377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087017391 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113858278 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082915821 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09759043 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115966603 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.126289268 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098503333 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111666843 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.082643282 seconds)
  done (took 1.836891021 seconds)
done (took 7.392403332 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.150108389 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.813793184 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111366462 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.177901778 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.364045489 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206558137 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.596603369 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.142207433 seconds)
  done (took 12.483029571 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.121359668 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104118523 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.105555585 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.106943018 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088346122 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.105099905 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086417546 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103939168 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088830691 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.108638362 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090762497 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.106879107 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.087368838 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.107846181 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087709797 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.107120048 seconds)
  done (took 2.375480646 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.126459289 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.124728059 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110565434 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.115197955 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090942858 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.108206328 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094627324 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.109022653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088808263 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.107421807 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.114296614 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0963402 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112245836 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.08929639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109609153 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.099210109 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.106274603 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110356692 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.095282196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.110458225 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097464549 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.107656019 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112597653 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097542286 seconds)
  done (took 3.350450464 seconds)
done (took 18.91475627 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.182876441 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09085107 seconds)
  done (took 0.979905939 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.109024257 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.127057649 seconds)
  done (took 0.949298251 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.115313108 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.102009938 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.146338128 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.122698192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.087356409 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.103342486 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.124521133 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.105142928 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.086164688 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.104617413 seconds)
  done (took 1.813263854 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091653204 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108364547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.097017333 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.127379944 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116407047 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.089576291 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108344145 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.090865523 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109542341 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.086766091 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.112688431 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.124448131 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096043069 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12658999 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092192041 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.111975475 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11669744 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092586907 seconds)
  done (took 2.615640434 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086470216 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.088656526 seconds)
  done (took 0.892084738 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089523653 seconds)
    (2/7) benchmarking "second"...
    done (took 0.101477741 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08873521 seconds)
    (4/7) benchmarking "year"...
    done (took 0.10562074 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.085452795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.102990896 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.086119277 seconds)
  done (took 1.376985222 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.547550889 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.272826212 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.359030259 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.109073525 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.16599043 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.396541496 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.149108244 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.120720448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.121858633 seconds)
  done (took 3.003065112 seconds)
done (took 12.344819631 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.097570324 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.204142072 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.585485379 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.12513614 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.084128169 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.164804011 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.289351931 seconds)
done (took 2.267861484 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.370802501 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.131704472 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.093862201 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084820805 seconds)
  done (took 1.396117767 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.084784082 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10945416 seconds)
  done (took 0.915998332 seconds)
done (took 3.038910969 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08447409 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.136893976 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084057287 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.102635365 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084413301 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.100027144 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084095342 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.080963981 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099594021 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.084396776 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100863605 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.084154534 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.100234401 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085392248 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081119974 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098374009 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081860294 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101517499 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.08216712 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098289494 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081618454 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101267018 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.08271711 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.081726373 seconds)
  done (took 2.961533617 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109604756 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.1038205 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.092073004 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.108861391 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106616433 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.091799982 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.108076206 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085618133 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.10784253 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.087640346 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106706087 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.089616861 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.104281904 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.089397009 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105757519 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107707827 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.213730083 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102474868 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087236604 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.108130204 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091093698 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102725166 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.09029988 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108303624 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106048144 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08976548 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.104609292 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.086159324 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108323153 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.089776157 seconds)
  done (took 3.818855705 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.094164475 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.081230757 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.099888563 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.094605861 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.099137633 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085443172 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.098855309 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083318997 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.100162929 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08205443 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101451802 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082471536 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.081997036 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100857547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083343996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.106670831 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.120553008 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.082639848 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082184276 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101430072 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.090561729 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.102344751 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.086927698 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.102608853 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084178374 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.101574933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.085503014 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084587041 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.105158581 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.084048049 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.10863257 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.092134753 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.102059571 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.1008367 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.109570099 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083571792 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.111304403 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083658413 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.103063053 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081562798 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.100028397 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082125915 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.08240584 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111703818 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.08636128 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.103778098 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.084523936 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.104282195 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.086882384 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.106402211 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084757213 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.102104996 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.088044445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.10412399 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.092176669 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.083742089 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.105173587 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084232473 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.103763187 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.084024868 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.103007582 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.084772154 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.110256465 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085248367 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.130116779 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.098913219 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.103056196 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.087060761 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.106316679 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094447798 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.106059461 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.105901732 seconds)
  done (took 7.592824745 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089216713 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.111312811 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085026992 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10269524 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081373727 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083000651 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10878391 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099786275 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085526045 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120925424 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083187385 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101770468 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085352402 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104908663 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083574609 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084813146 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112031463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097865591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.082960417 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104582157 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083435259 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108059631 seconds)
  done (took 2.833614667 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.244521368 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11135822 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.154805603 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.12119564 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.106421059 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120135222 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108934039 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092813412 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108565206 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095972912 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112774375 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091532596 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123166894 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111724685 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094433855 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.113904609 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107590049 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096149155 seconds)
  done (took 2.844472617 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.100114717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10456006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.112899209 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104098289 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086489879 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106860954 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093753277 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.12092672 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105705182 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.08679431 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115035278 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088347552 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10571869 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086289554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106634888 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.087645697 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105892636 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086177998 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115255617 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111711553 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.094926174 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.1155764 seconds)
  done (took 2.975547393 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105354015 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105462324 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.121911985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107724415 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082115815 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103515915 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09469067 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.103530272 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113649141 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.088062548 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103216704 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08563352 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.111677737 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086549603 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.111184377 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086940852 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106834135 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086700975 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105806669 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082506316 seconds)
  done (took 2.727199309 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.133771894 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121673311 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103984854 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13386821 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122483679 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104050687 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134517258 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122602415 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103924738 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138642402 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103617274 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121502699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13449399 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112029234 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122580085 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13500608 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117050699 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133927427 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121741767 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104671732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.137851522 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121260782 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.117738462 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122523253 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106070747 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122109512 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121579225 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112720125 seconds)
  done (took 4.127415083 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086698276 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.085552612 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100956281 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.084088873 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.101664845 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.083350756 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.102316419 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.083302164 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085844518 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100942103 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.086320952 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.103288785 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086050004 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.103549074 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085997453 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103154053 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08644182 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083330542 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101169449 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083127311 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.10290825 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085677562 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.104107314 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084060522 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084061052 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.107634615 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086412197 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105158076 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088688806 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104824733 seconds)
  done (took 3.531775404 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.096237778 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111123997 seconds)
  done (took 0.946869436 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.085251699 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123246561 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.08390763 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108498948 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093499203 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104723831 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.099131964 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111862276 seconds)
  done (took 1.549459471 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.112700989 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.125777433 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0928226 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117664303 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108070778 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.126039199 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.179138668 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.092997961 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.112247737 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087495841 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.125369747 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087000716 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.118706381 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092828799 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.115537009 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120828372 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.08485571 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115524807 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096276929 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107532516 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093189935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124052422 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099070504 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.113477379 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089266888 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.118410014 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.121272439 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100195024 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110520652 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.101187254 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.113590222 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.080834572 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110596385 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09334449 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102977421 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10646779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.124978141 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093148974 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115019161 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092692431 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115932261 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081969399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.117704979 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112857866 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.1014457 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111257318 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093859365 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100355394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.088009921 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.109342601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.083730392 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109659215 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.081695767 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115635072 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.099011786 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.126373222 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089917572 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110405131 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092103394 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108610992 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.09585334 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110924881 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098827008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.109609503 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.125336883 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.097949711 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114673816 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.083465423 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098612385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.085664623 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.116127387 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11426467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.119269992 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.093741633 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11183698 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085433968 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111799957 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094561858 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115201468 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.117754305 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092242804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113963582 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099342168 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109769722 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.09202522 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112562498 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089471885 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109215747 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.088558811 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129836994 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.090814848 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.103341 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088976195 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.118794994 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.092497873 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.109283015 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088793897 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115499497 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.08138942 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.112273787 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094692569 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113077381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.103580748 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11207028 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094704614 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115156559 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.099377206 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111953474 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109358777 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084146053 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095082226 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.108501564 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.097230378 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.102481937 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093621821 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.11037703 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.093559657 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.118274966 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107421654 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.093160221 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117252259 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.101579387 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.109067529 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083754293 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.110454005 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.093131526 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115521819 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.101509694 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.108320348 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082347724 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.101310453 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.098528306 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.1106321 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.095271122 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112618863 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093276617 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099388429 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.08610318 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.11279966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.101420651 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.108952787 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.095302232 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.117505775 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.114251671 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091888692 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.117304917 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.09113995 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106293558 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.099018046 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111148143 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.083253499 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11626603 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.09243371 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.109383984 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093674139 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.119237853 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09435411 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.115669256 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093984108 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.115987555 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098436028 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.110308057 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096988109 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.112972628 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.107101662 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.115963274 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.086758811 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.106938487 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.099988944 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.112195097 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096564778 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.111086356 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.095397944 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.116488008 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.088316483 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.114674817 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09547248 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127838912 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102242639 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113873892 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096218169 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.120060446 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.091340281 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.114005157 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.092715126 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.113522808 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.09469053 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.117700165 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.113939627 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094651867 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110204936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087208073 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113345415 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099820506 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10646122 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086548175 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088238828 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.112102089 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.120276493 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093370695 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.112308986 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090393614 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113899157 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098730217 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.111591108 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.093863951 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.106043096 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093997683 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.117489459 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095172654 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112275535 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.101948027 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113067318 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084459706 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116470689 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090148507 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116074517 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.084337206 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.107413147 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089053355 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113838611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.091496384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.110062297 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.08192965 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.117019932 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100133898 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.11223588 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089041032 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111786653 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104354901 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.110257716 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097745289 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.112486126 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.0971536 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.128478153 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107936568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093540938 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120873015 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.093820211 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.099978985 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.097516854 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.108650643 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088418437 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.109277688 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.091371327 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113683832 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096875641 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.114038509 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.082323664 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.110778714 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.091646726 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.089212308 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103210598 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.119097669 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094704908 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.113482771 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.104894205 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114416274 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.094889371 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113938108 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.093519233 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.113454832 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095858407 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113042282 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.094871759 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.109994502 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.089458817 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.112979063 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08996299 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.105769267 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091790188 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112472142 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.095078775 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113805195 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.092817591 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118014425 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09354247 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.114231674 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.135784494 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.090531422 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107805455 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.095359184 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114174114 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.09268299 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.11141622 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.084856766 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.118999171 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.094011162 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118999198 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09267501 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.103495312 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.09421869 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111715913 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.095442302 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.114148924 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095174044 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.111048647 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.09237585 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112277314 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.104942874 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10866908 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.120196516 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097914004 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115772673 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.09373721 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.11414528 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092942709 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.107218853 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.094694541 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.113850945 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096178286 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.110818649 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.096895893 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.113768736 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093284322 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.110584603 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.096141589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.114640084 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096920056 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.102076138 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.090243928 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.108270066 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.095329984 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117006177 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.094965436 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.11096644 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.092596561 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114721928 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.093210803 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103718801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.100159421 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11622639 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.095097734 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12303981 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089823045 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112960002 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105238734 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.102683041 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.091100573 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.105664351 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090873504 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.120486195 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.094882279 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118775196 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094599388 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108635757 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.086884283 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.114111536 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.091604144 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102072057 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08793009 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116131872 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090898499 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111372998 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094764233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115674772 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.096063477 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.117803363 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.092597661 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.11340663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.09515729 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.105025953 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090919435 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.108072809 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.09503241 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114927182 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090936862 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105829696 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.094913632 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.11305738 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095203011 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112153523 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093619383 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119382644 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093926042 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.113392833 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099742298 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.103197843 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09444235 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11203968 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.094576889 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.109375329 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.096685573 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.114622426 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095854229 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119204202 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093933447 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115611271 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09405042 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.106540143 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.093092933 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.113744524 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094618705 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.108478196 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.097158662 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.120721551 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.088072868 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114057215 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09506475 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.110172192 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096662548 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.11448607 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.094691513 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119359413 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094564587 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114098393 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097639987 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094585476 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114367639 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095673908 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.111126912 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100613574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.109006463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103331276 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114259818 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.096300635 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112047697 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.091569702 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.112648205 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.093331469 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111372611 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.101167919 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.115517393 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090312735 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108942697 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.087695204 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.11384509 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099912576 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120230293 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.095113315 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115644582 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.085064587 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.105549134 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096964442 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.110625336 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.093934911 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.116122126 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100474633 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.113971746 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.091431899 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.111846313 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.101395376 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118701066 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.097945341 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.110770265 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.116404778 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.096681752 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.113463425 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092743523 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113212413 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096567623 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.11647469 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.09443627 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.108746157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106400679 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.119731963 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09649127 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.112612073 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09790751 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.114130613 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.085400043 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.114863544 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094803919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117862706 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094535257 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113371849 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106773338 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109250037 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093166455 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121986084 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092379699 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120961603 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.104289764 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.096166845 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115177393 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096848161 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.104365343 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090777292 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.109555287 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096285057 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109053195 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.086201473 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125326608 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10124801 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.114606222 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093501731 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112006686 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.086028748 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.104319951 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.09075557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116259146 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094082776 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.12374957 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090805819 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.108918176 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.085989665 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113897814 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096704235 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.116430746 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.087583942 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.104844106 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.092112207 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.115047896 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.104190646 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.113017662 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.094633303 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116439522 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095948082 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.107170246 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102085907 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.105881818 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096650867 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.126725003 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.096354609 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116493812 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.098575772 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121171269 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.095885206 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105873398 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.096189815 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115764459 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095291182 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117683383 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.116503491 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11346263 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115343741 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091030554 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.11245706 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.095689543 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10997627 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.103575325 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.116006692 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.095978273 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.116987928 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093303852 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116978744 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102217705 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118552607 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095490678 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11615882 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.092850869 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114093101 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.092198343 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.112780224 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.096923191 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.117535518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094456452 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.11836928 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090286022 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128725681 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123532222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.097615227 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.105500739 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091481708 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111400491 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.087241588 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.115306766 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.089003631 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092013472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.112211394 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.093604009 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118289273 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097692024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.116928261 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.096064874 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.114458267 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.084158654 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119020903 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09495213 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118980704 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.086637324 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.115099743 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.095851399 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.121193678 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.119332329 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.093876321 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.114647919 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.094573616 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.117135071 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.086485279 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.11702426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09405327 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112799317 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.09098489 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11343236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.098871788 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116397777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.097433236 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118126687 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09656634 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118844828 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099650044 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106331454 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.088706646 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.118949919 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.089724446 seconds)
  done (took 62.887252251 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.163756976 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093164319 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107379157 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08647361 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137657607 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087871114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105780884 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.087745578 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107177497 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102595827 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105526281 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085787364 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130762479 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138216973 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135846342 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12266134 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08692837 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106602687 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086303137 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106400405 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111674339 seconds)
  done (took 3.090562307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114563671 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.126147828 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124181201 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110264753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.118668772 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.12510333 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105640205 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126680206 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.129938179 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119692593 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111526414 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126181183 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.119215347 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.101274019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.120381247 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122423329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11130299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.119430507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.126505773 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105689532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123764632 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124373627 seconds)
  done (took 3.407047267 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.100369438 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.094443768 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.121024008 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.088002337 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.114358769 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.089034972 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120367256 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.090343084 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.119660301 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094839997 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112052221 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.095421169 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120393014 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.088208317 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.113701141 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.091730238 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.119740973 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.095014198 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.115502126 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.089126174 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.139995514 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.088261667 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.109375069 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.091159572 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.124038304 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.096300205 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.115268167 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.094025518 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.111765024 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095286719 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.110765919 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097696246 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119102626 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092316944 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11189668 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.094742532 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.114719246 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.089667197 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.111386804 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.099539383 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.109545742 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.097203844 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.123064612 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.091393662 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.111574617 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.097288984 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.11411056 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.089584371 seconds)
  done (took 5.808243335 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.136861673 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.171623771 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104026336 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.163432358 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133145638 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.127694407 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.096812461 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.159682053 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.113233708 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.095261115 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.135712563 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.134748233 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100630624 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.127467967 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09883065 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.118356718 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.123300296 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098634062 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.122320392 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096320981 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.122136946 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.099687129 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.132467971 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.130557256 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120871508 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.098117137 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.118574663 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107776399 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.132250651 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.12457719 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108128137 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128055848 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133029209 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.099075405 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.115521332 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.098388324 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.136562478 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.116654854 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.098489996 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.11572008 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.102495009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129198177 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.12306914 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.117591408 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.123933412 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.120794872 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.096316228 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.111664446 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110046435 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.120132568 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.126484525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131953329 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101836692 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119526023 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107114832 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.138817476 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.119086017 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097334511 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125382024 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.111968813 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.116113531 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121314025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111002344 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.118918926 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12525938 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.111824703 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.119985707 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.122319326 seconds)
  done (took 9.025900189 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105737005 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.141099899 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135618837 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115583354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123015253 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121252148 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103234942 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.121128897 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.10199543 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.130975586 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120817265 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.177444435 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.094916722 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.128649197 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102906922 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.122772057 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122255085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101856535 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121794275 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102964822 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122467791 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133917892 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103570004 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134708746 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137130921 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094329976 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12388266 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122187171 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114919891 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122726877 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.138039256 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.102002377 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123206573 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.135093039 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13647316 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.102351193 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110970269 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102397293 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.122464459 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122203205 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094682488 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.134606013 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101835268 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.116888603 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121918897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103055725 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.134819959 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.137927987 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.108767849 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131428901 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121409574 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.134316992 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102828418 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.122165244 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.13575866 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.125021193 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135587538 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.135180186 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122142035 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115764651 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135833619 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.144118625 seconds)
  done (took 8.319240994 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092518515 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090649852 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.110676302 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.089605938 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.112598093 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089901757 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.111744411 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.091999783 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090960478 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112633336 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09233839 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109784048 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089064561 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112258707 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089609291 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109905737 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089697874 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090212319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112177909 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089269382 seconds)
  done (took 2.782281019 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10126103 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.135853169 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.093340417 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122045777 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.095302485 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.122432671 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.114782172 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096209913 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114326339 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096004716 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126947644 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107530087 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115886839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.121325232 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108075233 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.122308155 seconds)
  done (took 2.601183775 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.116368926 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128417856 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.141590862 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099106353 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.112328338 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.102474668 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.113258025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.089216143 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.108446476 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.101898607 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.119572506 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104631272 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.113988252 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.090739705 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1142274 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.099676281 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.109119644 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.097618279 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.11253472 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12027713 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119889596 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.094834268 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.115431311 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.115622767 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.096123194 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.118556957 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.101448657 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.110963765 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.090923987 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.113134873 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.096658795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.122889127 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089458203 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.119658372 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090234356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.111668213 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.091797552 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.114183136 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.100040709 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.114244246 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.091198095 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.116112189 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.092624815 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.115786184 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.088040281 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.114053265 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.088280553 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.120647818 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.094319391 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117132818 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.091815674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122097322 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.121045516 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10602322 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124124757 seconds)
  done (took 6.733909781 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109365998 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117278323 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098555997 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110074591 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.096390412 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.121852309 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097609621 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.115451548 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095135955 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.110456362 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096253351 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117850897 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095079641 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117855492 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095743077 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117513153 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088125769 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.115682226 seconds)
  done (took 2.726194475 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100417417 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112961719 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.101316974 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.113123946 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.093602865 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094035371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.110800229 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.090551443 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111342847 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093403376 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113182909 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.094469229 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112843509 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.094708608 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113315748 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092925457 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115899269 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091560936 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.113670888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089366951 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115884931 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091606944 seconds)
  done (took 3.072765151 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114289023 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.14982307 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109301442 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.161332179 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.119494375 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097141227 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129895153 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098102383 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138750498 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117528737 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097696272 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.116898688 seconds)
  done (took 2.266287536 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121961066 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158343084 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091336278 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117185573 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128487369 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099851579 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119592873 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099820299 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134297687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135211478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098941152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134250322 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132730073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132318477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107161332 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129526632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119777097 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100401972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114758651 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144993213 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099995405 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134088835 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120680018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100841025 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120445599 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133730729 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113134701 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136545884 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119721829 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112706935 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128922473 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119605091 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112876951 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13647967 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116108204 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113704468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121670779 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145308533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129416987 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112663723 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117516335 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128655679 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113120089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129803169 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133362554 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099338749 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129063232 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119959961 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099632024 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152217041 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130015442 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134206745 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109560524 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134500532 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1338064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153184178 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136619787 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113156961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129833418 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136846027 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132926295 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107917874 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134304871 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136534368 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128985963 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114066147 seconds)
  done (took 8.956533841 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139431147 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113026201 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099022107 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138081989 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13428487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120484663 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10027026 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121294069 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099983687 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116764014 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.173126969 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120680755 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112986324 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135466774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119667826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100684352 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121071758 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134084305 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095658226 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152144775 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120435836 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133956403 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113995517 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133820264 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13669 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130146593 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100933415 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120684638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100115281 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120428483 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128462331 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100489209 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133481057 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091837947 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134760773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120117562 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101672797 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130090573 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120245364 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108483847 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134127805 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146670833 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12073607 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101062581 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136838623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121051365 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101710619 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115623634 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099893316 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117444873 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136944934 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136819915 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115407015 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134555887 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120295119 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100449619 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121244818 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09970461 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123603252 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130221258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112760405 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122362067 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153273412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121302085 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100467042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133610686 seconds)
  done (took 8.813667022 seconds)
done (took 167.120373461 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.114602018 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.15525753 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.109165645 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180913611 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092507804 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.15074322 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127513481 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.133327816 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0932689 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115272885 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093251827 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.118669214 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161400689 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.114398458 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.093886867 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.119435002 seconds)
  done (took 2.793012327 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.195753028 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.305856917 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.11443495 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.120606999 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103233667 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.119070318 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.097900025 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.122728097 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096048373 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131095388 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.116628232 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.098814158 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129317477 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.09736984 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116860783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.096879852 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.130426101 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.09682812 seconds)
  done (took 3.115648853 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122384221 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169761752 seconds)
  done (took 1.12203465 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.134363601 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.202121618 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.325493537 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.177173531 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.126719991 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141666046 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.179268851 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.136367374 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.211432415 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.140307859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120457033 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.123094281 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14792035 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.108569593 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.126889828 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.102000267 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152271531 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.125257589 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.10382714 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.124310251 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.124740924 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125008327 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106752593 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.125407696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.200728952 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.141523109 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102218303 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.125744658 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124401921 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.103924435 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.130692274 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.140757375 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117921152 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.20941876 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.108146942 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.205030066 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.111157241 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123089453 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.10239428 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122925381 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126788753 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.10653068 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.140004807 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100739702 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.12417075 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13310063 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104164816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.12397076 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.110694909 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.135967483 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.132943215 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.108380225 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.204803738 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.112842689 seconds)
  done (took 8.25586947 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.892065788 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.167385021 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122791503 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.0450797 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131670096 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140925542 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.903419617 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148270576 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25933238 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.929363988 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.142238796 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111864634 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261159819 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.29646641 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175356914 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.34827944 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.045170659 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.140405682 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.130090949 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.170516435 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130996608 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153156636 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122099749 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.43677003 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.123998499 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121006839 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107251246 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134212115 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183880445 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.121561754 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.103940096 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.226455468 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.288048058 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205094352 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.123651688 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096951875 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121712965 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19061001 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.296210257 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244210343 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189331201 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095418424 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120104632 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114222254 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.145023842 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.116733768 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188344421 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195911971 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.218846056 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104948407 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13553074 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10941786 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135652475 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181813767 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.118506249 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.372787576 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.373184581 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0988323 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132609246 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139988208 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.272150304 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121727348 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.256236491 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128725668 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.239391671 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120744033 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.812949882 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.21191642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098294944 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131347132 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107281608 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128561948 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133739546 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18290749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393554738 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115912878 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125991481 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098324146 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253110302 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097974655 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122414432 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186240878 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124476085 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107814977 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138946128 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136066512 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.194686255 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268021593 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.137242079 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131705758 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105373232 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.135913557 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.100452573 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.25569672 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.24707658 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.181385983 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.235562288 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136037949 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189650936 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.187229629 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.135594408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195136365 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129971153 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.140950137 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11323264 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245181058 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159794947 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122510495 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104294069 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130825242 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.164600382 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103186644 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130654363 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190496021 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.492455654 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.190037266 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096985497 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127435781 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131637841 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185865641 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108074658 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290130158 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133195298 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190897577 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.131136017 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.09735674 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131600788 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18841582 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136462761 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108416314 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135460275 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130692636 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.273789133 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248800301 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.137077752 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242090107 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.194619132 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132720442 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196596792 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132264931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193742326 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131319175 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112670152 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125553614 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836173095 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114259878 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131862819 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104511641 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.208243573 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122046588 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.099927659 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.121008722 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09611819 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83439585 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101309683 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119710412 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099491276 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132590843 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130211828 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106224364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128138859 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184801036 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.264657869 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.135381609 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108084446 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.122125386 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183062068 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12421165 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100561993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121004319 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100611197 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131704371 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10443165 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.122449488 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196281922 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.183871606 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249355583 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.563159285 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099316616 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.121552633 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259809426 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100519081 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336389926 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10833703 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.255525301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.213153737 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096605361 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.369148081 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.193302265 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.20985849 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.125623284 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195862888 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.117939991 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107158883 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184544115 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12255614 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129364938 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183455555 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.116983996 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13907775 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.186371664 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098284686 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.273206366 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.096101117 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.215429692 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102973208 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135678743 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336152472 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100004063 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.143631282 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18676936 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125887726 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100538862 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.636724533 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.09964057 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134696401 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109160146 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253727498 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.209949596 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109378841 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131410422 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134743903 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.185680909 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.2375026 seconds)
  done (took 48.39048721 seconds)
done (took 64.501213443 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.340907742 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.296011679 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.339946665 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.220084817 seconds)
  done (took 2.130322587 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.200305299 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.172101823 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.140534582 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120558214 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.173921417 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097761712 seconds)
  done (took 1.76015327 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.558739082 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.434618783 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.392115562 seconds)
  done (took 2.242741755 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.278965218 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.309596353 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.352320472 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.508906321 seconds)
  done (took 2.419418236 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.23053881 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.140943663 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111401053 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154245446 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.193760227 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209333755 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.158973753 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.17619161 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.14364814 seconds)
  done (took 2.425205274 seconds)
done (took 11.837708678 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.204190862 seconds)
    (2/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138092197 seconds)
    (3/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.343486191 seconds)
    (4/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.298266338 seconds)
    (5/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.246075991 seconds)
    (6/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.288812628 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.144510097 seconds)
    (8/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.287038553 seconds)
    (9/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.116022667 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.125996232 seconds)
    (11/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.289367217 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.20095577 seconds)
    (13/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.151322984 seconds)
    (14/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.28763232 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105181145 seconds)
    (16/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.144838965 seconds)
    (17/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.210002311 seconds)
    (18/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.185816758 seconds)
    (19/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.266332214 seconds)
    (20/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.119639478 seconds)
    (21/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.224741812 seconds)
    (22/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.118026063 seconds)
    (23/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.167817256 seconds)
    (24/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.136995456 seconds)
    (25/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10173992 seconds)
    (26/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.17750584 seconds)
    (27/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.210010085 seconds)
    (28/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104557143 seconds)
    (29/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.126649848 seconds)
    (30/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101473015 seconds)
    (31/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.150044517 seconds)
    (32/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.18771491 seconds)
    (33/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.13439203 seconds)
    (34/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.145510188 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.159874167 seconds)
    (36/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.084993197 seconds)
    (37/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.14046749 seconds)
    (38/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.298537204 seconds)
    (39/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.207839813 seconds)
    (40/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199743993 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.136646357 seconds)
    (42/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.127194141 seconds)
    (43/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.10086538 seconds)
    (44/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.125837097 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.085053939 seconds)
    (46/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.122991876 seconds)
    (47/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207241594 seconds)
    (48/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.139393925 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.124860252 seconds)
    (50/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.14491765 seconds)
    (51/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.177041215 seconds)
    (52/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.169149566 seconds)
    (53/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.22110478 seconds)
    (54/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.200656587 seconds)
    (55/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.157780882 seconds)
    (56/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.245389052 seconds)
    (57/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.106319678 seconds)
    (58/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.141705819 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.158551291 seconds)
    (60/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.221838688 seconds)
    (61/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.145249788 seconds)
    (62/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.180583316 seconds)
    (63/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.209259709 seconds)
    (64/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.145436148 seconds)
    (65/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.100880359 seconds)
    (66/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.221654207 seconds)
    (67/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.168266923 seconds)
    (68/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.201926559 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.100936968 seconds)
    (70/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.166382369 seconds)
    (71/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.124445421 seconds)
    (72/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.180786988 seconds)
    (73/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.191406408 seconds)
    (74/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.123808364 seconds)
    (75/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.094262473 seconds)
    (76/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.097907641 seconds)
    (77/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.106790196 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.117601692 seconds)
    (79/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.220990115 seconds)
    (80/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.159397709 seconds)
    (81/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.084148909 seconds)
    (82/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.21566528 seconds)
    (83/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129542233 seconds)
    (84/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.154482033 seconds)
    (85/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.108855767 seconds)
    (86/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088806919 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.1365514 seconds)
    (88/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.140183817 seconds)
    (89/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.083298181 seconds)
    (90/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.092758918 seconds)
    (91/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.123524798 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.106667078 seconds)
    (93/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.139086364 seconds)
    (94/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.084911922 seconds)
    (95/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126431671 seconds)
    (96/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.148038969 seconds)
    (97/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.101561532 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.158902429 seconds)
    (99/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.08431477 seconds)
    (100/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.224310995 seconds)
    (101/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.157148567 seconds)
    (102/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083603774 seconds)
    (103/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.224116737 seconds)
    (104/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141966388 seconds)
    (105/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.113917014 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.149727019 seconds)
    (107/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.159710289 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.130319962 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.128885253 seconds)
    (110/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085108731 seconds)
    (111/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135539439 seconds)
    (112/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.115102621 seconds)
    (113/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.083934536 seconds)
    (114/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.141026854 seconds)
    (115/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.175267327 seconds)
    (116/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138755998 seconds)
    (117/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.15946606 seconds)
    (118/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.091362122 seconds)
    (119/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.108844211 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.098996711 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.126082637 seconds)
    (122/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.134755185 seconds)
    (123/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.144050733 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.113221907 seconds)
    (125/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.109788504 seconds)
    (126/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.102233171 seconds)
    (127/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.108125227 seconds)
    (128/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.085044333 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15798075 seconds)
    (130/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.204765191 seconds)
    (131/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.227183525 seconds)
    (132/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.085771946 seconds)
    (133/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.160857563 seconds)
    (134/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.083315721 seconds)
    (135/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135326627 seconds)
    (136/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.144084915 seconds)
    (137/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.121870249 seconds)
    (138/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.142433589 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12537292 seconds)
    (140/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.096951979 seconds)
    (141/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.10973724 seconds)
    (142/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.083481342 seconds)
    (143/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.122086827 seconds)
    (144/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098021293 seconds)
    (145/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.220077049 seconds)
    (146/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142765481 seconds)
    (147/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.084882163 seconds)
    (148/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.207924173 seconds)
    (149/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.084869911 seconds)
    (150/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.148917049 seconds)
    (151/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.091711015 seconds)
    (152/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.204452664 seconds)
    (153/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.127480395 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.115519321 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.136623372 seconds)
    (156/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.083953627 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.161541629 seconds)
    (158/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084402682 seconds)
    (159/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.121477271 seconds)
    (160/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102494798 seconds)
    (161/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.126511626 seconds)
    (162/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.148476085 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.115992347 seconds)
    (164/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.11002422 seconds)
    (165/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086710821 seconds)
    (166/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.12822229 seconds)
    (167/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085813793 seconds)
    (168/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.142367728 seconds)
    (169/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.085998677 seconds)
    (170/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.107350751 seconds)
    (171/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.092885594 seconds)
    (172/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.085008086 seconds)
    (173/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.125646923 seconds)
    (174/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.093157193 seconds)
    (175/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.115818517 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.085804465 seconds)
    (177/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209845064 seconds)
    (178/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103527442 seconds)
    (179/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.110036492 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105527251 seconds)
    (181/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.135201581 seconds)
    (182/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.085700079 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.129244776 seconds)
    (184/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.093094675 seconds)
    (185/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.141737817 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128752837 seconds)
    (187/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085555636 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.097754314 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.130620357 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.12900945 seconds)
    (191/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085969984 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.100302147 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.129871111 seconds)
    (194/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083980393 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.130780601 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.138418569 seconds)
    (197/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.099290439 seconds)
    (198/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.130319561 seconds)
    (199/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.181981601 seconds)
    (200/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.110000811 seconds)
    (201/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.098317765 seconds)
    (202/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.107781152 seconds)
    (203/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.085788397 seconds)
    (204/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116002887 seconds)
    (205/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.085257064 seconds)
    (206/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.137233036 seconds)
    (207/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.085345114 seconds)
    (208/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.134045764 seconds)
    (209/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.084132073 seconds)
    (210/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.084917448 seconds)
    (211/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.122494608 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.110461993 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130624098 seconds)
    (214/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.085899879 seconds)
    (215/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.126446614 seconds)
    (216/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.08521207 seconds)
    (217/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.130148574 seconds)
    (218/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.085082722 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.130239809 seconds)
    (220/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.11876221 seconds)
    (221/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.116989872 seconds)
    (222/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.109405666 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.130153698 seconds)
    (224/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.084620042 seconds)
  done (took 32.274904697 seconds)
done (took 33.139125354 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.435638683 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.141463911 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.134887669 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.10959702 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.156258052 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113495248 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.135951395 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113864123 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.133123504 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.099148317 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125332346 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.135391753 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.110776851 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.153794096 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.113261988 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126301203 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102080472 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.135206616 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.111383212 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.137402237 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.155845191 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102197567 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.132699824 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102139904 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155835223 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101659744 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133974967 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109312919 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.133440734 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.100971566 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.13496115 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100911516 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.137125524 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.139238039 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09983695 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.125540446 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099765519 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.116499543 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.101710305 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.127555396 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.11089823 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.126713172 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.113061944 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.127858328 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.104834075 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.125003441 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099642747 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138352726 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100605181 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.133750937 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10254196 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.138666176 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.124264016 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.100451028 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122821102 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103444826 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.135417291 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100636761 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.135007257 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099849658 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.127011519 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099523256 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.130463593 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100416295 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.125946088 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.101936677 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.127222502 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.104500212 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.123334299 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103135615 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.122482734 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.103044614 seconds)
done (took 9.854293995 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106875862 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185007748 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.158945568 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.135354472 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.157323724 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.142918006 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.115665267 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.150925017 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.135309007 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127067221 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.157701703 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.149157414 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.141420791 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.134226466 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.142462406 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.105950802 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.132873024 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11500543 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.163990777 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.150648954 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.159517269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.109643623 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.158107862 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.148766484 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.109168399 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.164074268 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111011141 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.129639639 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107897407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.139957378 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.151634656 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.109151748 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133618244 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.122964379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.139450703 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.131250789 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119191851 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.129478609 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106462363 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.129954232 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143861834 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.120943829 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.129863395 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118757331 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.129371912 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.110341393 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.132698703 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.131765025 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110252776 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.126956839 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110471684 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156353629 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.10936823 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.133787687 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133073213 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.110417878 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.133520917 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.109929176 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133624752 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.109294429 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.13217662 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.131304358 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110773366 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.154183581 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.109443694 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.135147934 seconds)
  done (took 9.587395215 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127878059 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.168011278 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141152434 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118365851 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.138441102 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.097203162 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.121691396 seconds)
  done (took 1.828281557 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.098906341 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.156339685 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.13641467 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.160268976 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.147920751 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.140303416 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14281149 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.098724805 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.150891643 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.135367105 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130379796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.184897143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.125021836 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.114068413 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.163150672 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.098744188 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.163786777 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.124401904 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.108982427 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.160585258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.12948415 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.124435919 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.140563644 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100573959 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.149158933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101888246 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.198727894 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137948743 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099527752 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.131776925 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.106721571 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203954446 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.149554607 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135768249 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09829159 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.157151049 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.122658029 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131591295 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.154510464 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10554519 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.148725791 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.108272852 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.133545558 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.107004139 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.133231622 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.140898641 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113570342 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.136382843 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.106942184 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.156059921 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.112380019 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150366638 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.126968551 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.104970163 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.137608383 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.107139686 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.141238439 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.106128005 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.156009538 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.133518286 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129987735 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.155349335 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.148466644 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130763667 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143988852 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.123971633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.14923895 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.130761721 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109469548 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.134391925 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130156981 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.130108804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.111513734 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.143259244 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.134418752 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.130842024 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.154109688 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105638206 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139537419 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104762577 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.128213901 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.100213809 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.143279752 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103989871 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.127901227 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145322955 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114758608 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.13219028 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.106873665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.151755015 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.129342272 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114720907 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.138264933 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105657296 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143765943 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.156854949 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113107782 seconds)
  done (took 13.698247407 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.102934397 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102080147 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.134098048 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.126979779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102446716 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.102592541 seconds)
  done (took 1.599674841 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.135858192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.132753822 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.120649518 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.135524669 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191231357 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.15534185 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.132475681 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.138150494 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.151426667 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12088279 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.154440541 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.131232265 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.154242469 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.137820068 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13314915 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.137858215 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.15784709 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105407053 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.144094226 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105905013 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.145072636 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.13718123 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.106885675 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.151285422 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.112493449 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.137302069 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110720822 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.145352031 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.143657961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113097069 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.1377224 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.111047688 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.135122881 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.136837115 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132609903 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.135013032 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104269548 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.141190335 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.135559828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.111880704 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.156031393 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10589331 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.141883926 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.139133746 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113335251 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.135409225 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.139241064 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112603754 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.157721647 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.114401037 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.138909176 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.135100442 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.111553497 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.140131203 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110039987 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138367401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.13991297 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132939623 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137865012 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109497747 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.133971611 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.137052611 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.113632397 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.13991366 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.109758973 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.137995327 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.135010818 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.111094996 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.132154504 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.111743643 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.140105325 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108146417 seconds)
  done (took 10.412034074 seconds)
done (took 38.034152613 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.114842048 seconds)
  done (took 2.034414638 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.922351331 seconds)
  done (took 1.845188006 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.872750811 seconds)
  done (took 18.825622242 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.582168966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.681831472 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.049504482 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180043732 seconds)
  done (took 3.417177023 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.018051885 seconds)
  done (took 1.961067097 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.344011336 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287461663 seconds)
  done (took 1.561083336 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.860818964 seconds)
  done (took 1.79514242 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.410554482 seconds)
  done (took 3.346342673 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.389573895 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.215855627 seconds)
  done (took 1.550410619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.626294382 seconds)
  done (took 1.566283802 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.092954119 seconds)
  done (took 37.03617182 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.251576641 seconds)
  done (took 1.204205645 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.3245977 seconds)
  done (took 1.266308589 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.773192793 seconds)
  done (took 4.720830564 seconds)
done (took 83.065947877 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112774486 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.141268902 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115939261 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137886733 seconds)
  done (took 1.4486123 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.116739445 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.134313493 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.114246026 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.135064515 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.119921393 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.135182397 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.109016385 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.143465795 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.109252225 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.138639568 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.134864186 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.110702406 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.136143203 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.108551991 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.133225111 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.111016417 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.139178444 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.110205143 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.135909261 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.110727611 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.134450881 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.136770709 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.113427315 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.134648185 seconds)
  done (took 3.953648906 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113556716 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106440499 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.134067202 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.104803534 seconds)
  done (took 1.406323252 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.118385606 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.151647659 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.125463714 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.143951724 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.152104773 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.126529881 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.132367201 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.105594411 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.13478732 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.117849104 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133265013 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.127831641 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.152505551 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125716687 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.119993638 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.123042091 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.103533495 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152042509 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.116408266 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.145800441 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.105624425 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.143006811 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114814201 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.147501679 seconds)
  done (took 4.073662221 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.188228397 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.147543057 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.157533521 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.182640493 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.134400034 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.130292292 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.132910638 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1378547 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.134397378 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.105683119 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.131125158 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.164660889 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.136238423 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.135591173 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10682699 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.139513596 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.111851489 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.135727079 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.107665645 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145276638 seconds)
  done (took 3.721376953 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.113793839 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.13137949 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10190673 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.130515307 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.113679768 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.133770479 seconds)
  done (took 1.680938511 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.101230398 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.099625822 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.12638191 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.099854771 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.131311003 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100033487 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.124496085 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.101150692 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099828971 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.127549041 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.099632825 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.124956384 seconds)
  done (took 2.287716104 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.239774562 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.104529105 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133566735 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.132210636 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111075506 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.130062957 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.121774099 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.130255078 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.19370918 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105514719 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.149735775 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.193009147 seconds)
  done (took 2.699093692 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235890589 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110872301 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.299551042 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.403407017 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152946141 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186862882 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.322732751 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161461495 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.23773584 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128702791 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247699788 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151239357 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172766457 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201729424 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159036227 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.212077842 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198181276 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227185235 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168079733 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231454157 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185987549 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18838864 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204236588 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170922847 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155419147 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180302124 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.106342003 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144056855 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197358719 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192749293 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199219817 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167746885 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156702139 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22965412 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245271425 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229210669 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.341030804 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125801743 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.210548355 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.230367957 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.273479679 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15992535 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222853833 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17448191 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148077903 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205411085 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177021555 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.201664836 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.120817641 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158238033 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21108109 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198897987 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.232482901 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131368343 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.345674917 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139179879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.163801907 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201329379 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216473644 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.24123175 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160083123 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.139013598 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207603733 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20475778 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20250943 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.163567468 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189960924 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141362279 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199762152 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219120243 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202916137 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188687655 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.23575663 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12416803 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184169688 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190320134 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174730622 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202027705 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179358581 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.108185599 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16937257 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154443416 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115792781 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204319026 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136954303 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231622844 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15092671 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.207390421 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232396384 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17815762 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182445838 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186742443 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189835349 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13685083 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.134388861 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16524611 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.182806177 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17688674 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121414988 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176169649 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163502725 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.113826101 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172577378 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.137571167 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179109373 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.122836506 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187870351 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184068173 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.145513639 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184271743 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168293383 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152336386 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192542971 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234809329 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121070384 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148673522 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218825506 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176826641 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.124745411 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.196865359 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.235636878 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.155978993 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155545311 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19125911 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220045445 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161969834 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211729106 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163434959 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149957479 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170720192 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152137935 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179233464 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1736454 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143851262 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.169404658 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219819472 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.114949959 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153996895 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195402709 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141950447 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116168805 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161222993 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153773537 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131818973 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169397216 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155347025 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17463957 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178467731 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144581239 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179645324 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16103705 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223227766 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150101664 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.179985538 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16552123 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.104898033 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20176736 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20754568 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145771055 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208781644 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19057091 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246004974 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155980657 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147993425 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202973793 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146053165 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.106441826 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189849996 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180630427 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183107625 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203985805 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241820193 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18948864 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.143943667 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16696977 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188935302 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.196858465 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17744071 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.162941325 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182557311 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192205384 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.108985 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140360387 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.113947558 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157970902 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1469728 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119981943 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235789571 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185689422 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.209568328 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181571933 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156483849 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204949891 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.113260272 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185804174 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.194284447 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156233756 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.208283645 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203457361 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188493275 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161527615 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195504763 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.106500461 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141722312 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.14753935 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189498075 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120413772 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150679647 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163253974 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205654016 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1982864 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139034415 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256473145 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191843808 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217292252 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.135833502 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.152151843 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191583748 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17668071 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205746415 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149538884 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153148393 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200049519 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164656331 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219505927 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183294476 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18886347 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25422904 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.176064786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119333532 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169185687 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189232121 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158915368 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18287933 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135372823 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153525585 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172232661 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.151529965 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114812691 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204327708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162067225 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203858839 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.176762406 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198206517 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14156285 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163880364 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179605259 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135591802 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.132577457 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193195396 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213785318 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163730249 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178197969 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198227181 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117858663 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.335517361 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244799842 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210864594 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156363052 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133371632 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181091195 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179554735 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186096105 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206194979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162535915 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203832007 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179050094 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133315562 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153289824 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166523936 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170451336 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.143515268 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151070072 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174503 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.159965433 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210848463 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163046591 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178002573 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184485299 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.136766662 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.174069334 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158607876 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226169245 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177053422 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202987899 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.174283093 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185123831 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210484089 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111401372 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14302448 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.114797593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.205193732 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14959334 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179776206 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.20332916 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220164099 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178314534 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190963862 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155294337 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.109467072 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179255759 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167201013 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223076663 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162047566 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.154759828 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216075179 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.169313277 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118186077 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184189524 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332158375 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135393586 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197023091 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.135473071 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.297564092 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114860908 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148280608 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180943775 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195655066 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.148543971 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176093876 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185400094 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16471602 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180883827 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126248382 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239012777 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235674143 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195823006 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198688554 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.162897553 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180169328 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186871531 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200442958 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161521602 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.135307805 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183310602 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20610762 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.209312559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.150206414 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182678572 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182799177 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179241729 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202069249 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120589393 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239838033 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1191837 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18842938 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160539657 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110280883 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17796428 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.230758027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123194516 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197948838 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177010314 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147996736 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113009936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173126688 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178724775 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165050585 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.116710462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232451776 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.115842507 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184355241 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203518592 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117209807 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177192703 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16541034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147006109 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132749469 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162621249 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151863351 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162159938 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204668879 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.148142191 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200411379 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196337757 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187047612 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180091551 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163027704 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.65029356 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.143902658 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204898794 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166134966 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214055732 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168834019 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187871965 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180835352 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138991546 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191594746 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169254156 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.240818742 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189909968 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179885161 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119604447 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164373733 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164473592 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.147644928 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142761888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183317852 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160016422 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15314298 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.1743712 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135984815 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.166085266 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154787606 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209024498 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137306201 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237696032 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207235016 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129512472 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186708556 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201964991 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147727922 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.183468428 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195500963 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160527203 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171605312 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.118396249 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151740134 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201997574 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.110386008 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183214703 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180658446 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181637184 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184408944 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.123222855 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180198274 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162890526 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180967174 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111634404 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.178213004 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177884053 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148523708 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.11418712 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174384337 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180075369 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.178978273 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142636432 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.162503989 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204996931 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.139511982 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123074561 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303627202 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176837888 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219056464 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.173309184 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152850005 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161986546 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148043338 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172491965 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180543013 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.1455132 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11874221 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.148885218 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.201795451 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.174805981 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175247036 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204913318 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153016108 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242078008 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134832767 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286334542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157467455 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146352162 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.148938822 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.144499755 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12960284 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153981926 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166639605 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.213802417 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201105018 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.173056917 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.162260581 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114770865 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.139879231 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119771718 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.183071776 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175932686 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178838122 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162029148 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104561965 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164167712 seconds)
  done (took 86.117956362 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173061525 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.177094571 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.177735676 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.232616899 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201396798 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288817767 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.241413707 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257887718 seconds)
  done (took 2.789038364 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116532492 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.151888828 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.160709403 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.140329736 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140251511 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.387065544 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.15236524 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.113415671 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.203454988 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154389284 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137719372 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.684874842 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.108723762 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.141061207 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.127348075 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139443479 seconds)
  done (took 4.097977953 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.536980412 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.574394938 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.210951191 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.25995451 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.272546955 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.179195109 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.794552346 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.187670676 seconds)
  done (took 13.057021744 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.146050042 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.159603427 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.290858449 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.194105052 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.178405351 seconds)
  done (took 2.021749459 seconds)
done (took 130.298257546 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.110175023 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.140789686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.111618394 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.14246457 seconds)
  done (took 1.541937405 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.124680068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093675245 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.126913858 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.092739224 seconds)
  done (took 1.480530889 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.535363625 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093046214 seconds)
  done (took 1.711283747 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145745213 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.159724868 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.126382936 seconds)
  done (took 1.487017697 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.118841944 seconds)
  done (took 1.172119822 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.114145311 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112385958 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.160660946 seconds)
  done (took 1.439399621 seconds)
done (took 9.883667071 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.138763407 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.54165607 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.400476869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155306828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.73949945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.394177129 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.058675061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.174071417 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183072295 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.105470835 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.154053444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.686250285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.041064893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.452675401 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.025324335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.355059305 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.718231762 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107278851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141790237 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107688359 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033699129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103306238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.134937878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.106026452 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714808457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.410743273 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.133735767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.396849187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.105849542 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.137465438 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.396392857 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.133086248 seconds)
  done (took 17.5276371 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152206843 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19922102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.141980679 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107340969 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.138332914 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.10685583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144323122 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119439289 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200403433 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133732693 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.126719754 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.133285278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.110886978 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135119376 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.129918065 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.133127072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.108067188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.136256817 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.112601036 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136349387 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.125699874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.13364784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.106619689 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.136008517 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.104774632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.148183345 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105086387 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.148519371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.104780447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140129143 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.13780026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106814641 seconds)
  done (took 5.254105947 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156913251 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.209696131 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144098813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143014459 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188911392 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.136330832 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.227452858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145814179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.203763974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13571842 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.125782001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.135466287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.174351085 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.106712745 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.159061033 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.105203052 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.136840954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108311378 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142318628 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107868535 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.155898073 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.103760339 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136310442 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108209572 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.134386531 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12053658 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136295276 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118982839 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13407529 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138371141 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113284562 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.133359442 seconds)
  done (took 5.585874149 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.113797423 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.143281996 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.125420303 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.152931087 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.110613549 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.141706688 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.114619933 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.136976105 seconds)
  done (took 2.092279221 seconds)
done (took 31.513960457 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128326169 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.148838543 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.120735935 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.144401386 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.140248812 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.131678938 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.118466387 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.104317343 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.144652681 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.122644064 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.134489496 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.106579427 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.151174677 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.111240211 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.151678753 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.116226325 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.15786689 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.122236182 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.136193231 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.115581078 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.135909161 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.129323351 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.142284619 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.106662431 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.162570746 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.108072325 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.155455846 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.110621802 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.140838079 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.10809947 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.152650516 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.11199565 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.13634996 seconds)
  done (took 5.355010521 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.138174373 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.183691019 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.104002281 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.133175632 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.179087582 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.104584797 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.166213251 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.103937786 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.132320261 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.10534089 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.103024595 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.162316275 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.169476056 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.138433252 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.186467578 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.172237359 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.133009539 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.176855115 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.158112256 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.145912439 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.166564363 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.102301538 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.170236995 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.181271933 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.103388035 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.132198324 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.151448702 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.166725965 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.180414281 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.140575625 seconds)
  done (took 5.452725003 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.116316593 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.150694839 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133143994 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209500039 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.180412432 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.121051205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.148779175 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.126595869 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.163263292 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.106393836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.146683737 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.142354754 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.154210041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.116297939 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142301978 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.122390187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.158879833 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.107755245 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.142751886 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126980708 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.157453659 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.151506179 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.122299027 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.146880454 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.106951538 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.146795319 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.112761353 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.149626213 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.115100609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.144879117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.111337219 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.141350136 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.110570678 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.145701166 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.111462384 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.145970064 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.13053821 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.146519805 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.118198579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.174502114 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.14571164 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11176375 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.157367878 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.155046339 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.139023843 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.115612712 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.149854577 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.116798811 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.135339489 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127306408 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.15170407 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.107697006 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.156446705 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.105802879 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.137205426 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114636668 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.137572741 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.109794175 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.145743712 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.111360043 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.160135118 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.113934495 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144463132 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.108929488 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.144228336 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.105751079 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.135927426 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.113223572 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.161936496 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.111531286 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.169290817 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.136482208 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.11529183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.144378494 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.113157085 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145365312 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.107283383 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.142841401 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.116154037 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.142398625 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.116090954 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.138771405 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.11198921 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.12557542 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.155518912 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.146664546 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.113625992 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.143535534 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.111350489 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.139294885 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121237831 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.138723658 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.111340061 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.147822941 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.107778029 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.140130282 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.115839667 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.142550028 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107140685 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155980746 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.111982337 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.137083991 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.124074357 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.13816247 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.111066253 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.14735922 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.119466392 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.13856787 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.113472288 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.144348133 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.106931937 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.143126412 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.111016053 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.137456794 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.120589562 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.148254531 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.111682877 seconds)
  done (took 16.603426484 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.270239341 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.246851759 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.217850903 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.336947109 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.163861276 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.136615955 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.243523601 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.194697547 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.13916388 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.18332713 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.2006025 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.206414137 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.107256555 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.170805522 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247613325 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.345484847 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.140646992 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.184712146 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.1836183 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.164068568 seconds)
  done (took 5.16552521 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126219313 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.180811157 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169828341 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.137021156 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.139198046 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.122240024 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.138542223 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.155976552 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.109910598 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.145446789 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.106953784 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.148368534 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.111008839 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.142533275 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127679509 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.157860504 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.112871526 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.147274186 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.157174441 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.114102484 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.140125711 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.161993404 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.119448127 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.170658838 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.116552296 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.154630606 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.107113974 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.145291147 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.104071151 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.137635581 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.114220435 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.155243096 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.145685403 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109400943 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.144572226 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.108881651 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.132995016 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.109705803 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.109844928 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.142852513 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.156111142 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.11128018 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.138139501 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.108064318 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.14597634 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.104419629 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11322485 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.145435501 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.143559126 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.117236489 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.144561215 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.114144825 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.146156685 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.121253191 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.134755789 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.120014177 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.152548999 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.113520784 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.146373423 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.107091743 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.136279346 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.111603526 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.13648341 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.114360959 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.144081404 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.156889705 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.118715916 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.136789263 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.117185498 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.142995433 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.111905835 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.157356029 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.159905196 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.106615653 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.10508199 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.16096229 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.105822385 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.125114014 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.118355355 seconds)
  done (took 11.519891481 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.139199221 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.138024606 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.1297365 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.177282472 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124291202 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.146721369 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.108395971 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.159345109 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.116233866 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.147080619 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.115707014 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.155022122 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169305271 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123471902 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.138458896 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.124999266 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.142866893 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.15247804 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160875299 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.173863569 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121980657 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.143586199 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.122879472 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.151739931 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145025065 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.15282471 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.174847744 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.114353144 seconds)
  done (took 5.06489059 seconds)
done (took 50.217627184 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.179886603 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.382134189 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.157122622 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.156912015 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.167669944 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.177347324 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.158085854 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.351012003 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.922062219 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.147008231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.156901742 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.156465358 seconds)
done (took 27.19601005 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.288649671 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.776060441 seconds)
    (2/2) benchmarking "String"...
    done (took 1.475178535 seconds)
  done (took 4.340493939 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.156127115 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.158293979 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.403889873 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.157417342 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.176379412 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.158189197 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.157824411 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.182735873 seconds)
  done (took 15.473583074 seconds)
done (took 25.337028209 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.183452904 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.474564902 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.432447553 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.176298413 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.160574314 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.158287663 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.147540116 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.229357949 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.16791949 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.1532245 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.158711393 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.435596477 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.148330751 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.561682608 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.145500502 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.17854042 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.184396895 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.499845277 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.160711755 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.179718945 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.163297171 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.166744198 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.163859944 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.19292739 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.17237104 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.169021929 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.182939695 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.159664018 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.467939122 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.179599887 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.159566198 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.183132603 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.194400203 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.179762491 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.274651073 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.195011051 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.449631707 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.166836691 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.146323307 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.16143739 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.458010604 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578717203 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.161352423 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.174806984 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.176727706 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.218827739 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.154527215 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.912732427 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.168416244 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.161424117 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.18876654 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.601526583 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.174090256 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.172615607 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.183743365 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.527896359 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.168368193 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.242907457 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.210138755 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.165529285 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180186129 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.191196106 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.195470344 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.170840447 seconds)
  done (took 141.68539044 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.162099892 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.165567443 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.16576222 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.186624348 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.166647996 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.165632611 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.16287274 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.162524582 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.167484561 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.185465981 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.166539165 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.162236982 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.168905348 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.120449336 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.16291871 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.182509097 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.166529737 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.185604038 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.163174702 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.164273887 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.180288493 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.164306735 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.181924008 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.163616939 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.204687504 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.266433603 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.188875138 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.189296704 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.161551599 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.163153086 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.171131913 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.178369029 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825293209 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.016547417 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.166745032 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.186841821 seconds)
  done (took 78.827828559 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.164869152 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.165044609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.165579281 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.199450882 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.165728192 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.164767368 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777794359 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.789789558 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.961505119 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.395129027 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.677923911 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.167716525 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.46049141 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.164298612 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261523093 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.179321448 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.166999675 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.181440287 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.19242823 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.170521391 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.165356486 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785451067 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.182336015 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.165554723 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.346160264 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.185246662 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.199732299 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.565278941 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166506002 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200947577 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.505287745 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.220034516 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.166603612 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.552388957 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.96722829 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.282316925 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.168755526 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.200561969 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.167243431 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.453413854 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.167490615 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.169260661 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.170504475 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.850600937 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.167422838 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.780300504 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.171804369 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156467326 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.168098767 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.167771038 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.647452611 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.193752739 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.838246746 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.184780402 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.168022944 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.170656251 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.168153357 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.168659976 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.203165968 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.745366214 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288949882 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.169929125 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.172362887 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202129874 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.168940787 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.307769277 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.169681748 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.657556034 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.228462979 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.286112216 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788001586 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.172672713 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.267390296 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292776258 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.169074602 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.170102266 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.170188685 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.170243464 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.281355721 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.170492489 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.17083694 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.614829515 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.351881247 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.189744531 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.697743696 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.274194641 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.170376592 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.574044357 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.170894418 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.168634593 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946995586 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.269096992 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.170726109 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.17056571 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.169685324 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.618307452 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793804221 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.478173694 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.176101255 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.957068768 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.177872066 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.631185106 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763168053 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862443017 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.172440478 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.285864443 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.353274633 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.188942292 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.172058646 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.696545516 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.176763723 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.230553307 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.171087168 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.585498532 seconds)
  done (took 364.674824596 seconds)
done (took 586.267378604 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.967477926 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.867576122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.00262006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.898161915 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.860405567 seconds)
  done (took 10.688003999 seconds)
done (took 11.777392433 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.370671361 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369912217 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237691186 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.372057571 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207308606 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.391015591 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354720524 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.19261498 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.280997017 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.258303461 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282095281 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.229081082 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209422161 seconds)
  done (took 17.847859846 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.438287645 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.17353857 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.237195219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.420984667 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.213621093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442704416 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.473916387 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.173640244 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317089247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.187580317 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.18689563 seconds)
  done (took 17.358655441 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.44725374 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.175121198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.240566872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.428334903 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214992377 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449001855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.472327054 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.17548421 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.314355069 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.189993877 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.187134934 seconds)
  done (took 17.388225202 seconds)
done (took 53.684704559 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.216936476 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.346485188 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.203515734 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.18741025 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.182997784 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.184694096 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.190368647 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.184311698 seconds)
  done (took 10.791626971 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.180306276 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.179832877 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.181631937 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.182862775 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.183469577 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.180671067 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.18055794 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.180463522 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.180275264 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.182781959 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.182814759 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.183546377 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.180862849 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.183246236 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.180870812 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.183316216 seconds)
  done (took 20.003765507 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.182554407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.180528918 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.180330033 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.179315485 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.18050437 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.18124115 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.182628894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.180600796 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.181607277 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.180651169 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.182380094 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.181519306 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.181156373 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.181962928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.181180969 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.182815149 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.181790573 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.182958521 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.186551805 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.181254579 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.18198815 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.181500392 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.18281152 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.181637014 seconds)
  done (took 29.459223631 seconds)
done (took 61.346312377 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.190776155 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.180199473 seconds)
  done (took 5.467666336 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.2458733 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.244961164 seconds)
  done (took 3.588974258 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.186270685 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.185522246 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.185562019 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.185813161 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.184891836 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.184425839 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.185576983 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.186010363 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.185966039 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.185770693 seconds)
  done (took 12.952439393 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.186183903 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.186190307 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.184027185 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.186604117 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.185702589 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.183670109 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.186282031 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.185565379 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186859155 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.183825433 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.186563985 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.183979592 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.186190946 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.18272164 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.18620205 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.182963653 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.183562454 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.183282166 seconds)
  done (took 22.428970531 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.20125706 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.207486423 seconds)
  done (took 3.5069915 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.32561065 seconds)
    (2/7) benchmarking "second"...
    done (took 1.225956023 seconds)
    (3/7) benchmarking "month"...
    done (took 1.300516148 seconds)
    (4/7) benchmarking "year"...
    done (took 1.290688184 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.22638449 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.20501827 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.226142591 seconds)
  done (took 9.897945183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.18847135 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.38386661 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.496154725 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.762678637 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.188851027 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.234646614 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.024634429 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.233622908 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222639809 seconds)
  done (took 13.834454729 seconds)
done (took 72.771298609 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.179463738 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.219390285 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.199498897 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.195111901 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.522546793 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.223631997 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.184938519 seconds)
done (took 15.821721622 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.174255351 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.183921636 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.169851328 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.182663658 seconds)
  done (took 9.810711526 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.181652614 seconds)
    (2/2) benchmarking "read"...
    done (took 1.540602551 seconds)
  done (took 4.822070917 seconds)
done (took 15.73082934 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18950852 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.185732606 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.189083862 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.188928891 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.189798148 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.186005438 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.189440762 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.187158933 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.186754763 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.189652175 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.189325584 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.189716816 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.189080412 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.190070723 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.187537591 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18833504 seconds)
    (17/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.186763199 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.189876247 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.187128538 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.186169685 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186829864 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19006651 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.186738449 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.188165356 seconds)
  done (took 29.618473101 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.191298803 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.18737103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.191116764 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.19046458 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.18914091 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.191008781 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.190919694 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.187815096 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.19087665 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.19117485 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.187075084 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.188633386 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.190707919 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189503679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191805412 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.188525492 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.191479404 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.187839249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.190546632 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.187672745 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.192441338 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189174114 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.189545265 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.19160378 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.188923012 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189610327 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.191920864 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.188911651 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191176618 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.189993898 seconds)
  done (took 36.80072193 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.197647287 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.200129187 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.191667396 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.192365831 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.19328296 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.19244114 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.191581716 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.192219264 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.192238699 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.193843341 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.192269951 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.193192654 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.192693309 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.192455106 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.193181204 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.193213921 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.194037503 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.192946903 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.192954522 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.192571148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.194577645 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.192681825 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.193124009 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.193619271 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.193766734 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.192422176 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.193693282 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.193466367 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.193738827 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.192781309 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.194394532 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.194712418 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.194121347 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.193226362 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.193925539 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.194514311 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.199536739 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.203426066 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.195269446 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.19337686 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.195048682 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.195169517 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.19552747 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.194252502 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.194949643 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.194871271 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.195172428 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.195929237 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.195065515 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.195208261 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.195749421 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.19443982 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.195859106 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.195891011 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.194471491 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.195764239 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.195884827 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.196277763 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.195640632 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.196693907 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.195298618 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.195441497 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.196357883 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.196763221 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.196836672 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.196163009 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.195839558 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.197526912 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.196902257 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.195286913 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.196150516 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.197228374 seconds)
  done (took 87.12843824 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.195775461 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.194156162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.194148958 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.194723781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.193968572 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.197439812 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.194760423 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197294702 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194259137 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.197556565 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196285751 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.195512398 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.194344168 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197900673 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.197178508 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.194855749 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198128917 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194395316 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.197496043 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.19740107 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197973833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.194549757 seconds)
  done (took 27.418130764 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.19814903 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.198944199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.194080488 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.199463826 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.196442084 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.199924296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197950154 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.200055687 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199027677 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195245555 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195639426 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198366043 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.198622125 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.19692996 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195920483 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19810385 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198568716 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.198407004 seconds)
  done (took 22.66882532 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.196579234 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.196987317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.19922872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196667996 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.196431649 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.199133994 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196621439 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.199093546 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.199888535 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.19809484 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.200174313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200019175 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.200071541 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.197413149 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200640704 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.198211241 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.199770229 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196847128 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199353899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197297341 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.197740023 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200114834 seconds)
  done (took 27.477225339 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.199800793 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.200819695 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.198581627 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.198916126 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.197154176 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.1999839 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.201171634 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.19790907 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.201399161 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.202601079 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.197968836 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.200384858 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.199579615 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199786199 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.19800601 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.197912851 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.199810487 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.198886693 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201863151 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198022693 seconds)
  done (took 25.102484363 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.20136465 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202201136 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.202377762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.202607257 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.203577726 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.202094614 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.202756788 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.203752464 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203496198 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.20383922 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.202964239 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.202150271 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.20509211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.203340938 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203043003 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204824863 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.203854791 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204294173 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.20347876 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.203579095 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.204836956 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.203887185 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.203497461 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.203328776 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.203785133 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.204490597 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.204498373 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.204351892 seconds)
  done (took 34.809882021 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.204573536 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.204078105 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.200815932 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.201449135 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.202786356 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.202242563 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.202887364 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.202051636 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.205568315 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20149519 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.204877207 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.204338166 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.204756315 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.203864776 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.204393131 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.205241951 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203185976 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.203203418 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.202569153 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200812899 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.204934883 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.205138588 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.205032638 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.202963427 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201773028 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.205357575 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2035951 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.202984842 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.206331492 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.203199299 seconds)
  done (took 37.222146138 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.250306695 seconds)
    (2/2) benchmarking "in"...
    done (took 1.249737192 seconds)
  done (took 3.615536342 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.204102098 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20557978 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.205141639 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.203898827 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204226981 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.206064699 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.206324041 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.202827692 seconds)
  done (took 10.754784479 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.206477397 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.206440595 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.206005273 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.207266269 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.205949766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.206950421 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.213111953 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.228378788 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.206913369 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.208678999 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.215612461 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.215990932 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.209435479 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.207614825 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.206892017 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.209789851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.208475334 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.207727003 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.20723837 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.208068921 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.207383619 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.210447968 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212113055 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.205998519 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.211404543 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.220427325 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.212197696 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.208776069 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.208136619 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.21185122 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.208549112 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.205899373 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.207746204 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.209164599 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.207922275 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.208556534 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.218244434 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.23079802 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.215739173 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.209422443 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.210251278 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.207019521 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.21057251 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.211233436 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.210581354 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.209542136 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.211061911 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.206414025 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.21089772 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.214412021 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.215901798 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.208767931 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.208078289 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.214387571 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.212536633 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.217453154 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.232437953 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.215155222 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.222413076 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.221674554 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.225316267 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.238126056 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.212379449 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.211431681 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.223419548 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.237780867 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219000146 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229268528 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.208660236 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.211600363 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.218915056 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22541475 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.240958606 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.212475298 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.211604719 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.213593339 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.211814997 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.212527838 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220044413 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.235396148 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.211330417 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.213936373 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223877739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237755805 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.213141 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.212311382 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.212707104 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.213134893 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.215932114 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226893135 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.233823699 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.213928843 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.213854716 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.213300355 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.213510914 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.213771845 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.21449207 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21430501 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.210517231 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.212616721 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.213958603 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.218413999 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.22449053 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21347515 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.21376783 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.221405795 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.214301303 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.214067139 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2202001 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.214890734 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.214290476 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.216283987 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.221798406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.210832594 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.218166569 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.224613513 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.214615851 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.215268637 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.213851522 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.215792858 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226192446 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.244432314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.215740074 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.214583284 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.220431547 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.226728952 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.214729241 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.217436373 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.215908005 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.212457519 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.212977014 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.216997534 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.215897609 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.21697964 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.215190345 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21806348 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.212486055 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.217417367 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.215359189 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.218768804 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.217185547 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.216722987 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.217580342 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.218578917 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.214542975 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.218292901 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.224430534 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.217730467 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.218131304 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.216626576 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.214339067 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2165658 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.219114736 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.218356467 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.217724114 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.21735272 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.217391397 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.217027859 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.216916928 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.217246875 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.217409168 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.21858133 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.22347878 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.217091678 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.220766222 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.21689357 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.214574996 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.217929614 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.217943438 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217697912 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.217742577 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.217405422 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.222224975 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.226688524 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.218068021 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.21769559 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.22146918 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218330536 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218653773 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219252834 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.222664685 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.22804072 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.217103822 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.224431629 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.218496939 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.21935897 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.219506473 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.218817923 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.218102229 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.218210429 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.223647547 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.227376556 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.232382814 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246907997 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.222037739 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.22322191 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.221699564 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.224027693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.222854072 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.219648113 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.220082271 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219550401 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.219779442 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.220104448 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.221204764 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218955037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.220579368 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.220210513 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.220779442 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.220374823 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.220951977 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.22255573 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.220885372 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.217657663 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.221409673 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.220656294 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.221095904 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.218814573 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.220393289 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.221790329 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220495113 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.221280345 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.22698898 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.218999961 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.223726836 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.22233378 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.222103704 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.221756912 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.222277792 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.224063889 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.221287804 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.227807246 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.242687978 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.22297715 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.229550435 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.243213542 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.222173813 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.223730682 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.223723472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.218968096 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.226440158 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.231806601 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.223248875 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.223136349 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.223043819 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.224206618 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224472403 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.228400917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.220106446 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.223859084 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.223352487 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.224335315 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.220528972 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.22323832 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.223697468 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.224363802 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22602929 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.223787836 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.22302665 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.22521856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.224062596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.224013257 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.223878777 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228604546 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.233431108 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.228988669 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.225000522 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.224831428 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.225629157 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.228974515 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.224908787 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.224233069 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.224113808 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.238194167 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.252215707 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23174953 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.247246026 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.224501358 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.230763501 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.247550031 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.230325055 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.226020786 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.225680079 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.22476295 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.225014083 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.222846636 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.225965301 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.225841797 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.226785544 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.227923672 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.231296923 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.227678773 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.2259103 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.224867854 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.226688416 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.225864981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.226527276 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.226892917 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.228658249 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.235827662 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.225894939 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.22752609 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.233232156 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248614141 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.22824436 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.226743623 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.226375904 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.22762055 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.227990571 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.227286974 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.23182067 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.23614563 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.231346639 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.238023155 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.230752244 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237268968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.227617913 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.231941711 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.235012195 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.22610945 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.226865654 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.228911958 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.228363327 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236028055 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.249234669 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.230057455 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.231630396 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.227551801 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.228089554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.228766691 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.229398808 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.22852136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.229191033 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238021279 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.253230333 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.233363414 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.229760241 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.225844948 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.227898834 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.229166945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.227991867 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23113917 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.228464487 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.229854801 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.229783841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.22965587 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.229220618 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.229384242 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.229550251 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.226226933 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.228316422 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236462206 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254038095 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233371614 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.230288356 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.236566973 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230458051 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237744496 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.2525935 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.230645469 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.229301046 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.230794531 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.232238192 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.231006585 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.231963293 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.231055677 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.232866752 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.234633584 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.230744665 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.232439918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.232300573 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.230954738 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.232267371 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243069755 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.258270077 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.233016168 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23694322 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.229268387 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.233974742 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.236983637 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.230976288 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.231572275 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.236454761 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245613636 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241814043 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.233480785 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.231414079 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.233982494 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231799239 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.233075971 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.233761688 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.233018041 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.234324232 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.233262024 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.232341541 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.236168889 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.233356664 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.233155657 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233673239 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.234792757 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.243612063 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.23388685 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.233830663 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.232537272 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.233814366 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.233468537 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.234022752 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.234155541 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234517133 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233092479 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.234741691 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243520077 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.24213514 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.236909315 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.234149066 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.233863146 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.234251764 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.235747436 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.234302751 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.234435538 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.23396314 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.235375901 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.232767477 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.235781879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.233664772 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.234788705 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.235238705 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235162286 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.239334504 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.244963787 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.235641718 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.23236961 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.235328861 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234753836 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.234383139 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.235015531 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.242367141 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.238021972 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.248797895 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.245829304 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.24003636 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.237120903 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239834295 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.244999823 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.235906923 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.235893565 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.235148615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.236288958 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.238027166 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24101883 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.23587695 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.243552686 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.237666512 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.772326645 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.244631576 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.261607901 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236241506 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.238965399 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.242531898 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236837372 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.234374487 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.23695604 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.236912683 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244253823 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.261399022 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238414783 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.239727163 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.238396365 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.239852446 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24170561 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238950065 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.24050905 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.23397056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.238686285 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236978551 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239286902 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.235408379 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.238794972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.237896238 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.242032401 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.247490624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.235725168 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.240928469 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.239509732 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.238526311 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.239039055 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239367136 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.237157825 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.237441194 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.238826821 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238816964 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.239713572 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.241957868 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.23862656 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.240770143 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.24217864 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.239236374 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.244104091 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253707447 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.249478635 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.237205792 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.238728507 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.239823211 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.242850747 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.239886016 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.239734264 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.240662036 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.24131695 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.241169827 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239696302 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.23932556 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.244241891 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258949457 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.264044989 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242466463 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.24104664 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242924042 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.24132571 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.237675155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.240195193 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.242167456 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.246026273 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.249391869 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.240600666 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.248900883 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263989121 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.243624217 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.245895524 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.245132266 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.250847809 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.243144243 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241066504 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.240112178 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.247559175 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.259948796 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241852191 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252565628 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275364558 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.263774728 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.243218473 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.243425727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.242168737 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.243172146 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.24406205 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.243222249 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.243403728 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242752911 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.242264282 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.243926853 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250290594 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.243788101 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.24593045 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.243738155 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.242525623 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.245131383 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.241400735 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.243102411 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.243758412 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.243891856 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.24417343 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.243821933 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.244930467 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257709896 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.272778831 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.24388324 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.245355744 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.241990256 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.247191721 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.248617753 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25867535 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.253626571 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.245035734 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.244078801 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.246920968 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244843678 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.244774696 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.245646257 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.247120411 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244825998 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.241412536 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.258427356 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273345961 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.24955284 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.245098544 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.24600299 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.246525924 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246331807 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246896106 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245197317 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.247607298 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.248189848 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.250341482 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.244706749 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.246711387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.249703763 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.255492958 seconds)
  done (took 734.431994748 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.244829803 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.242890825 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.243913857 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243480052 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.243163646 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.243244294 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.242932757 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.244452617 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.243647721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.243972538 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.244343171 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244478307 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245390146 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.244656003 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245558681 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.244460249 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.244733469 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.245173706 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.243918702 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.244758957 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.244536663 seconds)
  done (took 27.281412368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.24969223 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.245823372 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.245880449 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248742728 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246187814 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.248092658 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.245477741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248143576 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24843266 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244877535 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2488969 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249495581 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.245309328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.246074554 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245154453 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247993785 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.248072942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246187038 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.248074766 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246753929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248786185 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.246381087 seconds)
  done (took 28.592069797 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.248482998 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.249355173 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.249334614 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.24755912 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.248649853 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.24704614 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.250491101 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.249462868 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.250157945 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.250413265 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.24964569 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.251436397 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.257978637 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.256729798 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.25131283 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.24984708 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.250773298 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.249821025 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248966593 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.247380035 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.256565774 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.269313158 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.247966893 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.24959974 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.251575408 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.251031614 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.249491063 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.2497659 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.25292138 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.255452408 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.250371217 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.25023702 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.25430013 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.250421747 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.253059322 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.256599492 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.251603651 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.247026541 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.252696227 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.263891724 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.276318893 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.252664057 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.257765954 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.273810896 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.252145633 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.256166659 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.261680086 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.249680429 seconds)
  done (took 61.306001887 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.884838078 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.912790642 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.898927052 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.905112503 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.912935339 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.904097091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.906361324 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.909940957 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.904681181 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.903032274 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.905386868 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.903991219 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.902502706 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.911484674 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.90461198 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.910573397 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.901312149 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.913328338 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.901552687 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.903091373 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.905871274 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.911672717 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.906240975 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.902470574 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.908123715 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.903093711 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.911098013 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.907069849 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.906289269 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.916026941 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.906967629 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.910598837 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.907852672 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.909083837 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.90756499 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.906759799 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.914805415 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.90544799 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.915378155 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.907791266 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.905943773 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.913580391 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.920297508 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.911062571 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.908429796 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.908639797 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.911477169 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.906154121 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.908072149 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.914835923 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.914423488 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.913688445 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.910329847 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.909600652 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.918199249 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.910802799 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.904953329 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.907166173 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.911554566 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.908055794 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.907606172 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.910616256 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.906764986 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.913509924 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.909133625 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.905547768 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.908288004 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.920268802 seconds)
  done (took 130.930761712 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258102128 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.257127772 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258488959 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258777201 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258520271 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.25885297 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256826769 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.258690572 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.257553327 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258094487 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258563535 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.257431104 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.25786567 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257846753 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.258055421 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.258471965 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.259204421 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259245376 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257489475 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.257724877 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.257897758 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.258585877 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.258612114 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.258355546 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258414294 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.257428195 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.259916223 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.258308461 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25803753 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.259318916 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258638745 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.258753048 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.258826414 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.260310493 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.260004275 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.259336838 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.257888293 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259126876 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.259092191 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25891949 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259485926 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.259365065 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259034634 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.259533301 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260341913 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.260207526 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.259542962 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.260441421 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.260102832 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260852297 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.260958852 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.260793008 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260954017 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260724925 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.259789963 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.261624018 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259942218 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261099677 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.260681119 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.25980384 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26056614 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.261671676 seconds)
  done (took 79.232865854 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.261230348 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.261206618 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.259932778 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.258708255 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.261395167 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.259255902 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.261580466 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.261926654 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.261549501 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.262893143 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263059105 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.259672538 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260940599 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.263738664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.261999324 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262018795 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259466439 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.259493235 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.26153532 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.259317365 seconds)
  done (took 26.387697021 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.259928454 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263277243 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.260642161 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.261523809 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.26412632 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.26173238 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.263362046 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263504568 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26292784 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26460737 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.264449248 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.263869426 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.262059749 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264482505 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264162851 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.262786503 seconds)
  done (took 21.375114546 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.261913711 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.263850552 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.264316842 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.263833011 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.26087423 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.261775862 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.264212031 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.261509352 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.263068204 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.265669286 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.264126902 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.265059926 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.264750437 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.263322486 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.261375568 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.265474687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.26176005 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.262337497 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.264670368 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.265970327 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.264128705 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.263007718 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.264881571 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.266535408 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.263090123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2629473 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.264680482 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.26414488 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.262111515 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.265507427 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.26412855 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.263613436 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.263661109 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.263521421 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.265714799 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.263243312 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.267105639 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.265895987 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.265908531 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.26617632 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.266336285 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.264096152 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.266206138 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.266073718 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.263999151 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.267049683 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.264916102 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.264214453 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.264031431 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.266133452 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.268801041 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.2662874 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.267725679 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.26719768 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.268124171 seconds)
  done (took 70.721383154 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267575363 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267352818 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.26522596 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.267552896 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.267518259 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.265075409 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.268671067 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.266026476 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265980978 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269090935 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.265136768 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.270597955 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.265765631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267645249 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266749387 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268483937 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.266026137 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.265597171 seconds)
  done (took 23.976757581 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.267070324 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.265567295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.269848248 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.266265623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.2674586 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268841653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26605617 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.269152219 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268943233 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.26646163 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266065164 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.268838826 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26951412 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.269637525 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.267856947 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266342466 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.269143703 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.268371307 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266621277 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266780046 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269819957 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269919801 seconds)
  done (took 29.067193202 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.269101917 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.269451236 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.268733973 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.287508023 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.293825947 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.269119933 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.26944464 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.269839317 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.294797274 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.33014473 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.323949578 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.294009694 seconds)
  done (took 16.613174318 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268546856 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270876978 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26805094 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269516445 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271910661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26804452 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267338599 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267882086 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27103105 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268767573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26885399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271904768 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271685269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268606889 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271682622 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273585681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268821727 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270686497 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26974088 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270757877 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270178756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272986627 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26966625 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270199289 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269809435 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269574966 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272099283 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27000487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.270748526 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272412205 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273770231 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269628527 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273387839 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270801198 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272984231 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273009441 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270674278 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272843687 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274686331 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269955139 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.27340964 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272464599 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273603348 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270011892 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273302043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269622652 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271681324 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.270445015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271142985 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274429275 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274027111 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271440412 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273696963 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27351839 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273368925 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274520698 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271626675 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272754328 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273843262 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271550414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270926266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27441 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27136349 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272150776 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274798145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272610854 seconds)
  done (took 85.091210078 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.271949931 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271418855 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271571575 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272510739 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272643723 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27178822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27124562 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272382989 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272539835 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272833773 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274621983 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272509878 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273033445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272611483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273196283 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27281404 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274097892 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273662438 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273934169 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276150089 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273279325 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272956864 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274544611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273412488 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273210539 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275560873 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273312928 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274588806 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27463987 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273184981 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273008149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27375235 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274288935 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.274783316 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273352327 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273481402 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273990781 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274606152 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274918545 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277074346 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273554052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277731773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276658003 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275412365 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275546752 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275498449 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275054602 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275031639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275612697 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279389473 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276038758 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275493191 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277255401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275556841 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276586477 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275780082 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275259824 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27577063 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275649461 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278971215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276684303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276109719 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277905541 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.275680032 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276931998 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276624911 seconds)
  done (took 85.302655939 seconds)
done (took 1764.025756037 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.444274679 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399515977 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.280661527 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.315063334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.278795786 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.272114159 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.292731785 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.278959981 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.279257882 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.279124282 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.280578552 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.510546006 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.296528054 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.27906951 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.278591448 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.374776647 seconds)
  done (took 26.323486656 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.311193982 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286655767 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.414231988 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.302367901 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.312908362 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.495620499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.34986401 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284656739 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.4797022 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.306604115 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.279665417 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.310968282 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.282765297 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.27478387 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.305060088 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496558778 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.568380455 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.282049106 seconds)
  done (took 28.526320385 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.807441403 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.284950816 seconds)
  done (took 5.275455463 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.306975178 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.284522876 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.286997403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.283523538 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.276286629 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.275678216 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.283855426 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.27597732 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.286556564 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.427500539 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.285901916 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.298820098 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.306710891 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.285767298 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.281576849 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.332484937 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.437053071 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.282544108 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.282222266 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291083699 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284651573 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.431486264 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.332019119 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.283018579 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428100512 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.290021866 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.289664798 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.293460724 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442100738 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.283612584 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.28336551 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284585858 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28926145 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.277880992 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.766190793 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.31342425 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.313668769 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29585437 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.282060331 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.516726197 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.288117991 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.29397289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.279265357 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.756490217 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.449913965 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.422793819 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.29970882 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.286914482 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.289354964 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358879265 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.28726161 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.289552864 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.350768223 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.16050518 seconds)
  done (took 83.059977024 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.281084181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.280065333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.464458944 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309747971 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.280014464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.281106367 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.279502263 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.612980098 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.295520785 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.282376821 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.593887738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.90202589 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.303381678 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.328524931 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.169023695 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.348757504 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.282288195 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.300238261 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.280663681 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.28392056 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862893506 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.281663482 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.301861706 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.37570618 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.324059618 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.84363613 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.292981588 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.281211849 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304656639 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.281636992 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852032918 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.30899865 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.336088519 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.280727993 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.576187074 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710215408 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671098772 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.284321133 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.330290122 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.284703266 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.29555081 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.828488854 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688437998 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.285470021 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.282832035 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841282516 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.282233566 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.282272832 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.283400164 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.539235502 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.283319971 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.284563808 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.312995313 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.283492734 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.282963774 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.361199833 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.36581047 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.848476622 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.283485199 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284321615 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.303868506 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.28480454 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.294181456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286550531 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.283573775 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.692580606 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.485968287 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.285795055 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.6916773 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847500758 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.304484078 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918201115 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.303651428 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.294523445 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.480401486 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.28546803 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.284609893 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.860104836 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.314913018 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.284690649 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.672882152 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.287686654 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.60062647 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.319384764 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.286687685 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878658434 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.288511332 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.343594446 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.285473353 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.286173196 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.286198577 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.290068701 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.60480593 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.327151247 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.285282458 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.285280028 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.295274412 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.292319381 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.286603041 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.294106853 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919342802 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.314975255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.286136393 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287656128 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286571947 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.306745508 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.289457683 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.288858609 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.561187551 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.286634279 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.309938279 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.28727488 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.287736991 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.288303015 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.380828717 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.2914079 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.642833425 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.287058136 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287408296 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.310324234 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.287184123 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.350844082 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.287001933 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.296704577 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.211308614 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.591443091 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.310842026 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.287605207 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.287910007 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288767576 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288639573 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.307845628 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.330583357 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.287588447 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129605066 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31948334 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.315454836 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.288560676 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.297338596 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.289258452 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.317078187 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.290877304 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59501802 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.585885284 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495459598 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.299199879 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.289674162 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.115134718 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.349353226 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.475424106 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.309449218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.290365826 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549137261 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.505411431 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.291285305 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.290160572 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.292913898 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556422153 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.290614633 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.607747566 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886420078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.311005209 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.30024053 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.131448147 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.038689307 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.29112079 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.296508132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.597783409 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.312492515 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.291409226 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.291457539 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.291009948 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.293037416 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.29405083 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.30001029 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.291219148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.291547746 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.305115239 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.489713929 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.312097774 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.301126014 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.84968584 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.303386782 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.292959375 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.298164789 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.291560279 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.290947906 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.358591572 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.291837727 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.33926048 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.293960883 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.294485622 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.90360838 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.29244993 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.293159983 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488881158 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.046979819 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.312073397 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.293403268 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.313088788 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.223114596 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.874144239 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.302395329 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.651827757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.293658791 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336120772 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.292976953 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.332781665 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.909386023 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.294175398 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.315967912 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998047421 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.313409762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.70080882 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.292727354 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.295591497 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.954399538 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.312689425 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.297708445 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.292455423 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.321465781 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600517246 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.294863658 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.310536479 seconds)
  done (took 490.264360994 seconds)
done (took 634.628057882 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.293494961 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.29964007 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.2841989 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.300929708 seconds)
  done (took 10.379062351 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304159227 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.301970382 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.302315105 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.301680935 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.303441437 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.30161368 seconds)
  done (took 9.016527657 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.295080208 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303807672 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.301117267 seconds)
  done (took 8.102319079 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.541517266 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.323679435 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.68193549 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.321475859 seconds)
  done (took 9.073449494 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.303406318 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.303749517 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.303159477 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.304148369 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.305311658 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.307241663 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.306147181 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.304319216 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.306582396 seconds)
  done (took 12.945221733 seconds)
done (took 50.715169829 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.402139909 seconds)
    (2/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.308330316 seconds)
    (3/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.296050542 seconds)
    (4/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.301128623 seconds)
    (5/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.437375197 seconds)
    (6/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.348587099 seconds)
    (7/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.340009586 seconds)
    (8/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.406985062 seconds)
    (9/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.016089577 seconds)
    (10/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.312022643 seconds)
    (11/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.502710036 seconds)
    (12/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.374447117 seconds)
    (13/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.308085443 seconds)
    (14/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.066235027 seconds)
    (15/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.400805426 seconds)
    (16/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.466499073 seconds)
    (17/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.356190961 seconds)
    (18/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.452492807 seconds)
    (19/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.085162018 seconds)
    (20/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.47201871 seconds)
    (21/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.16096412 seconds)
    (22/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.519745623 seconds)
    (23/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.312247978 seconds)
    (24/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.310605623 seconds)
    (25/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.312001358 seconds)
    (26/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.406415181 seconds)
    (27/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.380252626 seconds)
    (28/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.360335083 seconds)
    (29/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.399188106 seconds)
    (30/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.311711442 seconds)
    (31/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.383556211 seconds)
    (32/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.496511858 seconds)
    (33/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.720610995 seconds)
    (34/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.38536886 seconds)
    (35/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.369882437 seconds)
    (36/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.062269654 seconds)
    (37/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.341307402 seconds)
    (38/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.673236826 seconds)
    (39/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.419228265 seconds)
    (40/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.44281416 seconds)
    (41/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.330808808 seconds)
    (42/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.317120241 seconds)
    (43/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.309935507 seconds)
    (44/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.363836447 seconds)
    (45/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.675816204 seconds)
    (46/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335350582 seconds)
    (47/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.324830179 seconds)
    (48/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.309880217 seconds)
    (49/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309230035 seconds)
    (50/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.390267025 seconds)
    (51/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.32068576 seconds)
    (52/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.446464848 seconds)
    (53/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.963832666 seconds)
    (54/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.428529389 seconds)
    (55/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343562604 seconds)
    (56/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.291010301 seconds)
    (57/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.327653245 seconds)
    (58/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.300755185 seconds)
    (59/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.403344918 seconds)
    (60/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.388544449 seconds)
    (61/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.301522939 seconds)
    (62/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.061416112 seconds)
    (63/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.440207961 seconds)
    (64/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.543225723 seconds)
    (65/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.312662698 seconds)
    (66/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.501399145 seconds)
    (67/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.366650638 seconds)
    (68/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.398410713 seconds)
    (69/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.316169132 seconds)
    (70/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.300782768 seconds)
    (71/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.335820266 seconds)
    (72/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.360665263 seconds)
    (73/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.490173334 seconds)
    (74/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.287666549 seconds)
    (75/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.314387346 seconds)
    (76/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.990763712 seconds)
    (77/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.385231667 seconds)
    (78/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336956196 seconds)
    (79/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.38425173 seconds)
    (80/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.379730794 seconds)
    (81/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.346573771 seconds)
    (82/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.956818088 seconds)
    (83/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.303462755 seconds)
    (84/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.492502244 seconds)
    (85/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.459221247 seconds)
    (86/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.30887069 seconds)
    (87/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.33024488 seconds)
    (88/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.311292167 seconds)
    (89/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.359910018 seconds)
    (90/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.473261575 seconds)
    (91/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.335713544 seconds)
    (92/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.321383649 seconds)
    (93/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.512803932 seconds)
    (94/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.292386211 seconds)
    (95/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.317407313 seconds)
    (96/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.528634462 seconds)
    (97/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.317335698 seconds)
    (98/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.421683679 seconds)
    (99/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.140506684 seconds)
    (100/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.322805691 seconds)
    (101/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.33031131 seconds)
    (102/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.420114403 seconds)
    (103/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.495560783 seconds)
    (104/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.545516388 seconds)
    (105/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.367001714 seconds)
    (106/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.306581142 seconds)
    (107/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.336095932 seconds)
    (108/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.409329361 seconds)
    (109/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.38086473 seconds)
    (110/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.39184179 seconds)
    (111/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.338045358 seconds)
    (112/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.536018633 seconds)
    (113/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.963007442 seconds)
    (114/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.394017476 seconds)
    (115/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.357445253 seconds)
    (116/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.306742295 seconds)
    (117/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.358596297 seconds)
    (118/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.353889968 seconds)
    (119/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.410052921 seconds)
    (120/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.425746574 seconds)
    (121/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.319033064 seconds)
    (122/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.327972666 seconds)
    (123/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.45085612 seconds)
    (124/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.338570965 seconds)
    (125/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.410881226 seconds)
    (126/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.341136093 seconds)
    (127/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.448007673 seconds)
    (128/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.068620627 seconds)
    (129/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.349295103 seconds)
    (130/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.076495944 seconds)
    (131/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.238329798 seconds)
    (132/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.41240679 seconds)
    (133/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.313999412 seconds)
    (134/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.325588108 seconds)
    (135/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.319153612 seconds)
    (136/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.382742518 seconds)
    (137/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.489881522 seconds)
    (138/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.38467788 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.340271016 seconds)
    (140/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.349703985 seconds)
    (141/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.502734879 seconds)
    (142/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.400373131 seconds)
    (143/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.419203393 seconds)
    (144/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.389125058 seconds)
    (145/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.965369097 seconds)
    (146/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.530353816 seconds)
    (147/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.397335281 seconds)
    (148/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.080327482 seconds)
    (149/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.979151209 seconds)
    (150/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.331572322 seconds)
    (151/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.357163245 seconds)
    (152/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.357962123 seconds)
    (153/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.316832274 seconds)
    (154/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.405023397 seconds)
    (155/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.331401214 seconds)
    (156/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.305848717 seconds)
    (157/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.496922639 seconds)
    (158/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.957224909 seconds)
    (159/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.203775116 seconds)
    (160/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.375339094 seconds)
    (161/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.317352891 seconds)
    (162/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.322590929 seconds)
    (163/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.421264217 seconds)
    (164/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.96474288 seconds)
    (165/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.293012414 seconds)
    (166/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.405084302 seconds)
    (167/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.020248762 seconds)
    (168/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.315428049 seconds)
    (169/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.511216178 seconds)
    (170/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.221964476 seconds)
    (171/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.53639543 seconds)
    (172/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.295467613 seconds)
    (173/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.372377737 seconds)
    (174/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.475203331 seconds)
    (175/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.426662685 seconds)
    (176/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.084376154 seconds)
    (177/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.328459483 seconds)
    (178/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.333143271 seconds)
    (179/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.535233098 seconds)
    (180/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.373409278 seconds)
    (181/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.319415925 seconds)
    (182/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.41381009 seconds)
    (183/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.385253552 seconds)
    (184/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.480885957 seconds)
    (185/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.516018021 seconds)
    (186/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.361981862 seconds)
    (187/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.553158968 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.351998579 seconds)
    (189/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.497531085 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.489756949 seconds)
    (191/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.398271699 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.323451436 seconds)
    (193/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.419953871 seconds)
    (194/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.442314016 seconds)
    (195/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.4494262 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.350583815 seconds)
    (197/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.392799068 seconds)
    (198/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.316816669 seconds)
    (199/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.090271253 seconds)
    (200/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.35015002 seconds)
    (201/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.40048067 seconds)
    (202/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.469375761 seconds)
    (203/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.467339933 seconds)
    (204/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.622639755 seconds)
    (205/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.22977987 seconds)
    (206/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.515968253 seconds)
    (207/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.296668934 seconds)
    (208/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.662238983 seconds)
    (209/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.443625593 seconds)
    (210/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.317584394 seconds)
    (211/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.440532895 seconds)
    (212/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.323458496 seconds)
    (213/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.367686585 seconds)
    (214/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.308783841 seconds)
    (215/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.326005073 seconds)
    (216/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.328801793 seconds)
    (217/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.312779964 seconds)
    (218/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.414399541 seconds)
    (219/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.428621358 seconds)
    (220/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.418636852 seconds)
    (221/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.482086648 seconds)
    (222/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.461989968 seconds)
    (223/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.447642264 seconds)
    (224/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.030145678 seconds)
  done (took 364.384592362 seconds)
done (took 365.585693618 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366492613 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.496075357 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.319886194 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.319115585 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363772673 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.314828321 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.354658475 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.327139521 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.322729948 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.323176198 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.314117196 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326001507 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333063222 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.356332193 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.43489677 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335186745 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.320718125 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.321785808 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361895765 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379584177 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364801529 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366104133 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.335089818 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.320818525 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369793615 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370418131 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.327712434 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.313648371 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.32130742 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362876937 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.321694763 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.327799135 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.371125197 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372732153 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366094455 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.324326639 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366924838 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.498787085 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.358820414 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.357718832 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.325768102 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.372726524 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334462271 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334710721 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.373630794 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.334954691 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371240346 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.446546565 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.323440179 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.313962285 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393355106 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.38525804 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.327022802 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.312216257 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.315537858 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.446293663 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.324520442 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370464211 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.326407278 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365946805 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.437830152 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370983943 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384945261 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371533841 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.327372029 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.337275791 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.326182848 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383142252 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.32316574 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367894604 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369663006 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.331042712 seconds)
done (took 106.759231216 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.460357299 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.322829136 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.496429992 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.324560544 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495602668 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.476485471 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.321718019 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.322858585 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.322705982 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.156017538 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.321554031 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.321540408 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.324583499 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.322129774 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.456641886 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.324750353 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.322465717 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.045589601 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.326122808 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.468700584 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.325808103 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322267019 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.326137397 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.15419258 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.322542931 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.321212305 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.47117634 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.324949611 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.044504726 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.319769373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.320901963 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.042494299 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.46990962 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.343436073 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336045824 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.331315204 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.496309535 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347543234 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.458485803 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.453172056 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.486943695 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.365518739 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.319823506 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.323143575 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.327134398 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.327435002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.323585909 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353556548 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.324718755 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.324917513 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.045237036 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.337170229 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333674019 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.326010608 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.325473681 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.346991345 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.325472908 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.328784748 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.47391325 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.329623208 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.458836845 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.155196309 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.161057206 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.329235136 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.32429077 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.326670816 seconds)
  done (took 108.095219307 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.39393248 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.404852149 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.449730158 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.348936276 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.380035414 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.454045957 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.348742207 seconds)
  done (took 11.005091961 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.335607855 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329574279 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.378920901 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378025473 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.329057746 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.581450141 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329645777 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.340258365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326516622 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408725836 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.328585042 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.330960638 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.336372592 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.326464498 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381427325 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.341272339 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.445545264 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.33126614 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.328973539 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.484955452 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327604583 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335617338 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.408519394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.342881758 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330716962 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.336338979 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.323361834 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329811407 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.32714876 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.331418798 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327972643 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.440210103 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.331796788 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.327903592 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328715179 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533271645 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.330930427 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327248955 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.331243768 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.331904204 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.331257376 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.332668976 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.332224226 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.328819268 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.331458034 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.356572225 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.331453372 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.33262123 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.330380227 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33227792 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413139384 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.332948744 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.327471671 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.330444873 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.410057417 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.340755404 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.331362407 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329199575 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.33306129 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.329456742 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.487418482 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38190356 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.333926231 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.381152268 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332564826 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.334027751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.332683633 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.332287276 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.426495318 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.33408081 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381308811 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.331169436 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.556365777 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.358383471 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334470703 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.336086111 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.337360014 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332685493 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.330251063 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.340384823 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.332755094 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.335264206 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.341139104 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331763199 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.331810954 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.558115845 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.528380897 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.332301698 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.347263225 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.342287359 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.332529713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412200936 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.335287646 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.332078779 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386752529 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.450487836 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413143277 seconds)
  done (took 138.184551956 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348049286 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.349154599 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.339268668 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.364625753 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.338525183 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.335834032 seconds)
  done (took 9.306529824 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.338361468 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.337171857 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.336399858 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.335646949 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.335294794 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.337219911 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335472496 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338405121 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.34012851 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.336672248 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.337091197 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.338463747 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.336603145 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.336332394 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335769968 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.337140531 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336431906 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.33414816 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.336357495 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336809361 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.334196672 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335877756 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.337221632 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.339115265 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.342040601 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.336565857 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360478512 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.338804314 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.336968932 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.347679334 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.359292489 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.33818226 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.340320944 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.346051066 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.342979014 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.340547922 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34201888 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.340376348 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.337039665 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.338538958 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.339819662 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338017205 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.33969484 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.340939898 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340699769 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.346383773 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.345983641 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.359992448 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.338592294 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.340979581 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.340857192 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.33859932 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.340250938 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.33981479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.343314271 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.363496532 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.344353457 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.340039346 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.338175094 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.342161188 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.342531754 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.340711594 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.342901799 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.346857104 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.339188218 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.341013944 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.341815807 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.343031448 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341337895 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.341925917 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.341740478 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.337867305 seconds)
  done (took 98.769888116 seconds)
done (took 366.579763733 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.160893416 seconds)
  done (took 4.397796793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.456631448 seconds)
  done (took 3.694143061 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.227417543 seconds)
  done (took 25.469607863 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.364379435 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.401068386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.347381263 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.338148804 seconds)
  done (took 10.687051353 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.733186636 seconds)
  done (took 3.96982127 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.350368606 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.347732822 seconds)
  done (took 5.936297002 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.671848403 seconds)
  done (took 3.909094136 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.919388811 seconds)
  done (took 4.163330924 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.368012457 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.348195108 seconds)
  done (took 5.959059015 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.317929545 seconds)
  done (took 3.554614715 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.776084776 seconds)
  done (took 40.014283056 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.339207202 seconds)
  done (took 3.578781577 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.372999592 seconds)
  done (took 3.609494521 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.459700286 seconds)
  done (took 6.697213275 seconds)
done (took 126.87546929 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.333800917 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.334115507 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.336178238 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.335663495 seconds)
  done (took 10.577871341 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.396776258 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39536603 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.393184685 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393466619 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.393428068 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.394580638 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.368552275 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.368290788 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.39523539 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.394900437 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.399762918 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.39407129 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.395569562 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.36920894 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.394703395 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.402229892 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.394607806 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.395319171 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.36923142 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.39516759 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.344230273 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.39632999 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.395915301 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.344722307 seconds)
  done (took 34.525244639 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.841836305 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.418413866 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.499540711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.397134545 seconds)
  done (took 7.39565342 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.421014143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.421676127 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.438615357 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.475377609 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.491689001 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.435797714 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.367908961 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364681229 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.352455795 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.425525456 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.473230132 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.412665706 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.502678504 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.345650307 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.553430776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.343746144 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.343289853 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.422851371 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.47246451 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.490447593 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.346164559 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.42244229 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.427223612 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.414258892 seconds)
  done (took 35.404678453 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.352969573 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.359473133 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.345335565 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.359595942 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.344819195 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.345310508 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.345848282 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.351522315 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.345546458 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.343582969 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.344155625 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.358818589 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.347670403 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.345934352 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.352022482 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.346249221 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.351804397 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.349371679 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.345025918 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.353274866 seconds)
  done (took 28.229738841 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.340478099 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.339498633 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.691613397 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.597157958 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.340976815 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.346665102 seconds)
  done (took 13.898771492 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.432358327 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.610241026 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.348573671 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.769695864 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.851954519 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.348704967 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348481248 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.6313121 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.015147454 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.010384602 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.417605225 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433337845 seconds)
  done (took 20.461872 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.347623641 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.34426677 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.347981455 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.361535719 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.413518048 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.370470134 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.355546829 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.341030948 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.419725072 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.438031967 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.371434612 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.415086017 seconds)
  done (took 21.769984288 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440711534 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.342475651 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.348433402 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399624809 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342053362 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191176558 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.416456453 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.104556852 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.3689098 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616002945 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36023027 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442822916 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600731329 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342066861 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.348709063 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.335094213 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.575822607 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908596091 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345541398 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342533291 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398277019 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.3575464 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.359632775 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602368424 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350071189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34348966 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605124348 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.343253957 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67771422 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358968824 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355631104 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343312675 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618581636 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065729973 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465531843 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.59925623 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352153241 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.346505432 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.338561703 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.345609501 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38284536 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345525564 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355107664 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346544753 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.345068808 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356462273 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116035115 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.374360502 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.343269596 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345688625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659191873 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44713273 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350150993 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.345446999 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367498417 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.346420022 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.350301733 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485620712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950090639 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347970466 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356977703 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.351374008 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352097523 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347796192 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048317357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.352280484 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.349301205 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350094573 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3459588 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347642154 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362478021 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348527179 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.370671271 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347639609 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.291137765 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35368875 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35006021 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97376644 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364168256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.35214198 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579832596 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349380011 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347413338 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.346013819 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.347770145 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157904908 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356954964 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.333862075 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398188041 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.13611258 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627510756 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374977301 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380425129 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574307017 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.334018843 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34905894 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.349381096 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372818166 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371489445 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.118037157 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370766105 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352816572 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609754753 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.56207671 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359923785 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.347753075 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.886274677 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388598783 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.364494881 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.360978085 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6086396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.031182267 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367365574 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.369992118 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37021521 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350327257 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195960752 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358369663 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.456392816 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.351617536 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658441728 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.248362423 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.352096497 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41967979 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356150907 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.352008677 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352413247 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354286444 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350717691 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.59975179 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389521029 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.36501482 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.353166075 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35270758 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.348540735 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359836173 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.352155893 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57621749 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370619223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629116393 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352034601 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351164559 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35141324 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.576537204 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.348943125 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.688735469 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618167099 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362425817 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.362372214 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365314238 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3723338 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456850402 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375424946 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.360828076 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.611043175 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.356762243 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357689701 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.352404494 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355995429 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358967567 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.360113289 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36688007 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034443159 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357029292 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360061739 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.247203488 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.367804374 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423053578 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362462219 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613380626 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.357385139 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38059001 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.360814091 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.350487221 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581952915 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.366794312 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.355429396 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430273545 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.887609767 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.056144675 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370223503 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.354352851 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.352477706 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.351467322 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354060574 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356243985 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35600288 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6148381 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375551711 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.35382746 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.039344474 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35879576 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.356343435 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362406193 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.368594143 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.361836022 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357471178 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.370425438 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359218418 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365693091 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366935557 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501535975 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.371568261 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.35816771 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.873840638 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362336875 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356588851 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.357261534 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393030547 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357468404 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239955177 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623923348 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366269434 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682257176 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363418616 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.374784088 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.356682291 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357318774 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366197007 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.358219492 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389027281 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.36916722 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358595513 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360996521 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934696976 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207832732 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983626032 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379671863 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.37717833 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.363584043 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173367777 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380991453 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.359467721 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635606645 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135359109 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380270332 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897740093 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.38224766 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.249319953 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686328153 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598228867 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377553706 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.374850543 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68955083 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57763351 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394264184 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.37433656 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364885421 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.345504689 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992407372 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.381622864 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439211617 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13550311 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387409108 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361784345 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.389052111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.370424372 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827102083 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.382458615 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360922541 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.360918019 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368027133 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265656962 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367348461 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361700881 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061084608 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369134405 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.897516575 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384216508 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62484384 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.379954976 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.366094475 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.372561744 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.368041655 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.620820818 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690945136 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368813257 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.378996247 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995047293 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.239294553 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.367348098 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362646484 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22513958 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378092626 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.717647624 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.385889729 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.366168265 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363795651 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363464722 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.362223635 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.360371684 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.367991558 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363041505 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957064398 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.370220301 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38024681 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38347254 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363405018 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.622614908 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.378400805 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046934155 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.595648873 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366817597 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408044859 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.367806487 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378434978 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.35224777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.36333014 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363491471 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389450099 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.588933475 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.364923603 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.34973362 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.456986297 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575948343 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.363775648 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368542775 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664665937 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.3687826 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.372657792 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226505447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398411755 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369444268 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367660268 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37108284 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412541243 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434040803 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629127473 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.382542785 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.378148484 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830480725 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393180567 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369526959 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.381230644 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462093253 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369086577 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.364224726 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.140033772 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054120495 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259593659 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053995416 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.697055949 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.37417814 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37470297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366778833 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530147531 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365572081 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641785181 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368746288 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.368670658 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410533632 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383927546 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.427217504 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585312639 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643741271 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368002777 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372989107 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37147113 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.367496824 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380277017 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581668798 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967335284 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.022633822 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371079534 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368604551 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.173052042 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666270941 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368819109 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.371318231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367697036 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.381068796 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.403397416 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.376461612 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384866445 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515800389 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699008804 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097683616 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.403745735 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.397567265 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.887614513 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371568002 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.627206684 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367805317 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636935165 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.060922232 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.184700035 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640394618 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440150849 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.634680873 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.372903824 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532521104 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.385006808 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371064951 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.372073909 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370291585 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.367535943 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.380208598 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.060476123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639446292 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.375106464 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.383363152 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403422126 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381288233 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597039333 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.201985427 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.597634532 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.383994984 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.376596786 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.370908867 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061387397 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.692783075 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377505602 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.376736663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660269429 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.376869632 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395929311 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.88849811 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.368488169 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008889418 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.349334553 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395421397 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382412134 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195178912 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061825426 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.375625357 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954488135 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374666864 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.387525724 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652653375 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.378774087 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383251391 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655731166 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376439726 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381567778 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64200201 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.060734653 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.275268677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.389062176 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406304887 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.375088178 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373055389 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375567933 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375817224 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373678032 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.855152704 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.397641394 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37558698 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387700956 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.371469262 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385466718 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.377224019 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374725857 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.381510408 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.38426185 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.3797423 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.394524774 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.513215936 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013533815 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396740811 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.044268071 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.701942041 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.631961552 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.386974999 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.365606743 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.380063509 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376221507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377529088 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377184244 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378056986 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048088175 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.390695715 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.391590251 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.380822554 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.376678474 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.591038229 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.38662579 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64029564 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399646196 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395447803 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.362146751 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377054235 seconds)
  done (took 977.028447479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.423142132 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440041592 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.407062742 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.487151327 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.445279323 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.52920525 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.437901146 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434956512 seconds)
  done (took 20.881438394 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.386249 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.389467382 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.378413333 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.389574807 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.38499967 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.922137175 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.397690195 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.39022458 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.401215161 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.396467387 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.378983533 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.362790073 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.412148872 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.393059959 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.373909622 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.391485981 seconds)
  done (took 33.034453026 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.73518114 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.687517604 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.045689126 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.406140839 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.430660176 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.378165003 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.819197807 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.403240908 seconds)
  done (took 28.182926497 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.390053726 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.391894032 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.391425833 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.392714842 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.391477579 seconds)
  done (took 8.235649928 seconds)
done (took 1240.863556076 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.38532283 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.38471433 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.383081762 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.386661407 seconds)
  done (took 6.817136302 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.367338393 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.366192022 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.366131043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.380241942 seconds)
  done (took 9.757618858 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.263620947 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.110433222 seconds)
  done (took 5.650758083 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.911012527 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.909693088 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.911068173 seconds)
  done (took 7.011790414 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.709022403 seconds)
  done (took 2.991418461 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.338958817 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.387256476 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.097550675 seconds)
  done (took 8.104065142 seconds)
done (took 41.607635602 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.381419971 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.727935226 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.534953953 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.384700783 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.566387146 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.53631244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.145582125 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.396578622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.379221426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392771725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.545116977 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.122538225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.730936565 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.122646178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.632260637 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.545393514 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.393792036 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.396247321 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.382046968 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.145471738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394387333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.381656638 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.397904529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.544321395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526167715 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.401009608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.635369779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.38231681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.403112585 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.52838633 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.383174046 seconds)
  done (took 83.12295244 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.397297866 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.382167588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.405693225 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.403323484 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.404182061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.38377049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.413103752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.385104365 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.383643961 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.382361227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.382173561 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.420870373 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.400384792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.383631497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.384666267 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.405063662 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.400228666 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.383778853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.384594617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.384087448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.383057187 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.408824398 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397264307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.385870834 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.390216052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.386716796 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.410690629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.397179557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.382881894 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.391646533 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.384088247 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.413896818 seconds)
  done (took 77.884532412 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.39918751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.392969362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.385786873 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407142333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.385273431 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.386090414 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.407676936 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.39799288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.385912125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.385014445 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.384967726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.383638899 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.388025368 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.384372526 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.386948575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.38694979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.384968989 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.386079409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.406463347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.386525177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.411694671 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.399816006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.386294989 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.422765325 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.385427499 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395564743 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.392799141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.386089155 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.395986378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.395095189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.398874214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.387128843 seconds)
  done (took 77.85373947 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.66814616 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.39499166 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39742352 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38741515 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.395594154 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.392863925 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.388631939 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.674755931 seconds)
  done (took 14.982399989 seconds)
done (took 255.122550495 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.38848378 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.006750501 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.436043438 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.387225196 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.439516061 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.415571509 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.63999334 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.434660407 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.639876341 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.413414065 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.415668675 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.39009358 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.333495936 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.552921895 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.319235351 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.390314033 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.401465346 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.389470595 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.057831636 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.695882532 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.41484907 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.389077476 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.326564857 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.428392023 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.374401279 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.489736996 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.511461568 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.627691907 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.565138398 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489154972 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.005404188 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.389972189 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.401430178 seconds)
  done (took 65.847452402 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.397671141 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.522419353 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.396687532 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.39623903 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.524820698 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.421369076 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.396248698 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.39647161 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.398722214 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.39812438 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.397656685 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.399734587 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.400079073 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.447156057 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.527094256 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.415775401 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.396866791 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.520391069 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.39704219 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.390550835 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.445503814 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.398245805 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.39960664 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.447290271 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.398941282 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.398810134 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.52294155 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.423145974 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.399387769 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.519288406 seconds)
  done (took 44.182992644 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.397848884 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.084653349 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.247551828 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.408879484 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.399962106 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.404113922 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.745524433 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.401302941 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.40354061 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.403159977 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.988158868 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.402961273 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.438062261 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.279378969 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.40443735 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400263186 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.40038791 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.400996813 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.096310864 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41177407 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.784869122 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.405198702 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.765562037 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.416280425 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.428416811 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.402539267 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.406444197 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.359237035 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.406576031 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.988475423 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.376960073 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.76291147 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.252652984 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.259367396 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.399179071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.40692266 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.401932962 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.993555301 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.406039319 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.403723823 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.76059795 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.406412903 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.257816591 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.124504845 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.426143447 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.404344675 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.344659098 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.990941315 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.698949955 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410659912 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.290021935 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.407692889 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.404022113 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.40641749 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.704831472 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.410519185 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.405424326 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.36995134 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.408310714 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.751564213 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.40520279 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.40439664 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.091277609 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.406615118 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088330498 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.406914894 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.412580597 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.428912154 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.264782968 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.409047353 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.146150461 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.426499795 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.403626087 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.008519589 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.107556608 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.402353746 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.412455662 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112915781 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314937216 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.763465721 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.414712674 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.329424565 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.769367747 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.414952947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.408575007 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.406327661 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.406788564 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481547452 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.757613703 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.08350409 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.142260755 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.391877434 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.766152398 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.418867294 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.408020081 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.373706159 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.407096161 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406931374 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.267464686 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146383105 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.430235832 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.415602128 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.156204745 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.430917673 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.769250873 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.418677162 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.270141808 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.41011919 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.48393664 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.408088093 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.415196182 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435483402 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.76567707 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.416081475 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.406437969 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.129552989 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.044000709 seconds)
  done (took 201.248203508 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.39963236 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.401937042 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.400264764 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.400273384 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.400685071 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.40962185 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.4011799 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.40151307 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.409375556 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.400548583 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.40311609 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.410671174 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.409269135 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.401072232 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.42070575 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.402229021 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.403433104 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.449108351 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.400107009 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.402986751 seconds)
  done (took 45.425382149 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.409022588 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.081081241 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.054667281 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.413187309 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.407487672 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.410389308 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.477088551 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.407547747 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.405949553 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.791115956 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.625764653 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.429766443 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.406770045 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.407249134 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.066286457 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.404859176 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.793471695 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.125788082 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.417015312 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.122780928 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.403338291 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.4119814 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.41059183 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.125795021 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.802833181 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.773367931 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487257127 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.085947907 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.41064786 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.407889415 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085716021 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.414097742 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.413506748 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.132180758 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.438467214 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426435577 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.410963197 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.484145785 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.484682579 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.801967595 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.223510009 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.785060023 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.428870092 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.602153544 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.415667199 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.398528507 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.141318207 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.438186883 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.400015545 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.411094294 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.418012095 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.09468087 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.438889658 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.093792153 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.436242366 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.413379476 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.141157529 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.101103055 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.120145004 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.634529719 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.435988856 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.782191398 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.416836452 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.14522453 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.440394635 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.414641308 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.414126223 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.626186762 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.165415289 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.788835464 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.810261656 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.811105253 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.419523881 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.483899615 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.433786982 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.877896127 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.486133545 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.881053859 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.813501839 seconds)
  done (took 132.153498341 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732284179 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.542767117 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.922262075 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.120166947 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.41555795 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.551315556 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.537535043 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.702021594 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.413516531 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.4863173 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.233268451 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.525367695 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.246981018 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.494471871 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.521074236 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.573662935 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.900091134 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.432986846 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.145722461 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.215761542 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.43273415 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.543434745 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.992426858 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.664922295 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.41839782 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.015045829 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.437361107 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.222953728 seconds)
  done (took 55.745308657 seconds)
done (took 545.885603844 seconds)
SAVING RESULT...
DONE!
