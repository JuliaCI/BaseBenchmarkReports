cset: moving following pidspec: 1671
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.897914967 seconds)
loading group "string"... done (took 0.578415034 seconds)
loading group "linalg"... done (took 9.09878152 seconds)
loading group "parallel"... done (took 0.176225347 seconds)
loading group "find"... done (took 1.455888676 seconds)
loading group "tuple"... done (took 2.145401697 seconds)
loading group "dates"... done (took 1.430882778 seconds)
loading group "micro"... done (took 0.22898495 seconds)
loading group "io"... done (took 0.610173653 seconds)
loading group "scalar"... done (took 44.718306233 seconds)
loading group "sparse"... done (took 13.808167169 seconds)
loading group "broadcast"... done (took 1.120339775 seconds)
loading group "union"... done (took 12.454052621 seconds)
loading group "simd"... done (took 2.625496658 seconds)
loading group "random"... done (took 10.561183654 seconds)
loading group "problem"... done (took 1831.87513741 seconds)
loading group "array"... done (took 25.445392201 seconds)
loading group "misc"... done (took 1.108539521 seconds)
loading group "sort"... done (took 3.751617369 seconds)
loading group "collection"... done (took 18.714538033 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.658283997 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.133959724 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.164718845 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.337224104 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186881177 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154098942 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15957749 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.552856482 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942363023 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208437689 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140920711 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.534665018 seconds)
done (took 5.840097053 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.239604647 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.43187411 seconds)
    (2/2) benchmarking "String"...
    done (took 0.125595021 seconds)
  done (took 1.173465034 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076017882 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.17430982 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094410793 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.10844284 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.109378029 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108210176 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093499127 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.107712119 seconds)
  done (took 1.414709458 seconds)
done (took 3.527486439 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.481813467 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.841412689 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.490865272 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13648832 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.154890857 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.144006823 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.296099553 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.161518605 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.116781714 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.086570987 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.170301685 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.361931274 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.469486369 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.940109027 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.085681621 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.128481397 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.091492594 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.708340638 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083271341 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.135577533 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.517695772 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.109881613 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.11991242 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.13874549 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.187878284 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128893083 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160416592 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.094158024 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.665207676 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.101392952 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182898345 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097825817 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.15901192 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.23987058 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.093596902 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.092931442 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668306452 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.176613384 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.110148296 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.1004127 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670150628 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082425386 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.192043307 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.096202665 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.108868253 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179169548 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.112333404 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.077857288 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.100322469 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.088805428 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.154254277 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.478231436 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106705323 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.14873864 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.106789891 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.675889576 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097960841 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.155955172 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.138979979 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096848101 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.093502634 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.107047111 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.150682889 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.108531505 seconds)
  done (took 19.276125827 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115927617 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138365065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.092931908 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139407857 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13880915 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.094462531 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083074471 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.091726984 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.108202632 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.182276198 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134491919 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.140991947 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.089216396 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079484672 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11500046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246509129 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10395306 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118511406 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.0806669 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103998202 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137069521 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095414489 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107143696 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106530426 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166401306 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203420122 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111255487 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123912293 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09372903 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099524259 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142922636 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.161644866 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076231595 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094288292 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.180232018 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.118119763 seconds)
  done (took 5.048071076 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196677093 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.115529041 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.188903001 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.175863468 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.132473283 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144421716 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164592076 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116305995 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.260699557 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.166708889 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081316201 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.130590494 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176008171 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127401644 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.094581548 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092158565 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080228763 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.091877546 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.614821023 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.182400649 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148729777 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.123799336 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100923543 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081796495 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371606022 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097878012 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094652716 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085510221 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.088440771 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.174106149 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083657082 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.290197451 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098127983 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.106825462 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128190789 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190430797 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130584159 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122467469 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100878009 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080262552 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228171307 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105619679 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077575503 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.1249662 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11655098 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1292902 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098200249 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107352546 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.22329227 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096509831 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116421258 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.054099388 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196072569 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09536214 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096755226 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.34364964 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114611807 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08467208 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.097384163 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277070124 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13023473 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081066692 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07640445 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100151291 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.091915056 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39773247 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.088893292 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.966559006 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.093947822 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.151290194 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097250294 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103796202 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080669812 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099308994 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084607988 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117597286 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079023907 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.093793532 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078503643 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093913948 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082557747 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112338742 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099214988 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.078836887 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.157174595 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.098313999 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115403968 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122709749 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083370997 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.092540493 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112308646 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094731307 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080596849 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.142664982 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101609967 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112906066 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097019648 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126222489 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094540542 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.1746502 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080084841 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120607104 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097825098 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111622881 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117385209 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094786518 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082511525 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.092454144 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078930378 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158657472 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079613474 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078140577 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.097499174 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108557005 seconds)
  done (took 23.260275047 seconds)
done (took 48.201908161 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.452051158 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093006628 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109921679 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109333685 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.107613387 seconds)
  done (took 1.561970998 seconds)
done (took 2.226663635 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.343554983 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.177078237 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100464206 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.191096986 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084867584 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197436536 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167968068 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115581806 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.19276558 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098905927 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.172459916 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097502125 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086310788 seconds)
  done (took 2.7190093 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093200965 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115293853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080123548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.106901941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07396694 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106395316 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090565677 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124390726 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.090729582 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.099558352 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074087249 seconds)
  done (took 1.719636354 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089778735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111039138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081225404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103474222 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075193572 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087899738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104861578 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112503023 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089336952 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.100476496 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075197152 seconds)
  done (took 1.696522016 seconds)
done (took 6.792019406 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.994322814 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.086083674 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.116361102 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16198121 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.331440634 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.201009791 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.485005804 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128626646 seconds)
  done (took 10.350095503 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.129991458 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096369471 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.078304916 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.097635934 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079412626 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.09932648 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.080902695 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094351586 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078711745 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094655258 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07800234 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.097641647 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081509416 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096153548 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079422413 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.096704312 seconds)
  done (took 2.185096632 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115952329 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115442424 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.101093277 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.105141104 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083635485 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099077569 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.085614667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.099670571 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082559422 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.098414404 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.103737872 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.088529925 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102362852 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081912896 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.100954874 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.089785902 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.097527107 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10029628 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.086188542 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101454701 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.089341002 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099031362 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.102062892 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.089643615 seconds)
  done (took 3.090173243 seconds)
done (took 16.291307465 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165611375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083442693 seconds)
  done (took 0.918046904 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.100282651 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11677284 seconds)
  done (took 0.894164814 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105846569 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095111038 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.131982214 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111843468 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081113866 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.094774615 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.112894252 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096051499 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080133644 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097025673 seconds)
  done (took 1.684301647 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084662942 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.098855643 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088447747 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116181585 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106463023 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082573595 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.100296225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084313657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100633443 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079723009 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103822605 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114631805 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086648133 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117833507 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.084892994 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.102338392 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.105360671 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084882298 seconds)
  done (took 2.420950217 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079944153 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081775518 seconds)
  done (took 0.841343926 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082635126 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093393264 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082544802 seconds)
    (4/7) benchmarking "year"...
    done (took 0.097300573 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.078297164 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094094293 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.078714853 seconds)
  done (took 1.286713959 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.500175465 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.254257985 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328721877 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.098540357 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147997528 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.361155574 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.132904984 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.110153432 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.110291571 seconds)
  done (took 2.764372316 seconds)
done (took 11.487170153 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09128495 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.185989567 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.532593722 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.116829459 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.077555334 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.154578693 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.257384152 seconds)
done (took 2.094382887 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.34573781 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.122474897 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.08625362 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07817326 seconds)
  done (took 1.308251851 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079033852 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100756653 seconds)
  done (took 0.864416983 seconds)
done (took 2.858980193 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078988935 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.077652617 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.09193565 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077191264 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.090603554 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07548229 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092445433 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078307036 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.129295667 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.077567643 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.09474444 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077858087 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091432895 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075394029 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077397162 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.091952712 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074774273 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093274514 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075276524 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090552808 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077992581 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090827891 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075709646 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.189340076 seconds)
  done (took 2.863473181 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.098738211 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09552618 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083436237 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09912361 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08107473 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100324339 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099269819 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.078691215 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.099610935 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08072016 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097638853 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.082101485 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.095931156 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082528096 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095761413 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.097617418 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.084889068 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093938694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080992034 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.097400976 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083581116 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094358028 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.082430862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099110965 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.09749125 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082686222 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.095608049 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07907557 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099354776 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.0819419 seconds)
  done (took 3.410053692 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087007161 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074732122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092378047 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.086634268 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091418356 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07976319 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.091415365 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076009331 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09280151 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.075903732 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.093517794 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.075797639 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.091320881 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.076724161 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077570544 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099602172 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11098233 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077180941 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.075673636 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093868007 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.081705961 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091962256 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078149725 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092478764 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076481798 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.09145625 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076954204 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07536867 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09258811 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075322534 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097364033 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082227135 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.092151236 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088431494 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098345162 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.075761046 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100354611 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07531726 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.092743569 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.075711101 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.090995581 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076460297 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075179897 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10355016 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079176445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092769555 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.076216904 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094096814 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.077117829 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.095445945 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076104471 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.091212342 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079723847 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.093326035 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082144086 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.075244152 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.093498839 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07525592 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.093012552 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075782186 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091810783 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.075973189 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097945491 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077516148 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.116237709 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087528526 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.092627731 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.078352251 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096142294 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.084963549 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.094190982 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094720468 seconds)
  done (took 6.906369332 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081070796 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.102751413 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078263904 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093808163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074626595 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075792925 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099468356 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091974904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078558496 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111970119 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076808718 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093140878 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078245213 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095686425 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077197771 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.093189502 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086657614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090187013 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.076708416 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095199705 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077158813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097969 seconds)
  done (took 2.621364909 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.2183901 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101441538 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140363527 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111123526 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096509808 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.109713359 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.098752581 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085873928 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100207071 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086946739 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102760206 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083440966 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.112494665 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10208919 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086149609 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10389691 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099111206 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087207026 seconds)
  done (took 2.619767019 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092619532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095892509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104146397 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096603338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079544379 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098231641 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085275101 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111823305 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.097464047 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.079718115 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.106411589 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081834956 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09802473 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079307966 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09715397 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079663578 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097578459 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080050789 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105885315 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101770546 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086838449 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105988175 seconds)
  done (took 2.759158243 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095467577 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097425146 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.111702066 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.099189741 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074751887 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.095151185 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086672048 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095913608 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10397389 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.081635218 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095226848 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.078348752 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.101718381 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079200059 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102144995 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08001713 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098158654 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079610197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098511567 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075546008 seconds)
  done (took 2.527990342 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122476829 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111820024 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095119523 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123104615 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112602288 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096342137 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122969383 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111308038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096934382 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125120785 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09551807 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113305374 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122969286 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103227872 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111767674 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122755031 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.106213089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122929988 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112589548 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096151089 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125883848 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112263887 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10654302 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112614364 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095119885 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112597598 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112843107 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103125608 seconds)
  done (took 3.807817936 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079585168 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078623344 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093767262 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.076555796 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.093585245 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.076292299 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092756125 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.077122104 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078487733 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093340997 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079035611 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.095060025 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078778549 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.094619506 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079316188 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.094559468 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079381018 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.076192251 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093165899 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076509052 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.095202634 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079413189 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.094787627 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.077006415 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0766924 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09525954 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076051094 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092691405 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079297991 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092906304 seconds)
  done (took 3.249764095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088187859 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101715047 seconds)
  done (took 0.891488453 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077903901 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112383615 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076701395 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.099481167 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085649695 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.096708847 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.089996191 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102193539 seconds)
  done (took 1.443361349 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.105058885 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.116602349 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085372838 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107872546 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.098964961 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.115860646 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164005214 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086391149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.103617557 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08096363 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116381114 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079546362 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106954802 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101113501 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089356389 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11188884 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077958724 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.106886876 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.088055399 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098888181 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08626195 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113376632 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090583048 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104389072 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082530253 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108224442 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109908788 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.092362813 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102252901 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091842662 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.104870869 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.074276598 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.101630295 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.086448207 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.095145352 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098338642 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114502359 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085458521 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107711104 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086144673 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106768359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.075728635 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107493181 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103142834 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09314695 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102009854 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.087711176 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.0921821 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081500237 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.10043784 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.076780858 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100387847 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.075055977 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106317334 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.089937593 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115187183 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083568323 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101368154 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085636683 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.100596045 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087615984 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101499492 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10684379 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084645285 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115326603 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.09015573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.105468543 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076292644 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.090324924 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.078698491 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105848514 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105617145 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108661058 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086072426 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103160606 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.078474772 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103236091 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087524454 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105062013 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.107254628 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.086235181 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104436478 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091289489 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100204764 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084667113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103984265 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083494427 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10026041 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082419679 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117397215 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.082678119 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095637626 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081064835 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107876097 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084695919 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101058888 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081080111 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107005323 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074396923 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102714574 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085944501 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103632335 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094594926 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103347223 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086403374 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106301886 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.108886907 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086358253 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.100520952 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077754411 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103055643 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083169924 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.105540331 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.074761992 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10246779 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084497362 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1019959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091710577 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.0989303 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085355025 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108374501 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.092271016 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100303318 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.077944708 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102057315 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085456519 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107262596 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092016807 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100550262 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076857255 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093460307 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.090292805 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102227599 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087645362 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103184695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085505369 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093303494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.078678112 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103383894 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.090497287 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101585489 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.103407883 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091495263 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.103676761 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084672668 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107750296 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.083775577 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097666767 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091091791 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102013773 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075903769 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106360165 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084856888 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.100045978 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085817538 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106825775 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08562852 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10326753 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083462627 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.102669557 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086212743 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.097573249 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086353803 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100273532 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09345535 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103019653 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076384825 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095142512 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087314038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098889632 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084493763 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098500469 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085380831 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104272301 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079672326 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101209993 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084802649 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114452594 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094580354 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105067482 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106073694 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.092882886 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10215826 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.088320281 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102019437 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087847972 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103070452 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091263246 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105772609 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087420633 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102939534 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079953227 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104656938 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091683897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.098877346 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080863134 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097867412 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086317783 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109591736 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086476706 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104259019 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083561515 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105741789 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090725226 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102360713 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.086123133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099306941 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08652221 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.108195003 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.088288367 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105481047 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093605455 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104985518 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077180051 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107479888 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08348223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107878255 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077113079 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099548488 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083003525 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104938194 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084423124 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.102034833 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.075796249 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10840582 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091975132 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103274396 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081862157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103673356 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095035217 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101897516 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105721709 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087307569 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104948268 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100193958 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099163917 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086323469 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111021959 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08626279 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.092998656 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088575469 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.10119586 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081551966 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101325231 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08404497 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103382802 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089223875 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104189381 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.075705644 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103228181 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084570671 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099336829 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07922462 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10803027 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086471709 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102649544 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094999559 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105080592 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.086662853 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105302822 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085216234 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104547729 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087036707 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10511391 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086708515 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.101548301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082132312 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103985928 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081196838 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.097108521 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084907697 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103755898 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086150043 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10544036 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084365548 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108737022 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103085832 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087494884 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.121209932 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082974681 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099732013 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086703271 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106457982 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.102495049 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086559854 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.094749114 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092539649 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102678071 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092912139 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102508817 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.078574491 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.10398439 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086413688 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.104949068 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08779843 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104658341 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084641239 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102843388 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.086409086 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112842669 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082794019 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110341361 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089215235 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105795803 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086056701 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104058445 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084415933 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.09863311 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086013756 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.105321145 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.087166936 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102340195 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087909718 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104482112 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.084820601 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102051081 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087110298 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.105543292 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.105612379 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077220965 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081883199 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.099609214 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086264184 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107193583 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086786367 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.102601894 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084085874 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105362332 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.085009048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.09559159 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090820369 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106224898 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087136008 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11276229 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.099208118 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087022163 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114010415 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076992202 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102166374 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081312005 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099736193 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093557887 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104649241 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092778092 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.104381073 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082471697 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095796109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088507704 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102220534 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077080713 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079991831 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107526279 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083526384 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102399143 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086812497 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.10767133 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104699645 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090161462 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102072107 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086549375 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104093453 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079370001 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100122676 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.08321247 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.103037667 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.08805331 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099433101 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080065916 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08656758 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104210441 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086386755 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10378293 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084520475 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109815046 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103285408 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087486507 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108404373 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077804956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104347211 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086310517 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103803452 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082937415 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.104471161 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088728172 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105642265 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.092740431 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104150761 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089806382 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104041509 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08140891 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.104017999 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08697968 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104600374 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083047663 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105918896 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095168932 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097430623 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088187744 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105040812 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084007558 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.105265251 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088450432 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.105140981 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090401857 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105183854 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08754141 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.10771873 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087357643 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10516221 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087867224 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.102739669 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090771724 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100774917 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093758843 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10566869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105393233 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086376671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083221738 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104133346 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085679304 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102986056 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109633186 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088440427 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082679132 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10011624 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080417316 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104238058 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108186905 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093722069 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104306731 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088324139 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095662169 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080035087 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105849835 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083644774 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103054312 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.08989085 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10902817 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08701383 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101044608 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.085481065 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109585702 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092138686 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107736482 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083536315 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106771558 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.088471876 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105084156 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084773852 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103748211 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088171995 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107406241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084827403 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.10053578 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095706431 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10949619 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105585474 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.087066004 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107705731 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086793315 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094789205 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089312078 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104247379 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09000075 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104536237 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086449896 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114610675 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082599766 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104023721 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094834073 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103641914 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092013987 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096253059 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087268088 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106476071 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08774667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096395338 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082532107 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101652722 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086736736 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101006173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078656298 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115312908 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.110018793 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088384693 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102942886 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086368862 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078394668 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096813719 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083253286 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107435511 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085764178 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113546705 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.083090512 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101079327 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078079525 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105736867 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088572395 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108715343 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079507897 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096995979 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084095336 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106756634 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094502518 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10378733 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.086126389 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106933179 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086695997 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099687452 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109094463 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080216984 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08757054 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117282684 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105488113 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090632331 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.10835447 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094308826 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.106367892 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079063657 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106542856 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.088105988 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106684652 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088558955 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107353795 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118762668 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088830013 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100537928 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086577361 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10462875 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.084685866 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112337751 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089199831 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.105727688 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.09018227 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103734432 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090195407 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1125249 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089367818 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.106028776 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088642816 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.104152557 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086279715 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.103784889 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.085147558 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.108393303 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08856317 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105229143 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.089280545 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102051674 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115139278 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094996461 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.106724437 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080414641 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.100773837 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085025407 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078206802 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108189752 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.080734288 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102841705 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085085226 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103037924 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089523009 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108044941 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087432036 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107134731 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087163229 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095375674 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.090598014 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106824014 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089673607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099484589 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.087777164 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.107284272 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092448747 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111773421 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102791071 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089016752 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.103730658 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090614147 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096146925 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091552374 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103511139 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087168202 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082683097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106634569 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088408928 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.1081365 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106365879 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090455732 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.105356976 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092879042 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107960776 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081105601 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.098173305 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091585934 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09929779 seconds)
  done (took 57.740699415 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147903997 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086079674 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096582351 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079228094 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122455778 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080234923 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096669914 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080777749 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.098347389 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092525129 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097585796 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078709147 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11976882 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125242424 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121874862 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111421853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079600054 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097980816 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079715229 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097857791 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100207946 seconds)
  done (took 2.840235653 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104530907 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116263451 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114042397 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100812838 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109225568 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114695717 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094680398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116359438 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.119060021 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108790143 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102086002 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115236207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.108758308 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092267549 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110156005 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110459329 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.101557736 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108236861 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115311399 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095793309 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112687258 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.113293877 seconds)
  done (took 3.135997462 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.092439356 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.086568429 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.110816756 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.080677965 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.10459453 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.081035827 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.11010985 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.08291437 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.109732786 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.087418002 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.102380386 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.087788239 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110459472 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.081690224 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.103687121 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.083756205 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109584732 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087318598 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105961904 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.081329286 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.125296705 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098868798 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.082685137 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.084059107 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11503956 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087280738 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.105640131 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086255339 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.101998146 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086491703 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.101549736 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.089111324 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10990183 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.084070018 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.102944384 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087076227 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106001418 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.081592564 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.102696056 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.090631572 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100428576 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088528023 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.113015052 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.083792153 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.101472434 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.089345895 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105142931 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.081469392 seconds)
  done (took 5.344530986 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.121886325 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.155812556 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.094798018 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.152156886 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120983288 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118396496 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089792365 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145654729 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103954102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.08704462 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12292362 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120158221 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.088320334 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.114512408 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093359407 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107114888 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106962368 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.091843166 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114924891 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087884739 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114747799 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.108776146 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101817576 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118190012 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110853549 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.088022009 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104759439 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.096108796 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12015216 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112023887 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.092754672 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114236157 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.124462343 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090757008 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.108345621 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10796554 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.103497406 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106815467 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090621807 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10441951 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.107528877 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.097172443 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111799021 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.122185769 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.089291936 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107654334 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.093629325 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107350372 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119252979 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.091557123 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115615442 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119658752 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093047376 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107162554 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.093351482 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.124122065 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10875981 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086103047 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11045927 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117164009 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.092202561 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11178712 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.104604443 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.111768744 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114529762 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100169859 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108491608 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109763388 seconds)
  done (took 8.231752728 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094891255 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.130006769 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121567542 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104319553 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111898641 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110881364 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093945221 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.11121571 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093150971 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118638031 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111087877 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.161613737 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087451925 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117806004 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09233332 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112397913 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110949906 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093818403 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.111310491 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093080695 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111371415 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.122255417 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09339317 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122351853 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123864163 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.10391321 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093801887 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111051672 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103619939 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113104727 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124926141 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.110712665 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.094060807 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122331457 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.12455553 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.094150302 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102302221 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093141253 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.111589544 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110777613 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.087388222 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12277026 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093096695 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106151143 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111080911 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09396646 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12228236 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124202985 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116720793 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100734088 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111474647 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121876479 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093956134 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112047804 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.122041299 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.11199896 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1235197 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122820071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112388362 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105018762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.123774828 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130886606 seconds)
  done (took 7.603051347 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085221607 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.083919319 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.101156854 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.081777356 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102940387 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082339722 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.102749493 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084987247 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082826586 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.103721226 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084043622 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100313631 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082042483 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102007419 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082665523 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099804736 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082940707 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08146259 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102851352 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081821202 seconds)
  done (took 2.575050981 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093530873 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123231016 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085373988 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111395203 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086836801 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111665963 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104450361 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088797976 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10362063 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089029673 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115158832 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096414361 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105092323 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110070261 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098208971 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11160969 seconds)
  done (took 2.402669456 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.107017475 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117114381 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12872915 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091160779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102209212 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.093603469 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104444219 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08139098 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.100091821 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.095220588 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110440549 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.096322066 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105094802 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083440276 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104446808 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091077787 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099809134 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090298677 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103518751 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.110410035 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.109867913 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106915706 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.086318592 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105471199 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088915532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110259482 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.092566354 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101477507 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083700263 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104767044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087647139 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113110172 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.081186687 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110209204 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.082806413 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.101487902 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084864843 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.104726605 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090301756 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104828666 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08262626 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106832943 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084310822 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105950025 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080362158 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.105885987 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080446082 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111253685 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.085961412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107470052 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103063705 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094478945 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.110619011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097948277 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.113449984 seconds)
  done (took 6.205599912 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100693293 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107193878 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090231804 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101141868 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088642408 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.112880329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.088905789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.106849304 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086601191 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100959094 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087394286 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.108058361 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08714776 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108280636 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087586858 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108753901 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079870325 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105493846 seconds)
  done (took 2.52692423 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091494649 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103237361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093773076 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.103760069 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086346732 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086970532 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101026161 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.082890132 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103384729 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084623703 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104621105 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087100441 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102103798 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087838072 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104349434 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084863313 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105614257 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084310746 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103811553 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08101918 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105974601 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.084022665 seconds)
  done (took 2.844091946 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.103290915 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.13632741 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.099162537 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.146938309 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.109253811 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.08922895 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.118602632 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.089518974 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.12709862 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.107797381 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.089432049 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.10741906 seconds)
  done (took 2.098733264 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112635024 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143894779 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083235195 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107584325 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116643774 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091063761 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109403344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091118019 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121986784 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122604415 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090138125 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122168732 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121200535 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12074508 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098052845 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117724823 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109206563 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091420221 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105880672 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130704431 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091693418 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122321061 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11003697 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091852122 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109687201 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119563919 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103260429 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123533469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109935678 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102004354 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118715944 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110442174 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102481091 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12372873 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107056236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120921548 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09212169 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131765674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117670822 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101178346 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107889509 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116596717 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103252766 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116658654 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122134857 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090190406 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117311029 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109810416 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091321778 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136940134 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118503318 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120617385 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097573472 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122126167 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120726592 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137502894 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123623964 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120289278 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099747867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122709676 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120632951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098227265 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12144296 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12273669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117602235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121947417 seconds)
  done (took 8.191094841 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126643221 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105112903 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090485333 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123769673 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121453588 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10929183 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091880403 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109990002 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091020929 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107466224 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156619926 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110159039 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102328646 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121287774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109489562 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091767864 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110556664 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119959328 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087997544 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138454042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110429418 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120951675 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101815454 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121502339 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12367355 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116686099 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091408325 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109790972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091087405 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110138561 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116508393 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091156197 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120995218 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102582139 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102035618 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111077759 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090907185 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11895021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110599585 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098095543 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122350361 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131266728 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111057413 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091206597 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123953276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109573714 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091416105 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106397045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091320263 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106981584 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123404779 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1222743 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104213205 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120626771 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109958944 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091668573 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111161129 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108915073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091768121 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117777561 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12083437 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092602479 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138035527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110400407 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.091101549 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12157317 seconds)
  done (took 8.028310223 seconds)
done (took 153.552064661 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.104918927 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141269653 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10010343 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168034633 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086149916 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139898479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118807842 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.12185966 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.085311768 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.104862435 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.085984764 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.108651531 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151033425 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.105640692 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086090413 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107908195 seconds)
  done (took 2.592843947 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180847263 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.281681645 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104742869 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.110502876 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092259882 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108643948 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.089562515 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.112859171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.086942401 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.118740463 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106444467 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.089241602 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.118169192 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088966932 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106814425 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088647782 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.11760034 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088576436 seconds)
  done (took 2.874784288 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111419961 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.147141724 seconds)
  done (took 1.045261054 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122551257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18426303 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302479055 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.161180272 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.115855094 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129626475 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.162216123 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124155902 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.191700284 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.126983232 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.107066007 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.113258201 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135709553 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099126847 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11658849 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.092871138 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139326795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114316688 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095831644 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.113108872 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.113653176 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.114251505 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116244228 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095668045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182203918 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.127258455 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092654751 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.114635381 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112927654 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095142986 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.117665241 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125991473 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.107662753 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.18645101 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097875551 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.182348317 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101157471 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.111181036 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094513591 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.112031628 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114344488 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.096575177 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127626287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.091915367 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.114257682 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119416242 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.094986362 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.112985951 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100398966 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.121838297 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119951305 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.098603263 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.182563134 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.101031695 seconds)
  done (took 7.527186134 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.823137008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154480287 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111503392 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.928327884 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142658577 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125190173 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.822779826 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.112422914 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.26049085 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.05494974 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.129677785 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12520199 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.208397821 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.275941818 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.143771586 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.33399106 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.701927558 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103285577 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142159492 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154569109 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118831441 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139285341 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11007433 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413163738 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112063115 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089586575 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117543463 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12413581 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163505224 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.089647271 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115809907 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.182956995 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287284634 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.18495 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.112489408 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089099421 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110684875 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171143088 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270184546 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216193493 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173880941 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087952875 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109164696 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104459069 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132109429 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086137647 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187325356 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176240343 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174845322 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115462291 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122806594 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.099174504 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122676368 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165023079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108443741 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.333231673 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318437593 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111796793 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118560388 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.110081728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266129396 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.109994097 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.202621649 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139064304 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212571207 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089237633 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814641053 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169329033 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110926519 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099466492 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119489827 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116488832 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101002919 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167805073 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.378357857 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126368984 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113795809 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090218206 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224887042 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091455884 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.109634659 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167293641 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091910786 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120022281 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126616765 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10397154 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.194324546 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252904274 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124805418 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102000671 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116263215 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122759566 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.093249915 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21671651 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216176407 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16154636 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234540848 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102347456 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.188351813 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169013929 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122892971 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174648859 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118285996 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108417666 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123624934 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214099867 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145487038 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.091304977 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116764904 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116242671 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.127920113 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115132454 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117321394 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.171442054 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.442604851 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18728776 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.089740653 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094018901 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120713894 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165082068 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119081241 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260741012 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100074264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189885212 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09817416 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.10756882 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.099223841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.188002151 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105019509 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122564892 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124230836 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.100638259 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.272115267 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.200876345 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127953452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.234360459 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178209711 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.101449602 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195303283 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099761427 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171532591 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122499282 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123102331 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.091915343 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805100849 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.124845534 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097952461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117312891 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.192950956 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089889579 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113393598 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089889073 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108855458 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782269113 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.115812925 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.087953615 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.112893202 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100321772 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119716035 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11756774 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09572078 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183286561 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232925599 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104342465 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119326621 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.090621006 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162582886 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.113375479 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.110075255 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.093431593 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.091100193 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122394064 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115584489 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.093690331 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.174374617 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.182053737 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218404727 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.51204765 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110557004 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.091528574 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229610474 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089933194 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.305733927 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119071093 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.224635297 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171676358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.087325216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.337279158 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.192940198 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.191158069 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.095107613 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174364003 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109754961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09648258 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186327005 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090424278 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118936888 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161966546 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128953814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10552351 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.15441328 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11228444 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232128729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.107663119 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173111645 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.092499188 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124056328 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.30734205 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09107111 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133810096 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164491867 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116338237 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.09109875 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.609770087 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.091423701 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122499409 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121313281 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222178014 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.170282658 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097988824 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121249698 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124571975 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168075391 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213833515 seconds)
  done (took 44.466556109 seconds)
done (took 59.288357441 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301307732 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266616809 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303668842 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198032422 seconds)
  done (took 1.95411306 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180152701 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154932146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128744288 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.111070736 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.157088564 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.089928817 seconds)
  done (took 1.633920303 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.478399234 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.372633417 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.340320594 seconds)
  done (took 2.005990304 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.256382759 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.283687969 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.358924614 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.444364017 seconds)
  done (took 2.262324978 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.205844552 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.127163911 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.102300196 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.140773895 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.173827626 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.17716638 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144755502 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.153534929 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.131613999 seconds)
  done (took 2.216445945 seconds)
done (took 10.887151695 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.187676889 seconds)
    (2/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.283331336 seconds)
    (3/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.175094297 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.312165984 seconds)
    (5/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.252848307 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.227290712 seconds)
    (7/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.16482966 seconds)
    (8/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.196802356 seconds)
    (9/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.086653713 seconds)
    (10/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.133869712 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.133338389 seconds)
    (12/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.177913281 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092828233 seconds)
    (14/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.261453983 seconds)
    (15/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.168362865 seconds)
    (16/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.278929702 seconds)
    (17/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.192332248 seconds)
    (18/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.233178716 seconds)
    (19/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.153884006 seconds)
    (20/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.260538648 seconds)
    (21/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.107928912 seconds)
    (22/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097279395 seconds)
    (23/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125941336 seconds)
    (24/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.253531916 seconds)
    (25/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.0769757 seconds)
    (26/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114284867 seconds)
    (27/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.077093868 seconds)
    (28/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.167651074 seconds)
    (29/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091732854 seconds)
    (30/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.155845453 seconds)
    (31/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.097488111 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097300696 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125395419 seconds)
    (34/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093684884 seconds)
    (35/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.224782666 seconds)
    (36/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129805637 seconds)
    (37/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.216605174 seconds)
    (38/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.215402071 seconds)
    (39/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.272605374 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.141410031 seconds)
    (41/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.105086475 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.124820441 seconds)
    (43/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.091857608 seconds)
    (44/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.180859328 seconds)
    (45/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.156650682 seconds)
    (46/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086141236 seconds)
    (47/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.193943919 seconds)
    (48/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.162276229 seconds)
    (49/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208702034 seconds)
    (50/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.202233575 seconds)
    (51/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.219504566 seconds)
    (52/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.088340631 seconds)
    (53/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.217863999 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.14340621 seconds)
    (55/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.077144675 seconds)
    (56/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.197137176 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.148203811 seconds)
    (58/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136249975 seconds)
    (59/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.09398777 seconds)
    (60/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13876579 seconds)
    (61/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.114531088 seconds)
    (62/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.192908511 seconds)
    (63/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.113941885 seconds)
    (64/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108289119 seconds)
    (65/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.124766559 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095775479 seconds)
    (67/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.157633824 seconds)
    (68/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.077306257 seconds)
    (69/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.118555655 seconds)
    (70/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.160576151 seconds)
    (71/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.080847274 seconds)
    (72/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.113363876 seconds)
    (73/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.132335644 seconds)
    (74/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.201235975 seconds)
    (75/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12455474 seconds)
    (76/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.207218869 seconds)
    (77/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090867776 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.144729957 seconds)
    (79/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077518118 seconds)
    (80/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129146631 seconds)
    (81/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.075400362 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.145111147 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.146571733 seconds)
    (84/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.16348031 seconds)
    (85/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.093441864 seconds)
    (86/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.162834572 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.102374319 seconds)
    (88/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.194382343 seconds)
    (89/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.21739284 seconds)
    (90/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.146881895 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095614634 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125041447 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11799052 seconds)
    (94/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.096819465 seconds)
    (95/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.098973437 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.097038015 seconds)
    (97/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.128154871 seconds)
    (98/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.143504917 seconds)
    (99/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.119659558 seconds)
    (100/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.129455576 seconds)
    (101/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.144640724 seconds)
    (102/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196561869 seconds)
    (103/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09853504 seconds)
    (104/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.173682886 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119302803 seconds)
    (106/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118267379 seconds)
    (107/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094923536 seconds)
    (108/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.208212677 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094318139 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.111505933 seconds)
    (111/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.085070182 seconds)
    (112/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.099507616 seconds)
    (113/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.077985234 seconds)
    (114/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.110277825 seconds)
    (115/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.104895873 seconds)
    (116/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.130198737 seconds)
    (117/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.125860949 seconds)
    (118/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.099213913 seconds)
    (119/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.191933479 seconds)
    (120/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10388883 seconds)
    (121/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.124215016 seconds)
    (122/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.077730421 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11755781 seconds)
    (124/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.097114341 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.076759052 seconds)
    (126/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.115670436 seconds)
    (127/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.076596016 seconds)
    (128/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.140463805 seconds)
    (129/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076977331 seconds)
    (130/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.098961443 seconds)
    (131/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.085264224 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.118134057 seconds)
    (133/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102034414 seconds)
    (134/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.190551888 seconds)
    (135/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.099410462 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.078853541 seconds)
    (137/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076662107 seconds)
    (138/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.100061274 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093193903 seconds)
    (140/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.099279307 seconds)
    (141/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107950129 seconds)
    (142/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.115512082 seconds)
    (143/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.077043635 seconds)
    (144/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.135786776 seconds)
    (145/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.191070534 seconds)
    (146/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.078466799 seconds)
    (147/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116864887 seconds)
    (148/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166297803 seconds)
    (149/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.100424481 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.148916472 seconds)
    (151/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.178463917 seconds)
    (152/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.101038357 seconds)
    (153/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115892955 seconds)
    (154/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.10014095 seconds)
    (155/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.085878085 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.131905617 seconds)
    (157/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102761281 seconds)
    (158/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.107807527 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.106039289 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.099409918 seconds)
    (161/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.104035938 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.098934572 seconds)
    (163/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077855998 seconds)
    (164/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.193430622 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138731358 seconds)
    (166/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102647205 seconds)
    (167/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.098456966 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093775233 seconds)
    (169/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.098845345 seconds)
    (170/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.101313269 seconds)
    (171/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115172747 seconds)
    (172/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079330178 seconds)
    (173/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076845375 seconds)
    (174/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.100454573 seconds)
    (175/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.190524808 seconds)
    (176/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.134022589 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113815335 seconds)
    (178/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.077077981 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.127472263 seconds)
    (180/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.097880107 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11862971 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.117660453 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.077663292 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117560576 seconds)
    (185/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.091368728 seconds)
    (186/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07694402 seconds)
    (187/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.100244788 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.090366637 seconds)
    (189/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119097977 seconds)
    (190/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.090126476 seconds)
    (191/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.098693452 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093959658 seconds)
    (193/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.098890476 seconds)
    (194/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.07793545 seconds)
    (195/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.114120936 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.105831369 seconds)
    (197/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.09896421 seconds)
    (198/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.08708605 seconds)
    (199/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.123851534 seconds)
    (200/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.078842534 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.117850344 seconds)
    (202/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079172635 seconds)
    (203/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.077025098 seconds)
    (204/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.099427118 seconds)
    (205/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.119502507 seconds)
    (206/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116865437 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118394373 seconds)
    (208/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102478877 seconds)
    (209/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.154366512 seconds)
    (210/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098669659 seconds)
    (211/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.099041748 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.10535817 seconds)
    (213/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.116522089 seconds)
    (214/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.077566337 seconds)
    (215/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099053133 seconds)
    (216/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.096895208 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118442989 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.117890692 seconds)
    (219/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.115769349 seconds)
    (220/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090877469 seconds)
    (221/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.132219697 seconds)
    (222/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.078596849 seconds)
    (223/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116165511 seconds)
    (224/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.086806421 seconds)
  done (took 29.784236585 seconds)
done (took 30.601373748 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.394487865 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.12943311 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.123577819 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.101246149 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.143145987 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.104347716 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.125430757 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.103898933 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.122388422 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09152202 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.114681661 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123662807 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102106262 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.141015957 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.103471631 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116373403 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.09390459 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124890508 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100669672 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126854367 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14333807 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095229062 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.122284362 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.093701808 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143583912 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095230657 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12339855 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.101904824 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122588108 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091998146 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125014138 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.114522748 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.103815866 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.126506413 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092606306 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115763692 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092619227 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105689248 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094265022 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.116937509 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100297181 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.115371423 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.103047634 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117399836 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.095145472 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.11473938 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091796882 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.126917229 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.091253457 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.125418959 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094478216 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129296011 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.113188667 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09272843 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.113088148 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.094991035 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.124911434 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093286191 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124489917 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092853166 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.115585432 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093100433 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118890297 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092395982 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115920577 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094478451 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115609353 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095581348 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113402346 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09506337 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.11399104 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.094366438 seconds)
done (took 9.080342246 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.097834081 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170182401 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.146294529 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.125056412 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.143559521 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.129799767 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.105946762 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.138688091 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.124506889 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.116173529 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.14174455 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.136986374 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.12919888 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.122081814 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.129778568 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.096962242 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122164219 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10453695 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.150359663 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.139124154 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.146496744 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.099818798 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.144007242 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13608256 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.101153891 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.150469059 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.101013145 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.119108136 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099219004 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128924513 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.138646352 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.100619553 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.121879309 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.111757174 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128744708 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120391851 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108362909 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118604382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.098197919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.119229155 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13096389 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.112513263 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119515889 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.107041005 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.119006322 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.10035213 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.121706814 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120368785 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.100992119 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116615182 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10177147 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.143097281 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.121082025 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100180087 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120818793 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.101484885 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122083348 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.101636312 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.123302109 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.100365964 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.120351452 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.121135678 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1016748 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139579225 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.12181487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10106231 seconds)
  done (took 8.811547882 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.116179111 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.15288312 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130141648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108590703 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.125864061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089911879 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112405899 seconds)
  done (took 1.706196241 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.092454561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143245601 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.124340286 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.146884007 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.135567262 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.128642412 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131226345 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.090993635 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.138819922 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.124062154 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119838244 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.169636794 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.115655938 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.10366294 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.148999263 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.113049712 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.127328837 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114058536 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.100256895 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.147526129 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119396229 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.114968534 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.127897233 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092424278 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.135813517 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.093846052 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.182681152 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.126271014 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091997988 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.12111135 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09685236 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.207216643 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.115263725 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125345029 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090918798 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143796435 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.113514426 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121009074 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141513245 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.098182115 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.136923953 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.098683391 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.122513367 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120438897 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100073922 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129169676 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.104614804 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123161907 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097975767 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.143167016 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.125311873 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115489977 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115911613 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.097088722 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.124821136 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099029842 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.129017558 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09725122 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.144058969 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.122464399 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118454362 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.141706051 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136048857 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.119372487 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132394941 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115020789 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138029484 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.120783498 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10076173 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.123010447 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.118673307 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.118816705 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.125392541 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108698105 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123266678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120802121 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142414169 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.096918632 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.128699034 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.096084931 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118051422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092431674 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.131868909 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096299939 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118332083 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.132552998 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.105028234 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.120910893 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.099229869 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.138393487 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11912072 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.104356287 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126397242 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096214606 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130607707 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.142768537 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.103161924 seconds)
  done (took 12.595065358 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094066757 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.093393526 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.121780513 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116161439 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.09466437 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093955616 seconds)
  done (took 1.492899504 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.123340642 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120857476 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.110578282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.125745301 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.175992195 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141451889 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.122725109 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125532507 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.140517188 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.111214864 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141125303 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.14363029 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.119451619 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.126267929 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.12145556 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126245429 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.144908736 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.097549175 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.132481121 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097519918 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13278023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.126338485 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098634803 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138248906 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.103046865 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.125204324 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102409645 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.134023731 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.131431448 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10309754 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126159292 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102144769 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12404299 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125296022 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.121790712 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.123070757 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120445995 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.105876087 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124249141 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.102804993 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.144119044 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098216253 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.13215816 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12840524 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.102696336 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12452549 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.127801206 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103698611 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.14482095 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.104550603 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.129497981 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124398468 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103359041 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.128743092 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.101470544 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12573568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.127665822 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12308788 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12806179 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123766423 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.099936888 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12601441 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103383194 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.128908896 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.100046988 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.128571651 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.123435052 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.101974709 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121457829 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.102098456 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.128961676 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.099728263 seconds)
  done (took 9.593408409 seconds)
done (took 35.065139453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.260300983 seconds)
  done (took 2.131915866 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.836734012 seconds)
  done (took 1.711332346 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.231460646 seconds)
  done (took 17.138802705 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.505598015 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.595246126 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.960576387 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165857214 seconds)
  done (took 3.103443832 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.951168771 seconds)
  done (took 1.845003744 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.311585682 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263179336 seconds)
  done (took 1.456971579 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.796926414 seconds)
  done (took 1.684485229 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.27756737 seconds)
  done (took 3.165234328 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.351003434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.202822278 seconds)
  done (took 1.450604283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.580267346 seconds)
  done (took 1.472333136 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 34.801446732 seconds)
  done (took 35.69752257 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232520929 seconds)
  done (took 1.13883951 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.301999033 seconds)
  done (took 1.196249683 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.40052738 seconds)
  done (took 4.296942064 seconds)
done (took 78.374188526 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103967635 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.129344941 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.108058662 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.127309422 seconds)
  done (took 1.358222512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108390194 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123795867 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.105510854 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.124520424 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109208222 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.124667007 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.099743567 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.132028623 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.100811497 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.127612266 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124309606 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102087323 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126228748 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10005721 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.122639562 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.102535389 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127353622 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.10021139 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124980186 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.101735151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.124678808 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124945187 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.104276747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.123997737 seconds)
  done (took 3.664327683 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.104017746 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.096901459 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.123932154 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.097274366 seconds)
  done (took 1.320556338 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.109968792 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.139414648 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.113645322 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.132366674 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138704767 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115133091 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120994967 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.097314415 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.122976451 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107939166 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.121312713 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.116631484 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139969442 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.115554357 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110610924 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11334832 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.093827556 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138741343 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.108470115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.13305002 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.097177751 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.131763263 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.104861329 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.136430458 seconds)
  done (took 3.765794379 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.173331797 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.135448993 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.144784402 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.168862947 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123357831 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.119646723 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.121924656 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129238145 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.124425622 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.097139106 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.119869621 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.153183643 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.126274154 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.12397484 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.097898269 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.126416066 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.104054724 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.125848273 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098986681 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.135113413 seconds)
  done (took 3.455850664 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.105076053 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12009799 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.094196191 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119322721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.104509933 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122756535 seconds)
  done (took 1.573817271 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093928878 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.092693841 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.11585798 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091964332 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121074078 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092315829 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.114014065 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.093812361 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091880162 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.117263398 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.091868589 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114903073 seconds)
  done (took 2.136168078 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.217051236 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119590216 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120970691 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098784766 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124976301 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.09586729 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.135384241 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.096050454 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.175155 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.121263199 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.111528791 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.173077378 seconds)
  done (took 2.495299744 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211057945 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101993607 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265014619 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371050552 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137306867 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169253121 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.299251411 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169718466 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.18944032 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11556693 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223093419 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13539413 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157955326 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181167889 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144027176 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188048216 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177717797 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203032823 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151423036 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207879341 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166945614 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170574266 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184469888 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155665907 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140950556 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161314608 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.097399137 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131340376 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177453836 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173081119 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175687658 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151666316 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140933278 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203556849 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216099706 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203065321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.304532577 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136991135 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.187250909 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.188305519 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243346084 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143999015 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19559471 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157833958 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135041554 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183517199 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159948261 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.182392695 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134533049 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11969466 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210164475 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178944748 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.183984319 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115595053 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.322140087 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148540015 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.124697785 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182439082 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21538932 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194006371 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170365585 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.101663659 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211765329 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18619544 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183793432 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.12289249 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.169356803 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129456811 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178264304 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198965765 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179649376 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169048277 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210239682 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135857892 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141388046 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174414605 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15657086 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181712765 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163525785 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123516617 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128777651 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139635855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129778493 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.164130065 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128203517 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206468498 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138710926 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.187647432 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20934234 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161985746 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163257373 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166577169 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169624597 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150625914 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.097076917 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148704964 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.165151525 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159950565 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133964404 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136294081 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147673561 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129576473 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154464914 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.103053568 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162210929 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136895637 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170840915 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16610804 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.107484272 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168599838 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153550403 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.162928748 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173805367 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190445514 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134578166 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111084028 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196437332 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161930638 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139599888 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180037249 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190287632 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.167339192 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139184349 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17262027 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19800133 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144698584 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190563571 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120604649 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136035875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.1535277 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162384351 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159660235 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158325077 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107420759 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.155561634 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195201469 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.130776297 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114705631 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175496451 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129775852 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130316301 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122422938 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140066312 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145357342 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127954393 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.141930851 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158454907 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162113371 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157280549 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160772079 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144330481 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196203339 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13569412 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.139681818 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150943291 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120991209 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.182906104 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188497149 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106993939 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187389031 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19619143 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199359939 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166128369 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107608509 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184855389 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134971883 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.12274578 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16797849 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138896424 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16577327 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.209608722 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196362581 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.170091483 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15666103 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151378365 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170725885 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.178752046 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15746643 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.123027471 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165360547 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168740067 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.126757873 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.101199661 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.130726534 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143020094 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109286785 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136444212 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18342672 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167137155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192013571 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163471099 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142973022 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187144397 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129053637 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168478072 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.174810212 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116655225 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.187598477 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209405846 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144794065 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145708607 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172752177 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.124393816 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102794697 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.136103326 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171128337 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135501221 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112418584 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146497847 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187457328 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178283738 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153116793 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204887815 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196339909 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196676804 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.099209718 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167762455 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173664922 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160597862 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.162164449 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134502458 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.165265976 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183400008 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147789786 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196500687 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167048217 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17201215 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202058276 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162368367 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135322241 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127450861 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17242287 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144819384 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166695489 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150602543 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111803706 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157534358 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.139901606 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129130057 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183581495 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145550088 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183208685 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.162138973 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17625078 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103099486 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146449339 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165064951 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148758955 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.095937324 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173427772 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216879438 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121021649 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162213066 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17708915 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135244734 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.314904763 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191488937 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212525492 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115539779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145946627 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165446265 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164041679 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166762008 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.187435813 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146962385 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183760241 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13752451 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.146838146 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138291191 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12468227 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155846638 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.155690578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137554971 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.156410401 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120124969 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212426218 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121887874 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163482761 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167293928 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151711982 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.158627126 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117334165 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205112428 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162393476 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181034321 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.160429328 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.171512109 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19035384 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129475462 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105058671 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131526528 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187481629 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109270538 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163911486 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212096129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201234225 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163833467 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172257086 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141543286 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102517267 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163392848 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152179286 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201459389 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145843768 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.139369391 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195548647 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153792231 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109051354 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166999318 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282644606 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148217146 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178204577 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.096442964 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.302837239 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106291019 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135527468 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164248292 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174100286 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.10964192 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185579576 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168172263 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148090831 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138608511 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142002285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194794016 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23739292 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174899414 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178720857 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147299669 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161734659 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165869607 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179416668 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121098108 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.150007355 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166548291 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186427494 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.188655879 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.135566666 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166610921 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139093096 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164969577 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202833374 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112623312 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190387361 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135615825 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169356016 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142339274 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10329642 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161853777 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18712439 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137283003 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178863797 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161681384 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108121095 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131400689 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154886337 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161986061 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120078292 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.134217909 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180355947 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.13280052 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165407545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185485279 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108849741 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161370745 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149469159 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108770913 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14525027 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148557482 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111122738 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.173484964 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186976444 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134205581 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18078399 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174857577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16852456 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162424081 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147675778 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.63999726 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131683035 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186716708 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15007113 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19006515 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125703393 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169584544 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163823851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153438488 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170706202 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153697599 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.223777533 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170384969 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.160914523 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108755056 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148312879 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148168838 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.108353133 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155670888 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165727311 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14423642 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.113571556 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.160293753 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150376104 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.149085921 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115224812 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187641296 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152046685 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184130035 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187777505 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145101342 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169810541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177813076 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134270809 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.164760872 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175931586 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118152413 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154743124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135495257 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138450026 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157835823 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.129153256 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165623873 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163164229 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164847802 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138829215 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.137713772 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164070705 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146190659 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16318997 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103070967 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158783025 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161714659 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133708561 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.10592402 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160688621 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163244524 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163101964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103527097 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.173687261 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185903788 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.101437849 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138523894 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283389993 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160859761 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197620704 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.156407636 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139265572 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121013106 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15789769 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.157052994 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163053687 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132067702 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110306307 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13490967 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.181366698 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.158285382 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135491605 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186668913 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16524901 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192173013 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.150745599 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.270006423 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115643731 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16128895 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.135303944 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105477186 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143771727 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139249224 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147669109 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195342268 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183481987 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.155758845 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.122495447 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131451411 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101452482 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138173756 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167427077 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158356006 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161572018 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119437942 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.121766319 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146729498 seconds)
  done (took 78.132424853 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.151298459 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.146870814 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151466769 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200626504 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.173369496 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26063584 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210672483 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232074469 seconds)
  done (took 2.521840074 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.106738308 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.140201758 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.146145321 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.127989763 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.128745223 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.349875004 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.14063573 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.104323413 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.188569152 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.141632653 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.126802199 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.616132687 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.099745832 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.130566339 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.118076649 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.127711658 seconds)
  done (took 3.781749405 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.110324896 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.519763942 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.70715476 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.245239449 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.228322797 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.158396616 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.708037896 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188025529 seconds)
  done (took 11.858265489 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.134808812 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147729068 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.262599006 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.179785906 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.164908329 seconds)
  done (took 1.891155285 seconds)
done (took 118.846446719 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101456409 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128950049 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.102536105 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131433541 seconds)
  done (took 1.452867553 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.115723206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.086591704 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.116953676 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.085727996 seconds)
  done (took 1.401296713 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.486003656 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08610868 seconds)
  done (took 1.606376426 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.127036021 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.141617982 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.123192798 seconds)
  done (took 1.402459446 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109059591 seconds)
  done (took 1.116632283 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.111566263 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.108294011 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.147194262 seconds)
  done (took 1.374513287 seconds)
done (took 9.3560357 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128835487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423694879 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.392220438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143529293 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724746861 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386030285 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.045659133 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.159266795 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169068761 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097587302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141876263 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677943497 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.030359281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.345872568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.015225294 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.345755198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705607376 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.099220558 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.130608025 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.098251232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.024967397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096127695 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124908325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098461673 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703654372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.401566688 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12462872 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37942951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097901388 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127043665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.387410328 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122160041 seconds)
  done (took 16.94005244 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141942399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184449162 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131968317 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099989884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.127211361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100058163 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.132315304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.1101483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183312561 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123771573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117024044 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123160375 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101783046 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.124397448 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11997989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12419373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.100006821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.126183048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.104402985 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126406096 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116721439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.123381734 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.099102318 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.126408166 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096870483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137274582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097361094 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136339225 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.097218174 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130798907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12939554 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.098640696 seconds)
  done (took 4.899063599 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.147343858 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.19380672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132740794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.132810041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173752535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125957529 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.210393537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.133263897 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18753237 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12487042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.116987753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125274695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161626596 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.098651186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.146305126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.097187386 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126704657 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.100213258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.13122584 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099650911 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14463896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096473632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.126505544 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.099451178 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124723126 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.111964411 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124426242 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.134837183 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098812785 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127715631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104562194 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123585576 seconds)
  done (took 5.200364933 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104940222 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.131095846 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115433955 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141487714 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.102501964 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.129933295 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105394626 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126629686 seconds)
  done (took 1.968465537 seconds)
done (took 30.010077018 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.119657505 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.136711319 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.112753131 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.133920123 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133438773 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.122457192 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.110066931 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.096225268 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.135235904 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.114198407 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.125374416 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.098654467 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.139193202 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.102694686 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.141563006 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.106966266 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.147366435 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113251023 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.126176956 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10779304 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.126083262 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.118798143 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.130946463 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.098518372 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.151168123 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.127194163 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.116898589 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.129407152 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.103898567 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.098838947 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.141923006 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.103590775 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.126802605 seconds)
  done (took 4.999269581 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.126811055 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.169676479 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.095646454 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.123013049 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.163917061 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.096839082 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.151803173 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.096720958 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.122514641 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.09728724 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.095495061 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.150069565 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156296765 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.128307164 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.171497422 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.15881075 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.123057728 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.16144074 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144969426 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.135575208 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.153025051 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.094971204 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.156768609 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.164013143 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.095968827 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.123306036 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.139449182 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.154972551 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.167316547 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.129392765 seconds)
  done (took 5.068534683 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107406367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.141312766 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.125182974 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.198750474 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.167313525 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.114380101 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139042403 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.11735321 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.154054833 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.098095671 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.137380567 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15657254 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115380222 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.136296747 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104053933 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140731718 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118578263 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.127621785 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.105781799 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.144666934 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116774824 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.139630386 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11254896 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.136327062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.098225864 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.135375576 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.103713235 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.139730958 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.13193866 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108688098 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.128311945 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.103816333 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.127873842 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.108834938 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128707124 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.106448722 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.147956919 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108021996 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.139114855 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.160211258 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.109694992 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.130068879 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.120876849 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.174042973 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101246474 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.134250743 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109432409 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137295324 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097987336 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.145925024 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.114198206 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.126854138 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.14122522 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099215951 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124848238 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107739354 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100304801 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.129528353 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133899701 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104210355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.145991834 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.107972185 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133262118 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.101041052 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132246195 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.098859857 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125308329 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.104094494 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.150752601 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105246431 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158970305 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099755717 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132381059 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.108014834 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.133235738 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108211031 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.12648119 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.1071228 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134825989 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.104356165 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.136528401 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.101270514 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.131668522 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.117702803 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.141475634 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.134322371 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104331859 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132868344 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.102028504 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.128595013 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.113319242 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12827334 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.102690698 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.136638007 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.099848588 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.129658137 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106480052 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.131478279 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.098141221 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.147433385 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104156078 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12603937 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.117427824 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.127597587 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.103289889 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.136265767 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.112260599 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.126683498 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.10374455 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.132663869 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.097893639 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.132675157 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.102835076 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.125883471 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.111605614 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.138502011 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.103927658 seconds)
  done (took 15.448795298 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.247288138 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.228026743 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.199073544 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.310707672 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.150936168 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.124931077 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.223289088 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.179544091 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.128106572 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.166964591 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.183176515 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.188328612 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.09904533 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.160086586 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.226981446 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.315250154 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.159696812 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.168312339 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.139120959 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.150792486 seconds)
  done (took 4.787152233 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115755314 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.168004649 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.156360419 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.126136118 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12966121 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.113106023 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.129864868 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.143467367 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.101192356 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.134579554 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.098920198 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.136333186 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.10175756 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130471577 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.118334985 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.1445172 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.103882742 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.135476987 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.144282987 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.105499237 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.127853259 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.148825326 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.110113676 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.157540306 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.108067072 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.144139328 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.098466638 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.135356489 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096851734 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.127912199 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.105072504 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.143511127 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.13556901 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.10149871 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.133278781 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.100341014 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.124072183 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.101229541 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.128941895 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104393567 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.143236614 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103180973 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127847637 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099981311 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136013197 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.097556513 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.104023163 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.135456306 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.132169224 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.109281942 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.134025858 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.104499562 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.135330868 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.111647694 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.124889032 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.109602754 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.14075373 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131009551 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.107254518 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12520257 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09980395 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10361758 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.12664545 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.105028214 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.133326698 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.143767461 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.109013135 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.128266856 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.10719636 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.132200511 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.103241481 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.146336651 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.147555093 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.098340522 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124915703 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.122403971 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096990324 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.11566285 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108917076 seconds)
  done (took 10.679926022 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128232707 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128897535 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.119886485 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.16302038 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.114265531 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138126808 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.100795956 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.149627903 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.106987984 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.138154952 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.106815317 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.143271107 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156172357 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.113189725 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.128882082 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.115664293 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13244294 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.140638665 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.148004573 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.158664664 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.111876905 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.133490192 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.113756177 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.140017285 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.132708614 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.142167527 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.161251294 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.105639173 seconds)
  done (took 4.71897506 seconds)
done (took 46.710224704 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.166330308 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.318669448 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.108082905 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.107962082 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.115885563 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.127576896 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.109562525 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.301747407 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.794016743 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.098209701 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.107343782 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.113458104 seconds)
done (took 26.502755838 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.109729422 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.683232467 seconds)
    (2/2) benchmarking "String"...
    done (took 1.424363635 seconds)
  done (took 4.145746551 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.107017873 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.107511306 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.353842966 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.106999911 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.125227485 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.124340718 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.113800525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.121582016 seconds)
  done (took 15.087058072 seconds)
done (took 24.484163881 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.124327502 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.300841696 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.363176627 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.124076792 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.124894146 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.108642377 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.112644948 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.132329243 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.118653334 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.101244215 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.111788861 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.369348288 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.099405455 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.479144835 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.099662728 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.110965142 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.127591345 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.324535088 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.110746639 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.149126787 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.09814773 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.096321181 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.129165945 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.144267853 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.120719267 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.113839773 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.156855192 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.096521039 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.304151861 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.137117315 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.149614908 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.111628146 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.166527728 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.114090505 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.215783699 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.142960255 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.276634111 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.101858691 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.10058424 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.110419289 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.288194868 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.501026548 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.126704311 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.105457594 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.114912783 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.153488254 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.10712879 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.81895615 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.120084582 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.112519746 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.17133251 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.48653739 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.119430524 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.116311489 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.141685367 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.337305729 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.134642252 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.13002518 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.135920306 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.121960817 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.132679517 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.115568529 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.169497715 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.117941671 seconds)
  done (took 137.396082863 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.112140181 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.116564853 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.117328608 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.17929711 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.116839568 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.116947088 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.114128485 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.113077537 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.11804444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.145894275 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.116371418 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.112805774 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.115476481 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.090593155 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.115068344 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.132249347 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.116696885 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.116694586 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.129848613 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.113235891 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.11450728 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.118665938 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.129020913 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.114697693 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.153641699 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.203082333 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.142135921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.125310891 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.115525728 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.114306312 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.150031796 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.133613577 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.691785548 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.968186766 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.123322226 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.123728195 seconds)
  done (took 76.969409326 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.114552931 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.114015089 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.115586655 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.144353628 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.115569136 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.114067547 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.64596561 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.652140743 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.833479922 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.225149003 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.119782496 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.114756857 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.353167343 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.359488379 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.119144551 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.207657852 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.129116349 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.116345465 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.131126419 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.142598636 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.115840092 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.115656333 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.650026646 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.132788676 seconds)
    (25/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.219762175 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.288034187 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.132048796 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.145664148 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.510475822 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.116401554 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.147322066 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.441943502 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.163328699 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.11740383 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.462526164 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.300232949 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.229941205 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.11931037 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.147765932 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.118159451 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.393942843 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.117623348 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.117314264 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.119846095 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.760568855 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.121538801 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.647639092 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.121395657 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.024587344 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.11817201 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.117398825 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.118156893 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.746995053 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.13628682 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.117351399 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.120095001 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.118448377 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.117784223 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.148630716 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.152923785 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.232941113 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.11790841 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.120927461 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.148401903 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.118600128 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.326305666 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.137945757 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.659156278 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.196152243 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.222782178 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.653656196 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.124070023 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.118565832 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214215964 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237194842 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.11962116 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.11887753 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.118757015 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.119883976 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.22747343 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.120251269 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.506182599 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.288715695 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.136147333 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.363384147 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.217821347 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.120961682 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457252299 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.125106029 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.119870281 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.819654479 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214435693 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.119675533 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.120286336 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.119780463 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.505697903 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.656676217 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.338964218 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.124704432 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.344785033 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.12442222 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.51479287 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.634654686 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.726374638 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.12162476 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232261195 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.289015314 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.137775547 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.121382405 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.369154832 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.125555513 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.180451801 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.122370883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.517285 seconds)
  done (took 354.397369763 seconds)
done (took 569.797063574 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.782503389 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.739265174 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.864189855 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.761703865 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.731577661 seconds)
  done (took 9.924309335 seconds)
done (took 10.970405017 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.302362784 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.302551927 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.17889244 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.304383562 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.153605999 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.321623213 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.285253209 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.14270053 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.223746241 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.19890347 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.222435639 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.173741365 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.156764896 seconds)
  done (took 17.012474593 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.380125767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.124458225 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.204522313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.389205027 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.163170849 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.412893592 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.419873592 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.124047116 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.261169347 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.137996331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.136758456 seconds)
  done (took 16.802147845 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.379546733 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.125459667 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.190259224 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.364550961 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.164947551 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.380528223 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.42433919 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.124999138 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.268209645 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.141738001 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.137474211 seconds)
  done (took 16.750937169 seconds)
done (took 51.611732261 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.165067089 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.287885614 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.149980984 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.138816499 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.133271362 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.135384234 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.139331485 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.133874673 seconds)
  done (took 10.332079335 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.133225837 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.130416396 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.130760533 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.133746549 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.129153965 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.132948156 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.132920121 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.130725593 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.129286351 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.130417295 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.130357851 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.1338337 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.132886138 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.134292076 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.13099747 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.134189023 seconds)
  done (took 19.15946084 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.133396254 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.12958407 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.131318286 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.131450179 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.130639779 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.131355567 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.131687282 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.132641284 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.131998015 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.131924234 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.132225568 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.130765403 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.131437673 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.130791972 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.13252795 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.132013875 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.132075705 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.132524744 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.137868008 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.132171946 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.131643608 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.132597517 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.13139032 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.133946009 seconds)
  done (took 28.2216009 seconds)
done (took 58.759988151 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.126398332 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.147668636 seconds)
  done (took 5.324370268 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.194102678 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.195369357 seconds)
  done (took 3.4422854 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.136847932 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.134880294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.135918672 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.135786522 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.134435802 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.135378424 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.135092751 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.136963327 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.135343645 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.136253381 seconds)
  done (took 12.408396369 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.13663136 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.136206149 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.133594724 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.136199432 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.135959567 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.133167367 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.135311551 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.137244752 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.136207923 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.132355536 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.136694019 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.134565648 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.137285087 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.134531521 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.136194453 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.134970973 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.134154549 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.133853483 seconds)
  done (took 21.4868686 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.150438443 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.157637407 seconds)
  done (took 3.360420633 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.275100903 seconds)
    (2/7) benchmarking "second"...
    done (took 1.176612078 seconds)
    (3/7) benchmarking "month"...
    done (took 1.250402575 seconds)
    (4/7) benchmarking "year"...
    done (took 1.241893259 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.175838545 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.156256027 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.175321506 seconds)
  done (took 9.504750251 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.138002684 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.331534412 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.442497286 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.728631606 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.1378361 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.183244613 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.954948468 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.183521408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.170595855 seconds)
  done (took 13.324894011 seconds)
done (took 69.902377853 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.130425216 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.149506034 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.150423764 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.143491369 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.431058138 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.18745108 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.134319033 seconds)
done (took 15.380056558 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.121205288 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.129900158 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.120207288 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.135663333 seconds)
  done (took 9.560722614 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.116402037 seconds)
    (2/2) benchmarking "read"...
    done (took 1.497266129 seconds)
  done (took 4.667997029 seconds)
done (took 15.283063142 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139476858 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.137567172 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.135406553 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.13965447 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.13556371 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.136682278 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.138587529 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.140250173 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.138913792 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.13824124 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.137603787 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139164842 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.137069908 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136649943 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.138623224 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.137624921 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137623464 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.140185798 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13837436 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.137141563 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141111357 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.137687937 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.137665439 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.138114115 seconds)
  done (took 28.369749217 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.141433312 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.137372793 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.140598351 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.141512941 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.138063291 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.141331299 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.141000845 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.138519643 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.141769227 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.140611274 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.137775413 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.138505687 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.141114061 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.138568435 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.142071871 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.140089299 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.140625846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139018697 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.139977342 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.137388795 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.141895106 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138796824 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.139211044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141609437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.138829722 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.139708974 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.14193777 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.139171441 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.140955247 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.139435767 seconds)
  done (took 35.256782936 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.146394768 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.149467083 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.143148434 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.142217437 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.14214878 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.14341029 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.143313813 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.142652328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.142099009 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.143128856 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.141896836 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.14249572 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.142543318 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.143675229 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.142985867 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.142779904 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.143125361 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.143210845 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.143184225 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.143078368 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.143128242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.14300531 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.143115718 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.142596363 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.142682597 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.143724493 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.143601973 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.143721537 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.143496517 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.142723965 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.143506227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.142947852 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.142738061 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.144044106 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.144845819 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.14543282 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.14854501 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.151211267 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.143791484 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.14522547 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.143746334 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.144499344 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.144610334 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.144860738 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.145502648 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.143957403 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.144239965 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.14443697 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.145464393 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.145610365 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.145206305 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.145201473 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.144893292 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.145927993 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.146684655 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.145980808 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.145758494 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.14593267 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.145805493 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.144973294 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.145587262 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.146204065 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.146050579 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.145926729 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.146160241 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.146549996 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.145782225 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.147209062 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.146062844 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.145933451 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.146604129 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.14762321 seconds)
  done (took 83.471241324 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.145938005 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.145066652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.14483945 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.145748979 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.144267865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.146672434 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.144242952 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.146455461 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.144588226 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.147893624 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.145777546 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.146532667 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145016138 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.147479832 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.147155051 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.144689861 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.147263133 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.14568176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.147485248 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.146742811 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.147674246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.145090231 seconds)
  done (took 26.275656084 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.148703401 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.149600303 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.145890828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.150232565 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.146543936 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.148930029 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.148554128 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.149463988 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.148914827 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.145502882 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145803796 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148540825 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.148304492 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.145928187 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.146365127 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.147966388 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150991657 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.147773406 seconds)
  done (took 21.727194103 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.14776535 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.147283236 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.149822705 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.147612745 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.147116875 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.149875162 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.147005609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.14846057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.149284832 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.147867039 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.150482589 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.14928464 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.149084623 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.147284788 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.149708224 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148336505 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.149893431 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.147640702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.149984839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.147855827 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.148118385 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.150588843 seconds)
  done (took 26.335221279 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.150399536 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.150747944 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.149059192 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.148381757 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.150019896 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.149877835 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.150517264 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.150082509 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.152163749 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.150200813 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.149177165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.151359708 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.151371633 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.149183955 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.149339982 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.149555893 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.151805197 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.149053709 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.150779329 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.150127319 seconds)
  done (took 24.068710512 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.15351696 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.153781778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.152852454 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.153855369 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154375814 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.15454407 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.153703288 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.152933461 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.153661047 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.156489743 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.155369181 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.155131251 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.15421069 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.153346559 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.153030109 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.154578933 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.156006831 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.154859443 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.155104418 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.153886589 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.155978366 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.15507248 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.155146999 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.154425964 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.154751174 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.154848997 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.15555311 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.154730747 seconds)
  done (took 33.394174451 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.154337156 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.154438004 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.152101566 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.151381725 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.153528766 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.15253422 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.152613335 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.151833811 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.154486142 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.151086815 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.154494554 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.154155218 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.154814965 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.154857455 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.15568032 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.155062864 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.155552887 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.153435572 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.153296029 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.152717402 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.155860148 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.154938134 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.156489163 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.15387479 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.153827487 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.156805629 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.153334956 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.152615431 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.156269496 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.15305225 seconds)
  done (took 35.688573329 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.200960564 seconds)
    (2/2) benchmarking "in"...
    done (took 1.201492255 seconds)
  done (took 3.47339604 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.154553981 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.157399714 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.155768524 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.155135361 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.154096861 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.156417874 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.156744003 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.153971722 seconds)
  done (took 10.313992885 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.157431457 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.15752228 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.156905823 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.158901821 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.158122204 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.158367787 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164089621 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.177314076 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.158179782 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.158689058 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.165253007 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.164851599 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.159521074 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.157686468 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.159068092 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.159747857 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.157188119 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.158738031 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.157970304 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.157901427 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.157577562 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160129946 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.160384242 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.156494813 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.160359402 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.168858756 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.162130412 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.159760719 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.159238099 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.161010744 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.158457621 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.156169833 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.15913603 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.159225763 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.159467324 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.158320033 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168077661 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.179727271 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.165146434 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.158624822 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161034455 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.158014712 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.159907318 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.160475213 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.160801751 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.159676485 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160652628 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.155939214 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.159192309 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.163439992 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.165939007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.158812725 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.158593862 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162781014 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.160896521 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166242935 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.179444699 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.163337058 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.168838796 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.170637688 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.173174344 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.183260138 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.162830513 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.160642343 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.172375744 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.184194149 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.168487484 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.176341263 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.157781344 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.160888019 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.169020907 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17388107 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.186363988 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.16238257 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.16165531 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.162447741 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161982343 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.162583844 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.168845234 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.183299787 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.161500482 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.163995084 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.173013867 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.183954596 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.161801083 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.16322782 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.162477113 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.162923108 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.163764301 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.172012113 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.181649237 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.163430389 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.163160401 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.16254406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.164187735 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.162712449 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.162824452 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.164079381 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.161219651 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.163721609 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.162447656 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167204122 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.172001327 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164687009 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.164975457 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.17063535 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.163984884 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.16440036 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.171072936 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.164839225 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164976708 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.166587597 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.170566078 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.161748782 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.166432444 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.172056032 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.163979389 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.166640053 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.165199834 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.165856846 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.174626201 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.189920839 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.166093113 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.163969145 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.170708329 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.176408529 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.165785062 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.167704319 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.165492692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.162570089 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.162892345 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.166986524 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.166831882 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.165038 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16737338 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.166187956 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.163665516 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.166815193 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.165642984 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.165913958 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.167413344 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.166121808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.167382287 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.168302781 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.171407867 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.168348672 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.173722853 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.167358139 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.166981877 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.167652331 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.164127222 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.166932733 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.166561982 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.167251092 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.166813766 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.167125721 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.166861893 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.167851052 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.167704101 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167416403 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.167584264 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.168568498 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.17240239 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.167441847 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.171167706 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.167380409 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.165051115 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.167645049 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.168718946 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.167187666 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.168950585 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.167151003 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.172122872 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.177365305 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.167630772 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.168318725 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.172205467 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.169085366 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.169822167 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.169403391 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.172115427 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.177679966 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.170282725 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.177320455 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.169066223 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.170430288 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.170341234 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.169972167 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.168001269 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.171501032 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.173886823 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.178225293 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.181682765 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.1947174 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.171405214 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.173157927 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.16990162 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.173820459 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.173509775 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.170949919 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.171403111 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170622666 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171107374 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169132627 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.171959123 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.169109936 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.168315361 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.1712034 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.172539263 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.170746956 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.172319615 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.170491508 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.171340353 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.168369482 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170783051 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.170868009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.172590639 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.168884575 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.170298339 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.16981934 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.171695943 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.171167582 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.178181074 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.168439051 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.171468139 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.173073054 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.172360298 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.171134037 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.171614491 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.174079298 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.171586302 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.17761345 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.189373033 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.172704948 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.179457721 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.191005761 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.172970592 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.174778264 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.172763423 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.169514042 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.176361091 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.180678713 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.172115209 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.172678164 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.173745252 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.173528771 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.174156223 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.17950646 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.170536299 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.172732901 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.175001198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.175879572 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.170944815 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.174329927 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.173697837 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.173698343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.17574688 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.175192437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.176268316 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.175110951 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.175209068 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.175522796 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.175244785 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.177044248 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.181914142 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.179726424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.174182981 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.176243297 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.177869395 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.178748423 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.174992216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.174581549 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.175228656 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.187428765 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.199337329 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.182562096 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.193150495 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.175668094 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180192415 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.194220061 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.179288878 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.175072329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.176404582 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.175811277 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.175674646 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.174799356 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.176860695 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.17745835 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.177319988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.178527296 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.181206851 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.177256742 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.175824779 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.175788375 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.176624609 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.177521195 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.177153103 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.177480003 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.178402348 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.17904892 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.175894783 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.176709354 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.182319904 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.195605792 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.177708786 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.177428491 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.177501918 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.176790848 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.177653694 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.177668264 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.18155352 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.186090312 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.181786458 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.186280543 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.179515112 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.186699111 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.178482651 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.180304368 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.185279691 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.175847735 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.177675052 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.177719201 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.178132311 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185005127 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.196618697 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.180295704 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.182116259 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.179538777 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.179956514 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.179847106 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.178360215 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.179802272 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.178549934 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187149972 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.200181319 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.181591048 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.180355784 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.176141099 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.179931222 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.180098452 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.177078964 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.183372384 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.180123707 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.180551949 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.180473417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.180518703 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.181081375 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.178911104 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.180887257 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.17752537 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.181424132 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.186915199 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.201278225 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185026123 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.180590418 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.187816801 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.179774183 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.187962356 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.199872156 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.181372449 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.181077221 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.180539904 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.182618425 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.180176694 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.181688073 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.181390985 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.183625885 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.186657409 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.181934854 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.183828469 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.182287342 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.182168202 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.181729437 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.191383233 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.205619472 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.183910303 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.187302795 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.178939955 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.183286479 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.18557885 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.183671146 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.179818014 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.185204471 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.193083904 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.191000692 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.182851712 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.182937373 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.183010308 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.183529617 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.181776113 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.18491298 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.182907284 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.183481651 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.182934354 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.183292036 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.185572408 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.183605439 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.185003063 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.184983197 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.183703888 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.194500511 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.183659067 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.184696028 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.184088168 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.185324928 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.183936509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.184692883 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.185764234 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.184383598 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185370723 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.1878352 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.191562732 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.191732518 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.186802647 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.183313877 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.184495361 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.185721307 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.18547839 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.183855602 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.184814258 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186676574 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.185007278 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.675153404 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.185614991 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.183201644 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.185042869 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.186167814 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.185502267 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.187229187 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.193001835 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.186314776 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.183607482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.184813535 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.185390998 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.185891676 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.186186848 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.192164303 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.190328722 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.197640649 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.195552868 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.191219445 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.18686463 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.189359599 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.195744958 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.185706791 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.186354375 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.187655806 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.189076129 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.187628957 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.190281354 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.187555447 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.194712015 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.187188079 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.187718834 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.195148916 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.208598867 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.187231694 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.189553832 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.191534971 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.188694528 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.185972752 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.188181863 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.187981845 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193689734 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.208033165 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.189109821 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.188692794 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.18811712 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.189657993 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.191072465 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189096606 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.18897132 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.185365303 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.189171385 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.189434026 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.189653803 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.185289881 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.188833125 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.189349677 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.190378744 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.197049866 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.188351726 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.190489612 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.189817644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.189649209 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188847517 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.189858923 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.186587434 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.186995982 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.189550125 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.191452139 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.189126979 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.192040475 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.188446419 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.190284713 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.190762891 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.190671515 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.194275398 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.200456881 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.197542536 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.188530616 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.189788086 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.190050145 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.192747204 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190509338 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.190452525 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.191004603 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.192129528 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.191481545 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.191943154 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.190591259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.194082661 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.208415914 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.21302333 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.190591556 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.191064319 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.192814755 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.19189372 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.189094301 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.192160132 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.192720184 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.196107898 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.199903955 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.192056936 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.197914673 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.211443176 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.192255601 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.195749033 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.194393168 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.201508146 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.194037575 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.192008873 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.192603742 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.197719377 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.208449244 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.193648338 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.201736336 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.221604628 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.212319681 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.194175021 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.193006286 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.192624933 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.194572791 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.195176929 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.193238519 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.193792796 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.193563838 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.192909763 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.193958015 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.199191537 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.194014713 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.194036745 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.194600783 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.192572342 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.194129981 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.190827808 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.192877771 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.194766244 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.193335114 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.19344124 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.194172057 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.195422315 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.205266731 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.219992168 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.194421228 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.195181111 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.192183221 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.197633494 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.198692049 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.20557213 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.201470528 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.195472256 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.196756835 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.196791066 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.195503999 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.195431456 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.195275917 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.195243135 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.196111853 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.193420271 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.207553536 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.220553367 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.201190556 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.19590836 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.196758239 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.197380471 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.196403174 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.194970138 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.196853848 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.198054829 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.199858517 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20101564 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.196958746 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.19744882 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.198829686 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.204817572 seconds)
  done (took 704.535026728 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.195446548 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194890564 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.194002838 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195400773 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.194420702 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.193118701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194698476 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.195233357 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.195512409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.196218145 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.193970877 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196028666 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194768784 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.195143597 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195415023 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195317107 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.195824254 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.195424909 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.196050998 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.195733656 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.195990508 seconds)
  done (took 26.206540891 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.198404012 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.197057025 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196444571 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.19688134 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196229231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.198554036 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.196091726 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199170742 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.197918154 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195826265 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198627671 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.199216811 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.197424501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.19662648 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196444101 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.198664789 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.197915849 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.197074198 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.198497246 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197885492 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.19953678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.196641582 seconds)
  done (took 27.456460213 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.20066977 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.199966039 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.198860665 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.196084676 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.19985412 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.196665101 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.200722096 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.200341269 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.201101321 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.200956092 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.199135389 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.202344504 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.208470071 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.205932624 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.201989064 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.20179197 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.201632613 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.201105071 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.200123811 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.198233934 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.205012972 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.217544177 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.198890295 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.200040709 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.200812706 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.20182458 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.202011005 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.201301051 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.2024102 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.206041242 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.202716839 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.202014707 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.203126159 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.20088957 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.201623753 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.205984626 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.201261185 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.199446742 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.202301229 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.212272896 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.222288632 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.201773312 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.20865395 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.221891491 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.202689846 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.204718241 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.211045506 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.201185612 seconds)
  done (took 58.868282372 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.781200787 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.801064546 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.798558843 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814028473 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.803645429 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.825320109 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.808732899 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812819181 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.837818755 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.799663997 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.808418592 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.799780101 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.800487921 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.804184292 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.806986422 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807510936 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.809789138 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808483245 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.806867002 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.805342943 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.79370008 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.802098516 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.796552602 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.798689447 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.802889623 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.801063449 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811987419 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.8114679 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.816301124 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.803779104 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.828713378 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.810185334 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.810472671 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.800825181 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.80056938 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.802702056 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.812435046 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.801361856 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808630442 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.803153485 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.799633382 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.811193965 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.814052821 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.815318326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852412173 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.811071737 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805125673 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.804584465 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.800064437 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.804366104 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.810920926 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.804119178 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.802685998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.806054821 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810111934 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.809447879 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.813205117 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.813990579 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.816838336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.802840179 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.804014934 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807436616 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.807474876 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.819274205 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.841394033 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.835806547 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.834609128 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.814686408 seconds)
  done (took 124.146860885 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208164648 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.2069429 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.206764403 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.208525698 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.207445897 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.207004515 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.207354814 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.208118104 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.207383272 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.207756988 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20746611 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.207504591 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.209509126 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.210667832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.208531 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.209019324 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.208173413 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.207841283 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.208746076 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20876793 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.208571468 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.209150407 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.208718751 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.209945137 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.210118584 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.209011973 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.208506799 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.209093056 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.209395099 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.209060802 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.210020329 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.209124008 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.211554263 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.209441701 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.209275269 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.209695232 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.209829227 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.209673092 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.209873893 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.209066178 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.209663106 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.209268706 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.210836704 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.210581263 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211151816 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.210032329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.209869378 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.211459604 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.211086394 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209380028 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.212123116 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.211578456 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211120447 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212760397 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.21126797 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.212196548 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211869031 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211862815 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212656703 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.211662286 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212239404 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.212074853 seconds)
  done (took 76.118728042 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212289124 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.212824516 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.209131052 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.208959295 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.211044175 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210136721 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211870887 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.212441314 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212878128 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21085136 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213017851 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.209210828 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211149333 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214355634 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209514787 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211769882 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.20986192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209652848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21312029 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.211601666 seconds)
  done (took 25.346302142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.210340491 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.212681529 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.210308891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.21075802 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.213773643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.210609976 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.213160539 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213707964 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210161029 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213747784 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.214200875 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.213189374 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210578265 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.211345439 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.214514453 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.212474388 seconds)
  done (took 20.517127322 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.21314466 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.213708565 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.214002834 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.214157942 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.211359031 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.211691797 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.2145063 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.21123439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.211619458 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.214952675 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.214119016 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.213960088 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.214582781 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.215736115 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.211773744 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.216096012 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.211189408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.212833366 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.216125345 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.215092952 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.214770663 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.212591023 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.214975337 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.215498385 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.213024123 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.212966018 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.212740869 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.213484534 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.212840778 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.215299585 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.213852426 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.213009092 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.213340108 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.213739335 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.216778497 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.21443024 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.216847376 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.216242491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.217459746 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.216171672 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.216015001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.214956949 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.216306678 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.21838714 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.214693684 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.217823998 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.214756779 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.215589485 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.215210333 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.214246609 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.217521668 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.217152467 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.217855329 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.217179524 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.216874707 seconds)
  done (took 67.930121649 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216911973 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217631547 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.216010223 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216915888 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.21897269 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.21447381 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.218330086 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.217318443 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216046234 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.217176033 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.214264721 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.219579725 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215245957 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.218604821 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215954954 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218711576 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215310971 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.21644378 seconds)
  done (took 23.030190238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216387005 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217801568 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.218462958 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.216006287 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.216521189 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.219273128 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.215439927 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.219346555 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219228521 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.217622592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21770005 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.220416288 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219209961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.221311612 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.217701128 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217755148 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.220199263 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.22092493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217760161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217359815 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.220481913 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220377366 seconds)
  done (took 27.933473482 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.217880222 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.219648954 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.217905192 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.236605772 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.241726874 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.217918876 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.220281448 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.219378883 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.243816935 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.274711968 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.268592613 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.238988788 seconds)
  done (took 15.943735623 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218203963 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.219404825 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218866837 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.220678371 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.221286093 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218448138 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218609284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.218419437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.220612836 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219952453 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220208512 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.221337971 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22120775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220362702 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22185114 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22225196 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.218587208 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.219695927 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.21892612 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223530146 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.218961672 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.221585936 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219770277 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220348465 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.220151885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.219539889 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22156303 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.220666208 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219998056 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223430052 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222351908 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220817077 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223021284 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.221192478 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223264004 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222931464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221282077 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.222989321 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223800063 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220931213 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.223079619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223359215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22286941 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.220466407 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223673922 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.219530051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.221790608 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.220345674 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.220899875 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224511994 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225047803 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221281668 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224252411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223493886 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223776574 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225180627 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225129077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224064549 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225501878 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223219281 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221948122 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22469904 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222285507 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222365521 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225580843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226010987 seconds)
  done (took 81.767426635 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223559537 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.222151359 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.222687478 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221708841 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222819856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224267813 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222201786 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.222796207 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225024766 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224221518 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226927883 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222677135 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.223114082 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.222824251 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222140694 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222683229 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.221598887 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.223892144 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22415267 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225718687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22232039 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.223865084 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22388466 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224352919 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225089727 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227370769 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22518341 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223916113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22535577 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2251973 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224778997 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22515205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22553525 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.224591861 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22626835 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224892422 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224973067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226052181 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226765291 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228034935 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227257891 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228305424 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22567971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225901043 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226083787 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225316852 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.22613846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.225558437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224813371 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226141611 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226765553 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226134124 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226578313 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.225970295 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227860912 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22778024 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226953915 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226390197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22798115 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229425737 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228034431 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227137431 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228979076 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228328633 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22658022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226737433 seconds)
  done (took 82.004956087 seconds)
done (took 1691.235638895 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.392184495 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.346238333 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.228296279 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.239887943 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.226316788 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.25302605 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.235840648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.227398358 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.228799691 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.227448962 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.228638929 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.417466989 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.284531578 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.228638326 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.228095536 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.323061743 seconds)
  done (took 25.45249672 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.255720607 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.238458157 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.35085038 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.256915659 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.260860465 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.426943955 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.293685225 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.239239735 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.411869389 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.260598392 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.234470744 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.2661011 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.237702066 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.231093319 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.258372768 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.425466925 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.493667656 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.238858251 seconds)
  done (took 27.518102924 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.700691659 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.232149712 seconds)
  done (took 5.073507694 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.257698884 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.237041962 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.238521722 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.235927043 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.232504995 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.227466515 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.234985205 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.232656229 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.228682233 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.36399742 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.243314099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.246415686 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.257722196 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.23766841 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.234526393 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.277607854 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.383133592 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.236015619 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.233306168 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.24266729 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.238372897 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.334713044 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.283149639 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.241348256 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.365750237 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.237858766 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.244622901 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.245697634 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.375402782 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.239948963 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.237464712 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.239979081 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.239869597 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.127087148 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.704232919 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.251976942 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.280488466 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.24621904 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.237216667 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.395084891 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.242406002 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.24671317 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.243769202 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.697847925 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.378697496 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.367305399 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.252565367 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.241137615 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.242407398 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.304808361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.243357427 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.241769879 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.282252706 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.059723907 seconds)
  done (took 80.041167031 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.274459138 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.233049179 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.414806213 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.258665723 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.233046679 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.232471433 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.234253948 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.525033437 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.235686794 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233975008 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.530362949 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.806752394 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.249951312 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.280979373 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.080680696 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.302442682 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.233871453 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.249843343 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.235744511 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.234584192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.787685159 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240567845 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.234473771 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.302726936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.27406408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755107992 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.246541444 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.250859978 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.235841144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.233234932 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.762514145 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.253622766 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.290432411 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.23774537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.51436745 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.62394261 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580481024 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.23566818 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.275321559 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.236756046 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.260204965 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740448602 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.597500378 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.235527671 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.236052968 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756774854 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.236188591 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.239675423 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.246036964 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.485652558 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.240223106 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.237713963 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.26579977 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.23723798 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.236279864 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.316532509 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.311063788 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.757521991 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.235765225 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.23569112 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.269306242 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.238399921 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.244721461 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.237772114 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.239259787 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.603800116 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.441614801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.244200991 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.599663133 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.757822632 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.253194029 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.844859283 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.258472195 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.259975729 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.431845113 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.235928402 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.245211518 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769824094 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.241503027 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.237897741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.581298191 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.237384947 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.532781401 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.258033334 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.239640483 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806367987 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.253359727 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.245517102 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.237735118 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.247884195 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.238746938 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.246881988 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.5179541 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.266685159 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.239102871 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.237324436 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.261592638 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.240261174 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.238639649 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.243719123 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.827279217 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.260416581 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.238340133 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.242792678 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239441773 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.240552682 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.240650915 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.240649102 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505549995 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.25221864 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.245510116 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.240959443 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.240268932 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.245585221 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.311499225 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.239805259 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.553321943 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.241802663 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.23952055 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.240163997 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23975922 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.26869853 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240808815 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.243936781 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.137031322 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.506486577 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.259042079 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.257195678 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.240596655 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241348326 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.24072763 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241214368 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.274978121 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.239096675 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.005565485 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.266062729 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.248000461 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.240507582 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.248511077 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.240580714 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.248476076 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.240788432 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.539873147 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526061867 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.436049275 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.243785133 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.240443993 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.015302741 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.284560477 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.42272286 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.262383218 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.242091766 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503513011 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.441700894 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24025169 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.242901787 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.245577204 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505156072 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.246994805 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.567331642 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.804144012 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.262587588 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.245896301 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.016493944 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.979878849 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.248154109 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.243053282 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.534624397 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.261797777 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.242613122 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.241891366 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.242929875 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.241817346 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.243681602 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250358155 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.242303339 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.241992826 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.565373337 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436071067 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.262088958 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.244135494 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.757294443 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.25653889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244229558 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.24751291 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.245108358 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.244255528 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.306709862 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.247016713 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.264091861 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.244959212 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.246661347 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773949928 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.24367586 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.250709246 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436752789 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942727282 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.265711726 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.245948676 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.261142571 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.148729133 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.78659038 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.266668147 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.560457655 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.25241862 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.28560662 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.246331778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.265451277 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782329405 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24857432 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.265011245 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906833453 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.261593397 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.659108502 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.245328993 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.245650811 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863890432 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.26465154 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.248390895 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.245256871 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.24671912 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540891258 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.252162555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.293605472 seconds)
  done (took 477.768785822 seconds)
done (took 616.988250239 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246438821 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.247406105 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.23599844 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.252005968 seconds)
  done (took 10.138546564 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.256399067 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.252942763 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.253943568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.252177891 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.255152267 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.254751659 seconds)
  done (took 8.682755187 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.247025441 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.248858242 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.251823902 seconds)
  done (took 7.906597577 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.464165089 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.27749865 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.584047243 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280860896 seconds)
  done (took 8.768546093 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.250718794 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.251132265 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.250613196 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.253947637 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.253043928 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.253900149 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.25247754 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.252573144 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.254833509 seconds)
  done (took 12.425278199 seconds)
done (took 49.078895202 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.349875297 seconds)
    (2/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.430206925 seconds)
    (3/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.399704167 seconds)
    (4/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.132703182 seconds)
    (5/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.283456272 seconds)
    (6/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.379880252 seconds)
    (7/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.26383517 seconds)
    (8/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.316724773 seconds)
    (9/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.232724735 seconds)
    (10/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.25850544 seconds)
    (11/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.28920881 seconds)
    (12/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.246159699 seconds)
    (13/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.265145449 seconds)
    (14/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.589378762 seconds)
    (15/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.276453834 seconds)
    (16/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.431913832 seconds)
    (17/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.286987172 seconds)
    (18/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.268809591 seconds)
    (19/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.272182541 seconds)
    (20/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.333661852 seconds)
    (21/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.369704953 seconds)
    (22/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.290316254 seconds)
    (23/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.435843862 seconds)
    (24/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.341109408 seconds)
    (25/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.327354871 seconds)
    (26/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.258271457 seconds)
    (27/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.239937608 seconds)
    (28/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.336257671 seconds)
    (29/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.275750016 seconds)
    (30/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.349417149 seconds)
    (31/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.59056068 seconds)
    (32/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.333518681 seconds)
    (33/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.256604735 seconds)
    (34/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.258848666 seconds)
    (35/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.357202395 seconds)
    (36/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.260106484 seconds)
    (37/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.326829627 seconds)
    (38/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.25037895 seconds)
    (39/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.334533676 seconds)
    (40/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.286284474 seconds)
    (41/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.253795731 seconds)
    (42/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.453310636 seconds)
    (43/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.261423189 seconds)
    (44/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.134380963 seconds)
    (45/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.343699758 seconds)
    (46/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.240419713 seconds)
    (47/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.347476392 seconds)
    (48/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.311782116 seconds)
    (49/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.999555049 seconds)
    (50/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.358879774 seconds)
    (51/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.343615158 seconds)
    (52/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.271847863 seconds)
    (53/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.235316048 seconds)
    (54/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.305617449 seconds)
    (55/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.395178243 seconds)
    (56/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.353082897 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.303083313 seconds)
    (58/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.463295186 seconds)
    (59/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.268025213 seconds)
    (60/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.27053306 seconds)
    (61/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.262136057 seconds)
    (62/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.01225974 seconds)
    (63/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.282065487 seconds)
    (64/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.462580642 seconds)
    (65/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.253161542 seconds)
    (66/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.333650568 seconds)
    (67/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.27156003 seconds)
    (68/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.134945998 seconds)
    (69/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.309949165 seconds)
    (70/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.295083648 seconds)
    (71/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.968108382 seconds)
    (72/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.265446392 seconds)
    (73/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.267896447 seconds)
    (74/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.900447656 seconds)
    (75/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.277018284 seconds)
    (76/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.393041116 seconds)
    (77/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.310443036 seconds)
    (78/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.360047057 seconds)
    (79/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.235831943 seconds)
    (80/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.26515577 seconds)
    (81/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.301710627 seconds)
    (82/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.353856344 seconds)
    (83/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.409698024 seconds)
    (84/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.395944605 seconds)
    (85/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.279664827 seconds)
    (86/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.396190126 seconds)
    (87/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.299565259 seconds)
    (88/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.377000944 seconds)
    (89/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.914709038 seconds)
    (90/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.277009515 seconds)
    (91/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.338669341 seconds)
    (92/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.280394101 seconds)
    (93/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.354348617 seconds)
    (94/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.407278002 seconds)
    (95/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.300174064 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.326475478 seconds)
    (97/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.263630152 seconds)
    (98/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.506430558 seconds)
    (99/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.267650075 seconds)
    (100/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.266865881 seconds)
    (101/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.259860128 seconds)
    (102/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.093775899 seconds)
    (103/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.358651767 seconds)
    (104/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.113398244 seconds)
    (105/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.375490686 seconds)
    (106/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.339172138 seconds)
    (107/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.429355136 seconds)
    (108/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.401935427 seconds)
    (109/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.267683302 seconds)
    (110/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.341853171 seconds)
    (111/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.301786405 seconds)
    (112/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.902038928 seconds)
    (113/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.444271216 seconds)
    (114/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.41742786 seconds)
    (115/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.263491869 seconds)
    (116/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.261509203 seconds)
    (117/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.260277909 seconds)
    (118/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.434551969 seconds)
    (119/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.11185336 seconds)
    (120/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.384259542 seconds)
    (121/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.574925842 seconds)
    (122/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.278152701 seconds)
    (123/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.35417624 seconds)
    (124/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.315934 seconds)
    (125/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.443980119 seconds)
    (126/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.259062282 seconds)
    (127/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.408597386 seconds)
    (128/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.269872627 seconds)
    (129/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.466213744 seconds)
    (130/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.244433618 seconds)
    (131/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.309555271 seconds)
    (132/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.425763399 seconds)
    (133/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.3411113 seconds)
    (134/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.006315347 seconds)
    (135/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.277252712 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.249213569 seconds)
    (137/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.388382399 seconds)
    (138/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.911273433 seconds)
    (139/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.270551605 seconds)
    (140/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.238365999 seconds)
    (141/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.387257093 seconds)
    (142/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.292562306 seconds)
    (143/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.95358288 seconds)
    (144/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.636187285 seconds)
    (145/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.372769118 seconds)
    (146/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.966063991 seconds)
    (147/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.350320124 seconds)
    (148/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.33675501 seconds)
    (149/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.337459571 seconds)
    (150/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.287127299 seconds)
    (151/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.249123175 seconds)
    (152/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.43389954 seconds)
    (153/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.318615965 seconds)
    (154/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.388496744 seconds)
    (155/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.428198554 seconds)
    (156/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.41261847 seconds)
    (157/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.301610378 seconds)
    (158/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.411683594 seconds)
    (159/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.350264094 seconds)
    (160/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.013595318 seconds)
    (161/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.292170564 seconds)
    (162/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.016360646 seconds)
    (163/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.267154046 seconds)
    (164/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.261652883 seconds)
    (165/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.288156475 seconds)
    (166/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.462669645 seconds)
    (167/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.332313321 seconds)
    (168/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.283665113 seconds)
    (169/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.902799965 seconds)
    (170/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.342757762 seconds)
    (171/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.256870086 seconds)
    (172/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.259108254 seconds)
    (173/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.916957116 seconds)
    (174/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.02266219 seconds)
    (175/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.403138246 seconds)
    (176/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.330659265 seconds)
    (177/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.312101099 seconds)
    (178/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.327428624 seconds)
    (179/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.336237648 seconds)
    (180/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.336684867 seconds)
    (181/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.322326894 seconds)
    (182/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.307889008 seconds)
    (183/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.010149533 seconds)
    (184/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.452801776 seconds)
    (185/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.351412886 seconds)
    (186/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.908002094 seconds)
    (187/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.368790052 seconds)
    (188/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.29415068 seconds)
    (189/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.256830095 seconds)
    (190/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.373547939 seconds)
    (191/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.32552423 seconds)
    (192/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.290714373 seconds)
    (193/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.006635165 seconds)
    (194/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.426036567 seconds)
    (195/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.291716106 seconds)
    (196/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.294747771 seconds)
    (197/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.354929164 seconds)
    (198/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.38225898 seconds)
    (199/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.269846737 seconds)
    (200/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.33739624 seconds)
    (201/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.364597879 seconds)
    (202/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.242361695 seconds)
    (203/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.392201116 seconds)
    (204/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.326341305 seconds)
    (205/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.461030363 seconds)
    (206/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.267407365 seconds)
    (207/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.315177972 seconds)
    (208/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.444832494 seconds)
    (209/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.338345376 seconds)
    (210/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.275429687 seconds)
    (211/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.966949841 seconds)
    (212/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.438801368 seconds)
    (213/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.271339745 seconds)
    (214/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.245252898 seconds)
    (215/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.489778532 seconds)
    (216/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.269244043 seconds)
    (217/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.306383668 seconds)
    (218/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.281576531 seconds)
    (219/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.271211636 seconds)
    (220/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.33534367 seconds)
    (221/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.484586974 seconds)
    (222/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.92032303 seconds)
    (223/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.275862514 seconds)
    (224/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.41425095 seconds)
  done (took 351.057946507 seconds)
done (took 352.212166377 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312450465 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.441864112 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.284773594 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.286098709 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3101961 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262332558 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.30737033 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.272928131 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.269453701 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.269915016 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.263646629 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.277850938 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.288931101 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.303352683 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.381290563 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.274715047 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.285163895 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.268789498 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.308973454 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.327728266 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311763427 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.312043708 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.280738375 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.286102856 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314561986 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31648718 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.289159256 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.2607251 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.271452263 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.310350765 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.260714726 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.294768332 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.318487153 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320106742 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312544982 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.271577967 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.312228509 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.444286016 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.303816908 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303414819 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.273365335 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.318489564 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.288480366 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.281690379 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.320850595 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.281668202 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317648975 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.394687124 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.259933363 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.265481796 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.323806875 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.331382489 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.27395183 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.265228157 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.273101715 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.397301289 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.272618445 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.318185356 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.271768514 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313974124 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.383604382 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.317821976 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.332188591 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.316449108 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.275066512 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.292615101 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.270834124 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.329040279 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.271314396 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.315185152 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.315631919 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.278141073 seconds)
done (took 103.005489514 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.391670047 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.266857134 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429015457 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.269809803 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.431990694 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.414123172 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.266985483 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.26741345 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.266998653 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.061559045 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.267313718 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.268385289 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.267116607 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.267422731 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.396731446 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.27031039 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.268465035 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.97633791 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.271698375 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.408365032 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.271136431 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.268182081 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.269612826 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.070050569 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.270139168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.264620491 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.409731953 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.270723991 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.963691922 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.263807327 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.265931335 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.976993701 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.410164504 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.287518993 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.280766564 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.277312107 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.435654753 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.28976029 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.390709835 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.392048329 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431320609 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.311039938 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.265565728 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.270133743 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.272690264 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.272021291 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.269421995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.299115435 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.270650365 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.269417594 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.965410062 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.283090407 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.279755913 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.270347862 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.270563846 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.292713354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.27149536 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.272014112 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.412291242 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.273883396 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.396779391 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.066273743 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.074116554 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.273392157 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.270489258 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.2718498 seconds)
  done (took 104.106521811 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.341194151 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.348626735 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386704782 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.293194475 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.326134748 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.392952948 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.289484126 seconds)
  done (took 10.552981665 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.279592004 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.275165991 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.322773088 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.324819055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.274630916 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.487224427 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.276179216 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.286537145 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.27185951 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.350663037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.275543339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.277322738 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.281781248 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.27107169 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.32389456 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.287099602 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392176311 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.277175367 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.275150704 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.428936652 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.273735646 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.281656789 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358950405 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.288291299 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.278153825 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.282524951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.228198745 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.277260712 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.274570871 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.276824914 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274644126 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.383845395 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.278451239 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.274802804 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.274875335 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435904217 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.277123056 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.274494652 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.276442345 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.276903197 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.277257045 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.27775586 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.277409068 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.274677605 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.277253546 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.302637256 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.280205384 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.277245452 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.276570599 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.278531983 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.35600671 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.278947853 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.275676791 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.274889006 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.356676493 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.28335136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.278485654 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.275611951 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.277619943 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.275069023 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432104302 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.326911579 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.278566001 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.325884435 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.28003797 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.279501131 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.279310741 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.277529107 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.371086327 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.278677434 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.327563163 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.276560014 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.499971388 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.302147816 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.281473979 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.282964382 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.281766446 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279764342 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.274700691 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.28516541 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.277851212 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.280492907 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.285591573 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.277120053 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.277158606 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.462239467 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.437111696 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.277865497 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.292803125 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.286991662 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.27905816 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.360175534 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.280437771 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.278404607 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332805912 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.397619816 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.36896207 seconds)
  done (took 132.674066512 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.291937441 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.29328051 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.284815787 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.308012638 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.281784911 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.282106821 seconds)
  done (took 8.923230491 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.284119432 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.28326575 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.281681294 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.280872582 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.280896687 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.2837116 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.282801952 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.283519261 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.287187907 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.28074626 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28237465 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.284343822 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.284623501 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.282473841 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.282290436 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.282462817 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.282636833 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.280436423 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.282168736 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.282351208 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.283670307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.284131709 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.282850381 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285395208 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.289368856 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.283565916 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.303412263 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.283820481 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.282447648 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.290640723 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.304035815 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.282826674 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.285885587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.288653192 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.289423764 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.285523655 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.287704808 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.284621892 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.281040185 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.284307163 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.286101946 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285363228 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.284099768 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.286529113 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.285964671 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.290395081 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.289584644 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.305432906 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.285045715 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.286158933 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.286047335 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.284645504 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.284529021 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.287379921 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.287373629 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.309249972 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.290577909 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.286774819 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.286140935 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.287406375 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.286456576 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.286052042 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288922041 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.289787276 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.28277072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.287420334 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.288404905 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292504151 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.285504695 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.286128844 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.287869596 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.283012628 seconds)
  done (took 94.803561921 seconds)
done (took 352.231415569 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.111807747 seconds)
  done (took 4.298946809 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.369531261 seconds)
  done (took 3.558529006 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.570066827 seconds)
  done (took 23.762503901 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.292030212 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.338927439 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.297328542 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.28647077 seconds)
  done (took 10.401642742 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.627667451 seconds)
  done (took 3.8144807 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.281676603 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.288065949 seconds)
  done (took 5.760820833 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.585502212 seconds)
  done (took 3.772321674 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.777122341 seconds)
  done (took 3.970079143 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.290783122 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.296171272 seconds)
  done (took 5.780906886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.266915281 seconds)
  done (took 3.452981975 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.966859057 seconds)
  done (took 38.15599496 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.288743539 seconds)
  done (took 3.477940136 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.306181548 seconds)
  done (took 3.494636834 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.03349451 seconds)
  done (took 6.220773312 seconds)
done (took 121.109303957 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.28105207 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.288193239 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.286441032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.287468837 seconds)
  done (took 10.330747932 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.341054073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.341298683 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.341927508 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.34129192 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.340597119 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.338657561 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.329950623 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.315556126 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.340194209 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.340530945 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.341411515 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.33893946 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.342202458 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.314675622 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.341470269 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.340896188 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.344458499 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.342314732 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31486327 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.340514387 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.290393993 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.341915334 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.340559249 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.290054625 seconds)
  done (took 33.187647316 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.787114354 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.363310678 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.446218978 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.34521599 seconds)
  done (took 7.131949666 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.369414926 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.368711446 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.386395817 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.423113225 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.432992641 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.381699699 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.317497725 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.311781496 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.298329112 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.368257131 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.421633481 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.361256058 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.461032305 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.292237792 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.498977128 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.291478513 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.29257863 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.368626817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.421372223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.444531768 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.292137977 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.37206968 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.374593334 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.360635053 seconds)
  done (took 34.101783579 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.298192818 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.304738661 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.29171737 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.307075023 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.29100822 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.291114561 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.292324124 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.298012229 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.289152081 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.291161001 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.291584271 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.305666638 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.295326575 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.291128986 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.298300936 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.291892544 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.298995104 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.295320459 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.290682296 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.298171129 seconds)
  done (took 27.104544925 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.286071148 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.287269274 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.638010961 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.54379561 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.286822073 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.290754528 seconds)
  done (took 13.526433444 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.366852174 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.531012635 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.299378884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.67236378 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.7595692 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.298969288 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.29348382 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.554321247 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88297307 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.867068212 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.3533531 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.367291294 seconds)
  done (took 19.440826265 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.295917154 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.291934564 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.293311229 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.310090444 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.349943839 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.316230962 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.301016497 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.288008661 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.356134103 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.372941147 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.31718357 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352386489 seconds)
  done (took 21.038567626 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383544812 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.289643747 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289478944 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313813128 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.289615153 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138863493 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339483707 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008303432 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.322380855 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572736715 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297411306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398577989 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.552550555 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299394241 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302600098 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.280807793 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530673172 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.818308452 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301611023 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310985364 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336659103 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307929494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.315962746 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.525064456 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304029954 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.299622797 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.563951683 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301062114 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600031554 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.318246385 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313055196 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2995481 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577079004 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976460529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423061533 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520618017 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324014556 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.301555818 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.305035776 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.313824741 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317470443 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30709385 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310537355 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302385339 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.300978194 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306321459 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.026868538 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.327145351 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.299848122 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.305455579 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5796664 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401985199 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.30877378 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.302233861 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396540056 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300074275 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.308378365 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398428312 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883345351 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304690569 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325500021 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.309771895 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309732693 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324695765 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955238529 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.310771858 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.31122444 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.309575486 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307777548 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317047127 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325264522 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306110934 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.328352803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041904308 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30610917 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312160309 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887814496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304101336 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.309854309 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536577903 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301813403 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305701316 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.305409906 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308640532 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036609678 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313714232 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.293965062 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.349729083 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012637793 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.53979568 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.322935947 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32652336 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.521296998 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.282898411 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298639468 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.313858868 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303266036 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319085569 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.018894449 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316350353 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.301286564 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556930832 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.509510098 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299702716 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.29211372 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.786237649 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316773494 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.320837702 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299621669 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.529418726 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.910686473 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314250816 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298870925 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336714669 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.298953907 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064321638 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300979344 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.40631371 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301026793 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579918788 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.113013164 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299403692 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36790805 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302910518 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.300547879 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300507267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305424465 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299465611 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.515934466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324432849 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.316991128 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.301751222 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30078297 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.308956412 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313326849 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.30814954 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.523724575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300994477 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582710329 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301160679 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302662577 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301577753 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.523981897 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.312977311 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.637345375 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.563912827 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302310124 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307274466 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317074326 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.320766707 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404831226 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.324674291 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.304523659 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561922958 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.305333823 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.306489961 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303051882 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.308877009 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307874735 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.310083338 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312767285 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.925215969 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289382867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319371953 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206311439 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.330084908 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386420336 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321122808 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.541376345 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.322279583 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325026964 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.321053659 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.31461608 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543484739 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327322852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.315814825 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41114355 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.805029783 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.943303196 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329638765 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.31649958 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.317049491 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.31566969 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319027078 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316624991 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316736951 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539269241 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.332522323 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.316518309 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934563269 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312798602 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.317298584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.32566441 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.329517425 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.324967523 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317918832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.321399702 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320896627 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318693433 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.334624223 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459391427 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.33277566 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316108831 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.835867791 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323269511 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318497167 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.31897088 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356478939 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317913259 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138192479 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58058542 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316104776 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648127514 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317699627 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.340538625 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.319022038 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321363862 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322878651 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.346041585 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325766723 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.333634648 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321000305 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33927098 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895865056 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075814124 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880498096 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320937065 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.33737374 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323804172 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05125959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33603627 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322872186 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.569162292 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.04718986 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336129311 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806860442 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.335510072 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125124397 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597939715 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558179055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323642174 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.32119142 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604784529 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532542478 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358569572 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.327175751 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32843831 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.30599877 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890598393 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337848862 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421994705 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.054215679 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338372317 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32801113 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.321052139 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.321494481 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.750093185 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343502211 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325798395 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.329074584 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335473803 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148938219 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.327424759 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.323710673 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97192582 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.338272103 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.818963117 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338237482 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.553131094 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.340316709 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.328407686 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.321194962 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.338363474 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.581981723 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605096198 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323151071 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32531391 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891911459 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.195657409 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.331656121 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32735935 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095160486 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325528304 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63011227 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.329956003 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.324356555 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345963837 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.329714352 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330930827 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.325576213 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.33653093 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301812326 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84092246 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.337728473 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323374941 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.349068303 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331110451 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.579784115 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.341929934 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942071864 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555135667 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327846568 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348502215 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.330613937 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335343305 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.317395529 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325218168 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326354657 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413964075 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.549745119 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343675742 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.313603606 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.352967775 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536982772 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32790938 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.334207866 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.584468527 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.327586102 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.353987495 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081262151 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357786894 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.337889719 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.330679194 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326941102 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.368820845 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398501801 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556070095 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.343822837 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.339390345 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.755780962 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358514912 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332214528 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34406119 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42483527 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327666566 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.33277898 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.098434973 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946603012 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085145807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.944735389 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604356728 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330532316 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341287182 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331402545 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48969796 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330897514 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.604466234 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33178554 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.327678085 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38709431 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338757523 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339775569 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.548667433 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607888066 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332651521 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336006018 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333725714 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.332365186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34469369 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.543002002 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850052498 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907254116 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330293226 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333647276 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.061999621 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622875367 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3324003 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332112027 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33502277 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.332350281 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.332335564 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.341121349 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342906451 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476149691 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.609412072 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018448866 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.360429704 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.361537594 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.852874133 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334057849 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.589897035 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329976231 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.575834825 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.95166406 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.067490574 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595923322 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404157718 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557971241 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.33619331 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493161755 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.340356333 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331025626 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334652899 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.33482192 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.331106439 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.347840396 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.955896346 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597608599 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.341754995 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.339585748 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363631363 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.346427162 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559862513 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081570028 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.556640769 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343869296 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.340082263 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332053707 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959142717 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609800537 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332761747 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336339206 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592274805 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337160475 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.359956241 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.112008639 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.33359696 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921971315 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.306968541 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359195098 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337117838 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075603357 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952445282 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.340180802 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855226115 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335730262 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337743289 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611726083 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.343613813 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.336890955 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.615962601 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.338568795 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.335316696 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568932964 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.95501862 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140927999 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.333380826 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349302953 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.336458805 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336473686 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356187928 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333537967 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334498067 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.78000431 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.356804085 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339829793 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347631968 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.343526311 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340154947 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.337780006 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339308879 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.343688037 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.364244156 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.333902958 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343015888 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435143948 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909830166 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356696913 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.00957043 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.668755162 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.595467337 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.344737588 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.326004049 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.345040633 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.340192897 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339326901 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337837768 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340494823 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.933542104 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.344724154 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.354779448 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.340504427 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.340209224 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553147386 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.338256006 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582421432 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349923471 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.357164853 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.324001557 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341521335 seconds)
  done (took 951.921933466 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.35215857 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.366908587 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.386210359 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.416292557 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.363879621 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436493744 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.38943719 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.46122466 seconds)
  done (took 20.410422932 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.349246652 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.348053637 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.341845398 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.346946986 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.352300879 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.830192661 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.366848962 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.350902274 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.358134459 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.351377101 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.343017582 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.325791822 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.34945683 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.35543624 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.336853573 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.350866144 seconds)
  done (took 32.304428121 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.380529662 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.519725226 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.403971979 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.424706155 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.376958687 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.34178779 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.617282472 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.355412526 seconds)
  done (took 26.664164297 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.355047496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.353186496 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.356416491 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.356970888 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.356608114 seconds)
  done (took 8.021243822 seconds)
done (took 1206.374784009 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.344560305 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.346344374 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.34625376 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.349940589 seconds)
  done (took 6.627700207 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.327326464 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.33088302 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.332452984 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.344615463 seconds)
  done (took 9.579275789 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.094005914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.021331426 seconds)
  done (took 5.357226208 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.836006428 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.829566359 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.833239186 seconds)
  done (took 6.742613435 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.640766437 seconds)
  done (took 2.886248713 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.254537157 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.347372948 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.019659934 seconds)
  done (took 7.865875519 seconds)
done (took 40.301167164 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.356418376 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.587609711 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.503788649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.356968377 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.503325231 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.502041792 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.110919435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.359282398 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343900823 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.353279316 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.355603277 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.504547707 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.089444862 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.591845907 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.091042521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.593068379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.503586968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.345002294 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346666527 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.342119413 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.109995932 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.343281201 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.375743173 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.341940463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.505972058 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.491136662 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.355986133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.595517991 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.359117 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341522192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.505624722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.349972478 seconds)
  done (took 81.66146929 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.3476319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.344333933 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.359612604 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.360862874 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.351770298 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.343880458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.364727919 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.352287357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.341961922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345669822 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.360850148 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.344741255 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.343623768 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.34354447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.34685107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.340693417 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.351890794 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.352656924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.346114656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.360118334 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.34502143 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.345486663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.377480529 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.344403183 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.366579434 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.348541876 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.36524725 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.346047412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.369731078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.347977882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.348087543 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.358980511 seconds)
  done (took 76.514994742 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.357776729 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.356608906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.345707153 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.355571125 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.35730978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.348403683 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.349425351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.343998351 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.346329177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.346089407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.357677362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.353426077 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.347975366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.348393024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.349015181 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.350461302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.347904898 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.348050844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.365327492 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.356386138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.349646338 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.355480185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.348850311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.359843565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.348514714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.355419552 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.347331167 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.35125876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.364355243 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.349354096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.355254389 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.347172178 seconds)
  done (took 76.511258566 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632848077 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.356719685 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.361837127 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.353297271 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.362508727 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.36064129 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.351147323 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.636479795 seconds)
  done (took 14.665880832 seconds)
done (took 250.597579357 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.351648875 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.910004244 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.39657106 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.359877928 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.378370933 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.383081419 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.586185586 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.391468336 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.585863781 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.375891568 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.37821992 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.365705861 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.198399713 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.507351307 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.24143569 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.352891853 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.286173605 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.351457784 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.96686356 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.631828517 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.375336833 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.352045933 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.232426662 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.303073907 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.338824252 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.444364928 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.466026491 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.57359482 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.525703777 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.444682289 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.910828409 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.351689279 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.368160622 seconds)
  done (took 63.937350812 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.362958411 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.478075295 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.363117286 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.361536604 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.483284124 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.366056694 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.360478417 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.36241066 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.362529253 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.364051913 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.362848873 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.367679627 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.366084762 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.407200616 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.482443858 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.3837044 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.36405859 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.478869644 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.361890089 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.358671114 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.407066362 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.366956968 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.367525024 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.40974468 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.36692562 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.367774726 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.48187178 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.36648116 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.364735129 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.478872102 seconds)
  done (took 43.029482031 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.36698255 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.978203857 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.122352599 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.368363849 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.363094778 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.372480464 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.677594241 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.368388475 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.368010002 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.369844181 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.878353464 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.364367295 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.401680187 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.15047805 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.366782554 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.364427187 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.367008813 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.36734661 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.98881054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.371097142 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.69556389 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.363889851 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.678919663 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.374820691 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.388412961 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369168013 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.369933018 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.240034169 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.366412048 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.880962386 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.18495407 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.673433449 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.176148925 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.152597949 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.190695426 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.369727205 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.370473709 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.880870301 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.364486305 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.366769592 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.680606765 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.372378538 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.152608602 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.079192683 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.388369261 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.370169327 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.250592689 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.885349969 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.633813203 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376305894 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.174111376 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.374880223 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.368491977 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.37097979 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.631549702 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.372083312 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.368202859 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.314183901 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.371303981 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.679989305 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.366263096 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.372821488 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994348903 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.372515888 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.988437029 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.375713222 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.378831747 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.388494558 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.160378004 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.373369804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.090047144 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.385955224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.369824994 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.892294624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.991783848 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.309404496 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.369128149 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.001292402 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.20694109 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.671560959 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.372451506 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.210222225 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.676141632 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.368834709 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.372272802 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.372216206 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.370404172 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.445928152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.672791147 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.026718911 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.078893884 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.306141617 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.676030911 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.376583145 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.370555095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.2936383 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.368288204 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.374326194 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.146437484 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.097251463 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.388268302 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.382636909 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.103003045 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.393642467 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.679166401 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.375524192 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.166149687 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.373333362 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.44858821 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.373188473 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.382813829 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.394874646 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.682114781 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.372383181 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.37451966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.077384534 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.925352824 seconds)
  done (took 193.837626873 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.379715186 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.365140472 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.371438715 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.365225291 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.368197393 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.377098554 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.368311869 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.368371658 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.375432816 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.36801641 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.368964971 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.377879434 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.375028085 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.370784288 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.37579874 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.366670286 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.374819465 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.378350739 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.363363898 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.369045256 seconds)
  done (took 44.692597985 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.37559549 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.994571323 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.94845076 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.378515622 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.372902542 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.376774657 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.436612377 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.371195 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.374194586 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.693195136 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.556056408 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.389841574 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.375634171 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.374901287 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.951864699 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.367416175 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.695662348 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.988248253 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.378787724 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.993486286 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.368957245 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.379322871 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.378694876 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.98236522 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.692244261 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.676362775 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.431884873 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.972853929 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.371832539 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.37525919 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98211781 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.375317733 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.377441878 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.974873624 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.389819578 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.392127835 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.378494584 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.441491851 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43615345 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694983339 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.059480239 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.687078623 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.391574787 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.624890415 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.378394218 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.367887323 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.973490845 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.391803355 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.367306198 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.379214963 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.382808943 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.955833523 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.394608116 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.955190714 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.393095789 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.380659482 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.994539518 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.953900313 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.972592986 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.562787823 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.387523919 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.692059735 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.377135808 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.000916983 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.393280955 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.378816136 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.382043868 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.565237486 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.01051086 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.691237237 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.712319987 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.707076275 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.381384754 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.44139197 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.390793099 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.77063653 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.440433903 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.939398497 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.712048516 seconds)
  done (took 126.676622861 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.665800426 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.48954583 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.810264933 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.029233574 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.37379559 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.506457475 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.4909362 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.640675349 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.374425626 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.449915082 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.08323164 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.481082547 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.139489199 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.45129437 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.474983464 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.522473612 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.793935609 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.378965854 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.044347699 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.057475139 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.378657929 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.491707145 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.936744042 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.607711981 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.375302691 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.91565028 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.373921532 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.076933191 seconds)
  done (took 53.685425065 seconds)
done (took 527.111733554 seconds)
SAVING RESULT...
DONE!
