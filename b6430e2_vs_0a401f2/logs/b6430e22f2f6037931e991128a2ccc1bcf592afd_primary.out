cset: moving following pidspec: 29583
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.352530067 seconds)
loading group "string"... done (took 0.564023068 seconds)
loading group "linalg"... done (took 7.674551324 seconds)
loading group "parallel"... done (took 0.171216383 seconds)
loading group "find"... done (took 1.284323483 seconds)
loading group "tuple"... done (took 1.961813176 seconds)
loading group "dates"... done (took 1.428080911 seconds)
loading group "micro"... done (took 0.248175615 seconds)
loading group "io"... done (took 1.014933299 seconds)
loading group "scalar"... done (took 41.512169569 seconds)
loading group "sparse"... done (took 13.602384106 seconds)
loading group "broadcast"... done (took 1.043888867 seconds)
loading group "union"... done (took 14.290022201 seconds)
loading group "simd"... done (took 4.798374732 seconds)
loading group "random"... done (took 9.708162408 seconds)
loading group "problem"... done (took 2.014292938 seconds)
loading group "array"... done (took 22.71718898 seconds)
loading group "misc"... done (took 2.040403349 seconds)
loading group "sort"... done (took 3.469383387 seconds)
loading group "collection"... done (took 19.675454014 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.575557585 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143596792 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150792979 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130441036 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206787049 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158325808 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15875163 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099124103 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.978040937 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175272547 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154301115 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528742631 seconds)
done (took 5.204844838 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.256465702 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095316003 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104615673 seconds)
  done (took 0.887879609 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077979938 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14605348 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094997849 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0791973 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095826231 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078657304 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095173718 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077957702 seconds)
  done (took 1.360004613 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087345365 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098234159 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082602904 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09657424 seconds)
  done (took 1.057901309 seconds)
done (took 4.337878188 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.741144971 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276005045 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204565627 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.465952212 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.19782502 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218466087 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.676398652 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.366620547 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.255560307 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100117149 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14441109 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388281136 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138108109 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.696562215 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091063758 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124712766 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.186330328 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.464252847 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083032482 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110848562 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116756838 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143711014 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128591119 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091925985 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184594099 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081871149 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19467828 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109253026 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081196335 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27795057 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.205207199 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691254977 seconds)
  done (took 10.968842635 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111406005 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.135533411 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098004862 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139026273 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135201714 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100620678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084003315 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096251923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122909387 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178436131 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115263228 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136377677 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095079058 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082395482 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115297071 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244784117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120512019 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099016067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100542801 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088422881 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138225864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113021793 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109697809 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094078218 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167598597 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221266714 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111498566 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12686636 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097260685 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112234134 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144169671 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142539616 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094909258 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081099666 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173939971 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124812557 seconds)
  done (took 5.162169763 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.089101338 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190207542 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122097884 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170380705 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081819649 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144188305 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095261236 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113003591 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257486931 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120218696 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.15963726 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176002394 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141010481 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.1015068 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09803456 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08342817 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097752281 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.562302914 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158483563 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135191016 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097012879 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105265224 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100799468 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364718709 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08796339 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096565851 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086390135 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083137249 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161253146 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081692907 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.141066298 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.12399088 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100864958 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132487835 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192291867 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125680219 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118540226 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09672314 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07885388 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.19116749 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087963366 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.097879845 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103524892 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135287006 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135138461 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098738865 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080630702 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.205545723 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096728193 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113673758 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.93277446 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180576625 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090400522 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095745095 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.325989336 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.099483266 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102792233 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077891774 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278320921 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.189470962 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.099451064 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07902073 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097376468 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081596061 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.414319431 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081765007 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.741659635 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085762936 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10811684 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083236426 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09691562 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104672439 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087384547 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115369267 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079934027 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095046797 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079333713 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096762056 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077522109 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099871849 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081084639 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10822898 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102006613 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080406633 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165907714 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079191433 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09532344 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.098782644 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128566802 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099126631 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078578571 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132934303 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099985042 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080570709 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134651446 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099477549 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106994177 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083413448 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144404731 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097320598 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.145825629 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.094603008 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123516419 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099829037 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11456616 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111458699 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100090454 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085684149 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096267316 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077379898 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166575543 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080284944 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098715438 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081457313 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111273235 seconds)
  done (took 22.442639971 seconds)
done (took 40.352411204 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324628565 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104919165 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103703886 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103143528 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101582714 seconds)
  done (took 1.505102311 seconds)
done (took 2.243638045 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288519394 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17448542 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096619596 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.167025522 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093609842 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173250925 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161700228 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112159584 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.202023261 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095762583 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161020811 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093709468 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078242486 seconds)
  done (took 2.665520623 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095151138 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115649002 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08326341 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111240757 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077124806 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11131083 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0933696 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117254974 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109688295 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086430726 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093693582 seconds)
  done (took 1.832738054 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095460249 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113539787 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082721859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110377926 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077144492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1109001 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093137312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117224792 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11046346 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087113241 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093816623 seconds)
  done (took 1.828287731 seconds)
done (took 7.055698475 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092342485 seconds)
  done (took 0.825822353 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935175225 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.786870119 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113046457 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.150424372 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299721153 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.190977393 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.470603131 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124340851 seconds)
  done (took 11.012923016 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.147147136 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087554599 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103800045 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084358789 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.103746096 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086358149 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104493191 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103429609 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085798222 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100062091 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086346426 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101640877 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099761266 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084235585 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100655195 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084098584 seconds)
  done (took 2.361986651 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120522987 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118614713 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107874945 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108905134 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088892278 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105923282 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107865541 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088501945 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.102919882 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104292482 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090740038 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106530552 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104256644 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080481325 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10709399 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109071581 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087257712 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107244468 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107537964 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091041698 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107575809 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097003912 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088529951 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107411361 seconds)
  done (took 3.29451772 seconds)
done (took 18.231503137 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.162682795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110202241 seconds)
  done (took 1.014798773 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096181949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113862344 seconds)
  done (took 0.955091067 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098302151 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096929065 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124010202 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110321726 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081253475 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096990652 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120886422 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081162283 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097734477 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080845 seconds)
  done (took 1.736690827 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083929691 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110061659 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102614009 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097378306 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107028145 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095227059 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089627427 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099885711 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110767508 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078088551 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102764582 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115407865 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.08703405 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117546418 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105169403 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083381656 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104562625 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09929152 seconds)
  done (took 2.540617593 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081258144 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097952106 seconds)
  done (took 0.92861879 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082335378 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094897734 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082259025 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098189324 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094392592 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077811962 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094958813 seconds)
  done (took 1.373631672 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486377631 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135800447 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.261850224 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085168313 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121142177 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303386701 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098945606 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085334655 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104489013 seconds)
  done (took 2.489415848 seconds)
done (took 11.78341704 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094500449 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116802233 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114275684 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467742276 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108121895 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099643396 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.148589647 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253055911 seconds)
done (took 2.159672854 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.1455582 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606397245 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.428671447 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.233328928 seconds)
  done (took 2.025591852 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.405991743 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09927855 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084427244 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082491533 seconds)
  done (took 1.432165111 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08087896 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100265713 seconds)
  done (took 0.940730461 seconds)
done (took 5.304595369 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082278291 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097319487 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079262859 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097162676 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078918492 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09484322 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.0818302 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097567072 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.081452023 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.096997719 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082064655 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094778348 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078913203 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097375625 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078379969 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09491276 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131110605 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080929677 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096043916 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081192128 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096633614 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079030625 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096246188 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078129033 seconds)
  done (took 2.947883954 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101046477 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098939554 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103537252 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08675506 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102270267 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086734594 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104348179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098988824 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086616977 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101448927 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101387614 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086417514 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099980988 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085859531 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101332158 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101652033 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087244279 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098813795 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083621729 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102931061 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103115171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082355442 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102804403 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086548336 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104102123 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101612729 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083718456 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099424724 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103920098 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08603595 seconds)
  done (took 3.636303372 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085457464 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09470338 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079387867 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102191074 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078443009 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097381865 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07850191 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096273329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079951663 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096474926 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081196093 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096582012 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078412337 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09806788 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078872043 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099563211 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107683917 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079942976 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095705291 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079462889 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098944561 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079406949 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09566284 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078696927 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095575528 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07892877 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095647592 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078852451 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095842398 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078523184 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099221936 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082543575 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096135517 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08508287 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099591846 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077850447 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099395909 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077252738 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096920104 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076959448 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096209783 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095050061 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080089193 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102045823 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079633515 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097251406 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079587382 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097347992 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080132276 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098632809 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079182519 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096149712 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08028316 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097794467 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081745881 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095353032 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.079341244 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095486079 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097148561 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078968648 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094971219 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078303635 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098179232 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080675552 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111038281 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085841292 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095390152 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08131101 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097652074 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081844738 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098290604 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.092539106 seconds)
  done (took 7.200856074 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085047584 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107223893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081715806 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098511549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077759397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097624185 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100289693 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080643488 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098007463 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086733084 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097430913 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080415927 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098760642 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108702174 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080784916 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098315402 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085707674 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094531193 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080212675 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100385564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079576179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100883703 seconds)
  done (took 2.78913129 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211438886 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106091668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143056365 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107773073 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084071643 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107612475 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102736266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087728361 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103562215 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08434616 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101475729 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10308664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083801936 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101581398 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100609431 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08575965 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103008495 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086515642 seconds)
  done (took 2.675088665 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.203917612 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099612774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102742348 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100727401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098700419 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.0846316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104945363 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108063328 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084329814 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099728253 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091115222 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102063111 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101241999 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082693308 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101342935 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082043898 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102365697 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082102208 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109636668 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10547473 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086732451 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109397438 seconds)
  done (took 3.016507404 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098787894 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100998656 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118196766 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085976019 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095785096 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081383268 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106760737 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081809706 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108478435 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100339604 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083248857 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097309772 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089743608 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09973148 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104223608 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082650964 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101516209 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082484328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10235362 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078434185 seconds)
  done (took 2.675193017 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104406031 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102316377 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100014758 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093364925 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101443164 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082962549 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110659952 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101459928 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083094518 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126137345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100866038 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082280834 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110230137 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106844218 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099854888 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093178171 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110653478 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110507285 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082973209 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101484753 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12603953 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083459681 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110384058 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101540679 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082537374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101050114 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100708235 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089005517 seconds)
  done (took 3.576283312 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082284266 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098799997 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082874819 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096403541 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080457967 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096517879 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079799485 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096391895 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082347414 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096353054 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082437921 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09908081 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082151839 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098829287 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082163152 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099694608 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08187628 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096972312 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079455048 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097127015 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08230861 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099294601 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081501241 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097639115 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079418321 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099731689 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078994854 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097319023 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080858734 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097880763 seconds)
  done (took 3.465793562 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093064735 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107312991 seconds)
  done (took 0.978398271 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080601312 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115168937 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07929017 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103806464 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086449879 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101197535 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108257076 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086750978 seconds)
  done (took 1.540031088 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097471841 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110940245 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084011709 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113615332 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110119267 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09885487 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172725133 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10271368 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087952868 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099715543 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11333411 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082453636 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107154835 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082777374 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10694521 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089141487 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098472701 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105537518 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086361526 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098820077 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083373858 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113072713 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083968569 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097376168 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100820211 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092812834 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113564626 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083282926 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103681243 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106955535 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08922205 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094126202 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082924277 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101978665 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080435806 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110407755 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11790009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085808473 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111080742 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083349327 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112830952 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095098362 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087433496 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107152308 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093096018 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10239595 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.1011486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078382903 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097880776 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085885719 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09586454 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083671864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096495831 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089834001 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105220657 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112564682 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083414011 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101802055 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08649509 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105215666 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089872565 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103623445 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102931579 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083354615 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108085029 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088157412 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111884497 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077294826 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096011844 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080045889 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111804861 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125054624 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089017389 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101622845 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101577774 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080917085 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104311662 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084259924 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107792288 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088429107 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101651827 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107481041 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090047723 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101267568 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084280636 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109712553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098179568 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085127033 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097914594 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117705222 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08268526 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098232795 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080823337 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.112593181 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087044109 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101134908 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080096029 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109233598 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075944381 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102444033 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101861655 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08415044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11350479 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106138295 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089905861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109815263 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089478136 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101430216 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103637102 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079879079 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101872899 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085931071 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107724688 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076918874 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10439968 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083233852 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102296796 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109409806 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081735234 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10142022 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090985185 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107420362 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080730967 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09790074 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085166699 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101646553 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104782049 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091506752 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100201934 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077436497 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.0965461 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084979113 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101349422 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103872893 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089765284 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104586157 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077414359 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099400538 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105290277 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09175815 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101605648 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.084046445 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108273462 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082777864 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.100924958 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106672519 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086134582 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099480099 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089194246 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102288493 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077738823 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105530274 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103578106 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.08195685 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.103882663 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087427595 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104649746 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083941144 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100450942 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107104889 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084709231 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.099399345 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083504139 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099483698 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093751445 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104405404 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.07703083 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098560024 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.10830841 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080738362 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100909079 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082599069 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104147047 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083254407 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.099839748 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082283779 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.103872467 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113741948 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088093693 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103675486 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.106517292 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095239446 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100983148 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08565024 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101351326 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083744187 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103326243 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110250118 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089448163 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106763661 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084754783 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.098356959 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107519413 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090865993 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099793007 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081916544 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100737683 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.087722725 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108253272 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.104251963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08525271 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099565782 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08466165 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105764137 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085949983 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10238861 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080768765 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.10702883 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100387707 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091435616 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103351877 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111277902 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086982365 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095700591 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087459022 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099916289 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08808978 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097202642 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080178348 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.10139228 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101970896 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083520979 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10374752 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078275643 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108154231 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091005081 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102377981 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081606007 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102909526 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107509007 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084989141 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105402229 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086628275 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108480207 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111691518 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083890291 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.104604991 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094413664 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102693067 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076515941 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10831829 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081159133 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101819305 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099950803 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081817967 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103800121 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093299064 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111006301 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094853198 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086534041 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099783762 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082336802 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096834262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088416082 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104625306 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083628709 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109382211 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102213967 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.08688426 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105162349 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083512217 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103621064 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.084560604 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105440066 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102570495 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.086121621 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100071192 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087677512 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101183619 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082037339 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103616449 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.083064485 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.102282614 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088020532 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10252505 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101663774 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.085963176 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103489773 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084431942 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102867725 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082102782 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10563934 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082908862 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103160412 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103928837 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079688073 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108451489 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083656894 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111335028 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082708811 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09907581 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107649918 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086262929 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107054591 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08488195 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.103312549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084325941 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102441363 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104285784 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091457862 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099374934 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094836824 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111747355 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102131625 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087301387 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.100857851 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085470371 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.101466949 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084128223 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104412379 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083852511 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.102438353 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105897215 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087026772 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100958109 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085829994 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103651976 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083892064 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.103397705 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077677086 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101625741 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.08203301 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10279525 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113302385 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08421862 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105617931 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081724762 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104159874 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082240355 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10047396 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110217776 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09366655 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104435841 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109116635 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082725672 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.102955214 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094515603 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097232099 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081396381 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.100933754 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080909242 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11170324 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.102990125 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102836648 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101478341 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083162914 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.099261979 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085219259 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10112859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077355227 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101322074 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105296507 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08657268 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100624854 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084606871 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106175367 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085651827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113938803 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100704207 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085687206 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102298468 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081537265 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100626638 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083116419 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105344228 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085072373 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101121801 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081187989 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102851257 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.083773868 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104567142 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101398797 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086190417 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109811223 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08402899 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105758137 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08664498 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098648505 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105134514 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084476503 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102072551 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083519722 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.10715895 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08635898 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104038891 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111861447 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084582341 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102710973 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084554068 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100883637 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083279492 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103616419 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083257913 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10262696 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103755444 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093401145 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100334375 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086266811 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102645246 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084187412 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111705895 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103983221 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087323476 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111604693 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086175774 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.104733546 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.109559072 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089198379 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105936945 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085873331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.10486982 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088701612 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102077566 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108607819 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084598784 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103154533 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085138575 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099956987 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083549696 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103822535 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082307811 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110173937 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103077335 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083569682 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101277907 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082965323 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103319346 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088328055 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111651854 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.085794446 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107343194 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097614989 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081760235 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103884883 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081944707 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.104870215 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087531611 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110056951 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08651103 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104363603 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101939309 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094629238 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109313093 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087124397 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.10217696 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.087370941 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105931977 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104118075 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085530819 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102282369 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086088193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107677786 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084641146 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103728415 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110022449 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088895517 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104134654 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086269445 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103999603 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083561969 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098522459 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084389445 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105447105 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107722643 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087454762 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102400692 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095027554 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103825772 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083707261 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108135132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102211424 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089787146 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097910751 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085803728 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104571174 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084466628 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099905865 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082652295 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102578017 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.103925105 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083713048 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097780205 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095381772 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113501687 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08714277 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103918872 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100915828 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080048177 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098012026 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084086536 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104839724 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085897887 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115077775 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082107311 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102985738 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097222531 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084414779 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105459496 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.0874887 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10056798 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.07908259 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102304941 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08725451 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109813262 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081206135 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103930988 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106282639 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087176181 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101944247 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088089693 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100707085 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087064526 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118193404 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104364778 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085400224 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.11064881 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091701973 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105720266 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097458752 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085774346 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106571099 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084372351 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105519593 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084578702 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120935373 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106730655 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.08341908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103604079 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087111028 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103098296 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111443549 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086681976 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103184418 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089327008 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.105694014 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092442589 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107210661 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111463664 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087885854 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107216423 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081913589 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105809796 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081646487 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102937794 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103669622 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086369992 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10874756 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.092308508 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104181327 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114091103 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094494761 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108339577 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079989664 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103303472 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082820626 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099883777 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086929803 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102072423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101407948 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082855901 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102818681 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085897874 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109991748 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085217966 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105777995 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083385965 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098809441 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086115996 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106985371 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104232185 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082959304 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103186637 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085674674 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.107933315 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08803703 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104114212 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084798697 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.106816363 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103793772 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081232796 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109822461 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083781253 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106715881 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083507387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104721579 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085046997 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108605529 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108859027 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086492794 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106869278 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095942037 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107378959 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100174801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082313685 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.10897126 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082921569 seconds)
  done (took 58.250065193 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148373931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082298112 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099310094 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080095373 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114438982 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099736597 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080648375 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099871675 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081249445 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103815892 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079138711 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099655934 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108397202 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125200496 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094273563 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105059616 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078484185 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101261084 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098544986 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08174419 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109315317 seconds)
  done (took 2.901911264 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105390153 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119556611 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116350725 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.120188065 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091019686 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117115543 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115293261 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115656165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100329768 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113517454 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119870621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115783198 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092048224 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112698236 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111207672 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094079104 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119695114 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110315212 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.1165839 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096744286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114186843 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115415555 seconds)
  done (took 3.263105423 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085422661 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102836625 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086122071 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099162604 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084031356 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098870488 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088413157 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102434098 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087117778 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103440204 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0822221 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103446482 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104867956 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079575957 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103187728 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08226727 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153478454 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108262905 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083080196 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10615261 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077511964 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107177693 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098608568 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081900679 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102230827 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08861484 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104662337 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081492838 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104546982 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08255752 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104305821 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081186285 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105957928 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102719745 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083966494 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10213495 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084195926 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102980699 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080271484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.10134866 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084888567 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099673844 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084002761 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106633715 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081400102 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102373485 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084411499 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.104548994 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077740277 seconds)
  done (took 5.480631122 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106659485 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163259199 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087740205 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144828019 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121578581 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113188781 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087312573 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143174246 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104293435 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083755044 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123573801 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.122152021 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103970198 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089926866 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.108809281 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103784247 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086876481 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103932081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.087739218 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105163481 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109107144 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090905254 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121279157 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119511915 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108129935 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084596951 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.1047643 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088704317 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11980621 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109895299 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108449536 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091370113 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121520679 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110511315 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083911115 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107516833 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123455271 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08456078 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108602146 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101301051 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087336148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109586057 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110851054 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103303074 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105165354 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109712088 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084902647 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101270892 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118775243 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088145162 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113363363 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.12114652 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088815483 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105271067 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109661501 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.1005449 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105049998 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102852791 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088174746 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118798182 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101761478 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08951245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119951397 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107775738 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092468767 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121173705 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111241434 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108574 seconds)
  done (took 8.191223297 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095010841 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112336759 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121291064 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121633672 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092279306 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112634584 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111666293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092808245 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112380797 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118247424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110992292 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135572532 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087199339 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115965341 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111354665 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092618025 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112598854 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11257005 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091620204 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112011848 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113122906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120810112 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091771549 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121727884 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142852662 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107245757 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091882745 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112507057 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.1218612 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111415172 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124776409 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092132702 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111934483 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12201373 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124931438 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092376934 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105136094 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110427861 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092708564 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112502921 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106108639 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101895498 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112212421 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106917624 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092511852 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112585604 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121514227 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126019188 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115278207 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097444293 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112509759 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121322592 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110704844 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092650518 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121867844 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.148228557 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122741564 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121764824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102875048 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122252623 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130388181 seconds)
  done (took 7.748618593 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108741057 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1164969 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118953925 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10040205 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083578329 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110338955 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083368726 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102985515 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114525395 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095459985 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118391966 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110141594 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092691221 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118399197 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110043109 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112411421 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08990475 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110676145 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115913476 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088916366 seconds)
  done (took 2.944446773 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095168718 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125316121 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086210074 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113905468 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110089724 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092419391 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108521697 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108498444 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08783172 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109093254 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096885255 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118693896 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106724561 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091553379 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117730763 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112479601 seconds)
  done (took 2.52859642 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101776636 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118959621 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121521743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083957997 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105685362 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080610206 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107541146 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100913398 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082127861 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121418737 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08501362 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110763895 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105839348 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083618692 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102414834 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087742601 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103123686 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082886191 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106734266 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120742849 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097301587 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106144776 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085694599 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109948947 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106375508 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090774933 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107463917 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10309546 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08522282 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107416896 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085902505 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113857673 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102524227 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.085595098 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104679454 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084088056 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105688994 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085790957 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.10982911 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104824113 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084718278 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105409223 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085284061 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107833908 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081726016 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108040523 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080309056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113428092 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102888385 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086093324 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10634227 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086496676 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108203101 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116812827 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089391282 seconds)
  done (took 6.306124371 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101195242 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110583668 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08103108 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104453025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087598749 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109272192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108935525 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089294449 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107675254 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08332645 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108179307 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089068671 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108351853 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108447153 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087941542 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110267061 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081490592 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108369618 seconds)
  done (took 2.638045474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092551973 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106102085 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093521608 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107575339 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085946286 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110391832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080920763 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10529908 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103524517 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086509083 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105325631 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087929447 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105078999 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087419186 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107359733 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085331062 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109458383 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103610207 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086984647 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101899135 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089326091 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104730472 seconds)
  done (took 2.998530367 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119227053 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126639296 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093120538 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232934114 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104879821 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133941234 seconds)
  done (took 1.662532717 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11006318 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122256871 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106691457 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108351839 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116551266 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086624542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1091989 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109086264 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118106871 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102797611 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109486709 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11902431 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118091539 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098274369 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116507477 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116332095 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107986422 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089720189 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106809411 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128300538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088305595 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11975635 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109059887 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0876075 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109687969 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117967943 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118916707 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10160019 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109321024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11941694 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113972809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089672011 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119646685 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123735142 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088816237 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119167756 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10906576 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12941754 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114018248 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098159601 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109996179 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115711465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098863626 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11573665 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11921561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108451234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094166769 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109484964 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108244707 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135709866 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095367158 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11937676 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116349657 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119020356 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098411559 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136306523 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124435466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119156606 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115852923 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123911845 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11807814 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096098977 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118667218 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12368204 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114702327 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097458818 seconds)
  done (took 8.196155149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10373423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127151597 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1089842 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124245802 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097864288 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109483672 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107888864 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088454896 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109123654 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106706301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153873356 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089802546 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119902728 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118906714 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087808798 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110426622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109288023 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118652871 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088483746 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137809769 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1101615 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118486918 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09759157 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118686761 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124773675 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11599644 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107955867 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089520002 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109349557 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087928817 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115944986 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109922702 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119934768 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087380699 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118629027 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109374957 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08783094 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115710726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110330363 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114880457 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099328304 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129839516 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110391052 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108768982 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103206248 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110887767 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108565038 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088161932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110071674 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107612316 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104186544 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12465297 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124921375 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11921819 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108533042 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08845815 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109777423 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108865208 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089167605 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116423296 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119097972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089275782 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136315475 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110031138 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109347051 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119438566 seconds)
  done (took 8.106016481 seconds)
done (took 156.472635475 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.23105357 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.204110035 seconds)
  done (took 1.291291167 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.100766223 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138276246 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096448192 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173168029 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107106025 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120813875 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138922076 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097374151 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108772438 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086581989 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108463621 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088128556 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175338603 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.086366241 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108010237 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108338673 seconds)
  done (took 2.705638106 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.120128425 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.233444058 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.125805613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10603527 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091785521 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111036498 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084181719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113425795 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089229206 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.107717854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088110002 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108989681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084627604 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109206548 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110691707 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08985045 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106813126 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089208009 seconds)
  done (took 2.834358409 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115320029 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.1494497 seconds)
  done (took 1.135513534 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.245020237 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164726225 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232189513 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.476630823 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.278180849 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368657121 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.205226193 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.215674918 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169023637 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.213236765 seconds)
  done (took 3.432445148 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119892518 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18186193 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318276852 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156316956 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10791048 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131378803 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157642936 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131878653 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123357445 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102423159 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124476773 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11978304 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139117276 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095569033 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116933246 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118676223 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122610143 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116185976 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115486641 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.09725082 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139164228 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085263934 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117938167 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114380076 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098765688 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121262966 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107522666 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086448682 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117471221 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092992722 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115635796 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126302732 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.11957209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.157609555 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.123150106 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158693627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118564082 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092061722 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116526534 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091211322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120836564 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12037357 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124544416 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.099491447 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107230654 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098569808 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108074739 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084814929 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116743016 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120105514 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095143167 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115344242 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155522318 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120720491 seconds)
  done (took 7.454270402 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.793899154 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161773002 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089623466 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891263181 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136574932 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103116322 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783568959 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115612417 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257726415 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.760871342 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134871857 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120433446 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.20704423 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260453493 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.927848496 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287600189 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698444402 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.105437583 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151790083 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154025026 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118832784 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136646114 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110334765 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431477148 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118072824 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111785569 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096270641 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12067172 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160416605 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127078461 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114547508 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179135884 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248316483 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206788726 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093077495 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112757928 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11189443 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171168315 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266668627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192780952 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181064461 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110169012 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089088582 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124018515 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134169424 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108048056 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165638931 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173124406 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.170543363 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116184167 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120407565 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098209486 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122968647 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165386501 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.123951089 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312352304 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321713058 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088756278 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122069586 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126940361 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260703973 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102039981 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227911906 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139802739 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21130725 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090492279 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778751974 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170781776 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111679833 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095366526 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120730655 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117647001 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098393097 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168664843 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407890266 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125829736 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115138885 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089724292 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230159567 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102601273 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113005628 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162237493 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117368253 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120864208 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102742731 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124329379 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169548023 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.252922649 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100475492 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120814774 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116548744 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.103690548 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117927562 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212952291 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221185875 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16181524 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.23501154 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099618158 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.18580676 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.170403172 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119087448 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.174534804 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119847582 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102312786 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124117337 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219679774 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146942358 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123833433 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094812011 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119461534 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149150124 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127376059 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096870866 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.193690653 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.46003026 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168090109 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.110578921 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127997597 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09929212 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184591467 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095834872 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264239353 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122992749 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170752533 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119446885 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087943949 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120562777 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164170505 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122628748 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120660513 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101810348 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119753909 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235463097 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218253898 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121304255 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221958851 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185214448 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119399519 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17382804 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12234119 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168842476 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121333491 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098589226 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118336857 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772883165 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122602725 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099360231 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117118771 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187899717 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089514808 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125525511 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126293796 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086389314 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.800743954 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128528135 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120573969 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103326602 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119283386 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120347581 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095765096 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116891383 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16179169 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232206208 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120467829 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097378503 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125872339 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161528507 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118645692 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12574439 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102283258 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126833649 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123528418 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114981645 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103820457 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191884826 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164753997 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219857669 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57659937 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112665015 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123900976 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208032039 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114014508 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292418579 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097054609 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.227032248 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184969529 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099947505 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321196236 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16509574 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188059973 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127816096 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173019823 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110917719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118811575 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16774402 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089441882 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118772724 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.16286055 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125674495 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12435187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.947091248 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090587688 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225783427 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110582991 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.173066659 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11914842 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12073141 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268285795 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113670292 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128289468 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165822483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115725037 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.102689819 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.868544128 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125981719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.09992554 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119688096 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.223802699 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164276503 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120579833 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118616975 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098561825 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163411278 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232464463 seconds)
  done (took 44.250582814 seconds)
done (took 63.963824768 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282035541 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217599518 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271147505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173372385 seconds)
  done (took 1.917640436 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173887939 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150846111 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122813286 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109375254 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152878807 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084714432 seconds)
  done (took 1.688345477 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364775469 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279315538 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244358907 seconds)
  done (took 1.786291523 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.32147887 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.249429055 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472667947 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326598306 seconds)
  done (took 2.369638749 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212163622 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133926449 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111842797 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103473799 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200281842 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249492299 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143505659 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203088542 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099663991 seconds)
  done (took 2.401394234 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.199435089 seconds)
done (took 11.260383561 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.135061443 seconds)
    (2/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.259647722 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.2361636 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 0.198036404 seconds)
    (5/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.12476581 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196578844 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.229601108 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.1322333 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.162756807 seconds)
    (10/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.23004278 seconds)
    (11/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.258873009 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.126413219 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083044518 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.172480021 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.121082162 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.25901171 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.178553631 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076400114 seconds)
    (19/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.149894548 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.152718267 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.241732794 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.121352317 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.140653053 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.180396933 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121171188 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.10031652 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.132644246 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.261881206 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106381977 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.122780258 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.182922306 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.191562164 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117018923 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.11808343 seconds)
    (35/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.182782733 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.136917766 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.099668703 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.121245323 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.173287263 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.119400714 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.201847855 seconds)
    (42/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.129648077 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114339815 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144302346 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118064093 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170762825 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111684456 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.201778846 seconds)
    (49/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068507895 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.118217994 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161890627 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.234258877 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092115152 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.136470178 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.216425264 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096546751 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.21844653 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117531279 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067326281 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076492626 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.14128009 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174416943 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.076348008 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.192787498 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113250983 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149837469 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.196490942 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.115585077 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068166862 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115154061 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 0.087591987 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.109133813 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086638022 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115634588 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067207692 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.132797166 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06760302 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120491749 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.114783376 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117220569 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152823467 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108744819 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212923572 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.100782031 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.155116015 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.134481818 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111025482 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.098923632 seconds)
    (89/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.235247573 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.168819679 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.142946405 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.169759252 seconds)
    (93/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095363638 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.14102742 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132395962 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104683747 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185548369 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.07245071 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137363248 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.184317166 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159324807 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.13715464 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102200677 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.10270823 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111727145 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.0917909 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.166506622 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193913732 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.22241189 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092789842 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156012584 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.21178138 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.06777404 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112118173 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201247476 seconds)
    (116/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.159362896 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135859827 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.213963675 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111630545 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068881127 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.184223777 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.118580465 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068668983 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.312444102 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170534215 seconds)
    (126/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112125826 seconds)
    (127/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086659197 seconds)
    (128/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.138541187 seconds)
    (129/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076101199 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114790997 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095683401 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11342886 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.098590922 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141634995 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121793775 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.069040051 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.182262381 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.095479955 seconds)
    (139/309) benchmarking ("sort", Float32, false)...
    done (took 0.174363487 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085862333 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118718061 seconds)
    (142/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.123651562 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086473338 seconds)
    (144/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162012776 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094733474 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090529199 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075922837 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.0653053 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.149910439 seconds)
    (150/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068155166 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.120246085 seconds)
    (152/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093809255 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118984403 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076232935 seconds)
    (155/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137528446 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.133149538 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.087679115 seconds)
    (158/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117192475 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112960372 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.119655257 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096721284 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176109046 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.112574368 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067590643 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124822068 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088042404 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.091038723 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068426874 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.13586937 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086699258 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.186432194 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.092271789 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140183799 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.172091876 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086350589 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.174087606 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085683101 seconds)
    (178/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138023723 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178255458 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.073540185 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134572706 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094063448 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136532119 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125345922 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087732095 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117992076 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096332878 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120971295 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.126245106 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.160493094 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.151168808 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.114887894 seconds)
    (193/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.091602203 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086110802 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092399549 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.076381782 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.168765077 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.08454745 seconds)
    (199/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.10982321 seconds)
    (200/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077808337 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.109312407 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08985868 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215775953 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.066999091 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.12011791 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.094759295 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.174819655 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135700925 seconds)
    (209/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.099932434 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092614297 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068033011 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.2152317 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077031797 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121001563 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093730012 seconds)
    (216/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093645983 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087146626 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091539706 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067386139 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125833712 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068732918 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.197260446 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094330667 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.184456026 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11630596 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.08991264 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.110163221 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067832797 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.176698943 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087574903 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135813322 seconds)
    (232/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066986788 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111480211 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086816154 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110926839 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086319663 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.09126136 seconds)
    (238/309) benchmarking ("sort", BigInt, false)...
    done (took 0.222950131 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068037752 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190118835 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.120438007 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113166093 seconds)
    (243/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119194926 seconds)
    (244/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.068128153 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.11069935 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.11271565 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116750243 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.068156757 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066768922 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119533795 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097461515 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.146233438 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.112067247 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069009976 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.067492143 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.114783975 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.0966483 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112004735 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.192083108 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089088499 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113085113 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08810113 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.093200212 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067474097 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 0.172920848 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.094258431 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093136514 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096852147 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.111265842 seconds)
    (270/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092890295 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119391122 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160918752 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.092184424 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.107035135 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114669506 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139800245 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068319043 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06655156 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.117385784 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101018078 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.111896097 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067351633 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110777371 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089648928 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.101201126 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087008216 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118710211 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157273166 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111275842 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087022128 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.111518498 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225716464 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067498052 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140761722 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095204461 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.113742807 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088746456 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116838906 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068505067 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118199573 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093145288 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100905075 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068882532 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091440849 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092880813 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.067164338 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117116481 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.120357118 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092182584 seconds)
  done (took 39.91101563 seconds)
done (took 40.812798318 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10163444 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150355479 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096111115 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.138697009 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125612636 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092115609 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120184461 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097954791 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126163436 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126693545 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099212617 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09508947 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098113169 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122887322 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097271144 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141041954 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125393383 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09490298 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121230695 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086014625 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121838595 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.087185397 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114395098 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069997219 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123469583 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09503238 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118524981 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121009952 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08855473 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111045271 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091981658 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118909184 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088106883 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125560815 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094492687 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120764168 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098853527 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123338597 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088262545 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11280415 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119204476 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08813958 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118614446 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096060957 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117379106 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.093715149 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.120827915 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100013182 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.142858791 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116435124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096611627 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121986508 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097546889 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119057246 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091134282 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121133747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09243574 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.142166726 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120070656 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09322637 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119797337 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095582577 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11741869 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096361595 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12136518 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098352885 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12487008 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117356667 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09876906 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119809591 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087389682 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123508977 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090774821 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112819511 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096283218 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.124229834 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.086013232 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118800769 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118329128 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094261757 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111168576 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090461505 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113576087 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094844565 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113794911 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071307974 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090874839 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.119078442 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.111050353 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096944156 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118237902 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09543079 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112995351 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099534703 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112225394 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093022604 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112470776 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.088621117 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114162752 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091795545 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112165908 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090104458 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122016 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088878468 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119214397 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123740574 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088613344 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.119394176 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087617171 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11188865 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102591835 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122971619 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088569984 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117720209 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086706077 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120783293 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087552946 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112506551 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087319403 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113211469 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093431969 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.113054508 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089765658 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120507601 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126375964 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088373994 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116060333 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091012337 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112032409 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094173651 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112066766 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088752184 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113649411 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078848896 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114327578 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088953638 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119185306 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091101239 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.12041263 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090295797 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.12197899 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092174366 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11966162 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093862114 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111066816 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074874863 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118316159 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091016734 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113385544 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088418503 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114162903 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087778999 seconds)
done (took 17.141741562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088375478 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187098448 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153137509 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.144347182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10876236 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113628242 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123196806 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120858033 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115713367 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144591135 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111311809 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.134464362 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.150039782 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087363739 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113534778 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092792327 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114236929 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102925084 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148204472 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134637337 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.166524915 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.088133801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148976736 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137013438 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122274253 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116527452 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11290972 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09313429 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116846096 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103893289 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135019582 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091384905 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114879656 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135196632 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.106645591 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121904328 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088134038 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120697269 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087663808 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113403982 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14220951 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110294149 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11900947 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118422008 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092742508 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115304651 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090577696 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122053023 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099591392 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118804529 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128063977 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157925354 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.09234215 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122671517 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087157621 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123854046 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.123302504 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09152707 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112760983 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091299468 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111802627 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092772206 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129240012 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.14278134 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093333572 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123451998 seconds)
  done (took 8.718557427 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106740491 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140886224 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10608429 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.150543932 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112924842 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089452854 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113612205 seconds)
  done (took 1.786483587 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089460376 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135153748 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112804569 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136787334 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132755785 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110853891 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124329333 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08848031 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132931431 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089514838 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136722618 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.154116786 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090309475 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122617676 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138152143 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090419152 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138636194 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08994457 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117153188 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11327424 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118197256 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135639546 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09238883 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114476582 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103999424 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115408473 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164054314 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094519622 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116135857 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.093350183 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112962376 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.168067935 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105485793 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126608977 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088752663 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.13075 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129020254 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088288923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131843537 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094858718 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129963292 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090516553 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116756201 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087622391 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119886014 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124884012 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091237405 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115432256 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092592306 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135460431 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089934542 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130573433 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089371638 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119017952 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090769303 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121834567 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123832764 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091032746 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134939794 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091787807 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132870612 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106982106 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130244791 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131024577 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093113385 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128744388 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104225105 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118155025 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09178747 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118804057 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131472407 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088365326 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115790119 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.101027991 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116487184 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113229736 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139483632 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091833903 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126748947 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114812489 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090897157 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114791221 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.113574678 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118986754 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090216465 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121102173 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093122529 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113686491 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088327353 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119184332 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087791056 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117155506 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092366265 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116751997 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117313521 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106956185 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116388181 seconds)
  done (took 11.941233591 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092082662 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115858764 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093598889 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115746623 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.0914132 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115865858 seconds)
  done (took 1.602921154 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11604886 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119305863 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10527334 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122667119 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157461266 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10547608 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.1321636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124420309 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108104223 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129649596 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131279345 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106374908 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138090899 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122018815 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10505467 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121484223 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.10474927 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127837159 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.129052938 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097833963 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139315677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122020444 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.098278074 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133058113 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11904061 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097062231 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126627357 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102943014 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129424354 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124396389 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096809029 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119899482 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098063141 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125029488 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130608176 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097038703 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122124063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120291171 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102126002 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.11991596 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106279847 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123588489 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128008724 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095556739 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125158607 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122194452 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095945597 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126719814 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104793548 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121646662 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119611175 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095809848 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119137289 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095519645 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122854249 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124607289 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096137761 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130689867 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096377211 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123253733 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11981452 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09429304 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124783936 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.09319876 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131707395 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121137902 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.09743597 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123333336 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12295119 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096764858 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120613413 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093977615 seconds)
  done (took 9.323757403 seconds)
done (took 34.335450701 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.687707953 seconds)
  done (took 1.663678258 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.732286889 seconds)
  done (took 1.710706538 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.665089998 seconds)
  done (took 17.645683022 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503885943 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.590114654 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.892204871 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182375701 seconds)
  done (took 3.149098033 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962961932 seconds)
  done (took 1.960762067 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298814419 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260467563 seconds)
  done (took 1.543902112 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.777042571 seconds)
  done (took 1.768862338 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.389687061 seconds)
  done (took 2.373159692 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.335226053 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185994686 seconds)
  done (took 1.513661085 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546669656 seconds)
  done (took 1.538375032 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.849241934 seconds)
  done (took 7.846241092 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270652351 seconds)
  done (took 1.272923472 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302082402 seconds)
  done (took 1.297175344 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.485755344 seconds)
  done (took 4.483449402 seconds)
done (took 50.753857269 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100048147 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126763222 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103450371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125580075 seconds)
  done (took 1.446212287 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102257602 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.122141391 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101018187 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12144237 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126875757 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097613781 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123181539 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101399451 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12222471 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097598955 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121949146 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120706021 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099977197 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123150701 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094116833 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125163597 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099580785 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122620219 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125320484 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096348477 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119420813 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098817431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126267204 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.09494982 seconds)
  done (took 3.684087868 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102059875 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120442817 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097862834 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119307448 seconds)
  done (took 1.444484834 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100916584 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142674211 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139251536 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100668233 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144735835 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136737337 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.094177414 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118274185 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094744291 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126858981 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090934487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150955327 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138607097 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099296016 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127704744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088565134 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118144907 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138142823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100511302 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127791868 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.095907268 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126258691 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091409417 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141265538 seconds)
  done (took 3.835290924 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170437714 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128792158 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14055205 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095952646 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161542102 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141198317 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088597262 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141203315 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087733251 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132138437 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119180645 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133980467 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130290394 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088088225 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115664748 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088431576 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131042774 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129982295 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092025718 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129226094 seconds)
  done (took 3.450707731 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098940376 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119116692 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088876872 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117187114 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099731234 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122087235 seconds)
  done (took 1.650769588 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091992881 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116024717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091167001 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115918597 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096579966 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116351138 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089169643 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11543886 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091583694 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115884626 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090397955 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114274816 seconds)
  done (took 2.249278353 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.467921161 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.093607169 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121660344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.114665884 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.097742264 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116193367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103773961 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120138849 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142218619 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089961134 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115481648 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091824103 seconds)
  done (took 2.679217721 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234428735 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12679984 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28742629 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367385904 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158135425 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178447003 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283421133 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163894542 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225102494 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168923391 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204988608 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225799983 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152346866 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190755107 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138498963 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119402371 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232901456 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249594421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155258994 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209248409 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228553429 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169019256 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181899548 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152731293 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138965531 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173777028 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.096426514 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131364695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236450498 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178255333 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191043346 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190173452 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121336525 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238081097 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255392213 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222031961 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286904497 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110770163 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178905127 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171904929 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.264292462 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139004152 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205021715 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157272599 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13333484 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192787099 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167071151 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.203929963 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152165182 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112930697 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223864503 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239472568 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19498934 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138365556 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306561748 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153116662 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.176822808 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195648548 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252012882 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228593134 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188199719 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12189947 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189604344 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19161811 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214008925 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.17639499 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.180996929 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150007291 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229175854 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189662142 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166265879 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193480683 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21417641 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141805241 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171688604 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174550668 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174226766 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258769947 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185797928 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123581681 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170195598 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150964347 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132238393 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.170194701 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12654364 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212789612 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145459153 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164137753 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246751233 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161108598 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134023191 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232743662 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229656935 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123165081 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112272589 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155778412 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15600394 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196518513 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141852399 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161744832 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16359236 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129635652 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187029385 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096785065 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212187154 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090585659 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174479262 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210173352 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100613088 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16225168 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152826428 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152991073 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17490036 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22660703 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116289721 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135346653 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210947872 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205279038 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151778341 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180303804 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203600045 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14609561 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151568197 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201508512 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246545892 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140750121 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204087337 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15918681 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136882511 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105484732 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209817212 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157127542 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162266872 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108181073 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.211920403 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208320456 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12833183 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11107882 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225092685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13517411 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105778995 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164494547 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150042901 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.1411805 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.153614416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154120128 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183961001 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179737094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155591653 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167258643 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153531068 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256390029 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143726331 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.153592651 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149167207 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094346931 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221256561 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203521036 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131299748 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206734435 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173296483 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233264274 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170455797 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135397194 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178966324 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103385005 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122121122 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195827789 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169532764 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162081577 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.224911722 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202943122 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.208076889 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185068124 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17548219 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174829069 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167919471 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157798346 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139876583 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161954289 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17391498 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.09591771 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145394289 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.136133251 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149892263 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145027707 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106345433 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225642579 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170903992 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217739542 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134248598 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151091441 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182667441 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130072802 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175533334 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206895214 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121502176 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.230437598 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196433097 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18946891 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144621695 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232062934 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094442512 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126838209 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143521338 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171730276 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106990638 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136697437 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165618572 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182682402 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211392872 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179298223 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240017121 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17450606 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193203826 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095189814 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170672439 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213055822 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179624829 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191233264 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117927987 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151491701 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178797397 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159421544 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25894374 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169252495 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177323263 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237215849 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151617097 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105221336 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152481201 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223777394 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155822207 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179737439 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148066352 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114558486 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162056853 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13444867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162627939 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212931464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164938071 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192018797 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152152285 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186117937 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129224668 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165095738 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161975639 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166887247 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081603115 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203215435 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208015883 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15112217 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169294715 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190338005 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132906913 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307684962 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246245933 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197308402 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140181251 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158113982 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163179949 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165414079 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173251111 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17962193 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161142998 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18896678 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160711309 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139493231 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141653559 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121683005 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152347932 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133188734 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149985976 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177336748 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.14216051 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186118839 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165927571 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160791031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175208268 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151477213 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14617289 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151616391 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217035547 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184779485 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239675678 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152308975 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181332146 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234672842 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100282247 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133992114 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133713055 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18021198 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109031258 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223334583 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189812165 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232889698 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185865812 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194849806 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141723161 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.12105179 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130854172 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202927401 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210146567 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152571531 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162121455 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233941872 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12033949 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134138191 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179650659 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294996563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144465383 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226574557 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081241814 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.284086996 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127574873 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10528559 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165554411 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236450644 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138019166 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189450198 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173101165 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172423991 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166403447 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151731976 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.193285387 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244186538 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204116587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181811591 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133607398 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157813826 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178015054 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221187151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131445612 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141795454 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232176368 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198715631 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198280454 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144040199 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173399379 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170713176 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159491451 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216223635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108564846 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23722903 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106448272 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224004102 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155247819 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145963472 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178089978 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191142489 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142047931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190510771 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212663524 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109122376 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135350734 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171641976 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207481761 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157634671 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101437975 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181098853 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126953061 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194377117 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260821189 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136419516 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15650043 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148391304 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109918162 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157109913 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159426249 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142386401 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.165086893 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206132276 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137140955 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193578127 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233499349 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170992362 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177014116 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145705692 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693871402 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131933971 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196905932 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161888894 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20584047 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151461532 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174666006 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160891151 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17097391 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227788942 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163213798 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231682578 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194511955 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.208379739 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106716366 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160082719 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165554634 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145654074 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153098807 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170359324 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162337596 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156559916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180313207 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173556083 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135688385 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141705657 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203106573 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16214451 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183348739 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180746226 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140883853 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175763545 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218246472 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106254233 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208722528 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210059238 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144759948 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153951411 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134947561 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157978361 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234482311 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126820592 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234666161 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187183206 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160875957 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171205644 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14933991 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194895721 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159731364 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215927039 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1482298 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160648786 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129640512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138511973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132675832 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156683465 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169724814 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149943011 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161494208 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140330875 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195381161 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125891927 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147368255 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293386086 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222125138 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216746983 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137928463 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107040297 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163611784 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153463719 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.207467466 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180604674 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109059421 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137609057 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.139058125 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.1330333 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139662589 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157007997 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198622523 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168699182 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236176589 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110876698 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280962858 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141912169 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156281173 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089595045 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133669997 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151347352 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146883129 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133642221 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223325968 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266473946 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147713665 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10688994 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151924401 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126169263 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10960537 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168077274 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164369893 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178638298 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146499548 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.11020623 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157785774 seconds)
  done (took 84.043593431 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.167720936 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132512276 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148229378 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203762069 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.177646013 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271037464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210261436 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256021873 seconds)
  done (took 2.666049526 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094675567 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146273753 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15916586 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134384003 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092468575 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120209263 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347676323 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133973653 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117253364 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122325207 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174536694 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094051228 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554785731 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091444456 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120631757 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108196264 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091982114 seconds)
  done (took 3.797700533 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.479463888 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.719853165 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.513461845 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098817024 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.216456161 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113140399 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.835215028 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.198014762 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.116011356 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.486154735 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.776821124 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166478994 seconds)
  done (took 18.822823124 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.09989245 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122516443 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108403217 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137666148 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096385238 seconds)
  done (took 1.672022439 seconds)
done (took 132.432627077 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105678246 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405993695 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071787466 seconds)
  done (took 1.61358627 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108095537 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13825602 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109783816 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137424604 seconds)
  done (took 1.604069063 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099202923 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128124334 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109363411 seconds)
  done (took 1.442476662 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325329853 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192196352 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.165067174 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106678809 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131229398 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103465886 seconds)
  done (took 1.449129652 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098371282 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.129222474 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098840395 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131274734 seconds)
  done (took 1.566465298 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.095503052 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070995957 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.103890163 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075088627 seconds)
  done (took 1.45022718 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114907494 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133658086 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105317723 seconds)
  done (took 1.464091146 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130765355 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139927294 seconds)
  done (took 1.382346696 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106249613 seconds)
  done (took 1.212609547 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118985571 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170463415 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191424674 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16819718 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.231097082 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165700101 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14163576 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115296058 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131889832 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145503024 seconds)
  done (took 2.691915939 seconds)
done (took 17.770296214 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103524751 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423216789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.414484702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117364211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722744411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380875387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.050688198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147631183 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167123014 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09450533 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141323911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672166673 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.080533201 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378753591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.03431915 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.467877712 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676082679 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122890738 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120402825 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09541843 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.033822245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0922107 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12339303 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093233839 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703260668 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427223281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095646246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.465864689 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092605283 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128426915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383274534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123994983 seconds)
  done (took 17.27964383 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096033486 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17569334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099425439 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139024455 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124372659 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095263331 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126399669 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094599844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181159698 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124497828 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112012245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123182549 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127637102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095583318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143043795 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092897591 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126667782 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093214955 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122377624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122825731 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112174444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122200742 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095073344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122533096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094971429 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137553033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095479879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122897016 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121625536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099480728 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129268564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094711416 seconds)
  done (took 4.878679134 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141758187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184886174 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129743472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128045797 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170330487 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125445812 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20036323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119099903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184442905 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124927462 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141836871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093745308 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158018277 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095780805 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143739661 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122603354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09738752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123706912 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093133887 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124273652 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141519138 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093230349 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1240405 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093465124 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124450557 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108246615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125214108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121851264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094727759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128235306 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101071191 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125399342 seconds)
  done (took 5.205126555 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098274662 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127659048 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109910803 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140958589 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.096515062 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126691991 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098802989 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126541496 seconds)
  done (took 2.041789299 seconds)
done (took 30.515219287 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11283065 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128358307 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.10713673 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136356872 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103936761 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13378021 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093064285 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135470337 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.136812735 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103932267 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139647551 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093171592 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12498507 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092892586 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.137738779 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098895248 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.136125357 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102680095 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136095388 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133814386 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095395343 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135080231 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103553736 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135807126 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104923494 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.135268831 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139040928 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100007964 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123837977 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095712023 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126941652 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10460144 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125809893 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105973498 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128650504 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097772897 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124456472 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095001491 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134608863 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134896282 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101242847 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134102279 seconds)
  done (took 6.080639884 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10853192 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141133371 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106004599 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.0817108 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118404969 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081825958 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139415515 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080059646 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111399865 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108835784 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075249168 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108107271 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079388371 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102972348 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078338651 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076237021 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110031706 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076705256 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076882456 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107448492 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079826542 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072981205 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109794143 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078988588 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075317257 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111758749 seconds)
  done (took 3.618786734 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10070785 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136741199 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114659604 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18528034 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.171696061 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099526776 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133812711 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140906832 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109176211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121391244 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096728225 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151574785 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112075442 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130171923 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.122190908 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.108695938 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137188345 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094685789 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129463088 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113789388 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139685161 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102759041 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144169403 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134587129 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092854673 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124962074 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096886915 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.138011767 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098949259 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133246776 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.127091444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097067206 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124624589 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105215024 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128512294 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095471593 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143960361 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133077295 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.102561916 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123109004 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.096552228 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.124252993 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115503677 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170789446 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092089462 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.132834449 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.130186142 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103533628 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.123004108 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112068515 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133278706 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092652127 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127199593 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091849849 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122759319 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107663841 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125254757 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.125244973 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.103319955 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125203908 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10574598 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.127463751 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109620342 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123518303 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100982121 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122748095 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093178075 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121925739 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145107537 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094794126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165317 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094854081 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125891428 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.103101791 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131324198 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130371253 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094279966 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139419146 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103614454 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127463347 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103644981 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12742986 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096282598 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142180989 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.125074083 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.096397708 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123877673 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100041358 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126781251 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095168206 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138799242 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.094470483 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126949236 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11139007 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122914163 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124408736 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100774988 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128416525 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092797486 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136763166 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099002943 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124843053 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103310833 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123709352 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125670306 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104093368 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127917636 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09258189 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128731012 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099696499 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124014786 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094619243 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126216273 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095533154 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133682069 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100266254 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127966985 seconds)
  done (took 14.990494667 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230119643 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216522913 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.239146748 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.266291232 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137333824 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115874648 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213722866 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.15737046 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124381298 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162297976 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163516436 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183407914 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140340981 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181301972 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142745524 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122460119 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112871744 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166462783 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216790312 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.293634894 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113034896 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133517409 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164350773 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.162929979 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10792981 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.134378768 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141108713 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.107126861 seconds)
  done (took 5.793961863 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109613522 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158072404 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.099444347 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146820824 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151045481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093729074 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129434574 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094808258 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137265633 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138015778 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093852715 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130950791 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100850672 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133902981 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124586992 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10343751 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134015361 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095872781 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127724471 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097823025 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131595555 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.10307909 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128819594 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092706133 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133848653 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122700853 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087767193 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143426946 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092966512 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146727032 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122295114 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100079461 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134807121 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094594552 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124442867 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095724217 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.1272471 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095000006 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126088764 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092025885 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123725154 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078050358 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.124019336 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108174044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130123897 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080517646 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131270013 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12935627 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096171952 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121340666 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097161076 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12633768 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097956649 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131780414 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099555597 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125496629 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097916507 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117148878 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100262294 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126570699 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085775408 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.092378302 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128962909 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119217867 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102721633 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129667955 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092505523 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127158762 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098158801 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130989962 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096300983 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128778144 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091721613 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127932749 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096407834 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129478874 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.09750861 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123826408 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094212753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.124555005 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075965402 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124405748 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074525452 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.129221012 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092517923 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123683488 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096302376 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131611568 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138808523 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096544639 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133558533 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095193348 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124082305 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097166115 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114249936 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097195801 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140342503 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142551049 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094511587 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12300524 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108160447 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127179044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092998821 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107658804 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101919047 seconds)
  done (took 13.092795316 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128339862 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155762319 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095787496 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145154854 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157662459 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158981787 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102410075 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131752162 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095997511 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144601302 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094279773 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133707352 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098047415 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139218649 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159278764 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104094275 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126782057 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108915169 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133930136 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.172755031 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.113174447 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143881938 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109342051 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125067031 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.100472271 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142053428 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163780386 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108905816 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138368546 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143346827 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.11007701 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.163020845 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114189237 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130226677 seconds)
  done (took 5.550673203 seconds)
done (took 50.243273433 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.22758618 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.439976456 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.2176953 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.191414168 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.253060375 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.215474012 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.225575126 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.21404402 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.801791712 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.215300484 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.474733537 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.864164052 seconds)
done (took 60.488993662 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.23232139 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.350010367 seconds)
    (2/2) benchmarking "String"...
    done (took 1.480495581 seconds)
  done (took 3.974041821 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.565963384 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.163328436 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.475643218 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.213785267 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.214968973 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.508692505 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.884018653 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.583802105 seconds)
  done (took 28.185638548 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.219836456 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.617439045 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.935068413 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.949491633 seconds)
  done (took 18.865761874 seconds)
done (took 60.966846708 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.23659704 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.273879327 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.226960953 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.194798768 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.352897995 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.241044273 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.587623425 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.276071822 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.232904731 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.200230597 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.238467115 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.226254825 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.216146761 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.626042123 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.226210391 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.21656339 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.265366924 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.768099789 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.62277544 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.23094794 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.223624525 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.239254339 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.220649274 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.242484376 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.249755147 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.216940018 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.23816631 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.23065743 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.802252133 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.217582171 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.235497913 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.766713234 seconds)
  done (took 191.48694954 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.218216979 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.237884974 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.370562003 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.278253199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.743674866 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.42156301 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.35772357 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.822747499 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.24236535 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224436802 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.473995281 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.222155009 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.555113579 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.247694783 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226149083 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.329405849 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.510905959 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.588776581 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.24119149 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.500478874 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.241858775 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.377452652 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.297984518 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.468936804 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.26128038 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.32919028 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.263031641 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.234803856 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.426359413 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.439577039 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.233557471 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.243142269 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850865143 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.076715304 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.240330677 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.225716728 seconds)
  done (took 151.171792268 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.520063823 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.219585763 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.219278878 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.218106086 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.252261296 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.219540975 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.802771764 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810326488 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.721538661 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.58470636 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.223888613 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.581335083 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.496864993 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.219965124 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315318318 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.233813127 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.220734461 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.236569441 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.264489533 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224454305 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221074598 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.804400297 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.237854404 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.313304658 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.402675617 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.237636256 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.254869509 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.611416587 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.22108399 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.253445076 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.553819077 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.271824749 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.22100481 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.606459156 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.311727572 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.336167632 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.22292388 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.255513106 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.221864577 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.502247986 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.221500184 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.221135935 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.224676179 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.883005269 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.221036672 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795542623 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.226235343 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.187702694 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.22101293 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.220730895 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.977443168 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.85639955 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237167962 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.220351335 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.222709984 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220669717 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219914977 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.252957821 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.952636237 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.31208897 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.237858176 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.221585911 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.252489555 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.219990016 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.292579226 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221516757 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.559714868 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.278916217 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32921526 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785012944 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22230831 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3146108 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337821075 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.216630528 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.216022397 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216892318 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.217644421 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.32849771 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.215816188 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.217011728 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.21744197 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.637642381 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.392258419 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.236192425 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.538107913 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.218387186 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.316046785 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218361462 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.595152299 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.219782961 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.218110488 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.973504899 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314843224 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.218310394 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.219245525 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.217881096 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.636613124 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.780952706 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.484285471 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219436651 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.910974162 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219593903 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.659008493 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.768459699 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.866165247 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.221220446 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331907899 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.394030314 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.238061225 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.217866482 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.53749527 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.220412222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.278738165 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.221244278 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.617677207 seconds)
  done (took 368.651699769 seconds)
done (took 713.973220471 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.880334015 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.872602565 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.987837727 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.869762256 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.826790818 seconds)
  done (took 10.585277706 seconds)
done (took 11.730897576 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.407918067 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412034355 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286533181 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411665471 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253402894 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426090952 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.390082684 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.24538437 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321260708 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.303407138 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320518962 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.2739748 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248274556 seconds)
  done (took 18.447657436 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.54914778 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.53120735 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283037084 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.55187514 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.259539168 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540007719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422449122 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.434385562 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.436534056 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.253305008 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233058485 seconds)
  done (took 16.641458596 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.564266097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.541868303 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286865045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554985432 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.261971146 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549071813 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.429697925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438141421 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.443900966 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254523627 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232813177 seconds)
  done (took 16.70662754 seconds)
done (took 52.942691404 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.230249244 seconds)
  done (took 2.380528806 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.264516778 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.426262285 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.251722286 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.235703461 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.233793679 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.232224823 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235740972 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.231065401 seconds)
  done (took 11.260246114 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.231774374 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.230300974 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.230108769 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.228495603 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.229295008 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.230061781 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.23131441 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.2294362 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.22848948 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.227535519 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.230358738 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.227239399 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.229073163 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226231517 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.227492029 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.227612773 seconds)
  done (took 20.81537692 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23051128 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.228575367 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.227295141 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.229190189 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.228037134 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.227496675 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.228875728 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227430511 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22821046 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.227839825 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.229016074 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.227896714 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.228891951 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.228003962 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22759083 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.228764436 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.228365609 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.228566374 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.232515653 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.229494366 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.22858523 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.227567691 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.228669449 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.22917107 seconds)
  done (took 30.638251982 seconds)
done (took 66.242104541 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.325052407 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.942302455 seconds)
  done (took 9.418767163 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.230864366 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.231278526 seconds)
  done (took 3.613477055 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.231622731 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.23046021 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.229724516 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.230635733 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.230640352 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.230691638 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.22997809 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.231478525 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.229690844 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.229936772 seconds)
  done (took 13.457508369 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230378368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.228781612 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.226224275 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.231690263 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.232027374 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227828059 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229729285 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.230655919 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.229437777 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.226720331 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.230780704 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.227607351 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.232191271 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.228230951 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.228732446 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.228297727 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.227470989 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228791231 seconds)
  done (took 23.275047256 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230879104 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.230935294 seconds)
  done (took 3.611895193 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.228741921 seconds)
    (2/7) benchmarking "second"...
    done (took 1.226625667 seconds)
    (3/7) benchmarking "month"...
    done (took 1.228596289 seconds)
    (4/7) benchmarking "year"...
    done (took 1.229051875 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228013227 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.227997772 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228568706 seconds)
  done (took 9.749420454 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232736359 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.404519836 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.481652863 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.823707088 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232321985 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.23531334 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.112043436 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235934823 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23790947 seconds)
  done (took 14.147374511 seconds)
done (took 78.422880823 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.236024148 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243789868 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.392333205 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.25045313 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242251124 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.568483735 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.253913193 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350946764 seconds)
done (took 37.688812629 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.227612439 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.963777495 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.968361571 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.224518017 seconds)
  done (took 11.308181693 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.204936517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.136988046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222350987 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.224018001 seconds)
  done (took 17.940083882 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.236735376 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562091032 seconds)
  done (took 4.949792075 seconds)
done (took 41.574953726 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232687274 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.231315125 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.230107616 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233796956 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.228915003 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229099954 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231712176 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.231323814 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.232071306 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.232166364 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232656276 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231271753 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229648604 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230671243 seconds)
    (15/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228790756 seconds)
    (16/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228569694 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.231593725 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231984179 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230255622 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233447214 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.229289998 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229570917 seconds)
    (23/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229181021 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228573563 seconds)
  done (took 30.690434677 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231945302 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.230831899 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.231209904 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.233500264 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.227513227 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230367346 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231614571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.228623729 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230888784 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.232850886 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228624306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.23056161 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230755042 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.230519707 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230270201 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.22849847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230660315 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228264852 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23046573 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.229652781 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.2311659 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228340978 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.229160905 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23074714 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228603675 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228187302 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.231060504 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230680351 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231477698 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.227707394 seconds)
  done (took 38.055808759 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235580183 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.239101717 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230349066 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.231347405 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.231818718 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231032776 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230465026 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23131275 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232492591 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.231640965 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230756931 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232235703 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231720613 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231710491 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.231216212 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.231844477 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.2318662 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.232288732 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.232296329 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.231932975 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.234195779 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.232093627 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.232724407 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231775409 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.232749782 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232578396 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.232260335 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.231748639 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.232775421 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.233121698 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23315423 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232938037 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232481131 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.233121476 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232587384 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232709838 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.238276073 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240745076 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232704191 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232416053 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232457692 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233431952 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.234445675 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233429448 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.233364631 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.233507666 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233146219 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.233205032 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.23231312 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.233617191 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.23281586 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.232610707 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.233615709 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.234422181 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233897117 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.232817061 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.233874078 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.233189711 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232795493 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.233482541 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233583995 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.233265166 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234639142 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.233756178 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234003827 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234458582 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234698092 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234308044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234687101 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.235257735 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.235491577 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.234369716 seconds)
  done (took 89.941092319 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234393211 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.231744833 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.233333254 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231696705 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232524425 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.234496957 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.233006667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23570891 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233038531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23562663 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236519335 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.234411543 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233432372 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.235109171 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235407491 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233302098 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.234788319 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233090249 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235291684 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23632843 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235876249 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.235009609 seconds)
  done (took 28.308211467 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235924014 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237686458 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234479308 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.237760313 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233317935 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.237020332 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.239147608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237317526 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236703439 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233545402 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234014483 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23570288 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.235450658 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233149552 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234839548 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234229045 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234783375 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233565757 seconds)
  done (took 23.393087658 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.233969873 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232887968 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.235610786 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233916784 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.234520856 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236463221 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233788276 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236376788 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.237626071 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.233574955 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.236353523 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23550412 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237612481 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233743643 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237412816 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234687148 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.235851825 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233584346 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237569437 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234048052 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234641095 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238285984 seconds)
  done (took 28.333111372 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237014767 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.236277051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.234153518 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.234829703 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.233563089 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23742058 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.236343995 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.234933167 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.239764999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.237629923 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234813314 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.237343621 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.235498311 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.235030007 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.235063866 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235672352 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.238827563 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.235165725 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237484401 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236287293 seconds)
  done (took 25.877933904 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23891384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.239762551 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240330778 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240819358 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240499518 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.240512968 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240206647 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.240214271 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.241909165 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240020061 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.239807113 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240883929 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241188434 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241068316 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.240677788 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240752836 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.239859089 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.239366712 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240269408 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240072693 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241049847 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.239600763 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240429697 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241297007 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.240554149 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240022026 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241066342 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.240288588 seconds)
  done (took 35.887892922 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240338765 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.240096433 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.23774158 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238450434 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.238570189 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238611708 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.238712543 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.238210589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.241534337 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236960074 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.241521182 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.241094141 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.241198319 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241852738 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241351559 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.240849569 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241378592 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239216107 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239005868 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238600388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241662935 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241507454 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.241197589 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.238826851 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.2385092 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.241193667 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239643548 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238343893 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241606261 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239375023 seconds)
  done (took 38.356626123 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.261281231 seconds)
    (2/2) benchmarking "in"...
    done (took 1.259920137 seconds)
  done (took 3.68143402 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.240683426 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242282482 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243477464 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23995629 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239631182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243085954 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243629806 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240582011 seconds)
  done (took 11.093930142 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24343617 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.243327849 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.243392092 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.243455398 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244607834 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243794836 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251051652 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.262643038 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244458744 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245400276 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.252144474 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.251281274 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.24609552 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.243459532 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.24341958 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24665242 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.243965319 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.244029191 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.244799747 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.243500863 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.244818471 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.246511473 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246857703 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241407386 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.246114062 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.254448426 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.267585967 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.244075102 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245920892 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24893108 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245059232 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.242352836 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.246025305 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246088452 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.24574039 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.24608034 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.255543241 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262820542 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.251484239 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26561509 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245863351 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.243482466 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.246892621 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.247458689 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248518255 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.245814966 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247320464 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.243890124 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.245856087 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.249835891 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.251105384 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246639352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.244742129 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248788479 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.247079778 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25266191 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.265702178 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251208346 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255978772 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257492408 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278829758 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27091915 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.2501595 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.24744575 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.257833436 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.270071242 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254466334 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.26252247 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.244367326 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.247879663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.254635482 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278744038 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.273049559 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247966821 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248307378 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.247853994 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248022527 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249500979 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.256734276 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.269578496 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247401744 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248689843 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259637408 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271472073 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.249378196 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.247656483 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.249713712 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.249147472 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.25171816 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.258901982 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.266838714 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.249666221 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.249215585 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.250088958 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.249517893 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.250148522 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.250366245 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250112949 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.246614015 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.249454858 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.248841854 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254180356 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.25816716 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249061235 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251363926 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.257836446 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267359655 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249597784 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.255632871 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.250308787 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249322365 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253901375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.257268119 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.247589657 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253633693 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258194631 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.249638837 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252463545 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25003267 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.25104947 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261626958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.275868011 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25203113 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.250567512 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.256290525 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.262032406 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251005899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255105076 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.250823271 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.248533674 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.248434089 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.252920528 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251432908 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.251441875 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251956391 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253526207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.249116362 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.251796363 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.251943755 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252415126 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.25317689 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252141487 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.252900099 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.254487877 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.250653151 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.253182269 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.258875199 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.270373857 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.252374694 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.253204785 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250047869 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.251640139 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254149333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.25071117 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.253230674 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252215371 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.2528614 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.252481279 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253404413 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.251968479 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.253050647 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.253578468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256433526 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252275169 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.256128775 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.252577495 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249902883 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.252570379 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252449643 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.253047772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.253313486 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.251413187 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.257809947 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.259779522 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.253214047 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.253775215 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.255975471 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253792744 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254253226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.253291176 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.257216187 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.262031148 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.252663021 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261484087 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.272100586 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254531424 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255570504 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.255246123 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254650435 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.254299935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.257115276 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.262319958 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266482348 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.278275954 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.256803771 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259054868 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.257284513 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.258310897 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.258112545 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.256860972 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.255408685 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.254501095 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256208404 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255148021 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.258339777 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255729948 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.256836086 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.256321217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25579352 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.255744645 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256949541 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.256973227 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.257442017 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.253121569 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257441216 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256464489 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.256926859 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.25412707 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.255540554 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.257028745 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257044526 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.256241246 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.263299042 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.254169871 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25936181 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257653753 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.256340475 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.257135548 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.257316028 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258511285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.257489019 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264408023 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.275152564 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.258822971 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.262879673 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.276548214 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.257771734 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.260605575 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257188838 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.254560961 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.261264749 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265220861 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257120901 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.258823826 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.257218725 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.26032687 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259721807 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.266505475 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.274657686 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.259797282 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.259645532 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25952883 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256576456 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260381885 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.260408115 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259602676 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261112775 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25910712 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.259144933 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261108229 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260009252 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.260205856 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.259681415 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262573929 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.267193207 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265722417 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260768677 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262114349 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.260653939 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265291707 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.260616039 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.26009564 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.261467458 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272564125 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283249332 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266887146 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.280306295 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260829677 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267272942 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281614393 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.263497265 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262086208 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260812383 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261558106 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.261152016 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.258438322 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262847493 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.261044483 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263477951 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264066984 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.265213276 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26198367 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.261721894 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.260999994 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262267637 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.261003124 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.262036806 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.261860636 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.264455344 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264314632 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.260824065 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.261892072 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269084985 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281641219 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.26320583 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.263948282 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.263152208 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.262317596 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.263060953 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261744346 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.266386381 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.271115553 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.26696295 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272027671 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.264437264 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272589119 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.262176975 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.266011513 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.271594101 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.261146521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26167704 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.263189976 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.263386551 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271918937 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.281851593 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266176798 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268601355 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263885113 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.26293816 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.263271479 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.264792782 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.263842857 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.264064395 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273601254 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.283830571 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269014693 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.265900331 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.260590352 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.264072664 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.264417641 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.263322785 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.268111087 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.264268613 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265437549 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.265335219 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.264216173 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.265285846 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265503134 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.26638867 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262568268 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.264624246 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273367185 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.285191756 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269990776 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26532064 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.271647984 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284689727 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273389964 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.284610756 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26710857 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266620544 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267240979 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.267833125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.266177 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268699717 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.266348871 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.266873788 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.270758132 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.266494053 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269362666 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.266739207 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.266249887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267301315 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276020389 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288820787 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.26911163 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27186399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.265184169 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.268635908 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272366574 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.267690483 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267313872 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.27131135 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276796242 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.275925784 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.267761716 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.266660211 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268771684 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267969459 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.266987297 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.267612444 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.267451786 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.269272634 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269735698 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.26888644 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271398304 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.267743086 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268283702 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270939186 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.269594384 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277844918 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.288115672 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.269860699 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267739998 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.269839567 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.268948867 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.269454684 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269838652 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270053438 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269743125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.269861361 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276059807 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.276762126 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272067499 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.269048213 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.269694763 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.27063891 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.271329008 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.270351153 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26968021 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269619844 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.270698774 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.269540384 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272694706 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.269106262 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.269446327 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.270356328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270520535 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.271620436 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.2778132 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.270671758 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.267971244 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.270656863 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27124984 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.269880158 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.272551314 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.277508789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293671555 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281636439 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.280472731 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.274909909 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272399523 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.274103195 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.278855888 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270881693 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.272696967 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.271199499 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.272885893 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273057964 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.275082087 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273141936 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277642598 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.292194722 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.271223265 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280017249 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.290854181 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.271656663 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27430166 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.276783041 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.273517253 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.270059205 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.272457038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.271845952 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.27946928 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293584679 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.272470962 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2740203 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.272938945 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.274304648 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.276580992 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271682496 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273900723 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.270759095 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.273892295 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.272954505 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274259975 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.270362678 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.273691417 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274029286 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277027752 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281883657 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.27112816 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274905597 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.273773799 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.274329077 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273277794 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274638254 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271916971 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.272138117 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273279646 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.273689946 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274976597 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.275850957 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.272771925 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.275507227 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.276138365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274684295 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276961208 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.284023034 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282591723 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.272852683 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.274457889 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.275023705 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.278123651 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.274791525 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.275464019 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.27595583 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.275875689 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.275253352 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.275656015 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276229924 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278986188 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292660929 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293833117 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.276972408 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276912382 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278275641 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.276267113 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.273770134 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.277233299 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.278209973 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.279412832 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28442367 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.276960953 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.284776036 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.295253679 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.277370653 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280947415 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.280399416 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284199582 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.280078841 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.276015039 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.276723759 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.281489326 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293263069 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276472182 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.287831511 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306447839 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.296503277 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.277935345 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.275741566 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277494224 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.27616751 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.279184512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.277941693 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.277754482 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278612027 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.277189857 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.278776624 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284101087 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279790846 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.279524328 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.279676226 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278133307 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.278699369 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.274882338 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278901326 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278550071 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.278101324 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278069775 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.277843328 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.279638405 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.291376969 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.305070789 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.277413107 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.278554343 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.277657315 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281544695 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.281607063 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289540159 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.287271755 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.278546621 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.279060633 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.280455712 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278997051 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.278301087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.279874849 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279158036 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280626691 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.276355601 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.29268841 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.305278051 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284391731 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.279543573 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.280730316 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.279551495 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282496588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280043999 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281934162 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.282500003 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.283945011 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.284284252 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280374262 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281534209 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.283334752 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289737581 seconds)
  done (took 755.127601635 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278937957 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277260594 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.279061009 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.278506604 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278891787 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278213574 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279192128 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.278457067 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.278879559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280666723 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278034677 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27865449 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.27996584 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279164827 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279812948 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278856997 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279457823 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279915491 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279649401 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279983186 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279662726 seconds)
  done (took 28.057551833 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.280792678 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279588943 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281387493 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28233167 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280093016 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.282708118 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.280952118 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28287272 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282732969 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28019994 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.283578475 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282506544 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.280082462 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.280641557 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280450554 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282498927 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.283479592 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281153384 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.28339643 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281118929 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.283926205 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27984444 seconds)
  done (took 29.393351171 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.284086947 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.283474869 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.2840437 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.280974863 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.2841322 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.281400414 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.28359027 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.284539971 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.284651057 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.284476462 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.285455349 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.285642816 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.291601459 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.290372142 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.286743126 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.283174608 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.428455303 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.284183307 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.284988291 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.284278275 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.281153501 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289208749 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.301568236 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.281228656 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.283535874 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.285303067 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.285408173 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.285420095 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.284358188 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287167353 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.289613294 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.284736722 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286623259 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.286956957 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.285966997 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.288146462 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.291456763 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284578295 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.282788839 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.285238052 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.295314059 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.304962127 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.285786564 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.293956258 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.306564167 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.286104622 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.290387561 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.295043114 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.284593984 seconds)
  done (took 64.413583138 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287194776 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.285379816 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.284795224 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286766422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.287114403 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286838583 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.286558988 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.287924006 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.284475252 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.284749104 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.287670695 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.285300771 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.284850401 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.287713605 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288053921 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.285894045 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.284660616 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.285918135 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.284835637 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.286330084 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285723127 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.288834191 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.288143594 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.286782366 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.287991994 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.286093324 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.286830138 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287326352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286062699 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.286426937 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.289508122 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288560779 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.288005252 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.286404991 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.285792195 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.288933103 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.289575424 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.286618318 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286909366 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.286428445 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290019107 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288809285 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289160266 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289870485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.286195092 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.287038721 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.287005442 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.287563589 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.286939973 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.288827452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.290764831 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.287837321 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290583669 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.2879428 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.289988425 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.290816006 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.287618887 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.288720051 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291120867 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.289101433 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.287808625 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292233569 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.287880509 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.29113516 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291111607 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.289945058 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290211054 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.29140862 seconds)
  done (took 88.770525224 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.29100983 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.291312992 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.290112621 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.291050827 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290798353 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.290234941 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.290887963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.291306346 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291509904 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291894514 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29170845 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291147148 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.291136572 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292408183 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.290456493 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.290823321 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28975365 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.291554165 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.290943771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290500646 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.291450846 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29154161 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291482221 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291178714 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290801712 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.291197883 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.291691798 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291465084 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291018407 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.292190512 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.291730505 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.291397926 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.291218094 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292071207 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.291974001 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290988866 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.290974324 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292203631 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294361081 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.291826391 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.291433842 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292150142 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29261246 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29236958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.291939653 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.292341307 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.291982045 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.294284358 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293477001 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293556556 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.292162129 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.293467874 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293096151 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.292668664 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294527557 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.293805703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292822373 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293279537 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293347336 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293921082 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295035888 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.293693331 seconds)
  done (took 81.309463999 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.294012586 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.293458794 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291456405 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291536206 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294574793 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.291979008 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295389595 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295852098 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296034069 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.295634205 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295999437 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293064433 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29388398 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294734496 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.292586765 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29279871 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293075978 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292989578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.295424366 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294732883 seconds)
  done (took 27.088311763 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.292170314 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.296130797 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29397539 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.292416134 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296448461 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294514804 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.296422004 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295573807 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29332647 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.2960458 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.29628783 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.295584477 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294156417 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.293549933 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.296155915 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295762818 seconds)
  done (took 21.929946945 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.292931151 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.295963346 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.295952408 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295861225 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.293753556 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.294253863 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.297612813 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.294587593 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294671879 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.297207504 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.296840739 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.297565313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296788236 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.296895123 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.295517203 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.296883925 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.295791163 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.294071666 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.297897831 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.297818502 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.295583152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.294387102 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.298578646 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.296705929 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.295335623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.296156396 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.296003665 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.295572369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.296976646 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.298810987 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.296204206 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.295110628 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.295544794 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.297133157 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.298790087 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.296734413 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.297627247 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.299368937 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.299229052 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.299040996 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.298798622 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.29743867 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.299599852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.299536515 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.296889542 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.298645341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.297536944 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.299077606 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.297926697 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.298063325 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.299514193 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.299408899 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.300541641 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.300298222 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.299503174 seconds)
  done (took 72.552158641 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.299315018 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.300641754 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29703849 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.299620153 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298929723 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299305253 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.301274387 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.299596729 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.297388463 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.302326013 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299646243 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.302545391 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297596439 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.300448575 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.298618935 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301840155 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.298950984 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299648016 seconds)
  done (took 24.608845453 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.300407842 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.29889028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302162347 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29789973 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299344344 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.301107501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.298925019 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.302347573 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.301007661 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.299897453 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299214112 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.300850064 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.301584865 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.301873011 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.299768548 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.300751341 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.30334194 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302530277 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.29981219 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299382124 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.30198972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30293183 seconds)
  done (took 29.831413629 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.303112123 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.301779224 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.301776924 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.319320073 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.322938472 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.324822721 seconds)
  done (took 9.089141809 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308800222 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303864429 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.301121944 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303387144 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30261206 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299996873 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300602664 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301324852 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303266482 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302001863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301648234 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303270946 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304108479 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301253662 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304243346 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303511195 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300625611 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302061066 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3015058 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304080147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301809049 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304638805 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302104871 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301315244 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301576386 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301778629 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303634674 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302974692 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302215842 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30418595 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305486122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301374068 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305275043 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303809911 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305070743 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305212097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302076216 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305360085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305021316 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303191233 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.305139599 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3043034 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305615619 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302389158 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304786715 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302457867 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302593518 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304462167 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302929647 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306108199 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305764188 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302893189 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306181499 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307047886 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307213594 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30655603 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303733853 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303959756 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305342792 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305386276 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304465714 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306853574 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304057556 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305246759 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306882735 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304781535 seconds)
  done (took 87.288387215 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304907018 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.305242155 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305252027 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306481496 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305731395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305737411 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304981852 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304997611 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304782356 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304856715 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307803583 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304850902 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305693874 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30416771 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304346925 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305726542 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304530451 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305351597 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.305728263 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308872629 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305426526 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306382037 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305275291 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306264545 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306649633 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.308790429 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306302886 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307165067 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304930625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306715382 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306855872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305757816 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307227287 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.306641167 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307242991 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306369555 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307110273 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307366648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306190015 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309794507 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307317679 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309940767 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307021687 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307479259 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307122249 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30764497 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307293082 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308166347 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307741664 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.308814381 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308536803 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.308135794 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307413628 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308092885 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307766004 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308405712 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308266024 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309362194 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307692314 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310979121 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30748669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309271749 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311889133 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308540682 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.308021355 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307979585 seconds)
  done (took 87.483874301 seconds)
done (took 1761.714139059 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.35580511 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.323523855 seconds)
  done (took 13.902605115 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.471649077 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.426429306 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.309761504 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.358083694 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.308435736 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.330318426 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.311747377 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.308404943 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.308371569 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.307717587 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.31000586 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.496777521 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.327546198 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.30927123 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.310927469 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.402886989 seconds)
  done (took 42.826115941 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.336350648 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.31400598 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422783009 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.330665007 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.336260666 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.494482119 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.364045901 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.313631773 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.476339825 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353492658 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.819022365 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.334875359 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.314369338 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.382251913 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.329390003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.490852871 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552504289 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.814167959 seconds)
  done (took 30.003644488 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.742263332 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.303331128 seconds)
  done (took 9.268484851 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.314238239 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.317828477 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.31530449 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.348593886 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.338293008 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.312866974 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.369635656 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.388026799 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.33014922 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.350604337 seconds)
  done (took 64.613428353 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.329942641 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.312831555 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.312873769 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.312300371 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.303970499 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.319428592 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311469127 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.308904898 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.77685672 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435485494 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314394071 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.320879591 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.331476823 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313775327 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.309345743 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.347017773 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.463385947 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.311038879 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310373973 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.318475855 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312511898 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.395247183 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.352710922 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.309806311 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.430723389 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.814508609 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.316102609 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.321930798 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.445823353 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.311589593 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.312579733 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.312717127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313539095 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.929077318 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.80284547 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321522817 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.352824215 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.322145805 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.310500598 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.474233855 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.31578891 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321264999 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.306774351 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.79104256 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439179784 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.421040471 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.488174148 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330314508 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.315946637 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.37045979 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314047803 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.315048771 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.341846879 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.051048673 seconds)
  done (took 109.874495227 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.345810759 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.701766718 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.474601585 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.326423168 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.915774419 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.969570956 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.326536563 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.580920846 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376101968 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308265167 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.639763692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.795056943 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334842639 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.352788303 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.946358617 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.337317291 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308466096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.017985412 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.329195102 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.313586907 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.785509882 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309397656 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308878448 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.468316113 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.344135943 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746219079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.607022052 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.723170279 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.332660571 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.30850278 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.758542716 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.335854051 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.321606092 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310277808 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.561224523 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.646496438 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.642178427 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.329850031 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.329511192 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.312838078 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.328128561 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.741148154 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651825507 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.323627622 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319889207 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745436425 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.324452752 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.314036258 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.314830853 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50760473 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.952018633 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.310156922 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.594136394 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.309345885 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.590319065 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.40694228 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.361477751 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775354001 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324779428 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.344647544 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367342158 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310687666 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31414802 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.315844738 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.313543713 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.638206649 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.433865128 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.313189314 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.637424704 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764930335 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332215286 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.831059507 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.121273892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.334599605 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.421953291 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.310661963 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.832140584 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.788055068 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.357912604 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.312568708 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.626585048 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.327184166 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.626614382 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.33062488 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310139742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810177578 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.316965328 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.350186863 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.311411668 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.311925826 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.917918893 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.312692874 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.587743406 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.359043753 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311740926 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.312578985 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.317875556 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312423244 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.327564924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.319224295 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.81518628 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.339647558 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.272850884 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.329564173 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313273862 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.329095951 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.314596051 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.312904573 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.526955538 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.658263416 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.337357275 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.313965524 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.312728939 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.332887789 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.485350068 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.316156497 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.604114736 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.334180842 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313112312 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.322239486 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027087404 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.356574374 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313619806 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.320714257 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.210692236 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.521254602 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.331533175 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.314114929 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315105097 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327710561 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.494443079 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332410675 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.381831025 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.319235686 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998873944 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.352919523 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.317269494 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.605781266 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322623094 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.135003944 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331635293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.315193103 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616782622 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.573704085 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365981166 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.317442493 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.321902284 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.971308032 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.365369889 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460554193 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.33511403 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.359743547 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514457176 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.699614824 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318303163 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.908149543 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.319788372 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.526303547 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.316658544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612048795 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78291056 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.330856206 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.324835666 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.997810589 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.999042724 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.954607412 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.319196778 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.635921497 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.289784663 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.796566179 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.316100064 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317598938 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.749571428 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318062339 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.326965764 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.318315819 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.317217507 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.455795334 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488720606 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.661778725 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.320007085 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.748215578 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354966928 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.332503413 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.327748067 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.318950724 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.666382924 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.359364061 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.319234821 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.320346782 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.31809176 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.326916402 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.769191116 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.246391071 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.324339015 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.469033505 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926751869 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.339101138 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32022905 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.803139306 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.569207027 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.812770162 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.39307686 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.611973661 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.343358439 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.355989764 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.927589544 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405631599 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773597705 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.335941953 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.336726665 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894953327 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.339747772 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.663877995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.319243128 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.328244775 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.827479708 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.339497789 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.323675596 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.518379512 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.340548496 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.580834908 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.321195818 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.362947127 seconds)
  done (took 1104.783370404 seconds)
done (took 1376.496022753 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.322292835 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327297368 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30576321 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.325787629 seconds)
  done (took 26.521107645 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.329814477 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.328235451 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.328321406 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327653625 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.328937835 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.327203015 seconds)
  done (took 9.20925266 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.336345492 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327313974 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.327550313 seconds)
  done (took 19.23174144 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.520067379 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.588580943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.66455106 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.470771569 seconds)
  done (took 10.484972066 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.326334745 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.327736556 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.329454532 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.329522242 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.331816951 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.333056888 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.329577334 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.330978138 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.334033398 seconds)
  done (took 13.211797387 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.111039517 seconds)
done (took 85.009643151 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.773595499 seconds)
    (2/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.302720999 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.33929517 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 4.398534222 seconds)
    (5/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.408229423 seconds)
    (6/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.303300645 seconds)
    (7/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.303392155 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.594292142 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.428796264 seconds)
    (10/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.322515212 seconds)
    (11/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.829959497 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.363900258 seconds)
    (13/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.304511567 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.40660352 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366423734 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.32354214 seconds)
    (17/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.638837747 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.631453694 seconds)
    (19/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.692149763 seconds)
    (20/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.356853319 seconds)
    (21/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.324074021 seconds)
    (22/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.307164808 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.762970556 seconds)
    (24/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.722245201 seconds)
    (25/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.430237054 seconds)
    (26/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.35029215 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.42261589 seconds)
    (28/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.848308566 seconds)
    (29/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.313553221 seconds)
    (30/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.352653997 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.670788466 seconds)
    (32/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.929610203 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.432682497 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.326712198 seconds)
    (35/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.098620934 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.364879797 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.335528843 seconds)
    (38/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.34200894 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.30634339 seconds)
    (40/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.919593416 seconds)
    (41/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.505913507 seconds)
    (42/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.465802254 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.232457817 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.34373137 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.436796645 seconds)
    (46/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.332814973 seconds)
    (47/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.596583021 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.887400688 seconds)
    (49/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.339999158 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.058682013 seconds)
    (51/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.330465415 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.325711976 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.382277601 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.503484029 seconds)
    (55/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.307278651 seconds)
    (56/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.340720195 seconds)
    (57/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.32816516 seconds)
    (58/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.352784948 seconds)
    (59/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.306214687 seconds)
    (60/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.315419312 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.899931096 seconds)
    (62/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.311862646 seconds)
    (63/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.268214512 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.343647283 seconds)
    (65/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390141729 seconds)
    (66/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.307451515 seconds)
    (67/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.323587506 seconds)
    (68/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.119793822 seconds)
    (69/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.872697148 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.409732005 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 5.489240709 seconds)
    (72/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.354790647 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.730972321 seconds)
    (74/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.587905588 seconds)
    (75/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.551236702 seconds)
    (76/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.270329302 seconds)
    (77/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.616288825 seconds)
    (78/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.353700491 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170339848 seconds)
    (80/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.71894018 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.338212248 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.751160808 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.421654095 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.841587024 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.331081755 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.269287926 seconds)
    (87/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.390306046 seconds)
    (88/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.331097326 seconds)
    (89/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.359163051 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.335132038 seconds)
    (91/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.68678146 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.353496663 seconds)
    (93/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.410232383 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.623856033 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.719857501 seconds)
    (96/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.039341939 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.324078753 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.309201509 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.164693358 seconds)
    (100/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.449203501 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.462186502 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52831593 seconds)
    (103/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.757598869 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.533035643 seconds)
    (105/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.347526787 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.072011724 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.399488833 seconds)
    (108/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.3293089 seconds)
    (109/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.142147554 seconds)
    (110/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.375454146 seconds)
    (111/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.095954617 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.092127674 seconds)
    (113/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.355012817 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.984986189 seconds)
    (115/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.314253766 seconds)
    (116/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.193138207 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.903846196 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.335515804 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.352474802 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405230128 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.847745012 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.36939174 seconds)
    (123/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.308708147 seconds)
    (124/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.593075713 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.095277711 seconds)
    (126/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.470605367 seconds)
    (127/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.724582698 seconds)
    (128/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.513498657 seconds)
    (129/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.671114393 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.075331485 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.616093628 seconds)
    (132/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.395178916 seconds)
    (133/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.362012343 seconds)
    (134/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.397077653 seconds)
    (135/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.343198626 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.937161267 seconds)
    (137/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.314334565 seconds)
    (138/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.440262746 seconds)
    (139/309) benchmarking ("sort", Float32, false)...
    done (took 5.316123394 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.187856515 seconds)
    (141/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.357545818 seconds)
    (142/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.420078995 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.066657723 seconds)
    (144/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.316212997 seconds)
    (145/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.359046212 seconds)
    (146/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.356905515 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.696036721 seconds)
    (148/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.264144287 seconds)
    (149/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.594371097 seconds)
    (150/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.348184851 seconds)
    (151/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.356650325 seconds)
    (152/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.341351326 seconds)
    (153/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.356951274 seconds)
    (154/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.578335042 seconds)
    (155/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.414526625 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.69157562 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.35745706 seconds)
    (158/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.34235736 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.626601236 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.459883403 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.906799051 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.558898191 seconds)
    (163/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.412963611 seconds)
    (164/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.931275751 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.353119909 seconds)
    (166/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.335360233 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.111617578 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.749952253 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.187959851 seconds)
    (170/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.166047768 seconds)
    (171/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.312758584 seconds)
    (172/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.36074422 seconds)
    (173/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.945204943 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.317170502 seconds)
    (175/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.788586458 seconds)
    (176/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.516502773 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.974794937 seconds)
    (178/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.362674625 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.44022358 seconds)
    (180/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.314091749 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.378245034 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.360878263 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.349954513 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.536055533 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339073598 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.453065415 seconds)
    (187/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.376023222 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.743161391 seconds)
    (189/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.265673152 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.318433352 seconds)
    (191/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.101145441 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.326439031 seconds)
    (193/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.040679821 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.27602529 seconds)
    (195/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.341852894 seconds)
    (196/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.701734586 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.321807194 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.453266297 seconds)
    (199/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.892938824 seconds)
    (200/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.598888285 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.964604353 seconds)
    (202/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.40146836 seconds)
    (203/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.336261166 seconds)
    (204/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.700758709 seconds)
    (205/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.380615959 seconds)
    (206/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.361201318 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.695375404 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.802899284 seconds)
    (209/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.038045352 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.352126614 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.317441547 seconds)
    (212/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.358103696 seconds)
    (213/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.607440329 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.97811735 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.551685606 seconds)
    (216/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317424886 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.248100481 seconds)
    (218/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.32855546 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.41082227 seconds)
    (220/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.719927816 seconds)
    (221/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.332331016 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.338822466 seconds)
    (223/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.426152875 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.440303469 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.359815328 seconds)
    (226/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.482874446 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.164121217 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.318243903 seconds)
    (229/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.332935818 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.352412026 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.355416202 seconds)
    (232/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.541657635 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.692050686 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.974275679 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.378262444 seconds)
    (236/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.544023714 seconds)
    (237/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.366141507 seconds)
    (238/309) benchmarking ("sort", BigInt, false)...
    done (took 6.354795347 seconds)
    (239/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.884919315 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.342492014 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.338307662 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.39885538 seconds)
    (243/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.364415196 seconds)
    (244/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.543367012 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.759708096 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.781571619 seconds)
    (247/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354058974 seconds)
    (248/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.318550466 seconds)
    (249/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.333997334 seconds)
    (250/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.366553148 seconds)
    (251/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424032775 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.405441458 seconds)
    (253/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.354090124 seconds)
    (254/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.912637658 seconds)
    (255/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.324135281 seconds)
    (256/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.46715632 seconds)
    (257/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.445846562 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.748316462 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.358160132 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.545066087 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.465439328 seconds)
    (262/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.338176312 seconds)
    (263/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.15039941 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.551180559 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 5.659663179 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.367634318 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.077131355 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.744069141 seconds)
    (269/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.348282444 seconds)
    (270/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.470887937 seconds)
    (271/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.367343595 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.31952967 seconds)
    (273/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.534233766 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.783754988 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.39483014 seconds)
    (276/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180207553 seconds)
    (277/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.899711385 seconds)
    (278/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.751532344 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454196638 seconds)
    (280/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.675020431 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.253705628 seconds)
    (282/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.32412211 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.091221549 seconds)
    (284/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.406891998 seconds)
    (285/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.086423107 seconds)
    (286/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.428392118 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.424603891 seconds)
    (288/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.343390532 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.443975874 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.341622684 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469826403 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.352764456 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.320590885 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.339728669 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.140427795 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.440457338 seconds)
    (297/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.426751678 seconds)
    (298/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.360733429 seconds)
    (299/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.215532588 seconds)
    (300/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.372642494 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383530686 seconds)
    (302/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.763272961 seconds)
    (303/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.342091759 seconds)
    (304/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.468556976 seconds)
    (305/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329701505 seconds)
    (306/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.157513492 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.384223053 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.409904571 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.723482353 seconds)
  done (took 1033.112103748 seconds)
done (took 1034.354545139 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376516338 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.372141924 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.353713193 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.376304337 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.46532111 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.377546563 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.365265428 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.357004807 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.4026599 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.405303282 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.35296093 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.375259144 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.356402949 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.354612668 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354968521 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370332239 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.348487073 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.355327449 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.371388458 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.365833917 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.372448708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.354419357 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.40480554 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.376411758 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359608005 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358837317 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.35936121 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.374741143 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.467818313 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.358059294 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.358955175 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.365637089 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.347689007 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.354953342 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351080327 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.375179264 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.366636789 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.366750816 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360151145 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.387531132 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.735398053 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.371918587 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.358258008 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358531163 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.35777688 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.363020797 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.357995099 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.365737279 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370811213 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.372381831 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.726967638 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.389076822 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.361388681 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.359256934 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.369197608 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.356660236 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.362456344 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374493365 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.377285904 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376039764 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.336506402 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363632261 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.361055888 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.374433078 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.365350632 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.762403495 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371443081 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.363676274 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.736154107 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.38107558 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.764075485 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.38256799 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.360824248 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.372539314 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.390105922 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.351196926 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354603082 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.359614708 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.364562346 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.357435088 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369258576 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371851383 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.365007457 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.360009707 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374547543 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.382787054 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370356714 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.36109199 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.369223934 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.378549775 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.367217231 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.370129298 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364891528 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.355732782 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.369891844 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364652726 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.362745201 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.362150439 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.365488552 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.371439555 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.736153423 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395496662 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.358053841 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.357253818 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.360775045 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.373466395 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.739464583 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.377886145 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.38383247 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.409491999 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.36323144 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.341890414 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.365790793 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380109538 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.371493964 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.36452805 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.358611404 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.341727424 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.733797448 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.393959465 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365630231 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.359449287 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379652222 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.364929159 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.359459708 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.357680705 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364617121 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377639811 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.482937894 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.375568208 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.394490556 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.360712548 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.366644761 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.385312205 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.378855615 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.395628813 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.366276634 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37957437 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.377962956 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.361793212 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.374354363 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37574249 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36563954 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.370052536 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.359208215 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.385487984 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376590922 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378137416 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.386163435 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.484702122 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36224464 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.343574662 seconds)
done (took 228.663693524 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.422105701 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.358827099 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.455014258 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.359731551 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.460936207 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.460688812 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.358091597 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.357406069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35750162 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.738073561 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.35757433 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.358597752 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.357797587 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.357718285 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.443507285 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.360403811 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.357893502 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.701738645 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.360509225 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.430708612 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.361933828 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.358892214 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.36158482 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.742519475 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.360273117 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.358576458 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.432383039 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.360827497 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.706713087 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.35643879 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.358973409 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.708553789 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.451618656 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378338812 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.371241184 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367977101 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.46198284 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.378198598 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.443133955 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.443721009 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.458173169 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.400244274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.355872439 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.363642356 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.362673134 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.361867549 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.359459413 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.387885961 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.359546559 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.35925019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.704806549 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.371743867 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.360525686 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.359873269 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.360517003 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.392073808 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.359709634 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.361961802 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.452398625 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.361984632 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.426446634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.745707054 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.755730859 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.3638025 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.360038513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.360659379 seconds)
  done (took 150.315472381 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.429602537 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.436439998 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.474210211 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.380143883 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.413332998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.479013624 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380781676 seconds)
  done (took 11.265133882 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.368797486 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.36395233 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.41320191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.414366082 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.364043343 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.512127455 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.366482122 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375817611 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362542704 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.417022909 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.365746845 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.364608157 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.370916506 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.363774326 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.41296899 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375601058 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.47958479 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.364899079 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.365411151 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.515595143 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36221828 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37174612 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.415789823 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.378087508 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.366476108 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.370058939 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937326667 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365326375 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.362983342 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.364938553 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.363849971 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.403806563 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366083521 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.362445537 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364626261 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480878652 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.365931426 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364753987 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.36669839 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.362725187 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.366295209 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366119355 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.366895169 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.364486805 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.366158328 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.388178147 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.367188021 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.366270325 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.367284799 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368440543 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.416999632 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.366552583 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.36417217 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.3642652 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.422621641 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.373709409 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.367015511 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.365898806 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.368093207 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.365558287 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.519061031 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.416984974 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.36923353 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415404069 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.368070314 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.368008643 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.367790933 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.367771681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.42159691 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.368755922 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.415662496 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.365627353 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.522861608 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.390066906 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.370612599 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.370170463 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.369597249 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368923385 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.363184912 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.374828294 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.366857509 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.368863628 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375692375 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.36587577 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.367370012 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.471595986 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476365841 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368824866 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.381792948 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.375144989 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.366933206 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.421008245 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.369335222 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.36753705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421976067 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.488299407 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.423330889 seconds)
  done (took 156.443007285 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.375802013 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.379152803 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.371872732 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.386472147 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.370656682 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.371282134 seconds)
  done (took 9.532169457 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.373697671 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.372033567 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.372554955 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.371473178 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.369884286 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.371514656 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.369656857 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370860234 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.375084201 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.370297337 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.370941192 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.371703916 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.370076476 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.370573461 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.371444853 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.370668016 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.370164503 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.369006633 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.371601723 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370685965 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.466831961 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.371088851 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.370899532 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.373166948 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.375146816 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.371863436 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38056963 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.371501737 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.37278405 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.376819261 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.39039586 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.371805367 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.373738988 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.377903725 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.375344708 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.374461914 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.375619794 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37296196 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.37005045 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.372255764 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.373541936 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.373586799 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.372978244 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.373777199 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.374211995 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.376723537 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.376556446 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.381008188 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.374651326 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.37497983 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.374780824 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.3727922 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.372622289 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.374631826 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.375857509 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.393629701 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.377528369 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.375038485 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.373312712 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.37624766 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.374108867 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.374296132 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37546103 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.376435845 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.381588673 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.375662318 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.374665249 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.377178113 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.374725517 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.375159667 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.375837702 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.373308767 seconds)
  done (took 101.317153471 seconds)
done (took 430.139845862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.728705304 seconds)
  done (took 8.011527578 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.480494268 seconds)
  done (took 7.766111183 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.506082285 seconds)
  done (took 21.799348786 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.42694102 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.418033371 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.402451457 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.369952302 seconds)
  done (took 26.902660024 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.61194795 seconds)
  done (took 7.895810214 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.36748221 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.368860805 seconds)
  done (took 14.021195539 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.384260845 seconds)
  done (took 7.66734683 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.998281207 seconds)
  done (took 8.288975226 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.371435692 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.391838554 seconds)
  done (took 14.318708006 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.348746838 seconds)
  done (took 7.633534402 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.239422699 seconds)
  done (took 8.524679453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.792953712 seconds)
  done (took 8.078479916 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.378096384 seconds)
  done (took 7.663251908 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.248302273 seconds)
  done (took 9.532625907 seconds)
done (took 159.386690535 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.368634899 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.375259041 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.374026105 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.363909101 seconds)
  done (took 26.768397343 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403720793 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403129533 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.400189155 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.408471567 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.402782753 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.397967774 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.391627874 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.392075048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.410549628 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402420563 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.401165341 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401362648 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.400154744 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.39167747 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.401655958 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401547806 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.411047082 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400884308 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.391596906 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.402527649 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.3674815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.411646122 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402325079 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.36853594 seconds)
  done (took 34.845715303 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.887783471 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.43790569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.520861553 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.420408173 seconds)
  done (took 7.543492844 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.418657246 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.420622256 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.432002663 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.471147176 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.496473935 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.430978456 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.393227074 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.388483819 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.375297099 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420944341 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.496316511 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.437153296 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.505103077 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.367126311 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.558509275 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.368077151 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.367032822 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.420722548 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.471146979 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.484927211 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.369456285 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.420249894 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423913811 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436976991 seconds)
  done (took 35.65210505 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366872459 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.387784598 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.367749675 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.366735801 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.375675089 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.36714131 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.367789798 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.370242485 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.368041358 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.374541327 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.367545326 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.380727092 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.366676244 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.36848826 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.374169645 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.369657717 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.374325422 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.367133085 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.367764866 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.375118773 seconds)
  done (took 28.701782849 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.363900012 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.311582928 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.71413445 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.617996453 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.362756289 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.365772331 seconds)
  done (took 29.015108346 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.437050246 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.587098181 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.373446012 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.721751703 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.814482418 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.388118615 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.37012016 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.605031695 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.919999402 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.915898949 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.425272074 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.438217737 seconds)
  done (took 20.276253695 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.374668654 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.364414136 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.371887813 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.380108367 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.423282291 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390455911 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.377552978 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.364037187 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.428299248 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.44334691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.390147852 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.425804005 seconds)
  done (took 38.01472281 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.451688056 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408666982 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.282506555 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.392300743 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083088134 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578121678 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36971567 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.805762856 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.369935339 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640209704 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365639147 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.456183448 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.623125886 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365877001 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369191189 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.3471482 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608896641 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834065769 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37251421 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.403402287 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395026977 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378408828 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.405845207 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.400183623 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57804851 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.509436962 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.62780339 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.14430679 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658343047 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381173477 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378090864 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367809331 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642304513 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036824391 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483063459 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378575454 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367663942 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.933694202 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.353007759 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.408001713 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313211888 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369223393 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379988928 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369002602 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304283924 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369142433 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.810781464 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.37492711 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079670958 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369052108 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379921799 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464279412 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.371915301 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.361117614 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38321185 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395639064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.366724981 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463664791 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961330698 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.794900678 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383760291 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.307050898 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381149801 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.336499175 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993929386 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.488950104 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.373247191 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37324789 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305382842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.422333487 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.38618165 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517222478 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391644134 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019891934 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065211476 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.391194278 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.299856611 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.891680543 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376443213 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.309465732 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.598184012 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148315454 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307797197 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.312692404 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305669823 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046457013 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379171887 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.722082867 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392166856 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.82877017 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.383189909 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389229213 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395858805 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.595122133 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.250319849 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370515386 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.302448741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516629641 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393862736 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807469288 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307118664 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.376400618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627781771 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.583508959 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383451472 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.360548129 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.589664055 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376523099 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.390748215 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373088465 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.385915367 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.944763863 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404501185 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801472041 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389199455 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.151668752 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072338812 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381266466 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.475740036 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388315722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614887377 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.094981105 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272407312 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441088587 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375868696 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373005451 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.438716737 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96668568 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.277489086 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.370350793 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378368193 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.386548677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.375066322 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323441608 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.373753254 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385891862 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.152185052 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.596759297 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373908145 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65266617 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309950468 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52223139 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383126167 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.597763893 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.573915104 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.395080188 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634413352 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384324313 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379345676 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389285829 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393875288 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477088814 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397441433 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383153771 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634040905 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.379640262 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.37910196 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.43932332 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.15730858 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380404081 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.381670498 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377679709 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958979803 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373424455 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381445673 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263140042 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.390300348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444080803 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.382605026 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.38662141 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.18684044 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399014825 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.385752162 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.378693986 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.602733786 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387177362 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.372908731 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455425606 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.572957417 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95464859 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.408812402 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.310897796 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.08881009 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.070836868 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378135878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.5671084 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377702773 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388873626 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390022924 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398958064 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959371366 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400235756 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.374758639 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.384850085 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39078794 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.38361703 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377925528 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.172196819 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.842667191 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385153771 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.389791046 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524252503 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.393845939 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315249615 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.896993579 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.385452317 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380365236 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.158183568 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413493803 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.371817313 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853383112 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639142682 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395123453 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392390736 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.532853403 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.416866266 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.375561599 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34278625 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414844729 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.402851357 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388860411 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.391399813 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.440675091 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.744112261 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949961801 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093682091 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935014253 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316182708 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.381759085 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.296649043 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82135701 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315143657 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037038069 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.565156759 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.84073933 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325213221 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.579479513 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.564653044 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158225683 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391442258 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608198404 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298360519 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.348746116 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411939074 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.593007509 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416608884 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.381917625 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31199735 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.664609606 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.619358123 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376779189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.460787036 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824485261 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362315158 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.181482244 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.417831889 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.68336045 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569225603 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.928876791 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770533897 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380902212 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412469513 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.862961835 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388698209 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908909419 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995624834 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402569962 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.58328453 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320254311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.3936824 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.393456256 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.378185641 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.672527896 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.385071476 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.639945043 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39529848 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316990012 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382725569 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911843193 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.25445593 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.38902182 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385650507 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095941415 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383546919 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.677711898 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.385358861 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.146414875 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407665667 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319755263 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320049102 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.076487477 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38679736 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359706683 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863271859 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.39219311 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402696329 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393774649 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230318067 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642011995 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.398592014 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.964959902 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626256628 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390383418 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409577787 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.48671495 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395917217 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.36501963 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.269792543 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62225458 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477442066 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.609473945 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.339257398 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.287102886 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.39940496 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.616679279 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.268826683 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.395496355 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640331261 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114442078 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.396448635 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072824781 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429186252 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387235295 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.398560447 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38882522 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412456287 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47699535 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397810812 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.397634315 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39887382 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55699373 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393572367 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38961846 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.401072291 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481924273 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.853476047 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.165764596 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.162485659 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974249652 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.141182132 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.987108387 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416369442 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388081435 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397727647 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322988003 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538783662 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914451717 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.662338746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519102739 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.395904586 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411632785 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401268754 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.3897167 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616893515 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663621923 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.360195887 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391862263 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.174444396 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.288343828 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400616231 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.600962342 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871848781 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935238806 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5104416 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.403100256 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.825602437 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664558164 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48133989 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389933004 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980204388 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.411945288 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713098074 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413656865 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390704765 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537343829 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397822864 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065214658 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.419061997 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.54661184 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.165428985 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41521679 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646181978 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.851759599 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402937611 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976133108 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.106677368 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657973028 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462243443 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.400368103 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.497549705 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.540252638 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.390206936 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.283283236 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391597329 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239868618 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.104310865 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.402150086 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976400972 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674135491 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.388822876 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.389144745 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415512395 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.401903736 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616056331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07034684 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61620456 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.403007604 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393866388 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.383388361 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.976072406 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421085883 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328472621 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.396126707 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64284844 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.647882279 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413651279 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.846118024 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.104242415 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924155568 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.365652266 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415081272 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400779309 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.092259752 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981484327 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.197065258 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877427686 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.052232847 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407369738 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671489951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.399699428 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39576375 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673386925 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.397778754 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.4020584 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407713055 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.978131621 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179739095 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.416983039 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524698875 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.330690117 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.621260971 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.478462043 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332206048 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40451254 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.56974958 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39541717 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526638948 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405717957 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.397895683 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406000372 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.155020899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668810726 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.401595385 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.378535787 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.376329443 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423662766 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.492506859 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636264999 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401888408 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.071853579 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.748036656 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.653237404 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.396724032 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.379067665 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.400850343 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396541052 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115291955 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406271911 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.398501626 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964844987 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.397976229 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.410840987 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401841299 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.613472133 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609110836 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397672464 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.426405316 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412668848 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416768573 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.298762793 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164475523 seconds)
  done (took 1663.305038552 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.418041951 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.4153208 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.415067817 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.428849195 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.443124002 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.510483465 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.4764103 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451752399 seconds)
  done (took 52.869568994 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.405681585 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.556320071 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.428824125 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.404335982 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.407150431 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.404134874 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.848164872 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.41827392 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.407405282 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.407791432 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410983377 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.405692825 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.043014439 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.40869457 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.401558257 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.383991524 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.406926453 seconds)
  done (took 66.465841539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.397551329 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.99325097 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.503271581 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.400126332 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.432807354 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.427593196 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.2137706 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.405959502 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.400081607 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.778563785 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.069585187 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.407695209 seconds)
  done (took 85.742969411 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.409258276 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.409833708 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.408814495 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.408827679 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408931527 seconds)
  done (took 8.357324344 seconds)
done (took 2098.843974703 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.64573469 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.086955831 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.059223494 seconds)
  done (took 5.457301613 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.547996155 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.597731719 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.719779537 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.725660718 seconds)
  done (took 7.905242849 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.688190551 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.787431526 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.591723703 seconds)
  done (took 6.381707769 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.820005553 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.411329629 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.420754644 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.402208441 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.405201293 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.405652934 seconds)
  done (took 20.529209594 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.405730584 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.409761215 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.407244843 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.409402154 seconds)
  done (took 6.947382663 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.382594253 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.106247658 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384287862 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.401418239 seconds)
  done (took 18.589803309 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.170254945 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.167718483 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.151336592 seconds)
  done (took 7.803795669 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.403046696 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.250264052 seconds)
  done (took 9.968519241 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.693860782 seconds)
  done (took 3.010322206 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.539124293 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.734521877 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.430950575 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.336953604 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.459458399 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.24106708 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.035591743 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.622709064 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.310453124 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.571562753 seconds)
  done (took 28.599688648 seconds)
done (took 133.803852304 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.209743945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.6505915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.607455681 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.220921274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.638179015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.607578934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.619477774 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.192115608 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.691174256 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.679676499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.185202203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.639968396 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.776909084 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.651897594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.778356364 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.779572899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.639375215 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.260092159 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.863726831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.103371537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.617681004 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.821296116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.012344386 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.837326357 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.638059201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.559905783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.401160848 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.783193256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.040500154 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.419659091 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.55960087 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.278162481 seconds)
  done (took 195.081336271 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.405196206 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405700469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.423177568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.4180232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405821678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.426110215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.406778584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.424981856 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.415283647 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.406852491 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.423065279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.409636152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.406607793 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.414522364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.408407519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.407258445 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.424009571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.407414736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.406947517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419759622 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40763971 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.438966441 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.414888588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412250081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.408087469 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411139105 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408803821 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.42028775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408255676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.420597563 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408114295 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.409681622 seconds)
  done (took 206.554715378 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417110786 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415015038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408688196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.408996985 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416397173 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.408260659 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.411586119 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.409445786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428748769 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410014713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421367002 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.408805537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.417547752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.409932239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.427453871 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.4386206 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.417531978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.411566407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.409321083 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.40933521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.412477587 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.421490767 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.419436322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.40977449 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.418132493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.410234364 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429381925 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.410775484 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.426986446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.42795844 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.427050366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.426579418 seconds)
  done (took 206.668289973 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.613053763 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.417856074 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.418070068 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.373298471 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.418992961 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417875399 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.414682529 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.607895461 seconds)
  done (took 15.005207167 seconds)
done (took 624.625742731 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.7103516 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.423450897 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.614506527 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.438013741 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.225672775 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.456654288 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.437544387 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.603994455 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.344225041 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.61165167 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.64927896 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.453405694 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.792512967 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.436355251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.692889727 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53591846 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.289479052 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.415933104 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.7531076 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.982130803 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.696740647 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.873784059 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623114068 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.329873704 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.808799846 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.871875868 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.171116067 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.286011873 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.455317627 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.759294907 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.119172189 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.417942747 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498286999 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.49747711 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.554900048 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.534298759 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.402469903 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.500436511 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.635582867 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.643431204 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.976828974 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.160896475 seconds)
  done (took 95.009978877 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.402147472 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.403221462 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.404273434 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.403242443 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.404088518 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.403395204 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.402174588 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.403054799 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.403593594 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.402907329 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.401854213 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.405833989 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.40259619 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.403748086 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.401708029 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.402575312 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.403390878 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.404420451 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.402360969 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.404170573 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.403575091 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.403485843 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404904057 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.402375931 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403292967 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.404603574 seconds)
  done (took 37.814492302 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.423001979 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.673593458 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.830804905 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432945722 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.430166489 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.428988918 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.501139599 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.424347526 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426002998 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.427006357 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.592262535 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427630006 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460880973 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.854352693 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.42597994 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.425730951 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.423156245 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.423731792 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.683412341 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43478762 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.520049692 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.424849284 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.501487907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.433550947 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.445894168 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.426698731 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.430291164 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.944192821 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.444958649 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.592864761 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.222488797 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.50295331 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.892275748 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.86080255 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.222954417 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.431076116 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.425898446 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.598270399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42828611 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425758732 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.502675282 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.42606738 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.839361546 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.040385647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.44278286 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427248579 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.961751886 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.619110122 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.668638738 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.434082277 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.865515932 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432734436 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.428936242 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.427555364 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.670055057 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.433093892 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427411224 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.951195123 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451545601 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.504625542 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428034965 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427772827 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.69840854 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.431836419 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.679230523 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433555018 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.436107956 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.448349695 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.84367614 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.434729165 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.066568322 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447018438 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429529228 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.595974086 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.678577037 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.997546087 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453799887 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.703115549 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913334645 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.522108791 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.433392518 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.933078009 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.526749812 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432496609 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.432484169 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.432619487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.429342528 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.480168484 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.502818512 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.00275579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.077044098 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.968002821 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.526187293 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442952082 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.430924853 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.955199137 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.449808216 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.429694148 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.83984982 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.066243234 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.448002647 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.43891464 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.068244079 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.451847638 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.508025158 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.436201087 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.853841811 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435086448 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.482181381 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.430320235 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438312261 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.453725549 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.509087145 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.432909689 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.4319827 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.045210594 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.628778936 seconds)
  done (took 186.966686985 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.424515147 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.423868022 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.424214484 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.42422643 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.4249269 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.433028847 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.425452089 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.426337614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.430798731 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.426064202 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.426041879 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.42627807 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.425736827 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.430444754 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.455864793 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.432462187 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.03773701 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.42732429 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.425270968 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.441791829 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.22080707 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.43170257 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.424990221 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.44278879 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.42473671 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.425297949 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.432611789 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.445506552 seconds)
  done (took 154.77770793 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.433161126 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.989171276 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.450266441 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.564180545 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.456092886 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.429849201 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.561379805 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.489524614 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.449817005 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.432077018 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432162965 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.730600119 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.435792701 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.939980917 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.623550835 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.579856165 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.940295876 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.451097589 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.431373675 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.431451357 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.564734545 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.436088896 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73109836 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.991882646 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.451947295 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.990574954 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41824553 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.434311777 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.432475935 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.992371266 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.449675471 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73328618 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.510413644 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.495248266 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.010210268 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.959767045 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.95811556 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.579385413 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.433670832 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.432647208 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.433756023 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.416928999 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.995821502 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.454846044 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.435504476 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.983162262 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.453569736 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.437806568 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.441227654 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435044104 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.493814834 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.510449889 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754123802 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.001990998 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.52883202 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.447905404 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.564770558 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.814481105 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.439500086 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.944109388 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.418012648 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.00166365 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455140478 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.418362603 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436378091 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.441836397 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.585813816 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.569095147 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.945299163 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.454432172 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.947542832 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.600127642 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.437781332 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.436234252 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438822078 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.001226374 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.965528013 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.60270095 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.572342275 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.633453061 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.423136408 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437716832 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421979388 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.514793065 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.436718464 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.011461368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.968014462 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.45430332 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.43972019 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.43897295 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.440356438 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.614201466 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031097461 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.535781509 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.934387616 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.762575862 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.749844072 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.445877704 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.495882783 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.454521982 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.749167065 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.444389374 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.495583749 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.880597147 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.749691324 seconds)
  done (took 170.278538539 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.681973165 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.677966 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.525454409 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.568822109 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.049462394 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.994834788 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.736109555 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.578507291 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.546290262 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.696580014 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.5821135 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.529085393 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.612254809 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.517183281 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.200109715 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.527503178 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.54745141 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581904465 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.547418222 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.461993995 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.091422214 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.731777945 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.610472005 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.325537431 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.530033076 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.197682887 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.997546602 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.969872433 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.609290181 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.77895913 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.987715387 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.583201447 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.404489892 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.129944163 seconds)
  done (took 68.455309201 seconds)
done (took 714.625338183 seconds)
SAVING RESULT...
DONE!
