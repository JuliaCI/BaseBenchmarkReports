cset: moving following pidspec: 21281
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326262957 seconds)
loading group "string"... done (took 0.565032039 seconds)
loading group "linalg"... done (took 7.664338133 seconds)
loading group "parallel"... done (took 0.171696956 seconds)
loading group "find"... done (took 1.186218857 seconds)
loading group "tuple"... done (took 2.115286985 seconds)
loading group "dates"... done (took 1.337233431 seconds)
loading group "micro"... done (took 0.247526674 seconds)
loading group "io"... done (took 0.980696801 seconds)
loading group "scalar"... done (took 42.171179239 seconds)
loading group "sparse"... done (took 14.106887239 seconds)
loading group "broadcast"... done (took 1.044568699 seconds)
loading group "union"... done (took 14.909127051 seconds)
loading group "simd"... done (took 5.172566984 seconds)
loading group "random"... done (took 10.448056573 seconds)
loading group "problem"... done (took 2.102240631 seconds)
loading group "array"... done (took 24.790677319 seconds)
loading group "misc"... done (took 2.143032409 seconds)
loading group "sort"... done (took 3.856952564 seconds)
loading group "collection"... done (took 20.819434387 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.585861946 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145882099 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152675446 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.133182718 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.209903418 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.160649017 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161080032 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100302052 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.001431747 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.183655697 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154881826 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.539751767 seconds)
done (took 5.274574012 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.223140688 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097818665 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106397985 seconds)
  done (took 0.892514483 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077913542 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.148663794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096585059 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079849411 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097410189 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079232633 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095976638 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.078840114 seconds)
  done (took 1.371799812 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.088614584 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.099507118 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083723411 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098634198 seconds)
  done (took 1.065567972 seconds)
done (took 4.334998277 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.749614307 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.282519613 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205437786 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.475127738 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.202345584 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.222351397 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.692933881 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345955756 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.258232282 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103462457 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148667493 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.396032632 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140178453 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.691912492 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089589406 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125048237 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17993232 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452187562 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.085423288 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111914991 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.11954281 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.144530587 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132637765 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093530621 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.191786396 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08242097 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197992699 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111108094 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.08044579 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.281700288 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202345295 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695944618 seconds)
  done (took 11.031441769 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115024196 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137061447 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100072469 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140601557 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137043099 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101828289 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085518221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098430406 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124436065 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.181972233 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113824034 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13925388 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09737125 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083943128 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117697046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248280403 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122916267 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.101658866 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103177127 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090342112 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.139757401 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114479902 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110584056 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095065728 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170584022 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225205026 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113472231 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128713538 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099779502 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115276708 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145140431 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145863459 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095301435 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081918389 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17644274 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126736461 seconds)
  done (took 5.231999152 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.110691306 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192042558 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.123004816 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174407875 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.082047418 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147514566 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096615582 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117009976 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.262410936 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.136699157 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17907555 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143809828 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09932628 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098487267 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083869571 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099772952 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.581735382 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.159685537 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.13766111 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098173103 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106624895 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.107209182 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.369106659 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089389515 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.099446594 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082524338 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.084988436 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165297381 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082718387 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.160554922 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125389176 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10365696 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135649064 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19865389 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126094968 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.120224246 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098967641 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.07969855 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.196031674 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.112474858 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107119966 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098741046 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106090616 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138885077 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138572319 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098571511 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082920413 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208706554 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.099389476 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116505907 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.94308121 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.18247062 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091092825 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098059473 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.331915205 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.100244646 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099115748 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.083140286 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279809383 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191622868 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100920137 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081174488 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09925347 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081977104 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40506412 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082347339 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.667706492 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08438523 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109299206 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083888445 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098569426 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106298038 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08909849 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118105057 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081490062 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100635718 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080412188 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098545032 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082591714 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.097278529 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109150774 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087519027 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.100249474 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150283779 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095008017 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101777451 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130296981 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.101658564 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.080479101 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134324025 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101595494 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.082053968 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.137129783 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100593117 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.090601269 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100701655 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144134589 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.098491288 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.1076179 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.152273958 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080561397 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09368959 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.108664794 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102303464 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132797112 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115283475 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10020648 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086846382 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097774662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080217499 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.165818156 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081507081 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.10036369 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083826784 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113064861 seconds)
  done (took 22.612855027 seconds)
done (took 40.679764873 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324206737 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106078221 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.106098695 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106270918 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103146742 seconds)
  done (took 1.517008419 seconds)
done (took 2.257793408 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.296291512 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178979703 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098198162 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171074252 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.095079245 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177533271 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.166241851 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113831902 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208010377 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096806392 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166622368 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095779181 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079386644 seconds)
  done (took 2.714326285 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096018284 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117174317 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084695785 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112512616 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077563429 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112687345 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094381333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118947198 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111919717 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086818078 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095422374 seconds)
  done (took 1.848757173 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095766715 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114137378 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083630858 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112657022 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078126787 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112483239 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09393167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118442102 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110763547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08602482 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094105388 seconds)
  done (took 1.84010928 seconds)
done (took 7.131733682 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092904936 seconds)
  done (took 0.828845404 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.929015743 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.920819164 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113294916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.152697428 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.316606371 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.197394332 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.480226956 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.127979856 seconds)
  done (took 11.167355193 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.145043101 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083678633 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.102898773 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085002262 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.106846792 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083907799 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.104410623 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103534708 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084932432 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104783745 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083420001 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100939556 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103622643 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084465778 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102792022 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086329749 seconds)
  done (took 2.374873699 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119095266 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116643041 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107087863 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109731481 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088649039 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107654927 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107982339 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089177444 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103215687 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104851359 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09119793 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108393247 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105240675 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081836789 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108171125 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108925071 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086996971 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107941169 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108547459 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091058214 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108408758 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098558135 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087159783 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108301498 seconds)
  done (took 3.313219083 seconds)
done (took 18.421786483 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160567673 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112756677 seconds)
  done (took 1.017585797 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096944246 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.115896651 seconds)
  done (took 0.960550754 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100487381 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097955728 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123469069 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111410729 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081305724 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098533485 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121672819 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082464538 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099141143 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081564933 seconds)
  done (took 1.747960965 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084592525 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112102689 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.103205047 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096573075 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107085088 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096063098 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089398666 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100930714 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112451879 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07892922 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103782161 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115494346 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087753047 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117847367 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107482502 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084761197 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103465548 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101452274 seconds)
  done (took 2.557605563 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082074755 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098018713 seconds)
  done (took 0.934121161 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083088476 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096021956 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08265112 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098731644 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095706289 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078126684 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095704765 seconds)
  done (took 1.380801507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48891789 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135866739 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260420287 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102881315 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104105397 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305112652 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100075526 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086687452 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10510416 seconds)
  done (took 2.501768582 seconds)
done (took 11.848208985 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095070354 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117904524 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11561168 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.476357534 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109288798 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.10007419 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149909512 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253670647 seconds)
done (took 2.174573607 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.1460042 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.618595288 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.437185185 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.23383235 seconds)
  done (took 2.049092645 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.411388727 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099968781 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.084411382 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082742449 seconds)
  done (took 1.439014484 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081196694 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102090887 seconds)
  done (took 0.942780817 seconds)
done (took 5.339611444 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082458166 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.130994517 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081389621 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099058453 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.081483313 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.098559489 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079387862 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100261183 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.081405154 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098983722 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097493783 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08159395 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098582948 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080097613 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09612982 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081919826 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095858244 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079751658 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.099763258 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078389305 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097948922 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078483362 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.095690995 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.078233741 seconds)
  done (took 2.970047601 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101868734 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100859349 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105355463 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086989978 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103901787 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086935365 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105313315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099019758 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087135838 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101707371 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085839658 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103975644 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101652564 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086795974 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100924112 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103855155 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087778592 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099788249 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083809514 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104419116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104580735 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082332395 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103346783 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087884859 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103298154 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103721622 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.083699018 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100193351 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104056508 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08686629 seconds)
  done (took 3.660163556 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086928729 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095912137 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079228867 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.10502424 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078649657 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09906769 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079251243 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.098104138 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080541406 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097737698 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081629113 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097662701 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079712744 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09947739 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080698944 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.101046147 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110199546 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07947778 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097864824 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079949154 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100826214 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07943071 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098517525 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079273573 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097569043 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07829646 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098058341 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07948288 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097514456 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079888524 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100873283 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083130875 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097546574 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086634791 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101265151 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078862614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100907936 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079504622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.098537194 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.078865505 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.09777639 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096131735 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080136343 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103825322 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079591522 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098619064 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079864957 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099273229 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079690965 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.101335899 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078652052 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097584889 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081625464 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098154703 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083040807 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096981059 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081177388 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.097164007 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098528729 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079883146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096617803 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079710645 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099290939 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081059758 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113198117 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086144274 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098111515 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081997666 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09977474 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082375584 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099262246 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093477892 seconds)
  done (took 7.290208338 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085045961 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109018521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082872496 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100184355 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078454393 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098902199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101795856 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080252892 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09947714 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086658077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098337008 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081729737 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099672605 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110599934 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080700568 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100003918 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086435493 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096083296 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079974533 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101971274 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08108603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101739133 seconds)
  done (took 2.811621106 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211370349 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.107858384 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144170513 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110094844 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085764867 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108454659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104733792 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08897584 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105074656 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087137664 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102702405 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104492778 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08572729 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102443259 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102515301 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086402798 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105179884 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08645128 seconds)
  done (took 2.700170345 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095080897 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.214006304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104510382 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101670557 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101410926 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085275293 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10675214 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110295057 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08525821 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10122524 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092550696 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102915948 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102965368 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0840338 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103677189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082757266 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.104361864 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082980496 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110316347 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107108595 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088884115 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110461101 seconds)
  done (took 3.052505053 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099647477 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103395033 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12178485 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087182307 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097945954 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082064266 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108949658 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.083173527 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110566556 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102301928 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083731543 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098851771 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090486388 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100873401 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105901926 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083309678 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102540511 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082411082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102944963 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07911336 seconds)
  done (took 2.70100463 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104516824 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102488752 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101741393 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093852944 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101949154 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083598405 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111274376 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10184241 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084253355 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127163382 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102147704 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084584296 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11235601 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108554909 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102349199 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094309289 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110867959 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11175354 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084738013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102559855 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127775375 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084335758 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111651647 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102660533 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084076843 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103197646 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102298117 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089844142 seconds)
  done (took 3.609582619 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082825028 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101120239 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.083063892 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099327449 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080101551 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098919146 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079967047 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098794092 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082571178 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098393955 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082841401 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101414941 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083588841 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101067041 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082491333 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100794401 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083194858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098651541 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081126919 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099023709 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082856513 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101136392 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082557793 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098738311 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08089927 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101740089 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080340288 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098954443 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082673119 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09892275 seconds)
  done (took 3.506287205 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093212723 seconds)
    (2/2) benchmarking "in"...
    done (took 0.109125622 seconds)
  done (took 0.98012105 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081530135 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117212834 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080097412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105651109 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088585701 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102296975 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110483391 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088779372 seconds)
  done (took 1.553758233 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098215965 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112614451 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086026574 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.116419096 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113053987 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099758141 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175343091 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.104409457 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089939519 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100706835 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116066532 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082215847 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.109118585 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083346323 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109015426 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.089828787 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101092709 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107911198 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087054749 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.101228609 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085227938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112124438 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.089175371 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099016254 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103697361 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093119175 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.116440889 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084436362 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106416711 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.109830673 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08979483 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.096238023 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08356707 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103630934 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081001695 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112418799 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120738692 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086783034 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113099082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085627022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115355058 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097828054 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088899528 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109051765 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094236974 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.10290004 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104310878 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07863548 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099768324 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086345361 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098129888 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0835823 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097808154 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091684989 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106604375 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114463645 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083125193 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104097983 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08717046 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.106878004 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091404265 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105267592 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10518256 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083892781 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111216783 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089125783 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114510261 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.079475727 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09729275 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.082255618 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.112808487 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127794212 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.0908694 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.104100568 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105246907 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081913953 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106334452 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085170753 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110340306 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090921301 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103630141 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11080778 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091649475 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103941285 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086544417 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111241563 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101028794 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086166747 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100769492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121008655 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083368209 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101435141 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.081665379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114968221 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087939218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103496411 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082001949 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110577506 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079210457 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.104144968 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104852604 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084643611 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115245808 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108971056 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090498148 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113671407 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091224215 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10365918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.106005837 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080922772 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104234644 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085923864 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.110495083 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077996092 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106753232 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085005438 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.105264175 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.113297286 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083071115 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.10366061 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092226493 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110552262 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082923896 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.100468682 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08809659 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103186403 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108517356 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093102497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103197319 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080155977 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099399214 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088146915 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10424878 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.1077295 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090206199 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107052965 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078697787 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101725307 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108372466 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094626168 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104022689 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085220384 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110469335 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086537807 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102184383 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.110023464 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.087179222 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102709114 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09024394 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104971794 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.079357879 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108171168 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.106375321 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083306537 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.107466389 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088356674 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.106263931 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084877494 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102382832 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.109880631 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086538989 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.10062596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084204599 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.102659419 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095898402 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106000485 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079397718 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.100954535 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111642824 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082549138 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103711188 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083653544 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10619429 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086092518 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102225158 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.084321287 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105632778 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.116875102 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089935864 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105334099 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.109899639 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096605518 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103499844 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087148531 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104894043 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087146992 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.10540737 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113904936 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091821819 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.110368927 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087626619 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.101214279 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111138951 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092836164 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103520095 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083060291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103432214 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088729111 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110580607 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.107927549 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086650319 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103466521 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085078712 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108579203 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088250527 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.104175099 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083835538 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.109974041 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103326762 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092514121 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105525655 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.115522827 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089432198 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098884893 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088749029 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101929111 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091494118 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099720211 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082987814 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102965981 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104829024 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085118155 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107749938 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078927653 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111731607 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093230493 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104830675 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083935531 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10459099 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110838145 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087194793 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109024832 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088880139 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112167251 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114682121 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083951247 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107350214 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096913417 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.105129724 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078777316 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111093095 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083311099 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103674439 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103169803 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083058402 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107767081 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094991749 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.11241704 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.099135566 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087424975 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103680978 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083859782 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099986239 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.090025988 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107119368 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086360359 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111331776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.106052254 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088530168 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108657654 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085834847 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.10688017 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086972148 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108579082 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104620472 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087851291 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.103606735 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088374766 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10399513 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082435032 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.106557162 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085087573 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.105014097 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091957516 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104941868 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103781191 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087848872 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106167667 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085596264 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.105535009 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084145167 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108249605 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086805893 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105019612 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107075899 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080786326 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112078674 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085075859 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112977458 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085662282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101778076 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.111831941 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087836247 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110513167 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086497581 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10592589 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086475302 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104756202 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108510535 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092360654 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102067088 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.097200726 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.114378936 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105753505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088971268 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104137925 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086842715 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104437441 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.0864877 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.106254971 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085150728 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104930035 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109499304 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088667676 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103396275 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087650467 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.1062043 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085088866 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107079767 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.080138527 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.105393767 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085524827 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105667989 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117187246 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.086443613 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109017408 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083481826 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107023531 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084550184 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10277854 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.114221064 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.095263796 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.106373 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113359448 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083901233 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107113425 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097137499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.099432982 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082940995 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.103842485 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08283437 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113677861 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106149935 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.102779545 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103398934 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085372752 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102578833 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087066749 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.105179772 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079234477 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103690864 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10934797 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088600751 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102207051 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085913582 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107372487 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087778827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115295712 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.104946486 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086741972 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103840126 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08244848 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104539135 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084679439 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.109317158 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087223081 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.103577007 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083380308 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.106056982 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086176856 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107864204 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104975244 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087711945 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113329763 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086063811 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.108505733 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089019344 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.100952468 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106999281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085957261 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105248321 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085091163 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.109527598 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089014066 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107162186 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.115703051 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085621773 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106732624 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085909456 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.1038908 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085517018 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106206931 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086597741 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.1052353 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10696616 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094861556 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.103569448 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.089135053 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105585274 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08592497 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113972955 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.106652928 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089177562 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114247901 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.088872434 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107580302 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113733631 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089568152 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.1101786 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086888249 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107970465 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09281273 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.104910802 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.112165727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.086181864 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106664179 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087375418 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103299213 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085549464 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105781902 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084795137 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113856624 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107359223 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085877937 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104940233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084302 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106831963 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09039769 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115020469 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.089185655 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109565895 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101285213 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.083643883 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107739997 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.083253655 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107748361 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089459407 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112782027 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08851556 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106876739 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104582408 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095671913 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112127518 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090019378 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103966946 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089417357 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.108575196 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108375401 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086995974 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106444282 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087963627 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111133468 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087138012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105814122 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114190816 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089888329 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107523751 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.088416383 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.107383738 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.086465701 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101974083 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.087157398 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108973606 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112819339 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089081373 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10672633 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098028735 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.107005581 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.086148389 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110705846 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10597395 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.092001275 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101486432 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087830409 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107975698 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088111743 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.101825518 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085690198 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105524943 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108531284 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086474141 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.101644571 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098467578 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117199567 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089933 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10663622 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103879088 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081336909 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09941209 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086166096 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108438744 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088598178 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.118600615 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.08555963 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.106315684 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.101821136 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086726503 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107244581 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.08972705 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.10432971 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081538023 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105492641 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089268056 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11253835 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085458368 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107247882 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109051659 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088800532 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104706018 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.091141833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.104090501 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.090152359 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120946016 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108422013 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087337834 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.114526677 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095002606 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108045112 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.10094342 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087632746 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110494446 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086676721 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.11020049 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.088092346 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123524222 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110145141 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085601907 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106109367 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08963842 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.106824577 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114933624 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088660191 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107945418 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0914414 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108850546 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096841639 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11020075 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113386378 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090871105 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111540581 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086619848 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108588244 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085781105 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.106796928 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10802278 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088274284 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.112870127 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.096046559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106344833 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119364785 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097412548 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110365468 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083375786 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103874032 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085716565 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.10306709 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.089950464 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104759744 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105150997 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085448876 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103081745 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087551988 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111132384 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087429663 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107400261 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.086671948 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100826005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088354785 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109658952 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107769175 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083781097 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107271537 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.08766858 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110186984 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090819054 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.108343839 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.08776989 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.1093799 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107382065 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08228139 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.114728621 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085371776 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107396945 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085592878 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105292274 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.088353764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108293042 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110789469 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087695271 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107083693 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.098978141 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108061141 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103451108 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083728149 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110558917 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083911448 seconds)
  done (took 59.692266799 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151284925 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082542232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100250535 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081466689 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113996029 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102510444 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080825618 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101293039 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083659761 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103557341 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082314695 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101946296 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112713596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127676489 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095996794 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108507045 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081245078 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103839208 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102061046 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083580264 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110833814 seconds)
  done (took 2.94436472 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108663752 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12241813 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119139471 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123423436 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092692862 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118562946 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119556427 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119842072 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102766047 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115496415 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122846897 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11982788 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094550971 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113024303 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116229846 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096495138 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122262583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112977085 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121025856 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098873389 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11728664 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118291652 seconds)
  done (took 3.325728479 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087113899 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.106409574 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.088386748 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.102830934 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086460241 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099373508 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090136057 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.105240127 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090674707 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105712629 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08374275 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105940298 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.10770699 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080841376 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103424481 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084425466 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154394212 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11148707 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.087055347 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10756442 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080595708 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109714983 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101326396 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082472866 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102786385 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090987955 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106219311 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084873851 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106742554 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085434879 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107104766 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084291809 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106401805 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.107341335 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086353613 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103178261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087033656 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10417627 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.082881602 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102338868 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.087981705 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101709622 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086325463 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106853634 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084496945 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103200449 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086972791 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105189313 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.080519514 seconds)
  done (took 5.585000929 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107360846 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160061788 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.08858387 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145573574 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124963929 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116489153 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.089186736 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.145924547 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105496872 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085889328 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125275624 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.124686173 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10820013 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091734224 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112733482 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107626218 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089433213 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106659284 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091874505 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.108143312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109853185 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093977587 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120826748 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123340121 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112478648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085764236 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105297141 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111182535 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099617622 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110661629 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110718576 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092695571 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121150858 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109285646 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08592867 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10850976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125600461 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08684354 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110244464 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103394805 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08868536 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110633719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113601632 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105505432 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106053497 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112477712 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08610819 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.101854166 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119878634 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088986532 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114850293 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123389469 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090490285 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106016772 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111158407 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.102651412 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10739373 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102857092 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087724812 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119733956 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103145971 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089745042 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121689958 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109245422 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094575802 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.121280231 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11306195 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111932191 seconds)
  done (took 8.308272145 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098261958 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.11397471 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125406041 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122530684 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094277085 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112412246 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114050633 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094364082 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112065291 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.121043245 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114263668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137882764 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089046629 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115970151 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116316649 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091757037 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113159562 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114478104 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093909708 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114425891 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115214217 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12473526 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093858152 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121480776 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.146016495 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.11010021 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091850623 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11259836 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125718748 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113375458 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127569026 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09325125 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113192082 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.125254888 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127851291 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09305293 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10450708 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114047945 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092540654 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113239695 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107709267 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101678077 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112708781 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.108196794 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091811395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112784267 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.125143893 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.129361555 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.119710732 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.101047788 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113808727 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124645314 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115318548 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09430303 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12317085 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151139375 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.125017779 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125855981 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11541401 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.102768819 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122634375 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133626268 seconds)
  done (took 7.867497946 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111016866 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117409854 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.121835866 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102341304 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084131986 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110843575 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082425732 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103796061 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117988371 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097898282 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121488503 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11456278 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095214944 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121829561 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114575131 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11715191 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092801747 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111100272 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.119078104 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091756735 seconds)
  done (took 2.993388726 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097004111 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125805137 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086950135 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114381484 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110978509 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094993807 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108762415 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114002727 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089352836 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110265604 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099655233 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118092223 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110723234 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094989245 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118984921 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116755023 seconds)
  done (took 2.559416921 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.103517146 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.121678357 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127170492 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089264318 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.10943805 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107188251 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088375478 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105442977 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084213295 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122444123 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088111313 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113207286 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.109104085 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087047965 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103753865 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.09164102 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104397345 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08684787 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109298855 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.12423379 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100678806 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107695902 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111009795 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090480337 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107015776 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093636775 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107802155 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.107823399 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085745113 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106591515 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088304258 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115197667 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105943117 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.086919098 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104984447 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086055645 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.108744241 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088824229 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113546312 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.109508379 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086779496 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.110447235 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089524083 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110711866 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085938077 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110854014 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106031056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09436627 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104726929 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089694088 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.110034429 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090261911 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.111354186 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120991901 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092611915 seconds)
  done (took 6.465530038 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102433315 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112806473 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082833595 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104384522 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.09105425 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.111525654 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113325853 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091881335 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108898284 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085823519 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108892746 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092596606 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111020548 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.112808607 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.089758096 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110409139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083384533 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109875028 seconds)
  done (took 2.679742757 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095179816 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106899759 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094168797 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.107767353 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088472874 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11038094 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084248411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105991378 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108156439 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089169508 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106898315 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091126551 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105393107 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091010819 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106985208 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089475067 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112738213 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108583935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088004492 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102893414 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091429843 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105149252 seconds)
  done (took 3.042446482 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.12281354 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126686536 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096626704 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.239490433 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.109135395 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137976248 seconds)
  done (took 1.686229179 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113897857 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12509054 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.111638754 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111187999 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120929224 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090898408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113592572 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113510547 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123211614 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105848589 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113423162 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123328945 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123697256 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101015446 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1199916 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120038562 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113787721 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092099366 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110235932 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133815355 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091601122 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123089496 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113128876 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0910783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112010334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122402933 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123968347 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104766426 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11259716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12010503 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118126894 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090650943 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119852894 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12745238 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092555068 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124237702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111922054 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133639507 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121133348 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100453745 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113569235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120468018 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10192557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115197462 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123989144 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113981303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098105928 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112801736 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114416251 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139329911 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096693796 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119198291 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11945443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123344143 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099033877 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136756921 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126152792 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123338263 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120879132 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128720143 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122405929 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098508696 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121710049 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128327287 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120599439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100782675 seconds)
  done (took 8.43331149 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107275043 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131205157 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114529261 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12920407 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100831422 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113472422 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11389046 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091194936 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11370933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112843867 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158225274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093233619 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122972952 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123242221 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091990114 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113709242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114046578 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12320289 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091155108 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140421692 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114021978 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123268672 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10022172 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12189669 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12857044 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119749462 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114276474 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090671296 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109948411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09181317 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118259432 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113629216 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123982715 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091218837 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123938382 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113664986 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091424766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11968737 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113517447 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12043166 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101194641 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13149973 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113519335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113055885 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105763451 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110304474 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112598248 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08906821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110477345 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11304656 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105186127 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124464139 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129574735 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123611989 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114295104 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091898992 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113084809 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114245712 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091588202 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117417603 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123726315 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090417107 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137784827 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113102137 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114742773 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123958193 seconds)
  done (took 8.339077584 seconds)
done (took 159.514697485 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219166057 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198273651 seconds)
  done (took 1.274665545 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102334811 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141401824 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099997706 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.173263856 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108180081 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122888457 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140111996 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097545214 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109077707 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088829763 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108736073 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.090877008 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175038223 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085650725 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.110505985 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109781171 seconds)
  done (took 2.727425899 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.122334116 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.236389076 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126537162 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.108070353 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.092558083 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111521387 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086508457 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113892624 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.092178271 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108020514 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.091101618 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.108681434 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.088341063 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.110026856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.113095912 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091477063 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107840069 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.090865042 seconds)
  done (took 2.864982356 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116947835 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.149807847 seconds)
  done (took 1.137166607 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.249913498 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165084393 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.227218176 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.474261746 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.273408895 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.368802397 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.201220613 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.211585212 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166118481 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208539171 seconds)
  done (took 3.408468085 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122712706 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183168055 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322603602 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156777339 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106313033 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.131508083 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160868355 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13296837 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123114014 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.102283675 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124793591 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.123287321 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142117237 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094987133 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116748612 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119123314 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124689768 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11653193 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116247625 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100182519 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.1401869 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084725689 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118478288 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115432499 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097223926 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121386688 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10848428 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085027754 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.118857041 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095532142 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114922992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.127750957 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.123707993 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.162005373 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.127390855 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.159574681 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.124567243 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.094856613 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.117522401 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093864994 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120623732 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121244726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.127996398 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097644428 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107458019 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.100720615 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.107539275 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085149099 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117483348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120112417 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.095200896 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115710425 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156562892 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.122455169 seconds)
  done (took 7.514038915 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.801745106 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158634871 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093165208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891036029 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137219873 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107087232 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78358363 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11143645 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259557828 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.76666387 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13444892 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120249924 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207114595 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259822895 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929039626 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287145888 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.67402233 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126922836 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151374209 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154251667 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119094354 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136462478 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108650356 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430603797 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118324084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111858624 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096727198 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120838034 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162476346 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125979134 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113754374 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178339604 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249027484 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207306385 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093549948 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11274203 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111640138 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170942175 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270395242 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.194607687 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182277479 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111039234 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089558111 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123613825 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136503485 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088481587 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.191491738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.179828899 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.1760773 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116712027 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.123754889 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.102338826 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122678034 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.169495227 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.12679053 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315580325 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322624389 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092103946 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121686312 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129030219 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264807827 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103153341 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.23039456 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14455624 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219034998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089912162 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782439756 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170563295 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11175326 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095344157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121296272 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116516043 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098305849 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.169019749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.40965176 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124537035 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114751506 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089784377 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229434101 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.105521393 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112153459 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162818428 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11762309 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121788295 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102197469 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124424321 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.173492829 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.257302749 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.102141215 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120869455 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115463287 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102554628 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117787038 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21352967 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.22483485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167772513 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.232873759 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099238553 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187034772 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.17449973 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119728632 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172373311 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119980439 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101995033 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122386202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220465613 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.148788776 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126146467 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093592091 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11999259 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148795671 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126769007 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096366498 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192421645 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461488024 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.172326044 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109770524 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127799741 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097984632 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162510614 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119244518 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26815923 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122131408 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.171386293 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119348091 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087589017 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12192769 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165235224 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123122787 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098547423 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123700857 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119969387 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236256341 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219629765 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122720224 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.223205045 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.189826335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12407596 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17382815 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122493118 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168797847 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119879874 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0989353 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117695881 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774876848 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099444687 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121590104 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116535597 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187230161 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089662221 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125930816 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125039052 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086344942 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803626004 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127501085 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099294783 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.126433603 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119164166 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121593802 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096813979 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116571801 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166610434 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23722488 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123431717 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.100659245 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125645966 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162114891 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118098268 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125744261 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102810454 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125272217 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122300967 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093246918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126885804 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169611527 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.187778729 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222066977 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574224262 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113107918 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101736002 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231652327 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112787979 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294125392 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098364654 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228221999 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165305696 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.12448564 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316313593 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166837294 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188112278 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128528875 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173370606 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110569648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11746958 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166303111 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089365619 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118702165 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163506192 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12585682 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124390071 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957265096 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089730802 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.225903193 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110271948 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172358483 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11810708 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119313597 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.269248569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113695398 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127909521 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165393649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115649084 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101857894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.876846068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124558611 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100549404 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119742906 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224369371 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16560671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121891002 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096575377 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121505259 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163424499 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231132156 seconds)
  done (took 44.423473766 seconds)
done (took 64.212180653 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.285564799 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.219680258 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.275400993 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174422683 seconds)
  done (took 1.928466179 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178924168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.156233014 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125569798 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.11024552 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.154375156 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084888022 seconds)
  done (took 1.705101 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.375039444 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.285295281 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.252794456 seconds)
  done (took 1.812323009 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321908338 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.251096944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.480929362 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329817109 seconds)
  done (took 2.385692795 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.214000296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134783191 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112571476 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103242235 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201521252 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252518051 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147449041 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.208332371 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.101136351 seconds)
  done (took 2.421269121 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198850046 seconds)
done (took 11.348589035 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.253642268 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.176206148 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.206791993 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.159188921 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112815416 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.18074903 seconds)
    (7/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.225482869 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128126023 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.160685532 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.189750396 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.216149151 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.096795634 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.256550977 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.236509296 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097840879 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.135334729 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092754192 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.215606814 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.236302014 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.133267981 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.230094196 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.187030694 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.213849315 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.141042195 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144202203 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.119308195 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.226660064 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.100652046 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127462103 seconds)
    (30/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.169872199 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.07147476 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.237929522 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.140610752 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118883353 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095724116 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122346833 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.221910805 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066912442 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122670858 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099034019 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.184062349 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195424904 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067688004 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.126445182 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16220552 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.120183145 seconds)
    (47/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.142245368 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066911307 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118512146 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.134591938 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103637792 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.140470598 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117133558 seconds)
    (54/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112165027 seconds)
    (55/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178781907 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.220295364 seconds)
    (57/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138738369 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088200669 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.1394496 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174734494 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115868456 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118831491 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086356573 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.12497421 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.143186696 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115030969 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.090503164 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.19059084 seconds)
    (69/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182691557 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138500309 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110612805 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097951714 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.185065424 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.117003748 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215286174 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107223549 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112605574 seconds)
    (78/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.094386193 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.118014063 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207158685 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.181218932 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.111604569 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066787413 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082694504 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118316358 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.115799321 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173866438 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120750111 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.235237528 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150019188 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.243570135 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066557168 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118487362 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067063452 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.123235467 seconds)
    (96/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.097922012 seconds)
    (97/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.150776462 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087040027 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119186493 seconds)
    (100/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.08925943 seconds)
    (101/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.217732145 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110646981 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.113339343 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12584629 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118193256 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166572176 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111588551 seconds)
    (108/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.16028914 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168549015 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118831341 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067994947 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.198267661 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.109824346 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.125285356 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134842229 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.092333543 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.139022512 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.091006007 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086782248 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110978798 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 0.182574398 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094566584 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118799214 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100595617 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 0.173635306 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.436502962 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.121770479 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092387326 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.073464671 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118155845 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180191035 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086617459 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120616066 seconds)
    (134/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094210678 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.12012611 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086726086 seconds)
    (137/309) benchmarking ("sort", BigInt, false)...
    done (took 0.24491613 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087144192 seconds)
    (139/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092295194 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.162480354 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.118995401 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08622582 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119013678 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066832305 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.100134443 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085244952 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136183422 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095410278 seconds)
    (149/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142685102 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090792409 seconds)
    (151/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.192134749 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110941186 seconds)
    (153/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.174694644 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.095590099 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174876635 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111563803 seconds)
    (157/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162501658 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174566526 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067529826 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121205381 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067012019 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067428395 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.139402488 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183019092 seconds)
    (165/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08798225 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.166708359 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.092495949 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093486999 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112534769 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172163604 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145333611 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137295522 seconds)
    (173/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.12089081 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091861105 seconds)
    (175/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.1008612 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.186553612 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.117136575 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138401276 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110209842 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.114449638 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101858793 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.092511189 seconds)
    (183/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.138108618 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089021315 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090482901 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.119081169 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.092321836 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094888552 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.11394253 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.136565103 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132935892 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.164991074 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09692106 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.111489529 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091040705 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.110489035 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067300654 seconds)
    (198/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093238892 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066156347 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06727411 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09252823 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086912104 seconds)
    (203/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.101390637 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.1276378 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.135006724 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175800554 seconds)
    (207/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077195039 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.178587551 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092392424 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125038925 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093924607 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120166611 seconds)
    (213/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066557382 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.110430937 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093400046 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.135952782 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067989503 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.122799523 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067143212 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092171653 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096358958 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.118759452 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066558126 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068574754 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122824415 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078041502 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.13290738 seconds)
    (228/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084676057 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110292125 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.088937685 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110720127 seconds)
    (232/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088583398 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.100600171 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.105731984 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.112900681 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.137591507 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.164476972 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118148751 seconds)
    (239/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119016525 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091692628 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.11282712 seconds)
    (242/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090325217 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067480374 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.091401992 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06702128 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.140055867 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22606693 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.160732961 seconds)
    (249/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177058234 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.104313031 seconds)
    (251/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.118721446 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.121980896 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086548395 seconds)
    (254/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.119451022 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067457942 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.181940217 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086039944 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133195338 seconds)
    (259/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.077500415 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119095792 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.088214312 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 0.175688253 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068829795 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093896182 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092793486 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.141704113 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112016206 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094614699 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.112675853 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 0.19166112 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068925564 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112642791 seconds)
    (273/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067218819 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.0670606 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.145203287 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085442034 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.119845124 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.143458822 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.086927147 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215601141 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.111619717 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093751096 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067772181 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.110583823 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.092272127 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.110410617 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138046775 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.093247862 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111393325 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094132098 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110964716 seconds)
    (292/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.075501337 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06771465 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117959373 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067170526 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090949025 seconds)
    (297/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.090213137 seconds)
    (298/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077336245 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.091668429 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068624932 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141527916 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092606376 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113738705 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090192386 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111537384 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.083048257 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.132010534 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.08713988 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.093886619 seconds)
  done (took 39.890185437 seconds)
done (took 40.79141098 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105593297 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15237565 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096009459 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13786246 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125798202 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093774549 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120084723 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098812065 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126350108 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127409392 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098243632 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094799611 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096815167 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123298756 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.101949324 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141857283 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125144799 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093288086 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.121980028 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086888381 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121427203 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086899345 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114612578 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070453652 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123795633 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094400427 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118729165 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120855544 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08585809 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111157745 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092162942 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119897035 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.085959071 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126025015 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092969679 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120195013 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097482831 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.123358572 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088271368 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111941216 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118924464 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086371526 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11810526 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095150802 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117898988 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091872924 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119921919 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099435956 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141583884 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116653852 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095182928 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122343115 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096686362 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118674531 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090417 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121316949 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091807282 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141005978 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12067472 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09191552 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119122328 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094933293 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.118226039 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095282401 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121216982 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.097815435 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123799347 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.120796318 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097817062 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.119605571 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08639464 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.123778061 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089962995 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113373578 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.099835999 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123384124 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085426217 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.120776875 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11880596 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.097328858 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.111919881 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093952177 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11433912 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.098591678 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114504378 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07563852 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.096662116 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.12473925 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.117212802 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.101340812 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.125733976 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.099762507 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.119276846 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104957113 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118142689 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.097446435 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112133641 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087147057 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114422723 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091117876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112736649 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090251439 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121242264 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088973261 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118804706 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123917323 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087264761 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118673074 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.091647037 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.115648771 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.107079996 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.124187604 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092100561 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118070414 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085927833 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120665997 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.090465866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112282408 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087029281 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112968217 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.097387525 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112404597 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089996553 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.12096664 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12630903 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086474683 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116359337 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093179854 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112409563 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094888918 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112696507 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.092365131 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11470882 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.080562763 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115130889 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089635628 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119394094 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090196463 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121152433 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088797913 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122113178 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091946349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118442146 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093549584 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112033712 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07423027 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118263617 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089463366 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113898308 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086952024 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114520991 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.091103636 seconds)
done (took 17.23455865 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.093089552 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.193435942 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154860613 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.151214692 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112560072 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114136843 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.125539522 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.122887543 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114952055 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146158496 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.115702695 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.1340214 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.151228722 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.09186912 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119270754 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.097335767 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.119218661 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.107829268 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.147345929 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135912059 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.167026924 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086448592 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14854816 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13842656 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.122455946 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105611962 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.114170253 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091224321 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.117399297 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.113904475 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134864658 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.091425316 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114582998 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136961152 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104657773 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122795837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087671266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121573844 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086986289 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113831917 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143157682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.110061375 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.120580024 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119339834 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091870228 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115577005 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088486741 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122590506 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099426238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118643424 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127729796 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158115835 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.092081056 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124149705 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08678313 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.125204442 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.125499548 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091607055 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.114444388 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.095654618 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113289383 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090901048 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12962204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144737819 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091632605 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124135864 seconds)
  done (took 8.787353002 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109932982 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142060412 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.109557686 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.15020839 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113978551 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089226579 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.114370266 seconds)
  done (took 1.794747275 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.094206668 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.136037318 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111452205 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13874997 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136065983 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.112472413 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125225133 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089175707 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.134564344 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.092374286 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.137159332 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.155000929 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093331843 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122877093 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13913743 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091096949 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139753093 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.08898016 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118791979 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112025293 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117889412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136212166 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091120888 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115471435 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10284592 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116070896 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163245347 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09377886 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117612669 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092096712 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11356066 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167701491 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104885325 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126578419 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088551226 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132391966 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.130109536 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08672483 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132585633 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097814786 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130783469 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090067931 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118052251 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087823961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120366434 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.126005399 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.095054874 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116468182 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091439329 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13580792 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.093714944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130552774 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.093631568 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120770114 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094859264 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121863577 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124677055 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.094712967 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135707891 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094059047 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133014446 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.108967277 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130374143 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132447431 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.095785905 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130161992 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106947982 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.119514418 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093251792 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119114962 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132007425 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.091356495 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116887849 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104147382 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117781427 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117922493 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140798597 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095094423 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.127580838 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.116381455 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092798025 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115662342 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112959967 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119327064 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088816857 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121266803 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091969927 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114440641 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.08780227 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119812094 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087598912 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117605208 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092106954 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.117274464 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092219284 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.134480124 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116715464 seconds)
  done (took 12.033345411 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.096357663 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116392986 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.095545063 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116715471 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090191782 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118176975 seconds)
  done (took 1.609843569 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.12087965 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.120652399 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.109100638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124373743 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.159601553 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.108183667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.133374763 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125830358 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.113413834 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129126653 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.131224969 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106542318 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138564881 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123573319 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.105371141 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122564665 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103896984 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.128501399 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128226831 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096640754 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.140054693 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122293036 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096359818 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.135377799 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.122058548 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096070347 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.12795972 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102536853 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.1289807 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124901876 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098829278 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119920784 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096377587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125243271 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132734282 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096214711 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12393472 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12365005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102180372 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120578317 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.110334337 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123803196 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129258774 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.098023361 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126302866 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126482258 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.1004058 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127670182 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104490579 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121225284 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120536159 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095568177 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119775849 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094445873 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.124049414 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125247379 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.09873725 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.1316397 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096664043 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123924341 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119958824 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092970878 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12640463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096790139 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132636822 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121730126 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096100474 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123779152 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122911263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098977089 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120504438 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092651257 seconds)
  done (took 9.38865728 seconds)
done (took 34.575558251 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.696850755 seconds)
  done (took 1.669507678 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.724259777 seconds)
  done (took 1.703290225 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.178375109 seconds)
  done (took 18.157067454 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.515469554 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.598694478 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.910306367 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182274866 seconds)
  done (took 3.185461704 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.963488712 seconds)
  done (took 1.959438823 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.307886123 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.261201488 seconds)
  done (took 1.550500233 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.795538396 seconds)
  done (took 1.786220574 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.382148194 seconds)
  done (took 2.368081496 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.34695628 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186331436 seconds)
  done (took 1.525442011 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.566382784 seconds)
  done (took 1.556307234 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.913800916 seconds)
  done (took 7.913370615 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.278250127 seconds)
  done (took 1.28198392 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.313712484 seconds)
  done (took 1.306273565 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.557813853 seconds)
  done (took 4.554721278 seconds)
done (took 51.503890373 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.105458328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128837895 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101353176 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125807451 seconds)
  done (took 1.45063705 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.108175599 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124681679 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100979701 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123237021 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127971858 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.100685001 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124102649 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100895335 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123058971 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.101452845 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122912743 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121056161 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.104890926 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12713197 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.098800228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126814459 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105800857 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.126922057 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125880396 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098855747 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119999101 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097423195 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.127425206 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.099742344 seconds)
  done (took 3.736011607 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.107011443 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.126533634 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102770599 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.122370572 seconds)
  done (took 1.462627823 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10633358 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.149847945 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.143794508 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100745279 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144606085 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.141958548 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092794462 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118061556 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094529014 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126953434 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090729992 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152317257 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139182448 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099778984 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129848424 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090031715 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119028737 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138492223 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.103579715 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127128467 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094769874 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126991962 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.096510578 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.14218601 seconds)
  done (took 3.868779237 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17828242 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.136086853 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.146157679 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097454318 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163140486 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.147864865 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.092515288 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.148583559 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.093026619 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133988141 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119066345 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.139261708 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130970501 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089250866 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116303519 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.093017179 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131865185 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.131740656 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09411572 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129162533 seconds)
  done (took 3.516088186 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104170583 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126401906 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095732263 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124901445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106570102 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128926955 seconds)
  done (took 1.689837631 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.096990435 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.122198881 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096478877 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118449904 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.09803336 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116702197 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.092531116 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116907085 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089916993 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115718796 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09049624 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114483197 seconds)
  done (took 2.275889118 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.521010172 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126077861 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.117892352 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091592573 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.123714334 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092766676 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130974046 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092303424 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144017688 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.093922284 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11849272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.09655076 seconds)
  done (took 2.753229436 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24447077 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13371003 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.302814485 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384992205 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158130281 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18005288 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.291462404 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171049795 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.236476795 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173268293 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242200525 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206440062 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160198212 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196784582 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144681308 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.154623566 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214192597 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255951051 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163286927 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217237843 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238677163 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175471431 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189673602 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157867257 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14198432 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178971414 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124307172 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109586335 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238974441 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186980614 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226895879 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171559423 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153871629 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213149094 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263979787 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232223239 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30234304 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138064526 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151997201 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.174365307 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.27394432 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145224788 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239158899 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137357562 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139434512 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221581925 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175750071 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.185557141 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160246548 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146713683 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20604508 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251760381 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.196875234 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146046318 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319021381 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154366058 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.206051217 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204861985 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257546098 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210620515 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194985755 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.127242931 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200527038 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227771652 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194610428 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.180925979 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.217131702 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1265373 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233444074 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19453751 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169098073 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230925496 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190038506 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142667254 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173449486 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176807017 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176868351 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264243259 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222683664 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.100482012 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172175152 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15241575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135034317 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19623289 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099705866 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244460441 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150748679 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.140974316 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251548756 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169217277 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170808431 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215943166 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243128386 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154597808 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08480167 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157178159 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158526857 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198357371 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142981353 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162412679 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165576528 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131842066 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188902136 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125669736 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187665297 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.090934469 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203546687 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185429697 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128005562 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16091098 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12710483 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154214561 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184736942 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238776713 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152682981 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113084467 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241594245 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188132218 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.16092342 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189529989 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212862435 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.155258773 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161559465 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239100625 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228399476 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150311094 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214554626 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167572294 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146984419 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141585163 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193154316 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165155581 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.172820868 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114653411 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.222420321 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218312864 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.135941554 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146996556 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20693195 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13884016 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139319075 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170708122 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151540896 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.112547643 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.155150498 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155736079 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18449082 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21241851 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133512981 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196508953 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161254671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238094739 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151291057 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.15534121 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158781115 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102151272 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.232735405 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212190164 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140353405 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217221337 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.182168202 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246775855 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1810947 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144626439 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188537796 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111265041 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.129239344 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204785848 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205420966 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170678259 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.208782721 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214242182 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.212891532 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.192022828 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182754756 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181537628 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.175581604 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165552356 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.148847368 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170463404 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181826919 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.132289282 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.153998577 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.114855069 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159077143 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152851876 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138585164 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201570521 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178223852 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.229272042 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168340395 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159799324 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190677462 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.109385149 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213531687 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.189157625 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158135919 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.211269715 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202080458 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222264433 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121253447 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236858978 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.127663045 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100198491 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146376456 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.173183157 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13538826 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10907679 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194380411 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191025831 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193445267 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186572689 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251629486 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182044325 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201313197 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.131365853 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.149717864 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225827508 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189262256 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.202083661 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150782965 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129364519 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184676561 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164530458 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2676197 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178936916 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214960315 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217357463 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.160417501 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140478469 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16220538 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206316461 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163215109 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187726409 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155553874 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151803043 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171513601 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.112716868 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.193808523 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195717939 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174257893 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199560294 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160846534 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222379718 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109009305 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172885359 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171612517 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17510952 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115485502 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186514496 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215953524 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158580375 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17801728 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230480738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112008583 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.323570298 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253058902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235348766 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118909604 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162458702 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17164306 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173262104 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178790844 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189914391 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170275481 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228368497 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166849342 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118448242 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149481079 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160066067 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159274966 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.111272461 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153052935 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.206568019 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.119865014 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216715224 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170873028 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16120508 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185112743 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.129731535 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.148032801 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16128412 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223229637 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224452475 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221247212 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161099916 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188103349 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246604867 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129441409 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11205391 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137046786 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189170926 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145261688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203574442 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.201299233 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242743078 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184026255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227588333 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113836667 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123350016 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159612736 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178725769 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2407707 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152170838 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160107106 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205936815 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.154348962 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104260767 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182426217 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.332128921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148545513 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202352928 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081617004 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.31074781 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102225034 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133931628 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163560271 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20947365 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.141515259 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.194000143 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182465479 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174058404 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169322028 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151104879 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194270512 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246541239 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203249073 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211281592 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107107166 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159865892 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178133615 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225991576 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167123366 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.146079291 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208366554 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199163575 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229415218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.119989213 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203822 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172297034 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157922184 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189202303 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135989064 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209956914 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137370104 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200035464 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157135029 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149265693 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176539469 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.22117646 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143378697 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192795042 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194269587 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143604168 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139864821 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175676978 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189049368 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167128732 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.105101541 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214412507 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.103470368 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229069355 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269917171 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108499319 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157198443 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150711988 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137294381 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155857948 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160773361 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114100066 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168164799 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204704663 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.137995717 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223952362 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208986124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176657327 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213389779 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125463208 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695437144 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.13497063 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198701822 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164883307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238083396 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1570561 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182920679 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16556003 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174405921 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197853741 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160855553 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234116428 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227021612 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.188986311 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134916002 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158656911 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165273606 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145795817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123820652 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200231975 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136544955 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159734559 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.208871607 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183382135 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.11264931 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143459239 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2306428 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136919421 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215729571 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185780405 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138975908 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173942731 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187999589 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135876733 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182946514 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241501322 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147393015 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12383352 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135002959 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158419078 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267429998 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097544949 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24061368 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187140421 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161288781 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171069317 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148397426 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226689097 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162403211 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188395396 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150266128 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161590007 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158367892 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138740706 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103124162 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157181774 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167910947 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.152168647 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162052332 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165557316 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197368904 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095781149 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148001529 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319602201 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202455524 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245991049 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108447488 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136917442 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165169224 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151843112 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180736014 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181171763 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137992611 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137676296 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108859663 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157982569 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115252427 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156722144 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196251772 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194334224 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209200336 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137135773 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276210529 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112797063 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154982968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114866807 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105566027 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152307356 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145688946 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159586144 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195428285 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266327632 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147208662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132498226 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150610345 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098400655 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135984623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164396131 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164997396 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178737258 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144659538 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081386411 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157944474 seconds)
  done (took 86.357460698 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199095703 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132353727 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.147405456 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202182353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176747419 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.268733055 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211720574 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253778171 seconds)
  done (took 2.691472049 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.101679294 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.147042608 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.15731207 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133256519 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092364237 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119869132 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347128495 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132687157 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116513322 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.120656239 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176108211 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093703996 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.554179275 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089940498 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121048138 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108682126 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091542624 seconds)
  done (took 3.796137627 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.492273863 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718505044 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.518302947 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098058943 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.194994958 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113018861 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.696692807 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196366955 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.114674133 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.484000695 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772998483 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.166556981 seconds)
  done (took 18.667749543 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.106596967 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.123161143 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.113416207 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.138162955 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.097206005 seconds)
  done (took 1.688515618 seconds)
done (took 134.944108066 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.111966907 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.41914627 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072282128 seconds)
  done (took 1.631766703 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.116404052 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142281518 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115926406 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139225298 seconds)
  done (took 1.626491005 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105085517 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129101852 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.11083744 seconds)
  done (took 1.450247822 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.330981227 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.196958102 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171946261 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113398642 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.131179388 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103103436 seconds)
  done (took 1.457546437 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.104734985 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12917172 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098696692 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131731472 seconds)
  done (took 1.575095377 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.102726863 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079106264 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.112548824 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.081187036 seconds)
  done (took 1.480230805 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.122093383 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136481239 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111892861 seconds)
  done (took 1.481382319 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.138779804 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.141633018 seconds)
  done (took 1.3914348 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.114159103 seconds)
  done (took 1.218261104 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.126153812 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.175544212 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.193737657 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.168945983 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.2473264 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.173787773 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14926895 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.118728403 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.133724959 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14703197 seconds)
  done (took 2.746385378 seconds)
done (took 17.976003184 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111523446 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.427129868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.415729116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.123391141 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724971769 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.383341648 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.035536566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148443146 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167288153 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093828381 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142241429 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677388366 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.063355245 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.376412013 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.022076804 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.374115122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.681650956 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.127904143 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120748123 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095045646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015898524 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095567666 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123955551 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093939223 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704855206 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.434182131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095889197 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.373166466 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.099998176 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128407451 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.388938297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125426633 seconds)
  done (took 17.088867895 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104382681 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178339884 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098957051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.140587024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.125174154 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.101018317 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126140847 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093484728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183467265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129055263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113594537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.125493327 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127977924 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096424421 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144443289 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099328364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127635763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.095690495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.124680202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123287771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112445032 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122615963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096489157 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122779587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094094477 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138972439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.128127621 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096326775 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121765386 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.104659305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.130186419 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101345108 seconds)
  done (took 4.941898323 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.149815728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.188105906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130180366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.133050913 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.173294066 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.132101875 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.208375134 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118097013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185670864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.126599496 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.147652355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101527193 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.160086362 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096903774 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.147745828 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122895017 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097167846 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123904596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096769612 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.126141965 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.144310085 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093194601 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12436009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102105061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125043744 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108699394 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126898923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123371338 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094047588 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12947374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102926675 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125801824 seconds)
  done (took 5.287739657 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105253186 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.130477806 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.114943578 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140889721 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101133177 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.12822285 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.105453794 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.127528483 seconds)
  done (took 2.069977512 seconds)
done (took 30.494420561 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119440733 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.129145889 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.114117892 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136175314 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105339621 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.134706241 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.098481673 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135642026 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135275154 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108116356 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138737649 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092531037 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124542743 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091623737 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136810922 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098516808 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135908329 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.109325914 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.136953004 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.13890597 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094554948 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135254606 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103867004 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134922418 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.110600512 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.136827578 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14762488 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.107764609 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.125659875 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095484115 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126722921 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112571333 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128718075 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10585254 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.128453613 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097975342 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125159224 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096765071 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.136528028 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.140920926 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105430287 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135195842 seconds)
  done (took 6.161663769 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.1172052 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.149396208 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113446322 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086104288 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119718987 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081336672 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.14184019 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087408752 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111658674 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108706395 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.079312057 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.109021286 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.085249665 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.1030634 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079287514 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076412038 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110999154 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.082924391 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077498161 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107669901 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080104197 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073000535 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110390849 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079860218 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074955549 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111974794 seconds)
  done (took 3.678645763 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106754313 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.137655996 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.116850098 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186969863 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162906213 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.1062198 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133907912 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110696282 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.142695164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122067266 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09672744 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151827465 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113289113 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131143301 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.094158719 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.140513612 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.13741255 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094631777 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12866652 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114221244 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140075214 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103289689 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144523603 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133380285 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092500668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12434943 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097522613 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135434742 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097814339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133437832 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098817588 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.128040584 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125280821 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.106894333 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127411387 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094556505 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143876361 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105382613 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132491578 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.093864532 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12971445 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122971377 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113940858 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171441848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092086991 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133132919 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099995297 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.138011089 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122879405 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111648717 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132967175 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092388508 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125971204 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092581508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123830062 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10950121 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125440747 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095410177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133574533 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125866347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105748134 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126510053 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110616643 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123165869 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100548122 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12307323 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099236447 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122709677 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11880231 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126291515 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165107676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093832919 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124745375 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102314133 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132161794 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129401528 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.095730778 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139173945 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103429608 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126731192 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10233304 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.1273293 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096026292 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1440084 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09597785 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126343875 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.094030604 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.132112634 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.126571855 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095372284 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145587442 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093183281 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127522669 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110848235 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.124627356 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123985745 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100434601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.128064967 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094152193 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136351589 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098467444 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12567691 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.105161431 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124723283 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125895991 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.110743738 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127855893 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09821977 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128678916 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102711081 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124530083 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.096870017 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.128263364 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09953949 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133675443 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099876715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129367225 seconds)
  done (took 15.06785408 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.240311757 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219095063 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.216018616 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.309822557 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137809225 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115126777 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.216122662 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158897065 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124466222 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1634533 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167015156 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184475212 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.140065227 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183516686 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.140968953 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123443629 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.114870639 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166918598 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.225308139 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.298240078 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.112451569 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.135344131 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164583023 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.170483001 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.112593746 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135162143 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.143659773 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105323631 seconds)
  done (took 5.866846594 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.11572242 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158686189 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097942842 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14789445 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.151035568 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.09560021 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130111449 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095567748 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139969407 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137353483 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093159195 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131972149 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.105548441 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.135458576 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125070194 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.106749784 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133014941 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095216038 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128218371 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098271159 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131338972 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.105812286 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129687173 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092597398 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.138380915 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123660261 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093481659 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144900976 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092955933 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.152048988 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122624594 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101027684 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13523814 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096020405 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123926347 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097564945 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127878761 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100809913 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126634144 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.094314746 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.124031516 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.08355317 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123311893 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.113064489 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.135307217 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079446552 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131528748 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12974282 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09683132 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121804898 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099711576 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.12663638 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.104139609 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13211715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.103631281 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124622195 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100199102 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.117056111 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100826087 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12676817 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08928424 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.1218376 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.103377174 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.120272712 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101713446 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129339373 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093517956 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127084709 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097893212 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131150893 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.09594152 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.128943208 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09767164 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127766074 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098969253 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.13099408 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100014761 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.124813908 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093206157 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.128147398 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076192853 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125326763 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.077998336 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.128237146 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.093073599 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123711807 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096013122 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.132521445 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.146552755 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098815524 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133308151 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096718759 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123652502 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097548512 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11533671 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.098355588 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140760493 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.148310028 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.101788043 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.123630402 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114635279 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127799598 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.098684772 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107796405 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10724635 seconds)
  done (took 13.25427691 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137062889 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.164034073 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.104465814 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.151995044 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159189236 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.166965523 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106802713 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.132251988 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103205174 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143785528 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093867236 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13389124 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.103903817 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140022999 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.160133801 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.10454533 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126755235 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10846972 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.134600992 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.180146234 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.119306328 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.145578959 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.11421398 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126920854 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.101361905 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.148347303 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164806823 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.113515543 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139939686 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143844328 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.113087422 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164066518 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112797461 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.133362926 seconds)
  done (took 5.653997182 seconds)
done (took 50.797732448 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.265047849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445297899 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.21766089 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.146977527 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.265344732 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.243792877 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.228710232 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.220699388 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.348016406 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.220832853 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.483972069 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.899158432 seconds)
done (took 59.130745362 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.241018053 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352353014 seconds)
    (2/2) benchmarking "String"...
    done (took 1.505572072 seconds)
  done (took 4.001935488 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.586899104 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.180777895 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.479351103 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.219921236 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.217913491 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.510037534 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.900170271 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.584314039 seconds)
  done (took 28.236782557 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.224053014 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.610326561 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.940023248 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.942763361 seconds)
  done (took 18.862564587 seconds)
done (took 61.073243338 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.212708692 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.270775594 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.250311265 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197755001 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330965774 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.256581958 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.648144138 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.285297663 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.233515592 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.201223344 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.241711152 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.2296112 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.235168788 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.639522226 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.232358411 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.221841472 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.23770605 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.724427885 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.641110852 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.239325999 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.232426704 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.299502874 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.230214314 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.226755819 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.277004162 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.220903525 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.226855093 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219233229 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.830655889 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.223124473 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.237416953 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.779255101 seconds)
  done (took 191.67639107 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.221140309 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.330145891 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.401254662 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.255088472 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.814233782 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.417844536 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.360363697 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.89754632 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.237153786 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.2252017 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.546440118 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.218674797 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.548121409 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.198194899 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.231702162 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.334867534 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.535806954 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.549117868 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.239631942 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.498350477 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.247120121 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.567679866 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.503753419 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.472731487 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.26451674 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.302603495 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.233326306 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222621472 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.409833976 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.471078613 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.22985666 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.268797583 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850890091 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.079466198 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228711813 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.251785874 seconds)
  done (took 151.812530698 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.504358124 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.22394679 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.223647909 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.224722577 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.25796013 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.228520148 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.817351115 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.796112909 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.746080032 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.53383518 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.635625418 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.543937115 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.22237021 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321695003 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.23481779 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.221295731 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.240350372 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.271711218 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221505527 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.225368494 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815721119 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.236427685 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.331783605 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.40385274 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.236095783 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.25608496 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.616634776 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.223000317 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.258148393 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.5612989 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.272450208 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.221307149 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.63963855 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.703174481 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.341556296 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2264128 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259594908 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.227399633 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.513117006 seconds)
    (39/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.224910906 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22470879 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.226238032 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.227833564 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.919486155 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.226502857 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.815474234 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225414183 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.191100541 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.223273974 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227567592 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.634364697 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.952285862 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23922442 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.2265343 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.228084362 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.226223963 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227604787 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.260789159 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.622164596 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.320744182 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.242205234 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.231117553 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.261225913 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.228467526 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.29455316 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.242861482 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.275689608 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282964971 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.328769648 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.815780834 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.227700953 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32813901 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.346481721 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.223485955 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.228169138 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227762453 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.226348039 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.342094357 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.225962846 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.227201952 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.659032987 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.402072263 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.239538415 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.648529757 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.328675215 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22583281 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.641777172 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.230213701 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228055801 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.054586825 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3283744 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.225830475 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.229226135 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.229375212 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.653483115 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.797147326 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.5077258 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.229926207 seconds)
    (98/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.228539509 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.596211327 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.229759074 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.230411604 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.673653395 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789984247 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.933778321 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.230462714 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34263305 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.405156648 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.244164971 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.231020253 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.64838372 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.230123496 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.289375744 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.227070584 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.630679304 seconds)
  done (took 369.18759194 seconds)
done (took 715.321443689 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883928604 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.865348218 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.98466988 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.866895051 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.824009731 seconds)
  done (took 10.577600346 seconds)
done (took 11.729606252 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.424779906 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.424593952 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.292606819 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.426160506 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.26174192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.443091386 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.400673011 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.25104035 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.334309413 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.316571904 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.33752122 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.287901952 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.260375628 seconds)
  done (took 18.613179433 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536767135 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.544320654 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290446666 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.566824064 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.266901385 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.592484405 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.436039306 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.443738832 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.452237377 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.262158469 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245684004 seconds)
  done (took 16.790926208 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557657774 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.553163916 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294963846 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576873806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.269412253 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.571751996 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434328586 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.451072215 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.442086094 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260795413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24483141 seconds)
  done (took 16.812011022 seconds)
done (took 53.369034867 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.24194337 seconds)
  done (took 2.395811742 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.275657805 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.439304234 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.257852574 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.245852817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.240664639 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244049034 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.246380973 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.240623544 seconds)
  done (took 11.34850178 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.240519126 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.239558978 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.238126874 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.239627608 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.24180454 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.238496487 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.241858957 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.241005475 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.239708573 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.242538919 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.239621449 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.238388187 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.241388011 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.239906259 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.24326421 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.242751772 seconds)
  done (took 21.005746155 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.241646276 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.239668866 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.240559668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.240040844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.240731411 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.239500057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.241094384 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.24090562 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.240571212 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.240596286 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.242251131 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.241026315 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.242841656 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.24117936 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.24054002 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.241596618 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.241721513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.244098569 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.246095221 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.240268152 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.241034811 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.242021017 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.24499488 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.241883805 seconds)
  done (took 30.955435651 seconds)
done (took 66.859448809 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.384583577 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.038082187 seconds)
  done (took 9.581525329 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.241478419 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.243428284 seconds)
  done (took 3.646372066 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.242384144 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.243596048 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.243934845 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.243603781 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.243109122 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.244185215 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.243646712 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.241912644 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.243259075 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.242374783 seconds)
  done (took 13.591477384 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.244877763 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.242789355 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.241585276 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.243981 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243347351 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.240552955 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.244155523 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.242486405 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24327654 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.242831391 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245622032 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.24259989 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.243298515 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.241970707 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.244278992 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.241984873 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.244091852 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.242564717 seconds)
  done (took 23.536350432 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.24596399 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244915852 seconds)
  done (took 3.650310151 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.242605039 seconds)
    (2/7) benchmarking "second"...
    done (took 1.243169158 seconds)
    (3/7) benchmarking "month"...
    done (took 1.244187451 seconds)
    (4/7) benchmarking "year"...
    done (took 1.241858543 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24143773 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244657847 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.245184976 seconds)
  done (took 9.862241047 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.247094668 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.43325341 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.512269379 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.85953356 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246774121 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.248628969 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114892402 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.250611408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.252248548 seconds)
  done (took 14.323965486 seconds)
done (took 79.348140336 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.284401062 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.259661867 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.485359879 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.244817828 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.253020806 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.584600519 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.262383849 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.370049837 seconds)
done (took 37.904568078 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.250704834 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.001640571 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.011682547 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.239484438 seconds)
  done (took 11.413335927 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.224953352 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.218955566 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.222255211 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.269364595 seconds)
  done (took 18.09820097 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.307918199 seconds)
    (2/2) benchmarking "read"...
    done (took 1.575271958 seconds)
  done (took 5.044687477 seconds)
done (took 41.965870905 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247899897 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.243861279 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.246891611 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.245671144 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245546435 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.246113769 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.244869241 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.246736685 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.247945825 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.248024104 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.249140585 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.249151221 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246415964 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245367155 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245249296 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247424164 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.244165712 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.245959548 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.248548115 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248325328 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24823802 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.245542628 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245721705 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.24440347 seconds)
  done (took 31.076614428 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.249204566 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.24811155 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.251650396 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.24744305 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.244700032 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.244979707 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.248876116 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.245360373 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246213068 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.248135947 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.244608321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.243561692 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.245988673 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.244092691 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246766647 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.244039571 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.248987426 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.244625565 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249172204 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.244804057 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.248189904 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242715165 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.244635707 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248972844 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.243950439 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246320282 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.248500882 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.244475154 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.247831239 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.24266124 seconds)
  done (took 38.551565706 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.251247532 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.257463645 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.247111576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.248647457 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.247268492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.247668847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.246091006 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.24746145 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.24718678 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.248805919 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.246555751 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.251405882 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.245683051 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.246688694 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.247395628 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.246204144 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.246456461 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.246817061 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.248240274 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249669391 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.248288749 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.24706511 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.247950095 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.243905166 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.247390844 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.24843705 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.246940312 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.246408725 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.248618291 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.247712553 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.248438528 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.248189444 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.245702415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.248650276 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.248118623 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.247190384 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.251362909 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.257330602 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.248791515 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.247386597 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.24745863 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.248161136 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.249122747 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.247607287 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.248569398 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.247532205 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.248832645 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.248928798 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.246736409 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.249680594 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.248252676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.249207993 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.249710282 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.25021264 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.25112747 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.251372735 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.249241504 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.248142277 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.249119672 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.247844734 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.249211849 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.250750729 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.24947932 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.249545107 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.249953 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.251272115 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.250761964 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.248074693 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.248396299 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.251280562 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.250825317 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.250249333 seconds)
  done (took 91.065679883 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.250075617 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248239678 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.247025396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.247740495 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246975566 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.251675746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.24832217 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2502927 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247160869 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.249612569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24926676 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.246397787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247765625 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.252474677 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253323321 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.248844647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252089899 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.24888584 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.251177396 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.251710934 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.25083866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.253637286 seconds)
  done (took 28.657455789 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251602746 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.252727025 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.249172545 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251823089 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249003622 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.250824633 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.250882383 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253306519 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.251336491 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252339805 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247941068 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253290195 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.251805116 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250903075 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249077521 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253519132 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25073883 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.257638681 seconds)
  done (took 23.693943247 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.249643194 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.250171216 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.251830879 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.250652574 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.249472507 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.252341841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250676137 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.255083257 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.251162351 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.25246965 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.254376667 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255706581 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.253276859 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250267798 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255424467 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.252600283 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.254002164 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250687165 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256405825 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252844496 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.250705665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252898952 seconds)
  done (took 28.717583457 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255944766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.252002651 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.252713419 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253175438 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.249868465 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.253674025 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.254471606 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.252443086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.256141869 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.254729715 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253522551 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.253966596 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.253627895 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.252632089 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.25202981 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.252072272 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.254379928 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.253868696 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255920016 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.250800066 seconds)
  done (took 26.234893099 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.25532489 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256021237 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255082128 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.254874076 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256231432 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25593312 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256199633 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.257067791 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.256343592 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255635259 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257231705 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255091159 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.256315691 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.267906494 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25780021 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.256867853 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.258863762 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257254226 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257890756 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259307474 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258381131 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263181953 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.259251148 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.25771781 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.258154329 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.258188223 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259884891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.259087194 seconds)
  done (took 36.387263207 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26356352 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258101254 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256222134 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.253595766 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.254347618 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.255171052 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.255176751 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.255883433 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258201162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255726857 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.256455595 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.2577799 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259586184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.257012067 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.258635976 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.25864252 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.257602697 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.257137845 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.255793216 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253857062 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257192435 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25674006 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.257353643 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256611897 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256336501 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.258962334 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257797197 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256498481 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260013848 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.256121831 seconds)
  done (took 38.88348217 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27999538 seconds)
    (2/2) benchmarking "in"...
    done (took 1.274627546 seconds)
  done (took 3.726478676 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255962642 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.259133302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.255989808 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.257364349 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256484926 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261591388 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256957728 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.25478016 seconds)
  done (took 11.230095383 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.257911008 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257707542 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.260015025 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.260058085 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.260942966 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.258618403 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265630105 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278880336 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.259899684 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.26065855 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.267641203 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.267538965 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.263355426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257225441 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256554461 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259132389 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.258995586 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.258077365 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.258334107 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.257551665 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261835329 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263407025 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259967642 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.253743741 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.260972223 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.271262845 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.280313103 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.256938527 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.26177384 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261638002 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.258523269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257747654 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.259673706 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258744039 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.259047786 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258359298 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.269409604 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277247123 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26709049 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277060269 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26101667 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.257888433 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.260149121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.262461503 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26232187 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.261777761 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.261783706 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258837423 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.261281253 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.263876858 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.26564451 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261710403 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.258483997 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263420667 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.262622662 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.267869805 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.28122268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.2644112 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.271443541 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.27266874 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.29294222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284773913 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.264141755 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260951546 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272681464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28806255 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.269930283 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27700058 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.259960102 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.261045995 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.268804274 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293506595 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.287251194 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.262289894 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264073857 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.260347442 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.263865795 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262202277 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.271437598 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.285101992 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.26198205 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262652486 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274464482 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288727216 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.263862587 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.263140154 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.262417351 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.263681507 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.265433278 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27475336 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280012858 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.263771669 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.263227394 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.264651878 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26438804 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.263503387 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.263416655 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.265849296 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.261912622 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.26321717 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264252826 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268252881 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.275938937 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263716411 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26267012 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.271433149 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.280609972 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265322749 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.270445466 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.26337189 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.2630661 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267305393 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.272806679 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.26057155 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269061903 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.274219849 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.264347031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.266834185 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.265169869 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264541792 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276003353 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.293781314 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.265784543 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.265416053 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.269541941 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277626057 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26555304 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.268970605 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264368513 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262934619 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.26262083 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.266530543 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264562501 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.267365669 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266296578 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267788168 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.26410598 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.266237377 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.267628546 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.266447355 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.268522633 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.269880529 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.268019267 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.266180044 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.267508726 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267644345 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.273504162 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.28553353 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.269766118 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.268627187 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.264525739 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266931656 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.267734953 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266770548 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.268191564 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.267517761 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.266992002 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266147011 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266629242 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.264808508 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.268278966 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.269405921 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.271734271 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.266243132 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270460341 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266002696 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264463305 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26619096 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.265375991 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.26594835 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267994055 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266633103 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.273180886 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.276311452 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.268221064 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.269417952 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.270172757 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.26905982 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266173296 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270239292 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.270839453 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.277588929 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.265401343 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274876352 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.284812071 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268760801 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.266715002 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.268495143 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268450544 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267019822 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.27111877 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.278344373 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281977285 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292981457 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269240385 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.273320733 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.269263462 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.273628574 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.273766146 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.26956153 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269016463 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26889352 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.269832967 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270125011 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.273734347 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.268277133 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.268999864 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.268219479 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.271283044 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269582776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269645484 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.271532294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271545044 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.26955203 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27142606 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268648275 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.271830351 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.26837163 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.271123431 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270079913 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.271660235 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.272465877 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.278677116 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.267657734 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272025043 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272754638 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273950319 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271329414 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270830281 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27565168 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.270628016 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279388343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290582143 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.274433947 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278590256 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.289718798 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.268736146 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.278311764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.27264662 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269801239 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274966216 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280468715 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.273699372 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.272348716 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272484425 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273017056 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.27272127 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.280525312 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.286649346 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.272395974 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272248817 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.276096976 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.270822657 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.274034893 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.274735742 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273969493 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275794958 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.271378245 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272551038 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275295856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.273791511 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274829169 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.275037638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276970587 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281933565 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.278640725 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.275754742 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.276480642 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.276000938 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.27913952 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.275261253 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.274801058 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.275804019 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287470838 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.296055514 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.282925616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.291537727 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275017714 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.279072428 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29340509 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279355441 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275085668 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274511687 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.276470822 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.275137374 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272848679 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276364996 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.27730943 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.2773123 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.275944634 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.280826183 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.275604616 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.277506412 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.277147511 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.274472438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.276674775 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.275287935 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.275022306 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.280774065 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279479716 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.276150639 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.275623646 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.284090228 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292246505 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277236978 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.274662065 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.277259811 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.274816194 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.279718372 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.277328687 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.278977395 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.286562558 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.282146954 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285506811 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278655038 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.288925469 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276675564 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280472437 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.286208978 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.272912694 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.278472077 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.278149955 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277232045 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.285022563 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295864253 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.279450441 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281959045 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276456382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.277979148 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.278802259 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.278138089 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278925844 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.278405166 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286636206 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296432814 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281020427 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280236641 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.275260876 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.277612241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.276868945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.277501276 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281281525 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277981167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.280221205 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.278538843 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.277811887 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.278545201 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.279989871 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278342448 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.275888012 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277484031 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285312965 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297453788 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285042251 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.277905069 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.288643356 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.296856866 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.286597396 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.298300738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.280445887 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.28039885 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.281056619 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.281449292 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.281010693 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279703906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279927311 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.283105369 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.283036553 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279208231 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.281832265 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.282229274 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280412903 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.27871735 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289254006 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.306948957 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.284893052 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284944048 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.279108884 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.28249191 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.284531017 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279705547 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.279961091 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.283895703 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.293419769 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.289609514 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.282148586 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.281071148 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.283543691 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28278929 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.281579219 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.283886339 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.283836443 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281733079 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.283544622 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.282816852 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.28442345 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.282796368 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.280261587 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283537135 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282798877 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.29120121 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.300691956 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.285584537 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282431213 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.283465169 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.283876105 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.283086556 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.282041895 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28517119 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.283392584 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.285185764 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.290273972 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.291489036 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285745693 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.283324294 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.284963021 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.283802713 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.285496189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283975214 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.282610991 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285297128 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.284466277 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.284130895 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.284015818 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.282920247 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.284552994 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.285813145 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286595253 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287309069 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.29305786 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.28424157 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.283244398 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.285357402 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284007701 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.285619279 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.284486649 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.292992655 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3060158 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.296897694 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.295642787 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.290163994 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.285593095 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.289960571 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.294612424 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.287197323 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.285810073 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.285124222 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.287505388 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.284785987 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288598699 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28767594 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.293102516 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.303631653 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.285629445 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.294405189 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30434254 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285285662 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287378392 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.291807382 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.286776862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.282934451 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.28605537 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.285989268 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.296500518 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.305233937 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.288369186 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292000947 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.2871854 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.289161719 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293083202 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287416944 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.288345035 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.28670462 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.287313218 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290383056 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288814275 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.28485457 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.288588915 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.286620097 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.289308419 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.295759294 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.285680434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.289709795 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.2851819 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.289244502 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288942639 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287624625 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.286354778 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.286106974 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.289388075 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288608437 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289097157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.291048684 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.287997767 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.290879699 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.290086269 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.290074562 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29288702 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.299671247 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.296864892 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.286655739 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.288090847 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.291051029 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.293928832 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286372992 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.289828197 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.288606467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.292113942 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.290810104 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.29013783 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.28969565 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.292429575 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305500874 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.306138576 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.289900192 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.29055362 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.293218076 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.288474918 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.286640133 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.289013447 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.293653634 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.293531986 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.299246143 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.289230041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.29838148 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.309090354 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.291846276 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.294488798 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.295649291 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.300213458 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.293657305 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290555031 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.292514872 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.298234453 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.307103683 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2910699 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.301970732 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323245695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30952238 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.293285759 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.293242073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288699194 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.292246848 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.29484078 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.292551728 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.292235724 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.294000209 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.291723455 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.294502968 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299032399 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.293855864 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.294011883 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.294180827 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.293223853 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.294228906 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.290173071 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.293586966 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.293285131 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.293717844 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.29362414 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.294029835 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.292697635 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.307789354 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.317983634 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.292622368 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.293605316 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.289997078 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.297702525 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.296818239 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.306327053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.301835754 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.291800965 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.293892068 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.294945436 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.293180889 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.292213607 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.29527979 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.294261625 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.293442098 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.291245999 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.305592847 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316651568 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.298661775 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.294628046 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293701585 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.294409136 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.294640398 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.294408706 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.294380479 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.295678382 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.297865191 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.29845297 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.296263449 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.295045137 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.299655957 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.302240082 seconds)
  done (took 763.662115175 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293267653 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.29300822 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293412481 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.291229016 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292846516 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.29347166 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.293892388 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293206463 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294011721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294129057 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.292605227 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.291530212 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290645002 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.293782451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292829368 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291434733 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293481607 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.296039453 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29268741 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293173953 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293324728 seconds)
  done (took 28.357388225 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.296719557 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.292529344 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.293403765 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295909384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292575465 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295505406 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.293776941 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294925646 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297238543 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29391599 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.29825117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29556148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.292607507 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.293917298 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294385176 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295017314 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295948989 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294260001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.297058219 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.293739707 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.299380355 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.293926962 seconds)
  done (took 29.69475309 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.297896474 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.295867628 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.296846223 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.295456742 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.296524191 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.293617664 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297959863 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.296581656 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.295229369 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.295986726 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.298836228 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.297192604 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.304667885 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.303288545 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.300360617 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.297227815 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.441102374 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.297267476 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297672529 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.296723832 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.295568982 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30326638 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.313021487 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295413182 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.296333367 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.299370026 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.296755597 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.298466282 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.298651981 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.299025446 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.301550308 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.297900941 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297249116 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.300830829 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.298008875 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299293483 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.302785919 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.300341526 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297122679 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299036659 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310688229 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.319397947 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.299714251 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.30552163 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.317090696 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.299049458 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.301501686 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305311328 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.296394986 seconds)
  done (took 65.047975342 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.298407256 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.29928172 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.296613437 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.29853241 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.29808396 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.301708589 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.301388742 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.300338981 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.297640547 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.297521994 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.299608333 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295887582 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2971979 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.300050354 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301788054 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297154798 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299329915 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297168209 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.297764627 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.298817917 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.299679351 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301839067 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.299624841 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297099368 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.30183798 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297346669 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.297783335 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.30000249 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.299444278 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.29687674 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.301087166 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299334094 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300977729 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299516009 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.297263126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.301039803 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.302122887 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.299031325 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302482624 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299483465 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.300588784 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301372181 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.302313102 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.300824949 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298730348 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.299477336 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298996513 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.298607036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.298911373 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302243357 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.301908658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.299537337 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.302050423 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.298270063 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303973071 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.302515629 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298021555 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.299966304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.30352086 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299931526 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.299950023 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302218241 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.297528593 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301585669 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.302571539 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298855848 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.299348921 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302898681 seconds)
  done (took 89.595664525 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30450656 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.303955516 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30257344 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302532763 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.30293556 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303143037 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304387455 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302091782 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303029464 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.30294064 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302798327 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.303932781 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.304941439 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304442604 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302157385 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304152683 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.30256141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304928178 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.304236768 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303697693 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.303719455 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306759469 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304790964 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.304129602 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.307020041 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.305337186 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304483992 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304336663 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303633607 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303505167 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305006014 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30420645 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.304910149 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.303456639 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.304679688 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.30417407 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302343511 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305322151 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30508433 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303837474 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304170709 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.304247225 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.304820151 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.305257281 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305840188 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306271429 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304412009 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305872954 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.303798473 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304502656 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.304386417 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305055511 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.305588888 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306935436 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30690638 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30616758 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.305530646 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.305873073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.305796339 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.304125585 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.305187705 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30652203 seconds)
  done (took 82.089761262 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308487801 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308711426 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.303534569 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304099218 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306258116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305963328 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304285729 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.307684983 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306390596 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306017852 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306166159 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304876789 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.30405444 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307750867 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.304842072 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303008411 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303197745 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305490428 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308560942 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304624728 seconds)
  done (took 27.328936925 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.305668712 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30849343 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.307529154 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.306478967 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.30818963 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30552414 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.308363817 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308618351 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307277845 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309982224 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30644933 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308234197 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.306034425 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306718326 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.310861825 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307863161 seconds)
  done (took 22.135947021 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305892188 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.308263254 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.308806209 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307884809 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.306455054 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.307958953 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.30901157 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.303871065 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.304397995 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.309254736 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.308062347 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.309211512 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.308249836 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.308860176 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.306927769 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.309794376 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.307640591 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307500372 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308975841 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.311949982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.30475186 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30566438 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.311471902 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309418338 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.306643861 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.309513461 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.30819895 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.307989756 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.308867391 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.311944744 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.307680571 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.309657133 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.30785095 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.307637783 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.310065976 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309259405 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.311016035 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309326413 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.310902682 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309533045 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.30938174 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.30472395 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.310424295 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.311907805 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306139856 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.310299151 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306653536 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.308126538 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.308935099 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.308868562 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310881813 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.311386747 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309506864 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312333825 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.311281221 seconds)
  done (took 73.194200494 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311340157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.312557321 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.309413931 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.312038993 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312683755 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.311855291 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31412861 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.312151491 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308471309 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.313207061 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310572115 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.312681447 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310677303 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310727255 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310613552 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311073458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310526246 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311961367 seconds)
  done (took 24.826242034 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.309232822 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.308219046 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.311973292 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.310269891 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311416332 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.310391813 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310926735 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.3095418 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313189519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.312301638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310213896 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.31371829 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.313731038 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.314580302 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.312019442 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312541407 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.313489326 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313295967 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311012824 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311921482 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313584597 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313247586 seconds)
  done (took 30.082123759 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.314330454 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.315235886 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.314143611 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.331967593 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.3333209 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.336958638 seconds)
  done (took 9.167147785 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320719193 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315393522 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312077056 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315355834 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315450165 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313669769 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313164676 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312012829 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31521018 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312765353 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313865841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314798511 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317101402 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312023071 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315239615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31625855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313265509 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313715123 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314667376 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315942624 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31427322 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31432416 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314219477 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31299904 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312756619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.313859946 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316704885 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313772419 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31384164 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316423876 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315320764 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314572933 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315522346 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316150676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31903127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316411779 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314042213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318568846 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318726552 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315567615 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.318807198 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318342608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31768384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315327531 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316760129 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317632148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316476147 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316814201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316219069 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317409277 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318580789 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315857198 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320007623 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318255758 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318931056 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31802466 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319138158 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314518219 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319304126 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317067146 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316261061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317901659 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31646705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319962695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319859078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318118617 seconds)
  done (took 88.108319579 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316826032 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.318052381 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317355127 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318908981 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318422235 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318661742 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316843759 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31965695 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319248252 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317705558 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320656466 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318371838 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316129897 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317281875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318345325 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319901549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316851346 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318370934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319052323 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322679256 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319556797 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31842126 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317841971 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318825666 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318399381 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321829737 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320622412 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320603801 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319420027 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318690205 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320962111 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321640292 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318809072 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32047763 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321622979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319759134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319873886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319580314 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320013749 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322010217 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320927167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324527125 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319540205 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319168136 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320419933 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320544202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319747569 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32049251 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321048132 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320484595 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321896244 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31973262 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318936492 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320175734 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31880543 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319713425 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320863401 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320691291 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321949112 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3223333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319855952 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319525826 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322466789 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321662245 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32241602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322229553 seconds)
  done (took 88.33720466 seconds)
done (took 1781.013969001 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.331113616 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.399153529 seconds)
  done (took 13.959047562 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.485044402 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439100195 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321952261 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.350945279 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.318416273 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.328937081 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.34106361 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.318506991 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.321345833 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.322463272 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321821171 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512163474 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.377348024 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.317711676 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.322647593 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.419600133 seconds)
  done (took 43.063685675 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.351528797 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.330204168 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.44159138 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347853592 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.352495398 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.51327502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.381093002 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325448136 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.500541202 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.364113798 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.892414609 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.34927048 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.328455455 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.442066287 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.343219742 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.51213083 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.579316695 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.890424384 seconds)
  done (took 30.476646151 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.780514014 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.359501507 seconds)
  done (took 9.373228362 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.353812745 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.376003656 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.343613293 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.338596171 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.346711793 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.34482471 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.385749137 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.389948336 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.36185416 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.371479872 seconds)
  done (took 64.85801891 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.347594421 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.331327851 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.332321848 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.330142457 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.319822533 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.316046363 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.329251849 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.325894357 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.0578486 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.456472307 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.325053712 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.337429518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346412639 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.32975531 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.327764837 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.367932327 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.483521806 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.329536049 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325434423 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334096887 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328265009 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.418344674 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.369480012 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.323010091 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457197653 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.049948718 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.331000122 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.335406424 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.464633724 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.328792701 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.328680664 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.327329957 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329794294 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.940467843 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.80793651 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.333092618 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.351117873 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.33734795 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.327792943 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.491820612 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.333695964 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.338126476 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.324678006 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.832414342 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.471308653 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.455204889 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.610271519 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.346458414 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.3337182 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394530983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.329956671 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.332640471 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359697959 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.088788738 seconds)
  done (took 111.423566743 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.363644808 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.71057849 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494095329 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.341534431 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.968122695 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.922051225 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337343103 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.619725908 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.399526576 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322858385 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.674924459 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.840661809 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.344944604 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.377625021 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.970025776 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38327547 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323969767 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.01386479 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.337116809 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.327666126 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82441836 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324525239 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.336429981 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.48157075 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.361045095 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784793473 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.750839223 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.77025367 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.340620344 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.322180957 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792418627 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.336127732 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.345853296 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321022754 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.591108498 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696423625 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.680989113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.340023309 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.359645639 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.324053386 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.335550574 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785079249 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.685962656 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.338661837 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.323266714 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.780045629 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.338362156 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.331537221 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.327750413 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.528957441 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.984506693 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.328078287 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.741368506 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.328200114 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.61503485 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.391180642 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.37297406 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815733418 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337448322 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.39085789 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380728111 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326516091 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.326061509 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.329062784 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.327275976 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.673952705 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.454444161 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.328933443 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.67906079 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807808515 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.338875034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848929164 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.256981862 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.347691225 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.435111591 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329606528 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.814273145 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.8172003 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.369950947 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.324027725 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.666625319 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.339895975 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.649853999 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.344688107 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.324833675 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847995778 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.331716377 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.375425452 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.327294742 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.342539471 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.964898553 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.332417365 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.617849144 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.34005336 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327725083 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.329055029 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.329868148 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.325955407 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.324614401 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.333418302 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.85669607 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.34690773 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.306935657 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.345854644 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328095646 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.331922385 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.333353691 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.331021473 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547967387 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.688848712 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.343751314 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334590821 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.327222887 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.346605404 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.518353673 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.331617179 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.638443706 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.340813582 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328765116 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.337058102 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.940932876 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.356488564 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327317047 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.335877383 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243427389 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.538886774 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.349603546 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.328381222 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333910137 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.343556052 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.582647947 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.344631206 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.387557184 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329455122 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040657011 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367791024 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.345726086 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.642591483 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.340139376 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.250706336 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.351745779 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333716185 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618963897 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.602941611 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.384068542 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.327339632 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.329960708 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.012790482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.371623021 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477850563 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.353816707 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.370349121 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532539861 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781372717 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.33066209 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.924991391 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.331608403 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.546791495 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.334420158 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647862713 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827571925 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.34903674 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.332541108 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.045565239 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033816989 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.977923641 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.338209772 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.667481275 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.275695085 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.821758578 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.332001652 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.336621893 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.763769598 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336834206 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.334890955 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.336363966 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.334267844 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.471125159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.509755849 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.685201142 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.339134517 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.803709503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.372188285 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.333070209 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.34720202 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.331834644 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.684050722 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.411098304 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.339507397 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.341611011 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.335731556 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339048819 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.823312472 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.282995284 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.332738448 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490939564 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971303362 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.3511866 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.340228177 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.823212375 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.585230929 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.861791402 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.416048552 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.658812715 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.358734742 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.375338999 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.049323707 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.368503286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820670262 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.351954383 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.347847987 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.939479347 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.348820009 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.707022378 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.332101459 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33832268 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880920889 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.350206204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.341505329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.59921187 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.351164599 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.582003361 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.338311652 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.35028174 seconds)
  done (took 1109.895977492 seconds)
done (took 1384.276659725 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.336340512 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.334399556 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.318116478 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.338483915 seconds)
  done (took 26.576377801 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.347724933 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34420782 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.346666402 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.343546072 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345280018 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.344088657 seconds)
  done (took 9.323050337 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.414558682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.3367453 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.337127718 seconds)
  done (took 19.339105576 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.551237731 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.671914955 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.701389769 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.625145742 seconds)
  done (took 10.800344837 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.34332525 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.345048108 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.344552079 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.346262449 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.345786838 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.348068265 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.345607573 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346825858 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.348421908 seconds)
  done (took 13.362011063 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.335777767 seconds)
done (took 85.982962854 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.12065562 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.379921241 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.721838533 seconds)
    (4/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.673388497 seconds)
    (5/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.383348985 seconds)
    (6/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.351520587 seconds)
    (7/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.959318598 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.405835018 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.594789997 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.455995771 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.285390177 seconds)
    (12/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.721098813 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.340169658 seconds)
    (14/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.271811106 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.381978287 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.442279136 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366642969 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.387972973 seconds)
    (19/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.333284623 seconds)
    (20/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.446879616 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.322580417 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.320736678 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.588836347 seconds)
    (24/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.355632694 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.122350087 seconds)
    (26/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.320369022 seconds)
    (27/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.918375457 seconds)
    (28/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.425874575 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.195818078 seconds)
    (30/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.363599051 seconds)
    (31/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.319820652 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.458016109 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.279341341 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.466524874 seconds)
    (35/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.394626428 seconds)
    (36/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.424458274 seconds)
    (37/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.330672979 seconds)
    (38/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.446688766 seconds)
    (39/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.351324923 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.366610102 seconds)
    (41/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.358833923 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.357178217 seconds)
    (43/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.966314299 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.372413958 seconds)
    (45/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.14916795 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.960550854 seconds)
    (47/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.722882849 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.554386656 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.469218189 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.616341472 seconds)
    (51/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.789714666 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.197019034 seconds)
    (53/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.38207681 seconds)
    (54/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.378193345 seconds)
    (55/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.32925371 seconds)
    (56/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.342808063 seconds)
    (57/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.420649959 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.398361731 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.008370309 seconds)
    (60/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.320543907 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.339802679 seconds)
    (62/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.392395395 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.274029835 seconds)
    (64/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.056559962 seconds)
    (65/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.362887768 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.741543214 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.722721054 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.33962755 seconds)
    (69/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.15217573 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.782895301 seconds)
    (71/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.362663355 seconds)
    (72/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.348133532 seconds)
    (73/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.322338998 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.40192041 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.342649072 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.394129456 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.442635119 seconds)
    (78/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.945056365 seconds)
    (79/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.397312753 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.322529818 seconds)
    (81/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.555327126 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.557243004 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.3212256 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.322313638 seconds)
    (85/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.439010012 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.124919452 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.357684143 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.370746217 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.330832473 seconds)
    (90/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.809247216 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.861485997 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.339456078 seconds)
    (93/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.442482327 seconds)
    (94/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.348320039 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.363171327 seconds)
    (96/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.355576413 seconds)
    (97/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.818013172 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.401222101 seconds)
    (99/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.370085128 seconds)
    (100/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.24202165 seconds)
    (101/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.349121403 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.22794026 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.112023595 seconds)
    (104/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.637816484 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.580692945 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.442793946 seconds)
    (107/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.347088156 seconds)
    (108/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.547171581 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.359311184 seconds)
    (110/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.460095197 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.965253185 seconds)
    (112/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.026272525 seconds)
    (113/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.429938661 seconds)
    (114/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.187267522 seconds)
    (115/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.360193334 seconds)
    (116/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.783812922 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.872715517 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.725830458 seconds)
    (119/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.364680884 seconds)
    (120/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.362911671 seconds)
    (121/309) benchmarking ("sort", Bool, false)...
    done (took 1.862181587 seconds)
    (122/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.384392327 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.603253848 seconds)
    (124/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.472790451 seconds)
    (125/309) benchmarking ("sort", Float64, false)...
    done (took 5.674123806 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.357944335 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.770235718 seconds)
    (128/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.139802308 seconds)
    (129/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.321872398 seconds)
    (130/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.628631403 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.349833845 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.029710895 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.391514709 seconds)
    (134/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.371475919 seconds)
    (135/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.479749034 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.762687354 seconds)
    (137/309) benchmarking ("sort", BigInt, false)...
    done (took 6.365315739 seconds)
    (138/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.39235626 seconds)
    (139/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.326339744 seconds)
    (140/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.327688706 seconds)
    (141/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.384458446 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.131574745 seconds)
    (143/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.369784007 seconds)
    (144/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.177199067 seconds)
    (145/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.154291173 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.777233619 seconds)
    (147/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.379381466 seconds)
    (148/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.369210345 seconds)
    (149/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.330329561 seconds)
    (150/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.394345356 seconds)
    (151/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.916879929 seconds)
    (152/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.361321845 seconds)
    (153/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.330869163 seconds)
    (154/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.498581039 seconds)
    (155/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.773981508 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.489967493 seconds)
    (157/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.364522119 seconds)
    (158/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.435674061 seconds)
    (159/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.672553885 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.493461631 seconds)
    (161/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.970362038 seconds)
    (162/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.326209843 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.867860498 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.112914417 seconds)
    (165/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.411759662 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.329513293 seconds)
    (167/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.888360604 seconds)
    (168/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.361443306 seconds)
    (169/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.452219216 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.351415631 seconds)
    (171/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.59077464 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.825221952 seconds)
    (173/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.719029158 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.42898808 seconds)
    (175/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.087559519 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.347260777 seconds)
    (177/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.371804981 seconds)
    (178/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.371560626 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.240194823 seconds)
    (180/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977208731 seconds)
    (181/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.182060732 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.374797991 seconds)
    (183/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.536132286 seconds)
    (184/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.431486639 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.571166462 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.33459743 seconds)
    (187/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.331621043 seconds)
    (188/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.393425532 seconds)
    (189/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.370825814 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.467462333 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.780054801 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.345480408 seconds)
    (193/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.493334386 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.716475094 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.656725447 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.425640121 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.332122707 seconds)
    (198/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.343868092 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.330229819 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.334746903 seconds)
    (201/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.350822479 seconds)
    (202/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.377977532 seconds)
    (203/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.71783967 seconds)
    (204/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.417157127 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.916914012 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.616419474 seconds)
    (207/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.36004052 seconds)
    (208/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.34741297 seconds)
    (209/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.372851252 seconds)
    (210/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.782011409 seconds)
    (211/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.561236282 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.01421592 seconds)
    (213/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.334415947 seconds)
    (214/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.812197788 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.374812747 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.922672533 seconds)
    (217/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.658271335 seconds)
    (218/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.477815299 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.980287128 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.328861109 seconds)
    (221/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.451862191 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.388064149 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.33576578 seconds)
    (224/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.359120565 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.374388617 seconds)
    (226/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.331546787 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.020161837 seconds)
    (228/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.268664408 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.406227253 seconds)
    (230/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.507061867 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.971132145 seconds)
    (232/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.461434879 seconds)
    (233/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.722486157 seconds)
    (234/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.599394837 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.372993549 seconds)
    (236/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.216981721 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.370876584 seconds)
    (238/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.395707461 seconds)
    (239/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.438650614 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.890395826 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.2983603 seconds)
    (242/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.416000782 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.894111071 seconds)
    (244/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.319584133 seconds)
    (245/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.347125182 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.335860166 seconds)
    (247/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.413687913 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.165183569 seconds)
    (249/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.350445221 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.335712806 seconds)
    (251/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.027400828 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.364990256 seconds)
    (253/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.133387933 seconds)
    (254/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.377614444 seconds)
    (255/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.337441351 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.375604704 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.59294432 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.810386306 seconds)
    (259/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.695459453 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114149798 seconds)
    (261/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.16159895 seconds)
    (262/309) benchmarking ("sort", Float32, false)...
    done (took 5.396062188 seconds)
    (263/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.25966875 seconds)
    (264/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.260789765 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.394295193 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.06148177 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.719419808 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.757011106 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.378315755 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 4.377422444 seconds)
    (271/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.336065405 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.438117008 seconds)
    (273/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.544378435 seconds)
    (274/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.62011594 seconds)
    (275/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.553768854 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.485893514 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366162523 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.426324809 seconds)
    (279/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.360860406 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.489494128 seconds)
    (281/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.851539096 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438860509 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.339300532 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.434592544 seconds)
    (285/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.445125312 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.468063481 seconds)
    (287/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.347337095 seconds)
    (288/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.44505559 seconds)
    (289/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.581507774 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.213434655 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.067419531 seconds)
    (292/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.721129721 seconds)
    (293/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.340941414 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.420822454 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.431522024 seconds)
    (296/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.360421126 seconds)
    (297/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.482412633 seconds)
    (298/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.706886165 seconds)
    (299/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.817816492 seconds)
    (300/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.335714474 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.638084812 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.377714968 seconds)
    (303/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.419038054 seconds)
    (304/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.423312495 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214642485 seconds)
    (306/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.917917795 seconds)
    (307/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.868976487 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.070961407 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.345923214 seconds)
  done (took 1045.311244948 seconds)
done (took 1046.563405881 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.392044996 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388256639 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.371046592 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.395445079 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.484091662 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.397935966 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.382086116 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.376576132 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.418966158 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.420915092 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.371687518 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.396171168 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.373543192 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.373663166 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.372366265 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384843755 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.438718842 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.367963331 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.389234069 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384727533 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.388839415 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.371920146 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.423862919 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.399118282 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.376330968 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.376779561 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.375390341 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.391047588 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.482279594 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.375442539 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.377525634 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.385998855 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.436779 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.366148382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.367399392 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.391222502 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.384911063 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.382719722 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375417086 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404370612 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.909990293 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.387881612 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.374631865 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.375802137 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.375867503 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.380113493 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.377088722 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.378399863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385615763 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392307233 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.921039855 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.40583125 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.379323453 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.37716572 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.387397943 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.374765222 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.381552572 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393194221 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.394929964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392532499 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.428966034 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.376028293 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.379202193 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390785498 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.383338628 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.887499903 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.383856095 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381084431 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.87328136 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.393596888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.96852833 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.400014007 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.378893131 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.391205367 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.408302704 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.442757148 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.365862924 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.376853432 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.383190078 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.376308138 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.387346286 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390854656 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382800464 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.379709125 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.394111248 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.403417292 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.39063484 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.378602319 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.387819105 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.395251782 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.384483581 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.388542432 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380907404 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.375668328 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388342631 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.384179785 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.382258346 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.379595217 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.383860605 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.391230427 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.917453359 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413750034 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.378115869 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.376384818 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.38100868 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.391931263 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.91793501 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.396183053 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.399380371 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.428600715 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.379936039 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.4356366 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.377526471 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396356306 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.389455285 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.382253914 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.375889006 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.434839173 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.927035268 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.411940848 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.381084972 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.375761197 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.399628615 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.382696117 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.376244 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.450290917 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.377490361 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.393904618 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.499182371 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.390931195 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.408422182 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.376708686 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382703809 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.404986113 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394636167 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.410019345 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380945525 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39723891 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.39514389 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.374376365 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.389420492 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.38895114 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.384025345 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.386258868 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.377752478 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.40723023 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39488507 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393984908 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.400875106 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.5010407 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.379744638 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.450794116 seconds)
done (took 233.154253919 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.439622925 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.377742293 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.471178134 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.373183053 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.480875225 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.476073415 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.370848522 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.37382554 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372873177 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.758358813 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.375467518 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.375211855 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.376783836 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.375476987 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.462844983 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.378853755 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.375371351 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.723556973 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.378882203 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.451905387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.378891167 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.374181434 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.378246767 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.764422487 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.378986278 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.376589508 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.450970323 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.380163208 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.72689192 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.378280647 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.376768882 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.727824339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.470461405 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.396985435 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.388822136 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.386277964 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.484980914 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.391588714 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.461931862 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.464143227 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473032332 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.418016011 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.375484298 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.373773234 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380999053 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.382724545 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374814319 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406414297 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.377241346 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379638596 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.728662249 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.39067814 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.380627175 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.379766125 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.379355714 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.409289493 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.375920776 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.37930949 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.468765583 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.381648336 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.443480398 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.763740129 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.760795729 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379991928 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.381882683 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.378011683 seconds)
  done (took 151.51177819 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.449533985 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.453160264 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.499172221 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.396921634 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.430805099 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.504867489 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.396183061 seconds)
  done (took 11.413338804 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.390364968 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381134452 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.44675746 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.438588315 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.378315326 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.551576419 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382125339 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.392750141 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.38054729 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.445189195 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380222319 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.382458646 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.388646794 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.382798918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.438278232 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.392177072 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.495846501 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381274278 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.382399443 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.53217767 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379864081 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.388395736 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.433861744 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.393139542 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380303515 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.385832073 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.984786188 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383297073 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378016789 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.38092107 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379963186 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.419698076 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382412513 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.378808939 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.381233891 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.519199916 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382878947 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378657132 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.384584379 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.383645099 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.385408816 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.385138034 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.38582527 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381094318 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.384440388 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.407643839 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.384101766 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.386431339 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.38448014 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383333103 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444327715 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385904435 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381260906 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.383974567 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.451236692 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391953378 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.387472061 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381875789 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385827444 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380948581 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.536468868 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.443765389 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.382993393 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.441379225 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.386244203 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385858402 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.384815127 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.385121121 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.447398625 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.387000942 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.445377356 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.383318358 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.569403849 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.407798354 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.385419861 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.386879114 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.388268887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.385175046 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.380518285 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.393799404 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.385238641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.389777134 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.389892348 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383957733 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.384899814 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.513170689 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.498435868 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384774087 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.401413904 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.3955773 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.385727329 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.450302057 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.389003187 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.38751309 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456228627 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502073779 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.441035144 seconds)
  done (took 158.398457362 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.394090693 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.396410899 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389368608 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401481882 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.387202144 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.38701801 seconds)
  done (took 9.645464166 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.390615199 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.38736362 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.389979503 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.390338614 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.390013615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.389536111 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.389602154 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391929318 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.392876659 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.387470607 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.391888774 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.392849458 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390544809 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387524198 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.387894521 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.391321061 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.391304242 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386035028 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.389307013 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390879032 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.495679625 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.389108566 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.391010564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.391652107 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.395129825 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.39111606 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.401385329 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.3906691 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.392914883 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.397942049 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.411533447 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.392465163 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.392272674 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.400407741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.395083921 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.39348652 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396058807 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.39317066 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389977339 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.393491788 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.392668041 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.393147118 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.386874525 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392654166 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.392879451 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.398668807 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.397935891 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399720641 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.392510151 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.391154839 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392863459 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.391834287 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.395102291 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.396562527 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.393377565 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.412066683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.398339456 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.392078069 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.392764357 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.394857393 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.396023388 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.394019778 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394029179 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.399872511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.387721116 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.395836861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.395939024 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.399526378 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.392454887 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.39403041 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.398381893 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.392029922 seconds)
  done (took 102.72495282 seconds)
done (took 434.971358972 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.868996715 seconds)
  done (took 8.163553136 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.57785289 seconds)
  done (took 7.876099873 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.422187665 seconds)
  done (took 23.72696375 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.402396859 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.438388226 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.425179037 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.386070533 seconds)
  done (took 26.947857911 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.514437429 seconds)
  done (took 7.80961128 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.385306131 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.379460294 seconds)
  done (took 14.062171567 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.525528224 seconds)
  done (took 7.819804222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.045513468 seconds)
  done (took 8.347898498 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.4097217 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.405254519 seconds)
  done (took 14.384080251 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.368061521 seconds)
  done (took 7.663888591 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.381929785 seconds)
  done (took 8.679483127 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.850649281 seconds)
  done (took 8.147012376 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.42820522 seconds)
  done (took 7.725016966 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.869357035 seconds)
  done (took 10.166273742 seconds)
done (took 162.811484991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.386660364 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.382469639 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.384563273 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.386666523 seconds)
  done (took 26.835012928 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.428474255 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.429031805 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.431506481 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.439294028 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.432793837 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42839739 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.421913652 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.4222702 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.440331012 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.431674888 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.432323918 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.432555664 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.431145844 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.420301799 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.43156057 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.431452603 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437915348 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.429028688 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.421496657 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.430870413 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.394315085 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.442846972 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.43265027 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.396085506 seconds)
  done (took 35.566186308 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.917338735 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.468844859 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.549083545 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.447948313 seconds)
  done (took 7.678078776 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446774265 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.450185061 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.461000458 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500705039 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.525742882 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.461023679 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421610398 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.418923148 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.404865647 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.450141383 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.525808988 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.466084839 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.536321926 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.39994593 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.582022506 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.395742974 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.396552596 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.447183241 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.501814961 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.515559088 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.398827519 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.450254656 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.452396007 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.467116053 seconds)
  done (took 36.373184015 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395867325 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.415170919 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.396969744 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.395772465 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.404141828 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.397747807 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.397516673 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.397596324 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.396486655 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.403126773 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.395034638 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.411466557 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.398270974 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.397376895 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.404428108 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.40026861 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.405258978 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397472985 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.396448262 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.402618892 seconds)
  done (took 29.308575844 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.391762267 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.328470945 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.741711319 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.646835073 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.39458626 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.392131219 seconds)
  done (took 29.195124556 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.473492697 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633307368 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.401317809 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.785754092 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.880493619 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.417785866 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.398767346 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.659803936 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990954529 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.981319486 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.457763394 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.469323796 seconds)
  done (took 20.85183029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.392325196 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.3914902 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.400052651 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.408827686 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.457795556 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.421487566 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.405757436 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.39221231 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457317028 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.474252068 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416446474 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.4584694 seconds)
  done (took 38.376521385 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480548228 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.439317643 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.461514312 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431084726 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.115560916 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599837944 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442141672 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.846469636 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.401305969 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669426183 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399988739 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486498962 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.652462578 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397430318 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.415701353 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.419412684 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642542954 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928479786 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394397928 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.59511426 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420894921 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404357955 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.608001332 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.426183583 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.608514078 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.541843603 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656873547 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173933094 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709212358 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408563423 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409264802 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398124865 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671232064 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102356511 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512368965 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408781351 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398915869 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.945278316 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.390442821 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.585536937 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400772532 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399096753 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409994643 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398549325 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333375565 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40483344 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.846490989 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.402980062 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.111386398 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398873086 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410296745 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492684767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.400859281 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.389970555 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476571707 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423436651 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.397232161 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497316118 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982835124 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.037481686 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399435567 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.331617269 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.4098804 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.494538796 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060660312 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.513739368 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.401071933 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404967495 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334763929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.593873911 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415428001 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54591804 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.416284719 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050631116 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.138268782 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.419172351 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332007076 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992115173 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.408881678 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.335983536 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628064638 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.178769576 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338075972 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.357081446 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.336256329 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174541217 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409275565 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.873568258 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425168942 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.867544771 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410935756 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41772128 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422157216 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623906975 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.277565748 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402548347 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.397515924 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.544524757 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417021301 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.849152389 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337337834 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400591911 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65712178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611893592 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40134432 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.426180687 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633091837 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401534542 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.418344899 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.407888099 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411386411 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.010542307 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428021918 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038859821 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419274689 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.180050685 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200566025 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402698089 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.504014428 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.411961747 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663775713 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.226598671 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.300335641 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470402817 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410415743 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401525009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610747482 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.996724184 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.297438019 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.402035843 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405498616 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.415508937 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.405387724 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.354188221 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.402372385 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409688983 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.185202831 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.629034747 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41218273 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679161146 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336768409 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548726603 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408639818 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.622680993 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.689132005 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.417427721 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664395208 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414483058 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407856384 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416370888 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426508469 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505475868 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427363981 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.405194853 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.67770294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.40589812 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.410123082 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.634296486 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.181133612 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408706652 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.4120405 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411134728 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02053482 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402007534 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405108293 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294282793 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.418816684 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473817295 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411362536 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.417148305 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.339543226 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426884719 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.413403228 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.404588983 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631699148 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415508938 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.531658805 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.485606191 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.614276141 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.020218653 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437514211 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.34237829 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.11943732 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.100599297 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407726899 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.598902291 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407247518 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418335691 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420591189 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411973699 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.03904385 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425795671 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.527800624 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.41366075 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417839684 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.412681313 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409917213 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.32618158 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.084331581 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41574475 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.419633495 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553396898 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.421649757 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342195112 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.926585719 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414991909 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.408921577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.186814828 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444068944 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.531480952 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902514389 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662539503 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417530318 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424244902 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.733930723 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.446344281 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.411532817 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421924195 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414925535 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.423092772 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41978044 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.422795107 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.602776363 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.774392401 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970318613 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17102077 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002556375 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418340189 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.413956246 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.310218963 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.861415557 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34810072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.067415599 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612034169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882067064 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355979654 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615771173 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.696045639 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241037405 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.418471046 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.638456663 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403134496 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.429090921 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.422020493 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623366606 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447243506 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.418687752 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.34144969 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.688490338 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653640099 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410142376 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491002141 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863003705 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41517013 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.191708657 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.416508702 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.846822806 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614280566 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.957476659 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.799938571 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410786823 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426615594 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902559156 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409112656 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.936893509 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065300045 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432063088 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.620925631 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34912412 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.424396239 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.423850363 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.409575382 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.85119547 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.414062514 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.667393663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423554761 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348732145 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414833488 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975610797 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.298351668 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.420353416 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.415837388 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222653876 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412076417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.724533045 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.417530544 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.318019465 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432837067 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.348337836 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347086999 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.104180956 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.425918188 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.393023766 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953493683 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.415518902 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43489274 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431752858 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272917396 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.671133063 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.425349062 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031658714 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659214633 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426232101 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435612529 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.512651796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419593536 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.395993377 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.299465162 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650605014 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46955245 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.656953039 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.509115324 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.315776728 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.503137097 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625578189 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.299049796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.418949217 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688531231 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.144246962 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.418482952 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185746582 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455529866 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427637882 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42914351 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410024844 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438362023 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506985649 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428184277 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.429933396 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428102785 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600413619 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431517165 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419325251 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.427209706 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510236488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.0927583 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.332963718 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.191535136 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.038889983 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215604351 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.053050316 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446670921 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.418450747 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420490289 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351732899 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561404442 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.943185015 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69304794 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547773081 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.415473121 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455457949 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.420480759 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425064351 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630180263 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69510757 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.391906886 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434630282 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203346609 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.314498225 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.428121328 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.627268007 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969202521 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03824083 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528416991 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424386494 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.867965107 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691459671 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51061266 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418861329 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.008522152 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.427526321 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.870788914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.443797521 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41750194 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564649964 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.427694053 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128233263 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.44628171 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.577327 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.195466685 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584131977 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.67540646 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.926243035 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.424641918 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044627288 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185761687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682676396 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492970412 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43239916 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.522616728 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568626876 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.418096243 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.326113316 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422132414 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270193913 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.13261733 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.43035726 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043679517 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702118777 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.417337499 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.423415245 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443747935 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.42936415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.646220179 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19417968 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645846561 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429322919 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431459555 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.41364314 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044150524 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.451687387 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357170705 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.419181336 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.692716969 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676313714 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448326548 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.875327543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.136016812 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028962357 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.395632877 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44666371 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426313275 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.170721548 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051521803 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.365618059 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975519499 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082341533 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426779397 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69864302 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.428735964 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428570188 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697053888 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.429780557 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.43936967 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435117804 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.049170964 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.265876514 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.438043219 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.71999362 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.361103096 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.652233324 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449848836 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361979269 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419930752 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.616336323 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428447921 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554525929 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430516304 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.436144466 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439803066 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.18198307 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.699958724 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.425222148 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.428738636 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.403389396 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.454503772 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521852347 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668130434 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425093141 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.101491092 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.77537683 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681335674 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.436379856 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.402719693 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.425954943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427436917 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143951982 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.433092916 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.443346744 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04764337 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.441217081 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.434010344 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.430456183 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.640693772 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.636272997 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.437541413 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.436135658 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.429852863 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441815293 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.328401957 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193464843 seconds)
  done (took 1684.843405091 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.467609751 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.447338566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.438921556 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.498892571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.437639651 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490600583 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.517195557 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.5094412 seconds)
  done (took 53.13989713 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.429954844 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.589591068 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.459775181 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.439063765 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.43686618 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.437478785 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.921181174 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.455951942 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.431154099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.435602836 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.430117058 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.434889165 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.118159866 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.43550698 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.436450322 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.406460291 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.430721015 seconds)
  done (took 67.069100678 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.437571563 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.670544591 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.450729808 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.426104098 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.896289016 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.441763838 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.588257633 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.467684754 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.425202401 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.650794328 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.100072019 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.458577521 seconds)
  done (took 81.346953335 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.438384845 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.439280327 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.439506739 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.438682352 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.438445789 seconds)
  done (took 8.528570538 seconds)
done (took 2120.408004059 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.849479772 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.178679715 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.105677432 seconds)
  done (took 5.617521651 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.578893249 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.625985105 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.748160512 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.754178984 seconds)
  done (took 8.041327393 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.720662295 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.816504396 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.614882222 seconds)
  done (took 6.485970676 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.936656178 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.436457636 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.429877096 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.43068857 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.425486675 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.42947138 seconds)
  done (took 20.622076364 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.437202414 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.434683218 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.434761392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.433418664 seconds)
  done (took 7.073353752 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.40972191 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.133060039 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.409723877 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.426748436 seconds)
  done (took 18.713205615 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.180423585 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.194500863 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.179785378 seconds)
  done (took 7.890865516 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.440992102 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.272586207 seconds)
  done (took 10.050307448 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.738596023 seconds)
  done (took 3.073732897 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.569745086 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.763996631 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.541213566 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.487810289 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.070103242 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.602489964 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.205220866 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.756048863 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.458196433 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.830874978 seconds)
  done (took 32.624402245 seconds)
done (took 139.178375001 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.451283314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.425738145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.639254981 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.416999553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.659559527 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.640312182 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.628077328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.386997483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.100783323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.936657783 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.421792422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.65597152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.785047933 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.434997815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.785792549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.436493608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.660501401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.727381799 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.254535895 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.339157189 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.625337834 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.059694556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.246210934 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.080688087 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.65965683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.590950225 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.640140351 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.675984149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.277027203 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.659974196 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.586297321 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433324746 seconds)
  done (took 197.658466151 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.432264953 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.42785838 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.42807388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.429395355 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.42728111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.430627154 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.430981246 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446607496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446083604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.462443348 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.442056254 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.433972158 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.430459504 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.428330413 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.450212647 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.44020982 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.42949229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429893613 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.431102912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448759448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429444532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.449005175 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.429037169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.45835826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.434928148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.4459734 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.430172703 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.429588568 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427865162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.433726542 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437226094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.466512519 seconds)
  done (took 207.33730126 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.434034861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.432393112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434544522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451595404 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.442943462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.435925965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.43231573 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.431134763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.457247922 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447465112 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.430570448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.434398582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.434058687 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430284023 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.451682344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.438142911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.444426294 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.430861258 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.429670158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.431130841 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.449643574 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.440457268 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.431208399 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.436823822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.441245917 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.431372064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449908724 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.458791274 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431902037 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.454510216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.436425848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437841608 seconds)
  done (took 207.398115261 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.628605097 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.44226973 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445280644 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.380199183 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.446711075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.444437151 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.439969531 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.643392398 seconds)
  done (took 15.213624686 seconds)
done (took 628.94385524 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.873163408 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.58025491 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.649628077 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.46574435 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.319313316 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.48256457 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465978276 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.645948385 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.399236181 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.654445592 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.814843117 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.478214144 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.926639382 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.458737387 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.738994795 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.565129892 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.344677932 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469581885 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.795697365 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.090957769 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.738689398 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.955866211 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.662376855 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.376866241 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.934972364 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.950279027 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.272768255 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.351432711 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.476255368 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.810803551 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.286863878 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.542735654 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.532091983 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.531588676 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.586526272 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.566848658 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.516365483 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.528110633 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.675137106 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.721668657 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.073194595 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.209208594 seconds)
  done (took 97.865667606 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.430700741 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.430848479 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.43052405 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.43375416 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.429861781 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.431115774 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.42743185 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.429185179 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.430777676 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428617882 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.430530722 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.429531307 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.430373299 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.433146397 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.430008539 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.431095356 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.429941002 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.431749857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.430450719 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.429455577 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.432977243 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.42840899 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.429202812 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.430378744 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.428089607 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.431254829 seconds)
  done (took 38.537416158 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.449989997 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.71165619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.883161509 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.455373451 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.448504526 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.453317085 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.534926728 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.44897108 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.453336726 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.453076897 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.629503393 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451939815 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.486864925 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.912450885 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.452149697 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.44843337 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.45002162 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.447669565 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.720679054 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.457366138 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.554710262 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451967689 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.533858199 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.460790234 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.470174955 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45002067 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.454493262 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.977373771 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.468094074 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.628115353 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.302784312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.532177433 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.927858049 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.914029351 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.303559155 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453632899 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.452395374 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.632198435 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.452547377 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.451371845 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.536830609 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.454742202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.898402908 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.089140346 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.471136364 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.451835559 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.998234613 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.653116321 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.719547531 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.458531873 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.921358512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.457684088 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.456486453 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.454858856 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.719724172 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.459140803 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.453211397 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.006105126 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.478118343 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.538195977 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.454514884 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.454619461 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.72630365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.455445999 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.720181802 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.460013975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.461816978 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.473060045 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.900875793 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.455070518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.11434491 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.472284259 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.454051441 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.629308871 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.718103121 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.033334677 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.477170218 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.730429348 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.943134895 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.553755783 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458235175 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.966459397 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.557694562 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.458865536 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.458864358 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.457837051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.455856321 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.502153522 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.538018499 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.04662087 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.1232826 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.025714118 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.562923628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.469974177 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456143605 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.006632981 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.475136693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.453206765 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.895145222 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.112163356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.472232425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.46729097 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.113949024 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.476072246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.54163338 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.462951963 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.908094549 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.457895128 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.499819709 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.454963892 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.46391203 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.478220122 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.540894822 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.46010206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.457782118 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.084615527 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.658662273 seconds)
  done (took 190.816590924 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.45999177 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.446741392 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.449132415 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.445015041 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.450687975 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.460961345 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.453343691 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.454064426 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.458367127 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.453449305 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.450156777 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.455572169 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.45823686 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.466045662 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.458438523 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.4581009 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.106869864 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.450114654 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.465188876 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.447080188 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.257992568 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.450369941 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.450557488 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.464135853 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.451433177 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.454321112 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.472919887 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.452603628 seconds)
  done (took 155.555168611 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.459027634 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.058672326 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.47294685 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.599173063 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.480704656 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.455541617 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.601594172 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.523412366 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.476721276 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.457956791 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.457055301 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.795613753 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.455980416 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.029805854 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.66625146 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.618613578 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.02938798 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.474318118 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454802107 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.459461711 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.601952007 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.462477107 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.795367793 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084509171 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.476211496 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.085447318 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.443600228 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.45753694 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.461087689 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083990152 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.476437225 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.797595509 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.544055409 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.52665635 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.105104103 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.050979317 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.046589972 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.620241177 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.460771615 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.460107199 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.459173252 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.44256938 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.089244943 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.478374684 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.461845907 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.076405089 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.482058773 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.462779985 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.465631555 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.457042832 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.524444205 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.544021373 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.818426616 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.094726342 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.559781247 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.474156608 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.605048055 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.834015336 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.462513088 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.034143097 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.443196478 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.09198911 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.480815541 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.444995798 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.459993767 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.465968482 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.624440589 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.604178081 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.035109462 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.479877427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.035068123 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.6407757 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.461627088 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.46159101 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.462391662 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.094197818 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.05484087 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.642374171 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.606167378 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.67013154 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448618182 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.461285368 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.447299673 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.548959107 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.461488326 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.09359746 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.050383386 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.481930762 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464035322 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.466021171 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.465042061 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.654739794 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.11160588 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.565300464 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.02589315 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821623235 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.801533267 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.464775303 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.52773813 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.476734544 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.805259808 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.464679895 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.526426033 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.903409982 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.806536661 seconds)
  done (took 174.861120672 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.724390108 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.804882653 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.560238779 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.601712206 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.106059073 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.045653562 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.798709162 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.608301557 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.580353183 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.738737673 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.720587055 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.554601304 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.652532553 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547351315 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.240167121 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.552771449 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.579622587 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.617311188 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.582090215 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.546779559 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.137227084 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.770744099 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.648012469 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.464319292 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.561802471 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.293280773 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.054408094 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.009855645 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.648332201 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.910026619 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046829773 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.658421756 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.494643151 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.198622913 seconds)
  done (took 70.422452635 seconds)
done (took 729.399772418 seconds)
SAVING RESULT...
DONE!
