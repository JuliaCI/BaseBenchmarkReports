cset: moving following pidspec: 7880
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.333087366 seconds)
loading group "string"... done (took 0.561377355 seconds)
loading group "linalg"... done (took 7.324852064 seconds)
loading group "parallel"... done (took 0.155778927 seconds)
loading group "find"... done (took 1.152854346 seconds)
loading group "tuple"... done (took 1.765666985 seconds)
loading group "dates"... done (took 1.232426497 seconds)
loading group "micro"... done (took 0.21923237 seconds)
loading group "io"... done (took 0.958392792 seconds)
loading group "scalar"... done (took 37.65266261 seconds)
loading group "sparse"... done (took 11.915685421 seconds)
loading group "broadcast"... done (took 0.939447827 seconds)
loading group "union"... done (took 12.253797456 seconds)
loading group "simd"... done (took 4.440691982 seconds)
loading group "random"... done (took 9.088937087 seconds)
loading group "problem"... done (took 1.87710237 seconds)
loading group "array"... done (took 20.970861687 seconds)
loading group "misc"... done (took 1.689978984 seconds)
loading group "sort"... done (took 3.356776503 seconds)
loading group "collection"... done (took 17.318753764 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.511498324 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124729148 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118880102 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120297132 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147364258 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112474826 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124097012 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084316319 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.782788188 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152642452 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119144054 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.43120073 seconds)
done (took 5.130126594 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175403498 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083248593 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081187844 seconds)
  done (took 1.29470993 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065438846 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.123265605 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065959996 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065850248 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066672226 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065550632 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065751632 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066119354 seconds)
  done (took 1.652339342 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073355019 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068420375 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065549231 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06807621 seconds)
  done (took 1.40964967 seconds)
done (took 5.731970748 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.789890351 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205688944 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188353602 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411408848 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130769596 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158641125 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641807023 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.311669192 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.191417134 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080583286 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105012903 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330164508 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108742375 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641113661 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074050401 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090364198 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136542668 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420998545 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066954275 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081592865 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088043152 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126963607 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084398723 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.073784524 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145507283 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067135314 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.13658507 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080591356 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065787654 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212530624 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171868433 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650980759 seconds)
  done (took 10.241082784 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097805964 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097242019 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06858193 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1253308 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098753733 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068886956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070416421 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067115185 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087082081 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128071107 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.092225251 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10179719 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064989546 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068421626 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084724046 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204799896 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079471175 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081488209 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070846318 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075356429 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10527242 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077963616 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077707646 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076967655 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129283667 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182547194 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099422362 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098938466 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068811679 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080543533 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114099187 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127005003 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.0678329 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067191546 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123864778 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09620689 seconds)
  done (took 4.598772241 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.003980505 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111898561 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14324465 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089669196 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133894837 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064075568 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109331449 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065720584 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08033298 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209817157 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.385173459 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586084612 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111077526 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103599352 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06736536 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068441243 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066028808 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.470570828 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.094557136 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105647845 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080575375 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06983415 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068410529 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367943418 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067488955 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063333113 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067196095 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.056872362 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124864344 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06720218 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.044150543 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072807961 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127381877 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066746278 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100268987 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088256007 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.276693585 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06886609 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064171812 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154101316 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070420688 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065084866 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065680734 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083709916 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10315474 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112377832 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065973674 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0660501 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161502835 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064709443 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080619312 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.638181348 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154330846 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078707964 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065020971 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.255192346 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.090277002 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069704149 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063936784 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.181250549 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136534911 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067380556 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066640821 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068052166 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069842726 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.359097103 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065760433 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063546643 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.06655619 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075365728 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.181055664 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071235995 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069777323 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072076332 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072065773 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087442515 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06636497 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074864356 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065335805 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065618537 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066736178 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083553189 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063588867 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.373700958 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066383777 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067404629 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064386325 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088743252 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09642005 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.06780352 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065034949 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099967292 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067672151 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065785192 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106118466 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066335804 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082924594 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068898177 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112671055 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.16950436 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087986386 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066522699 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096476642 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069862732 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098539765 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082201302 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067782794 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.417003114 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065505279 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064743323 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067774225 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064856963 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068156293 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066161825 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078914834 seconds)
  done (took 21.284540371 seconds)
done (took 38.252519164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238889945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075027106 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073881242 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081294071 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073850685 seconds)
  done (took 1.772934064 seconds)
done (took 2.974490531 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122003112 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10008819 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064273291 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097970043 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063824454 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10180696 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100979121 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081376853 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099577583 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06351461 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099689923 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063523034 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063911068 seconds)
  done (took 2.353403967 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084990327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08438397 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069805606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083361951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063468619 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083282047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081488986 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088836565 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081159078 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073178585 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063452501 seconds)
  done (took 2.062086492 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083051414 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084524159 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070153607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082425704 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06376969 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082310499 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081566714 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085800427 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08214225 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073727548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063405916 seconds)
  done (took 2.052851248 seconds)
done (took 7.658967248 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077916883 seconds)
  done (took 1.266519242 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.599527584 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.196373413 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081505343 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111430376 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.188398876 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118380797 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275947455 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085822818 seconds)
  done (took 9.03242112 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.10260368 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071673112 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068481047 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067824201 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071795186 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071190629 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071867034 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070954511 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068067274 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069133609 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06881531 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068325631 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071341692 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06763935 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070478579 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068872041 seconds)
  done (took 2.416812149 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092346894 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091454549 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074409369 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074272673 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071951266 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071401887 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073976014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073322142 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070828358 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071833236 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073714554 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07314801 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070696234 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063902458 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073511044 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07482706 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070199007 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073316001 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073396526 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073847173 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074458438 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0632842 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071196492 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073323212 seconds)
  done (took 3.071963376 seconds)
done (took 16.980756552 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115626711 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071848424 seconds)
  done (took 1.380469874 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083827024 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082677607 seconds)
  done (took 1.368702329 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084359177 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065759376 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09112991 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077955473 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065715826 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065700869 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088518292 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065812027 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065062182 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065338493 seconds)
  done (took 1.938236887 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070009787 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078282381 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069796502 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080516625 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073552924 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0636923 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071570935 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066752519 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077292883 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062351142 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070670667 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082029737 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070684668 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083906143 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071781372 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068301662 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070388038 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066917316 seconds)
  done (took 2.506654601 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067127502 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06737664 seconds)
  done (took 1.343311779 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068360794 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063944925 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066689649 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066561579 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062807336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061720637 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062577816 seconds)
  done (took 1.656796948 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385436708 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113115857 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.309180197 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070207287 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081274155 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257548953 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065158043 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070004875 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070007679 seconds)
  done (took 2.670458725 seconds)
done (took 14.067587853 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081284735 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086199506 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095474115 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.375690742 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091330101 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065508346 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113230415 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191266601 seconds)
done (took 2.311310084 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215578324 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.631959208 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402892888 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204480949 seconds)
  done (took 2.450056946 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342015681 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088114639 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058670414 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066930274 seconds)
  done (took 1.77657177 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067720852 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068697321 seconds)
  done (took 1.355788714 seconds)
done (took 7.004960051 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067922705 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066389358 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063601108 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066384907 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086476252 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.062944238 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063478466 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063082111 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065488455 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065507794 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068364516 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065757483 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06560669 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06557027 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063170784 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063008691 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065950134 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06284088 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062950264 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063051674 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063253981 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065428529 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063243282 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06339791 seconds)
  done (took 2.823385441 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085857641 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065599103 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070703339 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072166585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069378183 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070593759 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070589341 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065562428 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071072569 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068229301 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069446131 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069486172 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0684261 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06932091 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067654435 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06966837 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071072832 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065459976 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067851799 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069595012 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0704414 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065932202 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069338117 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070570288 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069053508 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070873149 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068184248 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065820449 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070736866 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069513337 seconds)
  done (took 3.317408366 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070913391 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063981067 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064174857 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070265945 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063159479 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063997475 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062403642 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063804654 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064049255 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062819509 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064107936 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062628725 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062933812 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064394551 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064392674 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066971086 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078648132 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063899179 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062971817 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063936842 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066462224 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063764326 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063207725 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062535648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063147851 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062772386 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063246351 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063200493 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063327851 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062922717 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066245569 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067011924 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062961627 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070146057 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066677153 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062684116 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067227538 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062704369 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063155476 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062563652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06235887 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063158605 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062965585 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06962597 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063540454 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064587029 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062649072 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064073054 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063645655 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065400293 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.176464106 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062972257 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064962466 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063796583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067537173 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062251007 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063452587 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062322335 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064046902 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062616183 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062627966 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062506958 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065647177 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063364753 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077758748 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07002203 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062805334 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064515846 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063612496 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065308036 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064620978 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076130747 seconds)
  done (took 6.011743025 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092808866 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087416371 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065367464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065368365 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061755958 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063968419 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069695777 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063270235 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065175508 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081625013 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063669358 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064927998 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06533299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067142758 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063873347 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064989008 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0719435 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061298094 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063251617 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067044532 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063732134 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069394866 seconds)
  done (took 2.743657085 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156326631 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069981272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106362287 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075020954 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069857812 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074955536 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069315053 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069737858 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06985778 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067681816 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06711661 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070406531 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069630618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066974025 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067111341 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067603083 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069584927 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067596471 seconds)
  done (took 2.611151862 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077511517 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065956196 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086524494 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065000224 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065598424 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068166595 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069893643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073767684 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067766104 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065252557 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073472884 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067490854 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067668359 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065372092 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067630086 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065602754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067722315 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066015704 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073484107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069924758 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069463853 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073345473 seconds)
  done (took 2.768985278 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081555939 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068853293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082061451 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06871206 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061739794 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064351793 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070121041 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065654749 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070018204 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.0671658 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065294885 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063932849 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068535933 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065684363 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068139795 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065204516 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067081638 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066091924 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067318307 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06137424 seconds)
  done (took 2.597694629 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087587522 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067976233 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066687354 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075357397 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067591484 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067230379 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075215664 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067100554 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066804876 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087930012 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067149942 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067355927 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07559519 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07204327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066926753 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074443502 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074186806 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074636619 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066761664 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066837231 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088097367 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067013382 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074353721 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066672864 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067316165 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067032832 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066989592 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071770908 seconds)
  done (took 3.242611355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068660182 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066714416 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063516585 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063694127 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063457356 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063559202 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063314665 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062919305 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065587586 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063351161 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065720753 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06591892 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065953672 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065768838 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065735963 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066299202 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066594524 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063543084 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063602382 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064133749 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066268245 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066169149 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065694425 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063252154 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063279279 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066069932 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06364765 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06332448 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066490173 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063825364 seconds)
  done (took 3.187770594 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076979977 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073664891 seconds)
  done (took 1.3953881 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064900435 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081237697 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064011242 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07004722 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069736942 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066409405 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073814883 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069760217 seconds)
  done (took 1.798674142 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084043177 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078004197 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067717359 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079925839 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076705952 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083252113 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134822366 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06756288 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.07334987 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064359908 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079793184 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065449673 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072513906 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066664039 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071962093 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073045382 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064330708 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.07155794 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068398359 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064501972 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067270386 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075293241 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068202683 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061025113 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067246488 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087667652 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076676153 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064969778 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068981457 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073496666 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071186512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059458633 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065695033 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066024274 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063670815 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075501639 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080539885 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068405946 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074205464 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066733081 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076471125 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060985783 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070267141 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072152148 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075772427 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065676852 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066372995 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060421394 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063303749 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067658791 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060790656 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068362443 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060374135 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072839321 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069525702 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076610282 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064515402 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066985388 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.06850157 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069207375 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072396763 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067165602 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068067095 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065239864 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075691634 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069772478 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074331798 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060816306 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059888874 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063653675 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074915217 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088276567 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071640901 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066312989 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066405672 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063241849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068664504 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066784427 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071829044 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072361882 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065389582 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070794553 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073201024 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065685809 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067851528 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073769973 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063717472 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068838646 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063266057 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081908436 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064160225 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063754525 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064119979 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076029106 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068843329 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065265899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063678618 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073427588 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060033918 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066204359 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06665505 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066526203 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07596198 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068898883 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06922498 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073106957 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072202804 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064608879 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067123813 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061352326 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065125894 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063966869 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072022039 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058667836 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067326949 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065908921 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064990014 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072564638 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062554239 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064564925 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.197714253 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073986955 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064948439 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063346976 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069500761 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067037835 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069462763 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074257192 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065233466 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061107032 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061032837 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070392919 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066641755 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069868725 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070994019 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069708668 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060432268 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064705066 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070675849 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075384716 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066812632 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067241824 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072548423 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068131921 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065323607 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072706792 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069009261 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065925666 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072639523 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067094017 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06143975 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070126561 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068786028 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064663719 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070538945 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070244526 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069378897 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067496453 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064806673 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073582437 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067028621 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065805107 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066698637 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06441854 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077512257 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068024464 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060828984 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063516026 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075742091 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064589474 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065829887 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065623764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068183188 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066275923 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063690973 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065837107 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067995514 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07565648 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07016235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066189814 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071562215 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076956152 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065344972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067744014 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065641242 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066696992 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066722399 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07482681 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071787705 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071190141 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06910396 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062558795 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07116384 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072550733 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064766718 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06393182 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06483051 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069860683 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071419522 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06997319 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066596277 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063908341 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066751691 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068890947 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068788769 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065330295 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064719149 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072468423 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063867874 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072262781 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06653787 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075982813 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068813809 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060552232 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068512913 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063936436 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.07186277 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06100566 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063649598 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064876619 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066907614 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0644872 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068370828 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059845297 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072890877 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07291635 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06593229 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064739265 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065171647 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072304164 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066210292 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06815238 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068021808 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069993068 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074796294 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063871297 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067646591 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074717718 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064468067 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05885232 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069962268 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063351014 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063519468 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063424495 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062670387 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067494477 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.205343737 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073301345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060568853 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069416451 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065052985 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065378491 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061718721 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071749951 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069942414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066959095 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073567405 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067364188 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067028414 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070645653 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.06626584 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.06763101 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067714179 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069191683 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067485568 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068249108 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065939968 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069947606 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064991531 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063392245 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067885189 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066168075 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066379685 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072280309 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.06509362 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06669068 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068328916 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067232189 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067289411 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066799207 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065731057 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070198 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06744899 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065968811 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069029255 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06111449 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07330467 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065694472 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073990599 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067143434 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062978568 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0737121 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069100181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071772734 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066268569 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067075453 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067205467 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066404712 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068748158 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073533379 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064587953 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076790983 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073727307 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066418039 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068788808 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066228978 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067149139 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064892908 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066220798 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066683849 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066554589 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066014454 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070601335 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068056794 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066691632 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067902983 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066703276 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06614071 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067349537 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060073418 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064925895 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064912833 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06518484 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075188861 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066156936 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066170964 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064771116 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066637606 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065196112 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062878132 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074031373 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074523245 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065988483 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073189908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065150463 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067561785 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076497038 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060064106 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063607568 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063649914 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063852815 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073296458 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066237999 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075387623 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06600857 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065622614 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062997161 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066663107 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064194118 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060098193 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063609804 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069223061 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065303771 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064653512 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065667365 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068150209 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066895607 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074362065 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064248857 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065302437 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064610497 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062296245 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064210383 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.063669054 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.067352804 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065398436 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.062485687 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062495334 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063955007 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065318201 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066234576 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067230153 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066152785 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071586207 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1976124 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070691893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069775871 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061349579 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069443678 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066581646 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066078266 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065072948 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070127082 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069514538 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068211838 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075810798 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067218541 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06768619 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066569326 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064330816 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066515374 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.0661857 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066284459 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066253288 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068396009 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074952606 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064892474 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069545032 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066153438 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066767885 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073300241 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066716055 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069933048 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07309451 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067047909 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069224067 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074054412 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070116592 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068576303 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067553742 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068491712 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071928059 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066232135 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072699428 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066738605 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066894211 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06834739 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064003309 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065596548 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066707952 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065819521 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072235713 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067631696 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065641775 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065671139 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06302986 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067289373 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068899029 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073464391 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068666673 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069070597 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062031189 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063375016 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066915743 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063782466 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067391582 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068152681 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071261323 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068378254 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065699631 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064583625 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075151955 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07121583 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069355308 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064173615 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069299949 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067802481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06846312 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066893433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06605032 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067174895 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069672662 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067399071 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064974737 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072834383 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068878971 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066838007 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067476323 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066323622 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066294849 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060997197 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066390789 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068101845 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071207427 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068266121 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065501991 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07642331 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064171694 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066065626 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069159496 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065428029 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070778875 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061316454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067761474 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067503495 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066876114 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060974984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06473625 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064008634 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067795206 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065241686 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060882075 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077185806 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074577023 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069283647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065141778 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063883322 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06078643 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060458274 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064726959 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066018152 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066410858 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.074527382 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064000636 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.063444216 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059768532 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064454988 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067323304 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067732139 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061550984 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059325073 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.063928384 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.067911208 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070173264 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063249155 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06418875 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067390336 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066695529 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062503426 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067738767 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061522259 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06824289 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076766142 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064706366 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065078287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.070080986 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072147853 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064843005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059527122 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064927784 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067495272 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064872062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064799174 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065303417 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079576858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067728652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063696949 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063206605 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066515117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063801242 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072394193 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065444522 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065157205 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068693104 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066462437 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073000882 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067518278 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071742799 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067840091 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067599199 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063593684 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064795624 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062500686 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062660804 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064549017 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064451511 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068042034 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070391583 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063178829 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.073956538 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.072832384 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065283442 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060090866 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062502933 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063226547 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059622296 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.063346564 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062735942 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06143591 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.061892797 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062514049 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064927257 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069025477 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064508494 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.063999297 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063819136 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058044137 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.065667893 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065855542 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064823517 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.0607825 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06321581 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063759577 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.067861129 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066395854 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061380038 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06504854 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064653179 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065187113 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058829354 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070459437 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062700489 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065601933 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063134537 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064466297 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065015461 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06732783 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067479529 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063613658 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066569012 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067207314 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0657355 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061325406 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061226803 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.06882972 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061572675 seconds)
  done (took 41.936551812 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108961034 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065074373 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064246291 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063887404 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076086755 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065317659 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064102404 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064734312 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064961547 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067008524 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063801306 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063744749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072880026 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079339524 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074990292 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068174454 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063194649 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06445324 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063595137 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064108734 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072046264 seconds)
  done (took 2.928251959 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076529802 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.080340591 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07699662 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084906189 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072362692 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07206819 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.076675483 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071771751 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080324567 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073512034 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079985114 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071526866 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073784975 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073584923 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073937644 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07166417 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079611876 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071952886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0713149 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.076955343 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071506557 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076130704 seconds)
  done (took 3.006955553 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068585807 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067084777 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069498219 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061785496 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066564572 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062545488 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070119775 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065084054 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069238565 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065685353 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065844708 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065694063 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068525616 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061929873 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067093958 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064119318 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108891169 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069950404 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066197869 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067312001 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061646411 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068755125 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.0620967 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062343774 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065905601 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070040162 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066877331 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064535225 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065706524 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065495569 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066570813 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064396516 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068289455 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067314655 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065788909 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065852574 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066454129 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066423605 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062520909 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064429173 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067496322 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061917759 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067677805 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067974336 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06508391 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06483117 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068239944 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065761854 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061761746 seconds)
  done (took 4.625459485 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081943527 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110832364 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067681096 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090001217 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083393979 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073016579 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070177676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090275626 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063383642 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064089703 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082337378 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079497647 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066160085 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070844893 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069828028 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066071224 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067336019 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06547063 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070170181 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065086387 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069940717 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072598682 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08030405 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078887222 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070177691 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065150608 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065031118 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070328246 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078805966 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070723889 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070531219 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071796096 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080958831 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072161339 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065015344 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068627618 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082769923 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066739257 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068894761 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064740061 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06836229 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070747235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072100184 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083416331 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066877108 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071486647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066302991 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06310413 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079692296 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068212834 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074220579 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080636518 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069856851 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065946592 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072280739 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084253642 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067514015 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066836513 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071463348 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080560645 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065047606 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069341791 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079960595 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067774645 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073567481 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080285939 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071127982 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069522599 seconds)
  done (took 6.441448663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078272524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096464284 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084228942 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083679961 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075731521 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075504178 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075659623 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075449801 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075934691 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080050245 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075382603 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115696187 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070731773 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078612683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075537943 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075408836 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075648494 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075304231 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075525617 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074982309 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075174194 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082677116 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075273923 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082685183 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079220803 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070432732 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075492747 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075396754 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083052888 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075092248 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.0790327 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074662402 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083833941 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082818643 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079416615 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074868453 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064281332 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074786827 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074845661 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074546497 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070332238 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082031469 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074642033 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070238774 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074393235 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074181899 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082158698 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078610597 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07702305 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079083464 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074752461 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082237997 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074569659 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07489333 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083065202 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08610316 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082427009 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082591353 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07542941 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082675044 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082679019 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08618143 seconds)
  done (took 6.233060482 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086139942 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075435296 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081961234 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061272539 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063926045 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071561311 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06392711 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06401526 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074234025 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073976418 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076497544 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071588464 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074425901 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076405339 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072198494 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074827468 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071927465 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07203183 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073842274 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071951351 seconds)
  done (took 2.822349073 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075994762 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083461633 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066669089 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072110565 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068660729 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071363785 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068374458 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068683627 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066797449 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069003013 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076087301 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076523945 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066650314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070920559 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075873529 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071236563 seconds)
  done (took 2.51028182 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085757324 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072282172 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079614821 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06650275 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066972075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062281855 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065575225 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061719281 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061790613 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077656249 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065213099 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075322634 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065346128 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063729447 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061865698 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070548428 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061710007 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062517155 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065128812 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077859577 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.06953165 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064307521 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068592898 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06484691 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068224727 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070174546 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064731036 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065680558 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062775328 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065313831 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068092807 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068942191 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.0623908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062958171 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065102415 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063092843 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064998762 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065630741 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070490203 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065407101 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064000352 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067970709 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065647763 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066518323 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06155985 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06586722 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062123823 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067845737 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063436402 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068093195 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065196133 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068011913 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066015678 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072395626 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06818657 seconds)
  done (took 5.049761075 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080974744 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069504415 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061870323 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063814077 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06903784 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067173095 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068944104 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067292517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067671845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06364193 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066924412 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068494508 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066723453 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069302892 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066958646 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0690646 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061497349 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067290318 seconds)
  done (took 2.593498547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07219697 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06564439 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072469246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066184479 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.06575228 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068133008 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061355949 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064360866 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064379084 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066110328 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065100551 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067864443 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064185453 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067363099 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065450436 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06548684 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067494749 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063726781 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065063054 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06104412 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067868747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064137772 seconds)
  done (took 2.821669395 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094313751 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083155356 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140496873 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078882048 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084982159 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070673208 seconds)
  done (took 1.924099165 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091956761 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101109946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066862275 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069317387 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075931718 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069146929 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069281284 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069835647 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077694212 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075096411 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06969943 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078534694 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078148364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077918468 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075319976 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075664995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070145476 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069662304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065958609 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08376779 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070231163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078626051 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069814404 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069544083 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069913066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077835739 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078042115 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075698114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069746004 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077999865 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075586851 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069740943 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078564285 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075665813 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068927537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077946834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06999188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083596397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076123539 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077777995 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068868546 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076699392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078531522 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074302116 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07892885 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070261428 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074691614 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07012376 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069904321 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085776131 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075912156 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077335305 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078184756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078693111 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078792193 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085689586 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075572736 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077476225 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075736632 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076101937 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077624719 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075941363 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077117588 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076394197 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076199181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077767831 seconds)
  done (took 6.364073772 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105173719 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067608043 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070393033 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076728452 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077544134 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070440163 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070392171 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070081323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070473524 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066878427 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108084601 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070676736 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078287038 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078281546 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070978105 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070346415 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070109553 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077638477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067056761 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085933356 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070187155 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077982651 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078140134 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077747791 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076129101 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076019699 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070016647 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070022724 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070054358 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069473227 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074923205 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069989495 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077396201 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066430283 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07758741 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070189725 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069402413 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074618202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0700212 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075526133 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077388954 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083368463 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069906249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069918193 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075559141 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069723006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069973938 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066544809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069866742 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066703192 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07560482 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075661597 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076177493 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07736885 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069627481 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070291325 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069798432 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06974322 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06964017 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075294757 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077454744 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069508512 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085745586 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06976739 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069835251 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077919541 seconds)
  done (took 6.272863759 seconds)
done (took 129.235789128 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186485684 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165107561 seconds)
  done (took 1.715902929 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070444623 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100965179 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07793774 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128582908 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067025227 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10016886 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09906801 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078040462 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066212024 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065611299 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066333192 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068725714 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131010313 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06665097 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065619208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068559243 seconds)
  done (took 2.701373773 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100651473 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.16250482 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10243338 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065278816 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099268305 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072912327 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064809607 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074639291 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070563646 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064784417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072781923 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070311596 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064914472 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070405152 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070564355 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073156982 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065062976 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072366668 seconds)
  done (took 2.822289284 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100432579 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09151053 seconds)
  done (took 1.577520122 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163205027 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106666213 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147184952 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350482134 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164961038 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.128360715 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128791211 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130996349 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119459931 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124758252 seconds)
  done (took 2.943239015 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100434717 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154185076 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.26676481 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116203498 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072695106 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094034745 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117797229 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077869513 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080279624 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080525483 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079931557 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075956731 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099681921 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073415641 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073182273 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075864493 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103760622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072482421 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074806425 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076169598 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099936131 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065295151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073382538 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072726028 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077187273 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07745398 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065440993 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06519035 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076156528 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.0741998 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076705598 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093012985 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076672851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106020337 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070337166 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107223711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076276708 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073343545 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074583083 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073168955 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078010942 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078194819 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07253498 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076284009 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065122855 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076374613 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065566996 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065535347 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077661071 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066267558 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077408947 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078018711 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105987487 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066498518 seconds)
  done (took 6.003635537 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103988358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106750396 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070927698 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112308622 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101930089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071804476 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102403927 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095501679 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103804335 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069842687 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06819405 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070237476 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082064128 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082761955 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115755705 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107599614 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073413449 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071197865 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106097221 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105090925 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068330916 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096762237 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090557574 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103109929 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067050787 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069802944 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067895788 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069675492 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076485185 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078009203 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069465526 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080200723 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084054595 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077984721 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06681022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067271176 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067863978 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079518896 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079030108 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07908089 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077145765 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067633323 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067437704 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069335787 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070060311 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067851748 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078517495 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080130846 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078548751 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068933883 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069616749 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067781092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069155662 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080045831 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07741371 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080548282 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079666451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067624736 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067826439 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072104901 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08076945 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079204978 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079138507 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069192642 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078748254 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068067272 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079631466 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083789859 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06849232 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070066287 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068078213 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068934645 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069104253 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077609724 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.0777565 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069210335 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069244169 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068693345 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080445567 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078929314 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067539167 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077564566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066893571 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068017624 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068861223 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069012614 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077585476 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079942195 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069373351 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068672058 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069210504 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068517862 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067351515 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076999995 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080148263 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079225273 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078445934 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069176649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077915793 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077884244 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069539911 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07899234 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067523658 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068974183 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068605923 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077170033 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075770115 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.210480485 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069715949 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068815813 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07963174 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081419284 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068809436 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079443169 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080422109 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079440202 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067878276 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081588731 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068447257 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079910561 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069225541 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080861519 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06910315 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079895787 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06922725 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068780927 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068414877 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079556077 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072960848 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068749671 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070276125 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069161834 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078916228 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083391509 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070738309 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078476183 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078841247 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070482529 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080089316 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069073232 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080259429 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069225032 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070245883 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068054384 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082934509 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068854693 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068529817 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069055993 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080072237 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06841329 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08015811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07845233 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067495306 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081473371 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080597845 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0780756 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081084436 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070506661 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06815493 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067652662 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069009018 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077964461 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080565259 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070708036 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06821992 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078007827 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079762782 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067353636 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078041963 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078154522 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078172028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068578407 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069001742 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080301346 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079977851 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077721106 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077392646 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077796001 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068141684 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077038824 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077905388 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068202043 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084565231 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068351834 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082484408 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078849738 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076307216 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078890478 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080233783 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080069862 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079864757 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08309263 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06791823 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067400648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079575684 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067657462 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06908341 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078213169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069317869 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069876496 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083505174 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068630346 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080540065 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068234163 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079162785 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067001982 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069766025 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083027222 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067170748 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069298564 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078163622 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06851024 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076477284 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078975273 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076139295 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.200955041 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071528326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082967904 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080958023 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068929431 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068394836 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071093954 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078786642 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077149414 seconds)
  done (took 18.677017613 seconds)
done (took 37.825515854 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213719366 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152268451 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182215256 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118615526 seconds)
  done (took 2.150334292 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11781738 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101365894 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091922136 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064461049 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098495995 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064694669 seconds)
  done (took 1.959969483 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.313394002 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211054661 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188732011 seconds)
  done (took 2.129443284 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.204384122 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19067328 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421105676 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.266216328 seconds)
  done (took 2.619795402 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144929145 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090120349 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066498897 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083792252 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133888165 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15976161 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100393 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124939741 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07772869 seconds)
  done (took 2.464648367 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148806004 seconds)
done (took 12.882580502 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.184747065 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146325604 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.22665849 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 0.173240727 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.079590674 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100294614 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.198484644 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096249862 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.229402479 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.239262502 seconds)
    (11/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080564953 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175325904 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.071096205 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076135554 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.111621726 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076002067 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077513135 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073036061 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.100810337 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075547845 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094871178 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.223503164 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.114599126 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.222126268 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093183983 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227806113 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064852824 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073352811 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070715224 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088712416 seconds)
    (31/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.11100228 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15716797 seconds)
    (33/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100043099 seconds)
    (34/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188576056 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072627465 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.158943436 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071283078 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.172723403 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069709489 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.16722738 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180835747 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.17819311 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076009877 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.07157213 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193329135 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074241078 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090142108 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107613329 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.187441921 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184646514 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.062367983 seconds)
    (52/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072419535 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073266987 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.204269807 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085210019 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151032384 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072916079 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118327831 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066767069 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127921641 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068975275 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183207299 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181569105 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051537287 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.173428934 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195534228 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073129148 seconds)
    (68/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.142082863 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075554791 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089657797 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.214534673 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068234634 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075986332 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.181213466 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067861983 seconds)
    (76/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078925193 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.11025837 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067262214 seconds)
    (79/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.060985014 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.075372486 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.313490853 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.066760236 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052674922 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081942436 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094185298 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156306445 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.125520142 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073847625 seconds)
    (89/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074446326 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090755909 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08994754 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071733439 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091724198 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07459855 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.181172094 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072870705 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089326867 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07355292 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172557781 seconds)
    (100/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091720637 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155036924 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075762854 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.164041502 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068673322 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18086398 seconds)
    (106/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.109028986 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074007523 seconds)
    (108/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121238375 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082288151 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072096612 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073426932 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094422452 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139494743 seconds)
    (114/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.106901237 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.112247467 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050692233 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05023839 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089305806 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096065594 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065815301 seconds)
    (121/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107248435 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052031408 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195659497 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067400372 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 0.137397688 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074042895 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092657596 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070964515 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072051912 seconds)
    (130/309) benchmarking ("sort", Float64, false)...
    done (took 0.130892657 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.159728671 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064946252 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.180450335 seconds)
    (134/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071339053 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071511234 seconds)
    (136/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099959416 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073251503 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.070936761 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088490217 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.071437149 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111467375 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064875208 seconds)
    (143/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072986782 seconds)
    (144/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050053575 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092217732 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071300593 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.051750546 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075951138 seconds)
    (149/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062106779 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064250797 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072118797 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087895134 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063179015 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071482391 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066436819 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073038299 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090985315 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050444087 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108659964 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070724985 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.0653495 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.383990618 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074224543 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065053653 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160678578 seconds)
    (166/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.050953582 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051489154 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.079108045 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.065805217 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071820476 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052577871 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184773646 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175833139 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050457529 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065046081 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178352922 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051130588 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090449556 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072075654 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064315449 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108137154 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075011431 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073304778 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.049882593 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061056133 seconds)
    (186/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077588107 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067933347 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050163829 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053042701 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115660017 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089124353 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099817783 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091557751 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066011083 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.209909145 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081162469 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064911971 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066699485 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.066786441 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090607677 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05291315 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050502187 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051529365 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050726612 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136244981 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 0.133392416 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088316747 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066021941 seconds)
    (209/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052150977 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072773382 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074719914 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050409185 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052734365 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082558879 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065324215 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173473614 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.06613211 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066731508 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.067671487 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140752888 seconds)
    (221/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061454127 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071110928 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051223851 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05182043 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155789918 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07241867 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064598238 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074635569 seconds)
    (229/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.050979366 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050323249 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068194034 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.100454888 seconds)
    (233/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066947043 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052405977 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136812226 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050935849 seconds)
    (237/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100898573 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066304481 seconds)
    (239/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062459332 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081219814 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140536757 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129361193 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050817845 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051191803 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.051974676 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073210077 seconds)
    (247/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061212094 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053484179 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069612761 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110649782 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.067955537 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064399691 seconds)
    (253/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.0511277 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064691152 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092036643 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050557523 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064437976 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092211263 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066058719 seconds)
    (260/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061321437 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071711335 seconds)
    (262/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051502219 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089897636 seconds)
    (264/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060337656 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135946824 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050227807 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08719241 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141725132 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070612422 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072731307 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073692934 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06350403 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050822945 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064933041 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.05014541 seconds)
    (276/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.050891007 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049993021 seconds)
    (278/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063036842 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064389761 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07182742 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126647513 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072553861 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064449182 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063409617 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064567266 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063905829 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.05070297 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072189992 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06483401 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051202729 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050220788 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078228402 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064880045 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093782654 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064743656 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071205224 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061287082 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064861366 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05144013 seconds)
    (300/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068926711 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076716857 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093182098 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051747383 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064042952 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065494918 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050576536 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07039181 seconds)
    (308/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.06706146 seconds)
    (309/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050810176 seconds)
  done (took 30.874183814 seconds)
done (took 32.305709917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084245732 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092950173 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07493908 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093014117 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08070508 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075595842 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072431011 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078393376 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079684841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081435242 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077251575 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053545588 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07378482 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074033643 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074647854 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091362728 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077956929 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072891076 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072604094 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064204923 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072653796 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065060719 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066812319 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053472618 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07812921 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071723768 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071999168 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074089084 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064921895 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065176288 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069093508 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072909834 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064824873 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078220884 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072063063 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072484492 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074053804 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076493359 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066777722 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065762072 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073853182 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065456521 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07278619 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073390754 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071707949 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071250163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072812856 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077671858 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090933897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067672187 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074451532 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075380855 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075636107 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072149255 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069545516 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072494856 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070685248 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090851322 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072816636 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06682885 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073432255 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073673885 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070776233 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071861944 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072057339 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074108287 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074889154 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070813134 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073658023 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071038011 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064296321 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072096023 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.0680381 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064657856 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075196884 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07606996 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063172517 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070777824 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072397094 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070525097 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064429464 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066849858 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06647456 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071165021 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066494923 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053719896 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069212752 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071919082 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064104159 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072577039 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071349953 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071795589 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066861907 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075070422 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06448289 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070461266 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064691805 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064876568 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066224868 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068900578 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06414571 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066450707 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073628739 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066271796 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071152017 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078584912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064757461 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071641412 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064178924 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06450493 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080303015 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074733918 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064623493 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.0673575 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063884937 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071980608 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064142102 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064273324 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064497821 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064514846 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070995248 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064541878 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066251051 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071752359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077610975 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063704292 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06818365 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066317493 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06410641 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070151809 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064518186 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064023415 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065702607 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060825094 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066112618 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.063980718 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071234915 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.202083989 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074061387 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067005794 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073325839 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07022777 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071945968 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071888146 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063770364 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05854935 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067460725 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067193518 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066660054 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065388545 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067206398 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065930029 seconds)
done (took 12.385374146 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068156111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142871343 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099196109 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094937991 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08527903 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065921777 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075573605 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100568871 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067161172 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100753637 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087336301 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084388086 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111534063 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064093237 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065112774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069351597 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066972916 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081148125 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101069584 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086411796 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115585407 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065048953 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093974671 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089377242 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086902949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092099808 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069249068 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069666624 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069245055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09990722 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086135591 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069243456 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066526682 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097510457 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092057566 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082287508 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066060451 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081640662 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066596768 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065126957 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066543596 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.0970731 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079157337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079314648 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069655504 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068481544 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066887437 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08246428 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087959099 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077476825 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085517649 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101659396 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067717817 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065462057 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063670976 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084148827 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064395602 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068431818 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065537564 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067470067 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065371981 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068467011 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080320017 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081208899 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068731719 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079677163 seconds)
  done (took 6.778584217 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086495103 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090832205 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08369653 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085141935 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065844838 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065633117 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065515686 seconds)
  done (took 2.06461844 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069098748 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089575971 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088686926 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088972673 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085276353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087202731 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075333888 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065988469 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080430546 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06703804 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087702897 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101439225 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066254814 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072203941 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09032062 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066079382 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090029293 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06603217 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068783071 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08993551 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06761781 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.08185308 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069753404 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066092049 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079530925 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065869962 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113218443 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069973445 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06759274 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069219774 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063748265 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107077731 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079843608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07492206 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06631037 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080166169 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080607953 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064164651 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082091222 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071072808 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079663702 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066180448 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066485935 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06387252 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070018068 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076133016 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066706272 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066521685 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068295297 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086363123 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066670185 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080254779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069517677 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068288927 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067504882 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070287471 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076396899 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066950944 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086192727 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067692786 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082941992 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082061795 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080427186 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082603893 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068278245 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079718976 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080352592 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068633391 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067731136 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069502993 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082103445 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064173243 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067337406 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076476487 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067595576 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089049665 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088925716 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06730823 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074959673 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066229833 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065592046 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065716107 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088843234 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068258 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066068933 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069991875 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06882185 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06414201 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064896379 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069523247 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063950123 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067052301 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069253484 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069308036 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068886893 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082651784 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068828197 seconds)
  done (took 8.742598045 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071084056 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068495791 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068846534 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066863808 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068249105 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.0672118 seconds)
  done (took 1.954115382 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095364909 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069068511 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080918947 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071974737 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105180251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086933355 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086345762 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077763286 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083317601 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079091565 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086066654 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087816655 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092674924 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072357238 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086493251 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071088104 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086958336 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075556892 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078287795 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072432774 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086229321 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072257438 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073138175 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081430269 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075757869 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072179684 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066971134 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078341566 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078074652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077912378 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072111641 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075475158 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070122698 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077982041 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086966615 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070097264 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070895189 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076978961 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071829816 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075002213 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087758048 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07217244 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073781589 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077138043 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077358495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.06984531 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076719973 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075550391 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085664171 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076963859 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076645724 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071141619 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074894419 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076417115 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070164426 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077530267 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076603747 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086559414 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071846883 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070230532 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068573239 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075568769 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077399774 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075591454 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079038994 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076927105 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070234676 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072482357 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072207611 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071445486 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076683118 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068249935 seconds)
  done (took 7.092648505 seconds)
done (took 28.132331027 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.532332475 seconds)
  done (took 2.044476826 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613085817 seconds)
  done (took 2.152968986 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.695038266 seconds)
  done (took 8.231026092 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.404560821 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.496067274 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719881274 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131523607 seconds)
  done (took 3.32729704 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.695882938 seconds)
  done (took 2.237007009 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216729937 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201427939 seconds)
  done (took 1.963907315 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377036148 seconds)
  done (took 1.908445446 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.135018633 seconds)
  done (took 2.664738639 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260843407 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174760323 seconds)
  done (took 1.979868627 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.481287649 seconds)
  done (took 2.02366032 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.897195953 seconds)
  done (took 6.439669713 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217897188 seconds)
  done (took 1.801462809 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24226343 seconds)
  done (took 1.783791015 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.708050499 seconds)
  done (took 3.247079909 seconds)
done (took 43.342872399 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080881822 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080433757 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080661084 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078485113 seconds)
  done (took 1.846045734 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07788864 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071953391 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075693652 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073297542 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076862669 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071963151 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073845802 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07629 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07179357 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072508389 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072068466 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071844117 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07396955 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073556436 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070833899 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074404343 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075107453 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071868398 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074734026 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07188736 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070156732 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07472634 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074456392 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070605923 seconds)
  done (took 3.30589402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077979678 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072400273 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073829539 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071249985 seconds)
  done (took 1.847138571 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079087884 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094293464 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089038725 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077483251 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091134135 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085955922 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067952751 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068605151 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070056441 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07745124 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067126124 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095819445 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087574387 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076624406 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079332708 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064734434 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067606563 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086813604 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07733772 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077953562 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06915363 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076975886 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067282007 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088865044 seconds)
  done (took 3.430450088 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0793907 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104038114 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077645771 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08869326 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090548319 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064552983 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073978435 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090458334 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125758948 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064065783 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070360126 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064717332 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072382986 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064229786 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075762896 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.106195091 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109977743 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068074525 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095939918 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064799851 seconds)
  done (took 3.208985178 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072502168 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069124356 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06436159 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068114462 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075902751 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071835682 seconds)
  done (took 1.984997628 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068783666 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067310799 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066318104 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067275109 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071094765 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066205921 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065121741 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066245463 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066300497 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066100316 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065525087 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064794297 seconds)
  done (took 2.359236307 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.200361966 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068421993 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0681847 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065315134 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069404566 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065502398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079634395 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066949338 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090379863 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065321455 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06582393 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067366217 seconds)
  done (took 2.536641764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208298762 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075663206 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239006023 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139183444 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110788066 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114897757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103681052 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112908495 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142921612 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101142189 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168007503 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167601976 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10684651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136367484 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088350036 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099922995 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154702431 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162905669 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104799663 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166402746 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145683279 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124980633 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14731258 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106203711 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105261675 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121627148 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070361908 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078781125 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169642284 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132422658 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144258899 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110173841 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092653959 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17654131 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172431527 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141766918 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136239913 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083637118 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10429562 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134159267 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200282022 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087837282 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161199043 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107352649 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218718609 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133992144 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120877911 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120094071 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106217589 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088994833 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145506233 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185337408 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137764565 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087519602 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114521666 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11470769 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115728878 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103503573 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1824554 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163588579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128053938 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071255051 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099508893 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154445676 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133851724 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109026383 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12665103 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09350289 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135395321 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15563259 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120758816 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145224415 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130297335 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088314842 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119516281 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139790312 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127489617 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160842484 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12346537 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071866808 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124191488 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101562397 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079909608 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.14401454 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073963073 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176023338 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098135793 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107698018 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113728519 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108244869 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107984932 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160034659 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144921874 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102026924 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06458892 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247188781 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.121924226 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147773598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088299748 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10920218 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117818878 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076893774 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138675361 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074318014 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124591576 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077272749 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128487548 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130525105 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076506715 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123407556 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103871538 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100066223 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133393196 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160164858 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087986327 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081372809 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171943805 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122875814 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104267085 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144281574 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157380878 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.101297426 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102299581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150743901 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179772279 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088609047 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163214206 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106910335 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082988281 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087126314 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123555778 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111218409 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122674597 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080995764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118412973 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168629428 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073972309 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095039095 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133421688 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078165234 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079944238 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105341849 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104833669 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094555028 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099683777 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.1023546 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136737456 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12238631 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104324918 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122961458 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097111731 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316497011 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088132562 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101507651 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104364625 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069166484 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137420092 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15852879 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079456637 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164521749 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12371985 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10631867 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120643578 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082989892 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140107072 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078959863 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070065189 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144237383 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111420442 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110730825 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152302502 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10519322 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126481263 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119428702 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13504684 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132526243 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130654241 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105116841 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087592178 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111485727 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126266657 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072823211 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090519959 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079822008 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104195326 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09602052 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082267464 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141852698 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123441754 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10044243 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111259551 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095861052 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147508748 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075402004 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127391233 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118598686 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095299584 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152899922 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15274655 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130853509 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097657922 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136622307 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069861339 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072708323 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088188428 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121760144 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081695371 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082249973 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26092736 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148368694 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130311635 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139222985 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113118924 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120050201 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156058409 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069446186 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116933095 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14785025 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121626274 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104240715 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090480141 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098246442 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143561583 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108505242 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183022845 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117276998 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124589709 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153395636 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100791447 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078787264 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102617669 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136763896 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104744724 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144280295 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099563047 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088268398 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10977445 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073419925 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09883391 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126663553 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119602081 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134867002 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115146208 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131947754 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076834819 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116653673 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120498848 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122706424 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063117038 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120112924 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161765478 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093644259 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117316748 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152526427 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078025404 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.125454744 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174399659 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143773425 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083743871 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254563358 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118806934 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128973226 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121471012 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140722271 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108344355 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138234317 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109976033 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086657541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087528551 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098284539 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104483271 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.094199103 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108550633 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114568923 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095233952 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131905545 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104159839 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110086225 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1194703 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098504933 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090394078 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097551167 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178510426 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119449852 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17171887 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099084298 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145194336 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163985469 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074406118 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07900183 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078035429 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140021193 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0838991 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130428871 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098323583 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106272827 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124012723 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143023141 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095174465 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067701739 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108263966 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133800106 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112592141 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097831347 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103854581 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164235555 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100834854 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078664134 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113450139 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105304475 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101813397 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171284206 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060770192 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097254672 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075152047 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079786986 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126502623 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296463847 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080304673 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103198348 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119737615 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112267891 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128219673 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101606781 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099908002 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116453924 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150403037 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127846229 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089951772 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111918986 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129844812 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156742117 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105278753 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095847963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174124517 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154196303 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160548826 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08826916 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114076876 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113995063 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108118871 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137765167 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082701987 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163416049 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081172167 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136011577 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103675963 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089083225 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129691193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.100054008 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087815451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147886587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117512896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08234448 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077047322 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117787324 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120250729 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105930534 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074599325 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13889532 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073093974 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132318047 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159765615 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080033497 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106633488 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095696434 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078226495 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106060117 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101568165 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086636469 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.2379021 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177721373 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087693024 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151601507 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133595699 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113277867 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137758412 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103656527 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640925287 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07805947 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155115672 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116373288 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174117033 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100207726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118604262 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109564635 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123979266 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144590165 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104297742 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180762066 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131842098 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11577131 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079239864 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101987176 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10462307 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088716095 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107195045 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113825588 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116120291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093330072 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115609573 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124663321 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081444484 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098468938 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157118173 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116314199 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143621736 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140155325 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08484328 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118141846 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13756815 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079776125 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121481473 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15209983 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105456042 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098072921 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080004019 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10049157 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158111638 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072420149 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159065813 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264328405 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109547118 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114413697 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112821931 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131246084 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108338997 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121783206 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093049405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110379458 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113274509 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081600271 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077046095 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104190594 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11235761 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098150789 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099096344 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098310765 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15243974 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071789153 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098416736 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103954346 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144967881 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174099727 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088623267 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081925931 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119812978 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112834691 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113709222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120693481 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078747128 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081321846 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081106234 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077227835 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108296025 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112436448 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104679515 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110239494 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163010395 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082436585 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.232053868 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094919017 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104573267 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068893133 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077776125 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095792607 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098320259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107481632 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100791571 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159466972 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094687666 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089493435 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092202737 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07316668 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082655436 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128640332 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109133336 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117995749 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098004175 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06113822 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107158022 seconds)
  done (took 58.732565257 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110359735 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081955166 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095859638 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144616583 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123537929 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201866508 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.152736584 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188441349 seconds)
  done (took 2.774339587 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06937814 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095743588 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102748921 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082249479 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066912944 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068645849 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231468577 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080514965 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065765774 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089007029 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078829177 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067723977 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.425128022 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065394606 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067196015 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061698983 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066570372 seconds)
  done (took 3.436150454 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.385479347 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611121957 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.379795173 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071973643 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.46956893 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088846381 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.150773402 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.126432393 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072679857 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536144984 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701517205 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123298635 seconds)
  done (took 18.378248306 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076471689 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068826902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083475306 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081885316 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072166377 seconds)
  done (took 2.040199196 seconds)
done (took 107.448584095 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08244104 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.382420855 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052507428 seconds)
  done (took 2.122022281 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.085611224 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085099019 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084367593 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083464482 seconds)
  done (took 2.003505357 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.075196184 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075265157 seconds)
  done (took 1.808032542 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232707738 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.167498896 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08679709 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084563652 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078604934 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079068085 seconds)
  done (took 1.904705506 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073840446 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074901376 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072995765 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076090185 seconds)
  done (took 1.955149185 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077902165 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051981814 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054461397 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056896823 seconds)
  done (took 1.898061103 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087985468 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078588144 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078616441 seconds)
  done (took 1.904789704 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104523944 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085840379 seconds)
  done (took 1.847825888 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083318824 seconds)
  done (took 1.74784857 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099845933 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103503497 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131510033 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111720543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139510981 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109409782 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084949598 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085566913 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07592314 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086357307 seconds)
  done (took 2.690929889 seconds)
done (took 22.098059744 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079996228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.462724662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360537325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090069029 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668267203 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356241488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.986305203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092321055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11438443 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066979593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083948766 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64851282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.97884193 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.418763248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964828371 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323384047 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.661004156 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067529723 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067108607 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067507547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971389711 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067125755 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066948963 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067605739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656741514 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371666027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067468363 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323405258 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0670668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068827078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354355469 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067094684 seconds)
  done (took 16.355385007 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072479288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119775334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073144209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083767103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070323796 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069000274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071053569 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068431014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121320155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067765424 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084682653 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067291756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071112625 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068334317 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086844723 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06740302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.085286272 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067648571 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06714669 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067925317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085986337 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067624704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067328778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067624841 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067527311 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079918243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06733164 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066895683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067481717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069149365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07019101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068397496 seconds)
  done (took 4.070639023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119841658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126508771 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073268693 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104172529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113419118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06996218 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146755988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093414695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128374476 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067340156 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084066285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067546072 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101340782 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06889947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087571374 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068400352 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068244668 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068230595 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067613413 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067789113 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0868929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06769069 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067756325 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068507682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067569825 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081398478 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068189932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068418837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067870849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069374003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071024497 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068069298 seconds)
  done (took 4.323606321 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072886324 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074774679 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082486148 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083870097 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068887666 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071518037 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072966587 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06904623 seconds)
  done (took 2.276301687 seconds)
done (took 28.685827632 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080159347 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069468846 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072958717 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082305997 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072692114 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078207269 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066666963 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074599416 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071568123 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072313284 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074171902 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066427153 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070696855 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06647406 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073754329 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067084551 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078461433 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071162408 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078195737 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078659479 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069962123 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073329353 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075080812 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078356448 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078571097 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078497505 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077689227 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072446438 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06895058 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070654078 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076556355 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084336156 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067823307 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078211608 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067476365 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067284359 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071328346 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066770664 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078620464 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076560097 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069041074 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076163201 seconds)
  done (took 4.737914213 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090106653 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092318825 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08458836 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061537934 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066707874 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066073233 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088340434 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0591062 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059055275 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087047763 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.054807982 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058718261 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062970735 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052462105 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062367202 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055812467 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061454786 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.054847316 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059505946 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059131817 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08832719 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053169767 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076928053 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06242665 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055200935 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060887291 seconds)
  done (took 3.419657244 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075349296 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08706266 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089441963 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129340938 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104050633 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07855956 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080130642 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095660584 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088088159 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066472638 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070799658 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092436461 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090985444 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073480135 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06764315 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08637294 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083215129 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06876321 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073116407 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096036533 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087215769 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085943406 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098464863 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083268187 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066993099 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069710755 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071078226 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08145487 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071882311 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076780703 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071009014 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070723504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06886456 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078504041 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070652984 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069268173 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091951737 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077164041 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078365305 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067759126 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070459319 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067837967 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09222027 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132389175 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066864634 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074279286 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075091946 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077057765 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067058127 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087019624 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078797784 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066630932 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070981982 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066284716 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067044027 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079695916 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069075228 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069102108 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075957698 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070366264 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.091989164 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071716414 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082814976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066787796 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074508556 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066059513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068050624 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065678044 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094616148 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068399804 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110911991 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067702936 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068068459 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075612469 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074416315 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072657469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067500953 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082145068 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087970625 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070185097 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075854481 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069689109 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069510501 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090084009 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06906831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06789476 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067163759 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072807035 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069147503 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067948131 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079461651 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066806873 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069372737 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083406349 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066126154 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067736691 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072611938 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072764054 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066262186 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077624466 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070995216 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067154212 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076085481 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066738374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069656117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079201711 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072962263 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065390599 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071044443 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072752125 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067359678 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068163674 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069525843 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068553954 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075148966 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07346472 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071360808 seconds)
  done (took 10.622528834 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165004684 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158065057 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070291485 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147440124 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076559918 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078397694 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14995032 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094481018 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067319351 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068236604 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068113443 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109795027 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106114999 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116139978 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07845868 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067109598 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083967596 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113746866 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151811615 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.145802644 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084232772 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076101494 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069238743 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068650263 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070137327 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077781982 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084486219 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076199725 seconds)
  done (took 4.4422456 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082146124 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100530707 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07403048 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090673486 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089942057 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067077827 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069309277 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069064951 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080106496 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077945713 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066963227 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072759593 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073951352 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070311029 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067863874 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074254935 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07421144 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068627115 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071169423 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072880363 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077570404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091448971 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071391873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066540482 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071706483 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066269174 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06293777 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083864769 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06776858 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094441339 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065094796 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075317591 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081472103 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068145868 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067277761 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067150672 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067208458 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066690826 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068490438 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065348718 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065400161 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056332017 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066215365 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078649849 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073653791 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055695752 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071534571 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072700934 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072043088 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06450343 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070015742 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069215414 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070228775 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07438611 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072123506 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072063244 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067739768 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073528379 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07546162 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066632614 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063842971 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064989651 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071153761 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065188469 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075163859 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071512189 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065228693 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066622393 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06840841 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073081478 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066289474 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069952897 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064172051 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069114495 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071258016 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068285478 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067826601 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06549429 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066554487 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067069919 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054413021 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066584455 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052533799 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069982026 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06492714 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065050527 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066846721 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071473632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078777232 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068282395 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072121989 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067583065 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0659694 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06993272 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059871495 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069808495 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08268382 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081877072 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06657647 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064916859 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081432458 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071163782 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066346045 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055278827 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074651169 seconds)
  done (took 9.127127431 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09165546 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06982312 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085375737 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093169274 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086795831 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074785168 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.0771361 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069322991 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082635274 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073478777 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.07638664 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067818158 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077850977 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.0766015 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06921599 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076664965 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071963958 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084479184 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082223831 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0684561 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076038556 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079636548 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089928591 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.081526897 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080413269 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081657827 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089572797 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071831629 seconds)
  done (took 3.926815632 seconds)
done (took 37.937130737 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.756893312 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.918681049 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.745422188 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.11403623 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.933667072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.857020785 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.824223003 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.744747119 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.916711203 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.778631853 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.964006703 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.851568421 seconds)
done (took 65.082193422 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.787690558 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.885071944 seconds)
    (2/2) benchmarking "String"...
    done (took 2.013586143 seconds)
  done (took 5.584860577 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.011296817 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.323241242 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.003247678 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751442617 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.755313123 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.094513384 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.57179617 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.279120761 seconds)
  done (took 30.465536896 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.857263457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.982240982 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.419054616 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.451712418 seconds)
  done (took 15.442195186 seconds)
done (took 63.05768094 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.758916278 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.781732961 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.763036627 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.731659743 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.810221486 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.75751591 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.21047481 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.785536979 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.749882371 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.739252678 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.752094507 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.195715208 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.753799399 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.208850873 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.744618136 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.753287095 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.833586651 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.252676489 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.905367043 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.764067939 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.746055266 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.752628078 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.748214687 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.75533341 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.775778984 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.744639801 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.1919212 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.759027174 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.559527779 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.747383499 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.805796389 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.289931354 seconds)
  done (took 203.813209168 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.748224096 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.846584204 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.921836077 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.789273929 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.244812736 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.93167626 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.867763216 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.274430084 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.751753709 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.756313926 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.863984823 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.746632464 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.880955893 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.687472543 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.77312465 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.757843274 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.999676537 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.890796698 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.777542001 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.921872229 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.771919154 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.693268029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.66728756 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.846688491 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.761971829 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.85468973 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.773507723 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.763309691 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.93767928 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.964532357 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.77212454 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.759443028 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955765141 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.61754874 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.760148429 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.772763942 seconds)
  done (took 168.790270801 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.125848198 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.749510221 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.749861282 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.748560563 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.750560234 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.755471275 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.749569329 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.872885914 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874892379 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.354092913 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.136937954 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802807157 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.600503666 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.749949374 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820328612 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.764089152 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.752058672 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.766945846 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.779631454 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.750478556 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752517181 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878793099 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.762705299 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.084010992 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756142518 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.752923941 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759686299 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.116831817 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.750849173 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756594466 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.399747213 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.002424428 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751045289 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75353507 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.649905103 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.8382868 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752673547 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757678278 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.753312864 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.974903602 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.752092873 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752878449 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.753586405 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.755412057 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.929303304 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.753040078 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.879852213 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.749202219 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.266726755 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.750629447 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753346801 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.452502125 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.447471161 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.754720953 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751906069 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.756911401 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.754509134 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754639345 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.759765762 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.380353936 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.828744028 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.751651724 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.759491179 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758933888 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.754884581 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.839395824 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755038704 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.753695909 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.810922091 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.876947689 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.750286469 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.875877678 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.755679283 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823879109 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848073895 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.752889996 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755554737 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.755830504 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754179281 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.837128602 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.754751426 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.873333214 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751807497 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.762400509 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.755930598 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804151073 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.826077053 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.752961735 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65001152 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.75545372 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.756054646 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.091907294 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822616487 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.754204153 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754846612 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753589709 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.875826332 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875754974 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.534424892 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.75631627 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.439289805 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.752338595 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893428 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.753243665 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948124213 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.757895146 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.839742765 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.758404071 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.75769819 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.754874239 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.787836045 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.754742948 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.815326025 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.755894941 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.12868133 seconds)
  done (took 399.500804872 seconds)
done (took 775.971741377 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423616402 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.380920318 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.489048526 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.400965671 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.372929553 seconds)
  done (took 13.754562014 seconds)
done (took 15.443667352 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.845720555 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.850666533 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.780735224 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.84615869 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77713772 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.845179764 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830099221 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.781601373 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812075163 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.780533285 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.817984633 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780561129 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770671721 seconds)
  done (took 25.205825043 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.996011769 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990141772 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.822727488 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.997336144 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.79650597 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.995717304 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.921486589 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.906685485 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.920697712 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.769334443 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767276208 seconds)
  done (took 22.576551068 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998718927 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996800836 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830412213 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.995208176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.801092771 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.992972508 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91692 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.906353504 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.909523171 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768521086 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.768479727 seconds)
  done (took 22.57575073 seconds)
done (took 72.048881156 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.764803339 seconds)
  done (took 3.455594872 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.790405316 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946178065 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.76802836 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.765023203 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.762096383 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.764042987 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.764291255 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.76497683 seconds)
  done (took 16.017324915 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763867631 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.762121033 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.759382764 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.760045563 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.765528486 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.763512045 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.762941087 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.765068622 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.760600033 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.761877371 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.759919973 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.762322148 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763520692 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.762954354 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.762459209 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761683399 seconds)
  done (took 29.892121616 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.763939769 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.760397044 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.759209477 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.760753385 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.758889972 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.760188841 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.761643307 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.760757145 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.758761413 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.759797253 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.761149175 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.760292039 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.75994074 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.759249898 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.761001858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.760510426 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.760162228 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.760636266 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.766233454 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.759919637 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.761239049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.759507973 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.761284976 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.761163305 seconds)
  done (took 43.950268547 seconds)
done (took 95.006298193 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.615968555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.324177887 seconds)
  done (took 8.632180944 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.766455105 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.764363013 seconds)
  done (took 5.266354841 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.764919844 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.764596115 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.763795935 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.770111217 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.76601992 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.767505819 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.76515528 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.766784095 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.768663188 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.768985123 seconds)
  done (took 19.360212058 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768180843 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.767184039 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.765742049 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768181056 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.769507434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.765584064 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.766942725 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.770283775 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769255023 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764106229 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.770167691 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767477215 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.769802027 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.766239324 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.768536805 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.767091843 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767475381 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.767533541 seconds)
  done (took 33.520214824 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.771837016 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.77082433 seconds)
  done (took 5.240774139 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.767384453 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766183279 seconds)
    (3/7) benchmarking "month"...
    done (took 1.76833371 seconds)
    (4/7) benchmarking "year"...
    done (took 1.767034781 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.766302586 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.766911596 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767824809 seconds)
  done (took 14.068566155 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771309479 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927180456 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.000668004 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.416883934 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.768542334 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.774408638 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.727906804 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.770014528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774232698 seconds)
  done (took 19.6315405 seconds)
done (took 107.413843077 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.629787352 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.764610407 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.144574193 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.820499529 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.807056488 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.10940018 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.795290179 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.070206451 seconds)
done (took 42.841774803 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.808439116 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.344985561 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.373090509 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.415587568 seconds)
  done (took 12.83438638 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.749434172 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.289583171 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799611218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.34912959 seconds)
  done (took 19.908629848 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.139889374 seconds)
    (2/2) benchmarking "read"...
    done (took 2.111606463 seconds)
  done (took 5.95845674 seconds)
done (took 47.212375734 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771669844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.773882516 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.768058946 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772241133 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773046013 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.771576687 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.767416743 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.771030011 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.771438483 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.77105605 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.77032982 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.772086165 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.770662538 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771300669 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767985424 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770676624 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772110543 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.771252926 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.770660299 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76804993 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.76885576 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77074946 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769716196 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.772075266 seconds)
  done (took 44.198007188 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774348929 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.770125731 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.77422984 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773356016 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.770307184 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.771019535 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.773426684 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.770336497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772507243 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.772930865 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766542815 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.773222752 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.76971773 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.769460451 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772198039 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771812202 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.774290487 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770284694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.775057874 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.771115835 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.773496773 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771292053 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.769891919 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773745228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773418027 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773952294 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776018046 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772636778 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775080376 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.770843119 seconds)
  done (took 54.870173254 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.780715362 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782426144 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775499612 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.776044675 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.775834218 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.7747307 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.773341865 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.775695449 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.774917821 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.773209701 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.776538232 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.774784165 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.775147067 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.77371932 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.774471594 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776660853 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.776829613 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.774441818 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.774775276 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.776036092 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.774471828 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.778432222 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.774589257 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.772771019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.77582132 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.773354666 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.772616383 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.776826932 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.777108261 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.775390188 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.777724748 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.77701144 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.775011687 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.776404788 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.773510927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775210837 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781067811 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.7810515 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.775872627 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776825209 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.777171019 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.776647505 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.777708355 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.775417716 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.775698421 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.775359904 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.77415874 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.776647115 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.776052314 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.775941617 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.777943208 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777505855 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.778836736 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.776489156 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.779233651 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.780015201 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.778082941 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.778919075 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.778666304 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.776736181 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.775023177 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.777778495 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.778947373 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777577836 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777788115 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.777385453 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781198347 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.776745095 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777798957 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.776741015 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.778134921 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.777002587 seconds)
  done (took 129.618625364 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.78031344 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774427491 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.776387695 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77617175 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773321256 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.774875274 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.776006488 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77667049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777604161 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.776274335 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777757907 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.778726082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77390073 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.775869583 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.777013838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.774763924 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.777776415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775862252 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.777889999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.778067663 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777754653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775758213 seconds)
  done (took 40.791736769 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778766399 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.776089495 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.777643336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.778120736 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777204392 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.776297882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779224675 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.776603545 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778853343 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774409589 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774587313 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780566415 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777011914 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776426702 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.777130401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.777430137 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.779342992 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.772419269 seconds)
  done (took 33.696313396 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.779260956 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.77357673 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.778727586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.773131828 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.774552344 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779846572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77579761 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780412814 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780079561 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.775162076 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.779498331 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777340365 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.781715952 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776453659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.781782485 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.77753108 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.781490896 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778067302 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7814497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778780333 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.776186057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780215261 seconds)
  done (took 40.832380593 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776945632 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781071584 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.774963437 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778020061 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.777088985 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.779877986 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.77783008 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.774620157 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.780531198 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.782180763 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.778966493 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.781449727 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.780327763 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777764003 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.780402401 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.781492864 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.782209859 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.781701524 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782176485 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778583947 seconds)
  done (took 37.293537072 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781574239 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781642228 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785179568 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.785584375 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781575838 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.782728263 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78334117 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.783748228 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782432286 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.783289003 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782471863 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784596089 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.783816288 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.784154047 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784321864 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.785336552 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784171036 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784955728 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.783738133 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78528449 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781045599 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783885843 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784091502 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782850366 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.786188154 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.784688977 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782297753 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783263967 seconds)
  done (took 51.655634343 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784372038 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783761763 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.78115025 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.779826033 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.782177677 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.780731816 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.781167947 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783125162 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783521213 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.779431472 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.783988126 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.784998711 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784147637 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.784573433 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.784553695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.785280462 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785157375 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.780661711 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781868952 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780169826 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.782402827 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782603813 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.784105853 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781596644 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781121687 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786402444 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782252368 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781077765 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786096695 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.781433839 seconds)
  done (took 55.197163711 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.8026551 seconds)
    (2/2) benchmarking "in"...
    done (took 1.802281109 seconds)
  done (took 5.318506506 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.781758317 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784522723 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.784618077 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.784059857 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.783815177 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783662121 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.784117074 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.780368183 seconds)
  done (took 15.979318777 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.788922559 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.786640367 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.784587703 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.783777701 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787489238 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.788530658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795405282 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.78563995 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.791338091 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.789442831 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.796543862 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.800648839 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.792506801 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790071766 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78914095 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791468909 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.785487836 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.783657881 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785061778 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.785381528 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787669336 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791534683 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791757589 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.781826548 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.791169189 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799194827 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.792382152 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.783921123 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.789739357 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.79464675 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.792945248 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.781074049 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.785814004 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.787382957 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787032954 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786988494 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799538664 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792402827 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.79675954 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787994928 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788418229 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.784091422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789647332 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.790882472 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79168707 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.787679501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.787754032 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.781831066 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.789621844 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.794469304 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.792312758 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.790014426 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.78427907 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794602484 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.793400745 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796400264 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788870213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.79556121 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.799965228 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.803546133 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.806421292 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.800967139 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.794350749 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.791098776 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.80353586 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.821580672 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800174749 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.783873646 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.785152801 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.78579817 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.79969872 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805714579 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.804344174 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.788392422 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788509581 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.789196195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.792138765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787510245 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799787191 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.794332409 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.790954449 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789766104 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803045557 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.819232391 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.793719834 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.789401976 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.790458713 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.791197057 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.794972657 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805207583 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.788618493 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788693338 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.792300067 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.795336556 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.795276949 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.789232805 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.79238987 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796029721 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.787997281 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.790125616 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790254933 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797949142 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.805098919 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788995732 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79040687 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.800833805 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.788293387 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792161089 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.799811084 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.788619651 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787882027 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.794525196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.799910945 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.785919909 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796980356 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.804650513 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.792398304 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.796541912 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.790533271 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792421877 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.804034909 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.824861539 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.791435606 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.789191287 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.799283221 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.804795599 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.790631446 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.797020549 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791547397 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.787283391 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.786496943 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.79549161 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.791379237 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795435679 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790213111 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.79749786 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.786163609 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.79172987 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.792066052 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.797946187 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.796794711 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.796077132 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.797545646 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.797226999 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792387217 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.796726862 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.801343259 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793674422 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797981697 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796635786 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.789240765 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.790221314 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.796557999 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.789638944 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.797434449 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792034302 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.795930383 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.790237117 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.791988731 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.792422222 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.793583938 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795920702 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800736866 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.793058971 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.799513353 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.79676768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.788912351 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.791575024 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.792959427 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797486008 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79468517 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.797661941 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.800056986 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.80402958 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.795363076 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.795276678 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.801051456 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795737676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.796255836 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793116828 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802486167 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.806635432 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.793824845 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.804189631 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.794254083 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.793369438 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.793207227 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.799493825 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.797174707 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794466504 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.803314284 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.804354736 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812129806 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810173578 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.800466575 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.800263514 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.798338672 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.79926085 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.804050521 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.79292257 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.795116694 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.792957274 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800105599 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794621618 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.801847635 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.797075923 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.79653484 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.795509575 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796246393 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.79678433 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795927521 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.801379286 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.80163695 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.792499116 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794082401 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796711531 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.801230449 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.794015461 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79825908 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.799681909 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.796726267 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.797446841 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.808745676 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.791300515 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800936694 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801117189 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.801882974 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.799076659 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.797578495 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803717144 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.801324039 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806774801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.801385854 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.801741106 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804941017 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.801404217 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.800510963 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.80410214 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.797557776 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.793680307 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.804603717 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.804188145 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.795531636 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.794970214 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.798865527 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.802559316 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795754327 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.805324125 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.796363558 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.801632931 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.797937875 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.802644399 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.793438931 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.803550751 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.803582887 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.800229482 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.804235698 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.798224248 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.798513724 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80467978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.79825954 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.797792547 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.800545976 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805474585 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.806468974 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.809423461 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.803416391 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.802541849 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.803116702 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.804520348 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.802568915 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799772197 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.802406671 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815948168 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.809085574 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808464885 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.803280928 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.796724422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807057375 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.802502846 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.808030182 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802026764 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.802603862 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.804003231 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.801387392 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.794914715 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80293154 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799806116 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804623583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806360081 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.802178073 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798784065 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.802680915 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.797484741 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.798048968 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.801352662 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802051113 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.800121342 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.806803051 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807285661 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.804471057 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.804222359 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811103578 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804479087 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.805196592 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.805225007 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.804078609 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.802438793 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.805138678 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.799539829 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.807270982 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.809941337 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.807480273 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.817420082 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.804400307 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815778288 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.799977036 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.808936412 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81152932 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.798737089 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.803382366 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.806323479 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.800646658 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812969287 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.802400968 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.804993259 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.804972064 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802526002 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802443985 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.802277354 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.802028662 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802241348 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.800699142 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814429029 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.808120577 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.811388112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.80605857 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.797453822 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.800734968 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.80136519 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804767125 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.810183443 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.802997198 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.807824862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.806547562 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.806732897 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.802770291 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.803339823 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.803305133 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799172967 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.802334417 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81270778 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.808059329 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805431515 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803535453 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.813307215 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804397149 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813392504 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.802032162 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808753865 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.80296619 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.804035741 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809089568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80630787 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.810165999 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.804181345 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.808262819 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.808229816 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.803779959 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.811070495 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.808038323 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803079122 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.807240763 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819449082 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.830378739 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.809492067 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.806268683 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800246316 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.807108964 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.807724088 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804030551 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.808854358 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.811570689 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821270976 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814765221 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.808202931 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.804257657 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.81056821 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805959935 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.804320727 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.804103798 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.804024263 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.805305114 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.809991333 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.806250729 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.811238851 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.806006088 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.810253556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.809941697 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808660795 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.818483217 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.807047032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810996056 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804103161 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.803961447 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.809385736 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.808774318 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.803898511 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808416024 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803680879 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.812881301 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.819085001 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.818755288 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.812774943 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.809673888 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.804582648 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.812054474 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.81055424 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805331821 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.806265383 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806593936 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.81281809 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.806591596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.809380956 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808864253 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.804605654 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.811653059 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803563533 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814151163 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.819408065 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811548641 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.801873643 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.804654138 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.805187767 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.810321743 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812393714 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.818230858 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813628155 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.824141749 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.822075223 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813637419 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.813249846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.814887859 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.823435765 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.810740683 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.814832771 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.805804874 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.811862747 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.813625233 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.81512098 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808480391 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817664017 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.812820214 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.811955088 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818401396 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.814264163 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807853855 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.815032932 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816129646 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815221713 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.806871748 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.808816876 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.811560169 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818659419 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81478712 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809482338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814579051 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.812515737 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.815316092 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.815413156 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809549126 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81591694 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.80616017 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.814681265 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809493981 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.810480494 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.808135247 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.813811972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.814759983 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820435976 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.82296992 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.805188446 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817631043 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813189803 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.81191923 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809874517 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811485139 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.806660481 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.80524346 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.811810333 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810501239 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.814018114 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.817182373 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.8159788 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.815954985 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.812290811 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808030183 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.819052211 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.826407206 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.820500262 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.805999203 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.814538283 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.813922494 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.81763099 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.810176557 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.812386338 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816455246 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.813978957 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.80792822 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.809731293 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.81274235 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.81563213 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832460337 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.812670112 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814200255 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815520247 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.818721674 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.80874064 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.807535121 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.81067364 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.817470508 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.819524863 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.818749862 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.811133385 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821235971 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818712339 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.818447648 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.816903854 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.819088279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.826754174 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.823908962 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81378429 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.814272528 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822735702 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.835367416 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812540908 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827444617 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.852373319 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.819008585 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.818752117 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813860858 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815687667 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.810304414 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.817223717 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.810896118 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.811744437 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811656584 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.812594525 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.819771312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.823537219 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.818949582 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.81238991 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812761213 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.817552306 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.818254607 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.809684075 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.813042672 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.812341977 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.81331158 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814059075 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.81460771 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.817445159 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.83265803 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.829212889 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.812375145 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.813360535 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811764207 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.821527469 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.821326017 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831549883 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.822269777 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.813563547 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.815014427 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.820202039 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814779914 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.814740587 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.818988365 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.817292867 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819663164 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813666927 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.833249753 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823020264 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.823415239 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.817014024 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813737183 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.814689562 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82325294 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815042588 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815908476 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.822216078 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.822166074 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820151501 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816137236 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.816235434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.822174019 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.826540263 seconds)
  done (took 1077.023021961 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81353394 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812326549 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81372671 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.81182255 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.811551951 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813078755 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812032031 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.81235913 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.812156025 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.811017453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.811302517 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814124513 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813326527 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813745573 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813827078 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.812427474 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.81391702 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.810958721 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.811974924 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811558037 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.811281158 seconds)
  done (took 39.80901729 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.818404729 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.812953006 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813290168 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816521421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.812435428 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81525897 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.813798699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815858453 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816829019 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814810422 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.815719887 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816894054 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.814414268 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814212276 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813351328 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817014819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816846406 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814145058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.815460762 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.813626354 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816333587 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.814058175 seconds)
  done (took 41.678527888 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.819433389 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.818865607 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.821746829 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.814681264 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.81764156 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.813314124 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.817676901 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.818722144 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.818392921 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.822323287 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.822557353 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.824467355 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.829641862 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.825926223 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.822924634 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.817748308 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.961452053 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.817918027 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.819123623 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.82066898 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.814674209 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.828398009 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.816658667 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.813944831 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.822258789 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.81836839 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818445974 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819316301 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.818461712 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.825081282 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.826212705 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.819386639 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.823758683 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.826391257 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.823034672 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.825644702 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.824246737 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.819662425 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.819019702 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.819439925 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.834907262 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.845510626 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820694931 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.830842586 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819143329 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.819434791 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.828422171 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.829024996 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.81855463 seconds)
  done (took 91.16034963 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.818575273 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819368515 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.816920122 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820536395 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.821203755 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.818617058 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819738749 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.818513621 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.816994461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.815313168 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.819506956 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.81383769 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.813319535 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.816564935 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.816721355 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814939448 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.814769819 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.814265943 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811911971 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.815458907 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.812716583 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.818705382 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.817109041 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.812148313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.818730489 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.812402762 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.814777927 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.817631869 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.814372664 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.813926647 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.818092019 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.817562397 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.818461316 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.81683182 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818702842 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.819420465 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.818799411 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.817412996 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.814217424 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.817330074 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820176072 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.819029751 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.817650668 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.818695384 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.814057525 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.815851125 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.814183051 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.818189553 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.816047349 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.817373248 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.82059496 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.820340043 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.821463688 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.816280031 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.819265159 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821846647 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.81707599 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.813378466 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.821051202 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.81693951 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.820881952 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.820008414 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.817377668 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.819083194 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.819351144 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.816488334 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.81615824 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81930601 seconds)
  done (took 125.325496038 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823477416 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.820126603 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820816335 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823007341 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.825112157 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.822031343 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822460534 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.821222961 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.820129186 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.821546888 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82030827 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.820683738 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.822342184 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82141414 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.817018151 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.821024484 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.823716966 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.820997316 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819703093 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820537602 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.82095388 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.820101423 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.819078193 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.819370803 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.822616938 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.81973948 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.82148255 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.821809436 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.822615189 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.818854776 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819067165 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.821092234 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.819765363 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.820196554 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.821850849 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.821030618 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.823149159 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818208922 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.818998031 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.819347242 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.821236589 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.821887999 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.821579592 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.82191771 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82426095 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.824581877 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.820324193 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.822628523 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82598364 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.824113841 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.821831624 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824250661 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822539918 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825407356 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.822457029 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.820367969 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.820857583 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.822722672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.823450507 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.822758999 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.821029642 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.824778872 seconds)
  done (took 114.689762588 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.823615116 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.820333208 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.816312014 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.818628945 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.823734874 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.818037805 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.818968648 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.820058356 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.822680186 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.821380761 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820272392 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.819635314 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821468337 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82358703 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.820863869 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820437233 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.819577338 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.821001277 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.822534742 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817295141 seconds)
  done (took 38.160906581 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.818663109 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820937646 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.815804371 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.82104175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.822876083 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.819706228 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.821042112 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821617255 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819377734 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.820540067 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.821029069 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.823399059 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817405796 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820958266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821436388 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821508497 seconds)
  done (took 30.877230775 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.823528757 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.824550169 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.822925117 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.823175966 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.821758939 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.818693105 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.824033116 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.822180147 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.820391682 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.831687652 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828132043 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828021099 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.828446667 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.826381977 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827325319 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.827830356 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.82252262 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.822924052 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828006191 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.826687433 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.824419702 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.825530514 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.826410707 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.827179902 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.824447397 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.82218959 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.823548097 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.825191576 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.824182244 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.828923292 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.824296255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.825154015 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.824701275 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.824292272 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.826886157 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.826362441 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829313485 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.829218282 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.828822836 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.828893224 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.82898795 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.825431987 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.828007265 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.829196017 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.825037097 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.826391917 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.825424214 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.825476296 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.824187557 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.826997024 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.829533706 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.828257148 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.828112219 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830502432 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.830275124 seconds)
  done (took 102.182717622 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83129051 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828187889 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.826019561 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.817291054 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818538117 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.81281607 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817305257 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.81348427 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817224404 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.815678008 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81510682 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.81630311 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818973619 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818070493 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804497394 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808871086 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.805205553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.806552029 seconds)
  done (took 34.449869033 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808857907 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806194134 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.80867619 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804459187 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.804339741 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.811837028 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.807642621 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.812295504 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811426562 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.807227955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809517743 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.814110475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815582798 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.811435614 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.808039428 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81031586 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.812584526 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811710587 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.811436276 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809394291 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.813286932 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.813648525 seconds)
  done (took 41.561775618 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.816922644 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.818676311 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.833105648 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842274369 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.840642076 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.855824599 seconds)
  done (took 12.748622391 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810297001 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814749146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810871597 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813642452 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814656337 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809173153 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810001966 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808458256 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81272636 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809967126 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810781007 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812438382 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811982488 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809092892 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811245427 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811398897 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810340549 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810970357 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810465622 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816974007 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812588195 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816214491 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811809295 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811574883 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810191611 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812765684 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815409067 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811977219 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811734085 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815149474 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815272594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812921895 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816450095 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812484404 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817062439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814824102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81155406 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813242177 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817022936 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812421177 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.816164327 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815916908 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818647012 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813739592 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81572973 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813887166 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813058141 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815412234 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813915227 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817427783 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815946949 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812699223 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815883157 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817164338 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814610786 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817883446 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815102925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814160678 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817862304 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814054831 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810991039 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816144856 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813165909 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815253951 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821885573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81578183 seconds)
  done (took 121.447535609 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812431142 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814222396 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81613628 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812964656 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812272398 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811943499 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81333445 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81459064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813272135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814598866 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81627875 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813326293 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813066922 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813443787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814770655 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812377394 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815546318 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81285603 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814757432 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816508335 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813709447 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812760231 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81360807 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813964775 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81506238 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815770112 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813212646 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813488814 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811284073 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812188491 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816810738 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812854135 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811067824 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.813147589 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811143507 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815109556 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812008862 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810480118 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809564361 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813147663 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809967653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814800456 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811695592 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810905674 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813543632 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812194003 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814762374 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812879165 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809292945 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812355685 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812941632 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811232758 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812073046 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811406006 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812010548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810426837 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810863821 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812924034 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809990761 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812941802 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811522825 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810683517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815016117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810129899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811118954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809833656 seconds)
  done (took 121.391963035 seconds)
done (took 2503.657196671 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.860763385 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.88543737 seconds)
  done (took 15.485967169 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.982983495 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.933044768 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.815339452 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.818457881 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.816838136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.836672149 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.830713154 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.816181064 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.816123616 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.816045848 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.815987639 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.001836897 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.810899997 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.814160523 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.816635947 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.911338535 seconds)
  done (took 51.398379119 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.819024141 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.822025534 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.833868798 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.824853126 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.818108425 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.831706479 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.854285261 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.82236711 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.855747448 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.834108919 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.889893232 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.82778596 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.819612209 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.870537153 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.829696161 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.832581123 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.910516317 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.894811901 seconds)
  done (took 34.930833248 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.897875523 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.822792352 seconds)
  done (took 10.469654927 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.840701176 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.816604183 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.842560122 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.830143364 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.839372101 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.820553106 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.84140408 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.844394748 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.8206712 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.830597226 seconds)
  done (took 70.070915707 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.806374028 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.800399938 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.801566874 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.800570531 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.795296711 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.796957056 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.798867539 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.795732752 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.488639783 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.833327257 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.80341564 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.804502824 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.798868389 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.801083163 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.791697417 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.820598841 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.911715554 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.790873013 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.790507253 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.80146812 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.797445133 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.856903762 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.811602833 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.794833658 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.828406157 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.490608191 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.805655222 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.804433729 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.909090476 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.792096207 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.796571452 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.79980553 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.797816242 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.190468619 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102725922 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.796477471 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.805044229 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.809344304 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.788027421 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.918382207 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.798590741 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.799755644 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.792663468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.095546138 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.894145036 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.844788366 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.218048786 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.801175864 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.800456538 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.830306465 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.797954636 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.800526358 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.811259245 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.314039888 seconds)
  done (took 128.863509407 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.796298503 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056397289 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952499454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.793696986 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081016783 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999926949 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.795354449 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.844264008 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.792976758 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.024945029 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.01506387 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.899851669 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789348036 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.788060173 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.788836577 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.788275888 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.95220677 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.864181846 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.792238686 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.789451439 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.824320574 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.040288035 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.922832058 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.792587907 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.809946563 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005967859 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.926662736 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.89729578 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.272405541 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.78802028 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857130658 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.790426551 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.791272023 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.786915336 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947298767 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.886353008 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879993718 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.79024345 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787893765 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.785695117 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.461425146 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.988509362 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.889768594 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.934392331 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.034630322 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.994197952 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.578405528 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.7852408 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.527340671 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.952172783 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021326926 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.021072917 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.913578372 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.790682117 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.301373378 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.787812408 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.788189943 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.021269314 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.016159442 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.889004174 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.788542343 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.788202041 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.787101408 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03584088 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.787835973 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.880205032 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.787002783 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.786296379 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882434868 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889244336 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.018792559 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001470948 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.820146174 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.123408354 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.263684974 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.037334229 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.856812678 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024004781 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.789141493 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.783910482 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.874228387 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.733895019 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.986524357 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.038843817 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.043918921 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826311922 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.507648154 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.78791755 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.017241617 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.013191508 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087522398 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.028844735 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.938784247 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.101658997 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.785993923 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.786824349 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.040640814 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926408032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.790498032 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.149112766 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.022644809 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.351742975 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.820154618 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135249158 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.920843988 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.790554904 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.432456364 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.785993201 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018056879 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.83086963 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.788386403 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.79023449 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.008172673 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.868216432 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789711359 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.427707939 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.854682426 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.789558134 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024581208 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.789935057 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057627088 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.787607211 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.02741502 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.173515321 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.830499715 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023506389 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.032310446 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.79162923 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040703762 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.038756845 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.908484129 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015718395 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.415668525 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.788619067 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.08190291 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.793814087 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.789042427 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.962478116 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.792434607 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.967610514 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.79192553 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126440154 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812677335 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.946518937 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.790741723 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.049756 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.826960607 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842195636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.792449215 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923816662 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.791574058 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.801305746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.94684058 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793278836 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.787362458 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.503334351 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.793882132 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948446892 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.025528032 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815744992 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864327617 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.458632751 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.79476141 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879066714 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818978357 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.137079328 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.793183129 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.008894255 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.791352908 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.331944573 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.790721022 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.034604218 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.975836764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.793884258 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.790710006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.703349578 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.790963573 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794093642 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.953655024 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.220961047 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.790547616 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99712443 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793931666 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.932593717 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.791529334 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.872362992 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.148384482 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.789809364 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.793679701 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.794364594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.794890102 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794129071 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060177608 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.823949006 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.318253081 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.93308767 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070416019 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.110924963 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047538384 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838659068 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.796960376 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042209425 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796269749 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.857062517 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.794286911 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819373931 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029807872 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.793210517 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.00478161 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0742253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.713019504 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.842673849 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.79600725 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.791194984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.668908315 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.953184904 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88525586 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.79403855 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796369367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.921236516 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926665495 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.011953053 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.796170454 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.125396766 seconds)
  done (took 887.140377957 seconds)
done (took 1200.098075625 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.798634599 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.794886923 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.773763244 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.799967322 seconds)
  done (took 28.892000236 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.802279759 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.806928297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.802561657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.802992811 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.800328405 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.80444141 seconds)
  done (took 12.546843195 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.813562238 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.799157444 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.798396308 seconds)
  done (took 21.138185439 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.871455772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213875565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.913718188 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.248147472 seconds)
  done (took 9.97555567 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.801444689 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.799088308 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.799889687 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.802135753 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804789829 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.80374928 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.800608135 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.801549831 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.803657266 seconds)
  done (took 17.947507278 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.234552576 seconds)
done (took 96.459691286 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.936857848 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.425690784 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.280511842 seconds)
    (4/309) benchmarking ("sort", Int8, false)...
    done (took 4.768610209 seconds)
    (5/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.803857648 seconds)
    (6/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.49706439 seconds)
    (7/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.786049403 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.163703181 seconds)
    (9/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.091644752 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.783547888 seconds)
    (11/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.905146851 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.800144028 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.925139319 seconds)
    (14/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.124227554 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.706131248 seconds)
    (16/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.808014084 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.890138346 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.82225605 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.985509926 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.80725027 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.182785803 seconds)
    (22/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.270045199 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.87132869 seconds)
    (24/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.782753652 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 4.09875291 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.789025997 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 3.823216919 seconds)
    (28/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.905625701 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.87750657 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.710986886 seconds)
    (31/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.831203913 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.830708159 seconds)
    (33/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.934693075 seconds)
    (34/309) benchmarking ("sort", BigInt, false)...
    done (took 6.802389942 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.825558491 seconds)
    (36/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.888872047 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.926590746 seconds)
    (38/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.340141177 seconds)
    (39/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.259143704 seconds)
    (40/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.010791365 seconds)
    (41/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.423705211 seconds)
    (42/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.796717536 seconds)
    (43/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.872764364 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.888422439 seconds)
    (45/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.39508727 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.898188595 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.802588551 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.787607293 seconds)
    (49/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.039590164 seconds)
    (50/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.994863216 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.888538876 seconds)
    (52/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.823709407 seconds)
    (53/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.908429592 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.783391756 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.05013702 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.815549617 seconds)
    (57/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.821644189 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.781254436 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.900892563 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.826426798 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.817592552 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.800766999 seconds)
    (63/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.157951816 seconds)
    (64/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.34525474 seconds)
    (65/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.16268529 seconds)
    (66/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.406100709 seconds)
    (67/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.807981759 seconds)
    (68/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.93014367 seconds)
    (69/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.933538701 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.097580082 seconds)
    (71/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.356301642 seconds)
    (72/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.946668423 seconds)
    (73/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.905436461 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.958472114 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.867121489 seconds)
    (76/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.314313553 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.934252006 seconds)
    (78/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.53195277 seconds)
    (79/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.195610341 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.093252282 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.879408488 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.485638867 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.78133032 seconds)
    (84/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.935606894 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.584301679 seconds)
    (86/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.909010132 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.877750865 seconds)
    (88/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.824843202 seconds)
    (89/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.908416147 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.194189847 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.104428888 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.951969273 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.007667995 seconds)
    (94/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.926666353 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.968383367 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.077159004 seconds)
    (97/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.817333386 seconds)
    (98/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.823704759 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.805179708 seconds)
    (100/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.810038089 seconds)
    (101/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.941956151 seconds)
    (102/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.786478095 seconds)
    (103/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.36884054 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.869590256 seconds)
    (105/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.80585772 seconds)
    (106/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.968076698 seconds)
    (107/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.368165594 seconds)
    (108/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.903028643 seconds)
    (109/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.715727555 seconds)
    (110/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.889645585 seconds)
    (111/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.011019616 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.863988022 seconds)
    (113/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.809114315 seconds)
    (114/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.788424087 seconds)
    (115/309) benchmarking ("map", identity, Int64, false)...
    done (took 3.573365584 seconds)
    (116/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.147735098 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.001585114 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.717805563 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.063502539 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.978934567 seconds)
    (121/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.966767507 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.235587504 seconds)
    (123/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.887165489 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855380989 seconds)
    (125/309) benchmarking ("sort", Bool, false)...
    done (took 2.247332763 seconds)
    (126/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.822356442 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.807974782 seconds)
    (128/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.281160255 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.05446477 seconds)
    (130/309) benchmarking ("sort", Float64, false)...
    done (took 5.601104941 seconds)
    (131/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.107356265 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.047353108 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.180635497 seconds)
    (134/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.209518531 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.023679298 seconds)
    (136/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.13776236 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.408437806 seconds)
    (138/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.157283926 seconds)
    (139/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.883580122 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.138245799 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.877306209 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.976982832 seconds)
    (143/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.816205058 seconds)
    (144/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.109265572 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.852697412 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.905231203 seconds)
    (147/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.28273385 seconds)
    (148/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.827813337 seconds)
    (149/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051704691 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.033998294 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.829687197 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.711705783 seconds)
    (153/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.100391491 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.919188957 seconds)
    (155/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.808115821 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 3.242484543 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.714534397 seconds)
    (158/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.908721878 seconds)
    (159/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.753235394 seconds)
    (160/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.034368097 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.810259291 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.111313196 seconds)
    (163/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.870117339 seconds)
    (164/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.901678351 seconds)
    (165/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.008215107 seconds)
    (166/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.791189485 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.80144632 seconds)
    (168/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.899470507 seconds)
    (169/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.926468991 seconds)
    (170/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.016743632 seconds)
    (171/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.788511891 seconds)
    (172/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.814618833 seconds)
    (173/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.808022654 seconds)
    (174/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.990018503 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.141730043 seconds)
    (176/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.811139003 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.888502525 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.207655491 seconds)
    (179/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.832163427 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.109720616 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.794307516 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.915162156 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.836124334 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.95926314 seconds)
    (185/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.098142702 seconds)
    (186/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.495596421 seconds)
    (187/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.768729539 seconds)
    (188/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.825581197 seconds)
    (189/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.791005866 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.545223573 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.921588222 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.158636541 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.505925017 seconds)
    (194/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.812232108 seconds)
    (195/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 3.886468836 seconds)
    (196/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.386962836 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.878850113 seconds)
    (198/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.811572262 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.203683698 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.792482544 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.779606492 seconds)
    (202/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.091779242 seconds)
    (203/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.197109709 seconds)
    (204/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.187779289 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.919715238 seconds)
    (206/309) benchmarking ("sort", Float32, false)...
    done (took 5.57874031 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.828885283 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.142847727 seconds)
    (209/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.282315774 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.01784102 seconds)
    (211/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.613186198 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.999261318 seconds)
    (213/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.172207241 seconds)
    (214/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.642525746 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.065516995 seconds)
    (216/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.913163278 seconds)
    (217/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.479518754 seconds)
    (218/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.023104462 seconds)
    (219/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.924659196 seconds)
    (220/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.906155482 seconds)
    (221/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.985715749 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.834456787 seconds)
    (223/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.722164832 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.147518229 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.882794281 seconds)
    (226/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.83942516 seconds)
    (227/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.849025464 seconds)
    (228/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.825091097 seconds)
    (229/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.936064169 seconds)
    (230/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.915916824 seconds)
    (231/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.000458706 seconds)
    (232/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.962405245 seconds)
    (233/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.934271714 seconds)
    (234/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.273687524 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.706481569 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.050132012 seconds)
    (237/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.987438635 seconds)
    (238/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.818039085 seconds)
    (239/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.186136625 seconds)
    (240/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.648390364 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.820501709 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.931508053 seconds)
    (243/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.159299387 seconds)
    (244/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.002921778 seconds)
    (245/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.287358693 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.834224982 seconds)
    (247/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.002415116 seconds)
    (248/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.798382728 seconds)
    (249/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 3.168027278 seconds)
    (250/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.010469532 seconds)
    (251/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.881290416 seconds)
    (252/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.948921694 seconds)
    (253/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.120098605 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.90928556 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.874742115 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.200092292 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.110687525 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.464829833 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.82052384 seconds)
    (260/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.201287679 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.837677175 seconds)
    (262/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.37871605 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.448231322 seconds)
    (264/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.314494631 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.814120618 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.099481466 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.190195937 seconds)
    (268/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.914526055 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.833336438 seconds)
    (270/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.83698916 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.174634475 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.891546154 seconds)
    (273/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.055877799 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.157765234 seconds)
    (275/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.121729749 seconds)
    (276/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.812648337 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.117601031 seconds)
    (278/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.362044895 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148409091 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.840425968 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.928608979 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.893231416 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.069212588 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.895540756 seconds)
    (285/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.218666897 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.954410833 seconds)
    (287/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.939471505 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.545507474 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.033189366 seconds)
    (290/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.796302553 seconds)
    (291/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.178793163 seconds)
    (292/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.353058364 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.460690722 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.829304355 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.164052556 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.846446325 seconds)
    (297/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317144561 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.513095029 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.139088946 seconds)
    (300/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.898661559 seconds)
    (301/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.815283713 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.914774953 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.831008619 seconds)
    (304/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.896427803 seconds)
    (305/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.820078279 seconds)
    (306/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.052889433 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.829654561 seconds)
    (308/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.896978792 seconds)
    (309/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.947163005 seconds)
  done (took 998.214035969 seconds)
done (took 1000.017713963 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.85049796 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.838201056 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.82310873 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.842942954 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.935238914 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.853123249 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.834558037 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.825042802 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87001004 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872836357 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.82002887 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.84962928 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.822899941 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.823914083 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.823940247 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837838588 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.128775732 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.84826395 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840086464 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.832744395 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.839213827 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.821594099 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.872232105 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.851164548 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.826487464 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.825426924 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.828089786 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.844594566 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.936082677 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.826266738 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.825355855 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.833238795 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.129438402 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.846422692 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.821698172 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.843627563 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.836014506 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.832705154 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.827037685 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.855191791 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.266027741 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.827963444 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.827847482 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.825867795 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.825569621 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.826997978 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.827586986 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.831670595 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838388859 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839478303 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.26309797 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.844975943 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.827874996 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.826245474 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.836233928 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.826074917 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.834141596 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843015293 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.845563928 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840329677 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.118716787 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.855875077 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.824489062 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.841849748 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.832558504 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.302333095 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.825547885 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.830932721 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.267756933 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.834377585 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.304305037 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.838759139 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.825114198 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.83986995 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.858670174 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.129892073 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.844492263 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.826932547 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.833208198 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.826611351 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.834502227 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840106161 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.830277901 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.82530606 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.840744449 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.85507355 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.837390088 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.827500206 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.833448859 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.84709838 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.834854445 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.836345343 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830536242 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.821713844 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.835261704 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.835646759 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.828508938 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.830802026 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.833629654 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.838369476 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.266082875 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.846620126 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.824265232 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.826589813 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.828837771 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.840992544 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.267574439 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.833556059 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.849505682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.875480658 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.831317298 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.120343135 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.852789925 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842879907 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837467734 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831941144 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.823304227 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.121561651 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.290084952 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.849734598 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.829319935 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.827155188 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843125931 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.831250181 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.825956637 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.132720181 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.854929832 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842011963 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.950494665 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.840929544 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.86044695 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.826824526 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831541736 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.858772405 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844673668 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.860399599 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.831787147 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.844286685 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.84427739 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.826652598 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.839932008 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.83923966 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.829111762 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.836753813 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824678653 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.859630333 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842053021 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.843176818 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.851140222 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.948782331 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827007965 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.123200031 seconds)
done (took 287.26915688 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.904168165 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.83395691 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.932096087 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.828464351 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.914559036 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.93092962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.823756413 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.825672876 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.825273569 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.20716444 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.824313783 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.823972952 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.824213009 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.824824863 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.914197742 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.825558463 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.825074572 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.210697688 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828039985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.905406844 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.833971914 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.824830947 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.827867101 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.258105441 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.830055167 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.836677492 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.913656604 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.826424472 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.173581856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.82808976 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.832766239 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.215727735 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.935517338 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.846953801 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.83967461 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.833754412 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.926649885 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.833175387 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.928335386 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.913613267 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935652338 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.868068488 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.833540053 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.832813505 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.83163586 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.828607301 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.826870445 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.855965644 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.832480754 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.827998022 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.169005016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.838002931 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.825426528 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.826508662 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825972928 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.860505294 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.827649141 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.831178182 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.928522267 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.828337171 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.903675086 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.210632194 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.258791607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.826720592 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.830246366 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829373535 seconds)
  done (took 181.939545961 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.899744356 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.908358851 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.899704059 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.836285855 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.885225195 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.900638015 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.836991698 seconds)
  done (took 14.920704463 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.84196077 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830961056 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.885858295 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.883959483 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.829966339 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.983174948 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.828596431 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.847075088 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.827123004 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.888327769 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.829660117 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.828862064 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.838013114 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.834676216 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.887176104 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.847863182 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.949855712 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.837288498 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.833523866 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.987659461 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.828411295 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.837112264 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.89031247 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.848308219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.831155234 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.84159187 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.427098863 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.831232908 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830154631 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.831141746 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.828899944 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.879020033 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.832097797 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.834928662 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829133997 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.951037551 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.831718107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.829526836 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.830730315 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.833135279 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.832823753 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.833944353 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.831900919 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.829819594 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.830892518 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.86138766 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.83545447 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.830817449 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.833501571 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.832295389 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.890221306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.833459382 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.832770332 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.832622685 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.894035558 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83982553 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.834186258 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.829640781 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.835207548 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.8306355 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.98995213 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.887173131 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.833091697 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.887022138 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831921947 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.833095578 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.832594781 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.832592724 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.934546916 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.833590622 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.887623016 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.831098523 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.998698646 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.863053095 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.835079524 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.842013639 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.840571049 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834350683 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.838693915 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.846427264 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.830787925 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.839792118 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.845761393 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.83058366 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.830375864 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.951402355 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946221881 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.830391711 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.853349994 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.846359491 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.8310094 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.891789764 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.835532545 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.830481003 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896291523 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.956423533 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.8966593 seconds)
  done (took 202.419086748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.847160096 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.848368835 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.844999375 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.858335899 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.842093126 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.840385609 seconds)
  done (took 12.839060256 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.84112937 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.836116412 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.834213092 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.834547751 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.835718614 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.834819507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.833653051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.842208683 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.837496535 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.836472357 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.836678121 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.838732223 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.837054252 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.838477399 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.83734771 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.834371868 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.837515098 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.831035402 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.836117853 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835125112 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.993585686 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.83873992 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836908038 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.842825283 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.837969516 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.838055686 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.851069081 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.837754849 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.834966131 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.847534131 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.837523692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.835602137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.842600845 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.849678018 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.841958524 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.841866494 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.83888075 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.836811685 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.834686798 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.837160567 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.837230501 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.836825009 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.83903701 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.836937963 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.843649581 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.847392387 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.841438471 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.851396329 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.836780326 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.837961563 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.838511843 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.837106704 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.839225733 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.839098852 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.847167709 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.846757449 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.840936801 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.837322578 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.83944837 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.843493377 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.838300056 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.838495476 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.844366036 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.844030946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.83815932 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.839652342 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.84474312 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.842642308 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838614002 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.837566158 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.839721997 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.835899585 seconds)
  done (took 135.347924322 seconds)
done (took 549.233034406 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.950234999 seconds)
  done (took 8.714092361 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.920705984 seconds)
  done (took 8.781799916 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.367505798 seconds)
  done (took 10.131382364 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.848443289 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.854635696 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.837401766 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.837791457 seconds)
  done (took 29.153436536 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.869957699 seconds)
  done (took 8.637048053 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.845459981 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.831698766 seconds)
  done (took 15.477717728 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.851170235 seconds)
  done (took 8.616207951 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.944799876 seconds)
  done (took 8.712553942 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.849289986 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.872937187 seconds)
  done (took 15.499753404 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.817062126 seconds)
  done (took 8.58198783 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.54611338 seconds)
  done (took 11.320219732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.844452117 seconds)
  done (took 8.624786879 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.868922557 seconds)
  done (took 8.634148261 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.976072206 seconds)
  done (took 9.742565487 seconds)
done (took 162.389593118 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.841596989 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.838937953 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.840964103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.838573669 seconds)
  done (took 29.123864539 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.876997939 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.873692293 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.874422616 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.884586884 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.878356055 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.874006645 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.864971734 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.866800741 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.884620259 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.874939006 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.875388388 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.876698711 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.872936037 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.86530975 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.876949341 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.874746006 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.887585909 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.877414203 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.86677984 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.878990436 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.842231106 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.885917487 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.877981126 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.840720754 seconds)
  done (took 46.720554559 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.047193875 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.917902605 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.999504931 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.897642345 seconds)
  done (took 9.626458361 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.892345023 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.894317233 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.906002241 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.944125233 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.979335069 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.905512747 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.868710766 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.865621772 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.849460449 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.897008817 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.972536791 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.88962182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.982646113 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.841643825 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.048878784 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.841513695 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.842790548 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.894972518 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.946079351 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.960701172 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.843831106 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.895741821 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.897882319 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.891724143 seconds)
  done (took 47.520316572 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.841464657 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.849365314 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.848128358 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.842128557 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.842206292 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.842910045 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.850791297 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.845049326 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.867636924 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.843644287 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.840702922 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.842689916 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.8426512 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.84296966 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.841385901 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.852900744 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.855299218 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.844889655 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.84807767 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.846513783 seconds)
  done (took 38.701487394 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.841182683 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.697954476 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.194508992 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.098470443 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.842816076 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.844433787 seconds)
  done (took 31.289063432 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.864484259 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.852512809 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.847502732 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.904860594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.984683277 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.855851615 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.848895662 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.856637279 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.893861672 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.91413992 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.869181808 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.875075014 seconds)
  done (took 24.335422609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.843139782 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.843771664 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.844593415 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.862343957 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.861294167 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.855681269 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.856889899 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.842483664 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.861247945 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.868164491 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.856512935 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.862753919 seconds)
  done (took 44.032063163 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92833728 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.729396466 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.874729371 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557638473 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.309941707 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051641558 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.843221464 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182486297 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.843844829 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.112967018 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.894710812 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947377771 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.091971693 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840127916 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.857768655 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.32355103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136028965 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073231689 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864153223 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614934347 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889058116 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353471502 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.751517413 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897402066 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05149234 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.96969389 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.098240631 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.798594952 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976891703 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.877675404 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849104674 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.83993671 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114676236 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221102951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947071594 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849704983 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.465528073 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.555832296 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.829071642 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.640580614 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.671394516 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.962630167 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850840865 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840177208 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77855367 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.325486531 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217538748 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.848665929 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.552252921 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.839655701 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.85517523 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930735407 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.845558583 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.659781 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764873171 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.11782385 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.839412157 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853381801 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.413955293 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.975654284 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355382194 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.816127151 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.042839656 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631995202 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.235926361 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.991093743 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.846019719 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847143336 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779536198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.620669028 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89663129 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988892023 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.861680827 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.494506334 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150801813 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.936400155 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.787237286 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133736521 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.606519698 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.235629542 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073787392 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.801840894 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779022834 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.705252006 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778764114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113517157 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878750554 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.482742265 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895568903 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184059047 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859124282 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86439821 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852266713 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.070304259 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.40971012 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84525533 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.679430817 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.987006181 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867560233 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177378362 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781687402 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.848342363 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.101177591 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.056766676 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.071538563 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.360413512 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007420893 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848231979 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.923531886 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.758247753 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.895606931 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.123296504 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905860541 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.981693952 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904436145 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.804588134 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.151390723 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873982217 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.009783455 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.955779176 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971266434 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.177059963 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.134461881 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910733303 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848105133 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848988641 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654368969 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399943402 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.112627809 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.845832377 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.336572332 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.894274405 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.848618069 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785260734 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.463907879 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882749333 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.816362001 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073819075 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.782450946 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158799021 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784666379 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.991994255 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.961812663 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.070260255 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.497722794 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.924792311 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107927741 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308386346 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.101880677 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.898109865 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868064433 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968917665 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869872849 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.235627983 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.14035258 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.852563056 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.851828988 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.66135074 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852493057 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849574261 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.854943832 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60664886 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130891684 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.873216716 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.849973275 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.74013753 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.862083993 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914652276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854954816 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.858401103 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.39052282 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569183557 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.85911646 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.467121572 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071505681 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857556844 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.622685722 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961507356 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.933252419 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134311665 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912524576 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.784374327 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.561221328 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.545296445 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851186377 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.786369644 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852017758 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861516281 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863665404 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.237863318 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132800907 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892750034 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.636948021 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.890935183 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.856583712 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.854133706 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849119504 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.389087151 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.987966113 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365763418 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897271829 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986786384 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.863078621 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.785044371 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.855253401 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854534392 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.849891245 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.808491302 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907266442 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.668737074 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233898356 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110270076 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.466260643 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868514734 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.755996695 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.907463563 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.876813966 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.69497941 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780602888 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.910772938 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862977329 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.862823382 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.649344936 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.548214987 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416472628 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167801106 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165966308 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.298589022 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.306825256 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.15442888 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.189400278 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08872681 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.380837565 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912756463 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.205242728 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.799832026 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948725034 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.504620851 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208071311 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.868736021 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082389854 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245835097 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.615493601 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.016262216 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.06616881 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.764127095 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.8205616 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.05842966 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00007299 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.649292918 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054627293 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193137485 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.57076894 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.947103211 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.862282977 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540250949 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942016833 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.566736397 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.219835133 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.383767335 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.810630495 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327736863 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863396999 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.302140749 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211873823 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.175917547 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.979185505 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794513157 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.869910825 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.866381724 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.857536193 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.847489624 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.719217342 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.110387815 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863953901 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094380163 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.112304616 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153510848 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.761482979 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.86351796 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856885277 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154903981 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.631215747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030690275 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.268034362 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.379349907 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860494178 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.790957198 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793576507 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.548872266 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.864333524 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.835938498 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.084195727 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.051931002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.775598474 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.34387181 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099979781 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.112288113 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.871921159 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134753785 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.136090758 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.566646295 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88390187 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.958023968 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.576138841 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.965821736 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.129725817 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.093714716 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620782159 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.084529501 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.894118607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.66385918 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.863139907 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.073776577 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.125240932 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.773236367 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085797184 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.585527591 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.936609187 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1736131 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916721452 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.768476284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.007222306 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.056539643 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877760629 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945285348 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873391373 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.869989095 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.8715448 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904819973 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.796348857 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980079979 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.871370524 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94746385 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.004262957 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.38586506 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.864582475 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143737267 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.219792743 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192565101 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919043359 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.857824314 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864521113 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795879346 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99678732 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.306063042 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13281302 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.992936169 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.166962058 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884769295 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.561811597 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.22090127 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.103824769 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.134021999 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.75930622 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858532518 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.889600996 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.132219825 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873917512 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.072654447 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092824591 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.179191081 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33436846 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.104131271 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.226996559 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136713367 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.23023163 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.863201352 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454230978 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.958121155 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.550270896 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.903274342 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.820884788 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12222474 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873296659 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247928448 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.885733798 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.057297137 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.382138509 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646132924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154005988 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.856102469 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.928127303 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142479296 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.273187567 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177261127 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932292532 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875196675 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.577492591 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001350302 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.735366752 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.134732403 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8655062 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078974781 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.576479869 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.877457845 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148521938 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174416924 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.86095445 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.741960928 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873026379 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.876564061 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.089934449 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134997191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121176576 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875896606 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.873347965 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.683299255 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.140966832 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926034168 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800119343 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.864146173 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970940595 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.112897799 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887567721 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.551733035 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.581185726 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166856083 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.782940088 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887408268 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350948692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234957272 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.190925043 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.404905116 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.091092964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.422135022 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798692858 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.168509355 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.871099573 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350574787 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167610739 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.874137339 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.476642758 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906754417 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.144225117 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.185714294 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.930286662 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652690178 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.838513912 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091978552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432598395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812430883 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.869192452 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.9266358 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.868995374 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.996749814 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.875263327 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.757948611 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784724585 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.61899664 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361392529 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.872095611 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.857747645 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.582346995 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.479918025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90665623 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014254266 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875338854 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.580053217 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.163124058 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.120469247 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.466801274 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.873079718 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.870809574 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866140999 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.796928447 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.065527226 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.250736966 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162859206 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.31525833 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.905485124 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.870943279 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.084019264 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081660656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.763715516 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997432196 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342182601 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905397697 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.623643809 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.547561226 seconds)
  done (took 1678.664064283 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.886832317 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.924426417 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.911959808 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.906029772 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.913461263 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.988079844 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.924266712 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.897427182 seconds)
  done (took 57.150551959 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.871768529 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.083425437 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.881168662 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.875126497 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.878478799 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.883944478 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.040275644 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.881185588 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.883708078 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.885631287 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.886320519 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.868815723 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.18804325 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.898144349 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.87774571 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.870891596 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.88040611 seconds)
  done (took 74.474616411 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.873757901 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.082175524 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.892839745 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.882812985 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.822390701 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.884042896 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.837936174 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.880774963 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.875753011 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.091551923 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.502773133 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.930502526 seconds)
  done (took 90.356760643 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.884505439 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.882331903 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.879835964 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.879521496 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.883654599 seconds)
  done (took 11.216680164 seconds)
done (took 2185.004072473 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.118928055 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.10053743 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095618365 seconds)
  done (took 5.997688735 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.0313174 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.07840784 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.196245696 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.203401167 seconds)
  done (took 10.317647746 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.174573026 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.265534532 seconds)
  done (took 6.242945733 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.284992536 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.890963721 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.268586449 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.876932403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.876610603 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.879966354 seconds)
  done (took 22.446201989 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.880921143 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.880209798 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.879821694 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.881886645 seconds)
  done (took 9.328168444 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.860731 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.556933031 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.860619034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.874145894 seconds)
  done (took 20.956621323 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.626877482 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.277259678 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.623971185 seconds)
  done (took 9.330720669 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.350989221 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.765610639 seconds)
  done (took 8.921663101 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143854978 seconds)
  done (took 3.947378499 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.011108068 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.149798911 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.399634627 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.397242817 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.480238188 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.72647273 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.196126641 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.127632615 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.284934131 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.314293061 seconds)
  done (took 24.892562205 seconds)
done (took 137.74403871 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.264623495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.246099179 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.083019414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.229342551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.101162083 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.080466685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.084323225 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.215670076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.7242438 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.722934255 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.270662902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.107676407 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.042227917 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.241556452 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.047355519 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.121670084 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.11471369 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.278031546 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.924659503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.120490177 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.093774595 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.858022177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.11311729 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.876229753 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.11627539 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.033560496 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.43227006 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.114574344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.082477051 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.440827412 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.034733728 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.27924911 seconds)
  done (took 171.302496098 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.771434884 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.879950479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.87778813 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.882016866 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.341488251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.883956245 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.884234694 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.88159759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.016960925 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.012050768 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.882453741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.352145324 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886116014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.8840018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.888246524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.884661565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.147589468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.832102881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.892214335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.893109521 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.897386546 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.305654586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.898875723 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.325906589 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.167598791 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902472439 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.880759143 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.903474794 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.886234855 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.891250488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.895814035 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.880033396 seconds)
  done (took 208.619136036 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.885438542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.88181454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881279512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.881589563 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.881063743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.881712309 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.88107523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.879498522 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.553788814 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.546534947 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886359726 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.883696883 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.8816585 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.882258867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.886201189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.879936264 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.887157124 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.885721209 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.886187051 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.889397594 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893206949 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.793452759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886779378 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.794172424 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.887719261 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.887910016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881868359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889957307 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.881669737 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.886499385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886362127 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.881575911 seconds)
  done (took 221.272223868 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.081329204 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.884296314 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.885937806 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.813354332 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.886173127 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.882740813 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.823033857 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080797326 seconds)
  done (took 19.159326015 seconds)
done (took 622.169353648 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.349075369 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.187002036 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.049740888 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.908155717 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.153022003 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.940023638 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.903021804 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.966472446 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.626955798 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.966917555 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.588356955 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.92483466 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.68272345 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.922264534 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.024077861 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.955710796 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.447917223 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.53187577 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.079641428 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.975321511 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.071311154 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.852616301 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.975156486 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.657295679 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.698143952 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.904009086 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.077194265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.447643561 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.911363365 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.064674868 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.672620218 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.276605171 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.918798698 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907049278 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.959323711 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.93709065 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.247404733 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.915089125 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.030986959 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.664216693 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973293244 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.510843572 seconds)
  done (took 103.663858366 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.873915466 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.869888776 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.870766683 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.873694928 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.875544186 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.871252745 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.874175879 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.874474234 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.87496161 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.870215511 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.872067484 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.875116299 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.874520181 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.874883296 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.871835159 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.870580898 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.876144291 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.875652575 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.873736944 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.873425228 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.874930706 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.873974099 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.888892085 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.875020923 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.874102115 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.876893647 seconds)
  done (took 50.549581671 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.887861961 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.053279651 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.143178268 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.908249679 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.893036442 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.897596911 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910881081 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.892448194 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.897300683 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.89518055 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.000464618 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.893235124 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912918596 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.144211486 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.908825964 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.886804565 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.888773573 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.893562074 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.062039945 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.910811032 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.915083057 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.891419323 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.91169238 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.908221198 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.898115125 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.894452362 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.898509287 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.353125311 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.904292543 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.00172576 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.936031872 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914172451 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.319457418 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.154394286 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.943976964 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.89352982 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.886088362 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.001987537 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.899776714 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.896576994 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.911769721 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.900229074 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.144933233 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.364031209 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.904643766 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.889194248 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.36648497 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.012164331 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.934873175 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.905114326 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.1505376 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.908238383 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.891016622 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.896491658 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.934004892 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.906179349 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.896524931 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.239140721 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.90805838 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.913641662 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.894725007 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.895946464 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.072924217 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.904757217 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.056095852 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.902782064 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.903167122 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.896932523 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.145371511 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.907566634 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.375680348 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.907167374 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.892347641 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.002810963 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.063587414 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.392120397 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.907249906 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.073052008 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.343781126 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.920635015 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.905145809 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.343435331 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925844036 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.907247947 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.893043254 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.892137204 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.892283996 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.938669562 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.914714267 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.318221696 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.384648633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.252745175 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.924169307 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.913667611 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.896951095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.242347355 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.900391959 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.892438714 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.141257855 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.384907516 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.90687445 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.906343182 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.363990506 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.910048143 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.916817717 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.908774095 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.157936143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.909456974 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.938699376 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.891788112 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.905307263 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.902965519 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.917207872 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.906669094 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.894258033 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.352733988 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.018184643 seconds)
  done (took 235.126833089 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.896540988 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.893972032 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.892224198 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.893270918 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.891797727 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.898798879 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.893125623 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.891989375 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.899431965 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.892675804 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.891843842 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.892008994 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.896118975 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.90151931 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.385289824 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.905234253 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.50809947 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.897810094 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.896874686 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.908365431 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.578288642 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.903783123 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.897779292 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.913999957 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.897491366 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.899181616 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.904624318 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.944938149 seconds)
  done (took 168.785298915 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.898054195 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.0866435 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.912976212 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.94052457 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.905446991 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.896250622 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.927882353 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.923985572 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.911728858 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.896121359 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.895419237 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.963976476 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.90738427 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.03033467 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.93571339 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.931828151 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.007117291 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.904576871 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.89637747 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.896621092 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.932398541 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.893129113 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.968208383 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.033857276 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.917534232 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.022141613 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.902748823 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.899953646 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.90410956 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025423422 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.911745872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.959788204 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.935698675 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.922703018 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027635795 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.023032582 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.003865622 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.928230205 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.90769322 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.897736859 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.895754488 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.885667982 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.021134977 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.917274364 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.909029483 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.008889126 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.918052021 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.902141282 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.912885458 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.898860466 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.920825732 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.92620942 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.976114266 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.038484955 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.931141535 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.925060815 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.931707525 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.173241636 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.908479172 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.008348977 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.890757862 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.016584443 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.92260928 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.886956523 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.902058605 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.906612209 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.929121628 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.930045007 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.011827446 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.914026617 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.006602451 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.933163778 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.908969278 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.900698576 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.902758482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.02306876 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.025642276 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.934081949 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.944473976 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.940902109 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898231311 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.908352578 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.889669468 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.92577362 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.903130928 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.01664066 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.026126326 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.910352663 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.903345516 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.903106605 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.904037235 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.934698994 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.032156594 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.942964129 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998954727 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.974846058 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.983806092 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.918463603 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.91511893 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.906162731 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.973631501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.919207324 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.9115369 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.223846889 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.979238959 seconds)
  done (took 206.15283112 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.36963552 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.954373348 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.967048856 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.216128781 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.341030681 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.756678665 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.957447199 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.951880408 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.981096324 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.147743818 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.029148363 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.974867025 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.945488287 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.932081284 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.954011472 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.979958995 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.961277966 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291236771 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080531492 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.087173147 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.938857633 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.253304531 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.274541119 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.378574323 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.990997255 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.288741735 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.631555985 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.198149634 seconds)
  done (took 62.66553551 seconds)
done (took 828.747111291 seconds)
SAVING RESULT...
DONE!
