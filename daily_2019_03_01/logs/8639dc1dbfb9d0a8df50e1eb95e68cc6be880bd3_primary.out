cset: moving following pidspec: 24835
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341170507 seconds)
loading group "string"... done (took 0.592962634 seconds)
loading group "linalg"... done (took 7.530020281 seconds)
loading group "parallel"... done (took 0.175850615 seconds)
loading group "find"... done (took 1.220980219 seconds)
loading group "tuple"... done (took 1.894834116 seconds)
loading group "dates"... done (took 1.280043496 seconds)
loading group "micro"... done (took 0.238436801 seconds)
loading group "io"... done (took 0.979835034 seconds)
loading group "scalar"... done (took 39.640908341 seconds)
loading group "sparse"... done (took 12.716371567 seconds)
loading group "broadcast"... done (took 1.006904232 seconds)
loading group "union"... done (took 13.792589007 seconds)
loading group "simd"... done (took 4.660371329 seconds)
loading group "random"... done (took 9.419494359 seconds)
loading group "problem"... done (took 1.948777549 seconds)
loading group "array"... done (took 22.185335733 seconds)
loading group "misc"... done (took 2.00281745 seconds)
loading group "sort"... done (took 3.390456713 seconds)
loading group "collection"... done (took 19.209064833 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.558521132 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144888784 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137168175 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126207509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185329005 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132877938 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14056925 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087347164 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.886040826 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.164974488 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141052559 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517034577 seconds)
done (took 4.93498002 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.193207122 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089407478 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099299159 seconds)
  done (took 0.850516938 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065909859 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129841783 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082449943 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068310402 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069218693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082005893 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066900273 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067407369 seconds)
  done (took 1.235799767 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074590572 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070855121 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08484041 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070321492 seconds)
  done (took 0.970645388 seconds)
done (took 3.990041965 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.937511061 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256695332 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.194882182 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.491406577 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133690577 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190058234 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663486427 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321853002 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216675316 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102621141 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108922839 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3915876 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108669802 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.659445407 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07588562 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106754689 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.158671854 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.409399724 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.080451103 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084511058 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104127964 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140454122 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100987896 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078734387 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167536691 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070651725 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.15440266 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.095660039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069487121 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.253530595 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190745712 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679910598 seconds)
  done (took 10.50763162 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100623338 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121001653 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071314745 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142622302 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121771612 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072029083 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074415127 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084593026 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095913911 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.163387613 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117431605 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.126135299 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067440555 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071632843 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103058091 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232154857 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.093799324 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103302 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073671856 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091241016 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110360293 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.100554633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082057865 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096510383 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152015848 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.191532858 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099452246 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.110554577 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069492991 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096680095 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131248614 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132440887 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06810703 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084029341 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.159322323 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097030754 seconds)
  done (took 4.592523139 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.105191031 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.176731238 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093647542 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.156977916 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085736061 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131268004 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06695335 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099737168 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.251541592 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.163781438 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.492906676 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129473161 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.089685262 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070558361 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086697506 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.115626808 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068975629 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.634744855 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14793322 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105060062 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104192968 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090362912 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072186889 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360793107 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071490319 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069127905 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087500346 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065610854 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06092008 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149044879 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087066935 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.300449428 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.091342661 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069987946 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123660774 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190976361 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.096372637 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.112574359 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.110391274 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083818795 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067248367 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174233337 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092649216 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067683047 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.108575754 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106151351 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121295068 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084988694 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068867334 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187688294 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067541241 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100552648 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.956963824 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.165473749 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098416558 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067799331 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.30410913 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103951606 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069118106 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.082734835 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.249742423 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.182058972 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.085818263 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067818325 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084695192 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070118241 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.371227141 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067704053 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.735965023 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072473177 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078424822 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08687249 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06851857 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090196831 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074972555 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.103944597 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067890181 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070635342 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.08352551 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066876338 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086847968 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088366535 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208517145 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.087999075 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069180123 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.083279737 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.087866141 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113490139 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071435677 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067717674 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118397113 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070768558 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083637394 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.105017111 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086160213 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.102895074 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071653194 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128678307 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068203397 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.137808014 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069134916 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.115234701 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074082537 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119928395 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09771579 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070474159 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.158122675 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066394012 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.083621018 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067402595 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084735861 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067328253 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069369819 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.086972253 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.084298617 seconds)
  done (took 21.526699053 seconds)
done (took 38.399795233 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.311041515 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.094528402 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.093194973 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.094405677 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079059959 seconds)
  done (took 1.44095171 seconds)
done (took 2.175015162 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.151773175 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103914091 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081138664 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099080362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080709839 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103419086 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116740535 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083525075 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117947014 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065217116 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114748621 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065035023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080079579 seconds)
  done (took 2.031715318 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083026703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086578026 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085484041 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083003654 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07922111 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083362884 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080778479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105504569 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081334478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088784252 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064583553 seconds)
  done (took 1.638230875 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082622959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08416673 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085466786 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081521025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079505968 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082427334 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080805101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102302165 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081252962 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089395014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065481008 seconds)
  done (took 1.645057342 seconds)
done (took 6.037307278 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079890967 seconds)
  done (took 0.805659391 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.748182636 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.467157839 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084576693 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.139080282 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223380574 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160398639 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467007214 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.113100103 seconds)
  done (took 10.339919621 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.102621664 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098767364 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070601917 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.085586849 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073617086 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083944567 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070588157 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072629603 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084341106 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070952728 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086719962 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071920271 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085947674 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071258852 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.086589298 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074536135 seconds)
  done (took 2.075090403 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.106234181 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104047818 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.090610822 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076762514 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089767021 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074333356 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.091684608 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076008562 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087060549 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074991655 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090766487 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076159584 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087072838 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067757822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.089801576 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078657232 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086677328 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076966092 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.090930667 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077975937 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.090335288 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066081239 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087149909 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07656706 seconds)
  done (took 2.844416368 seconds)
done (took 16.79404373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132331133 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078501994 seconds)
  done (took 0.931767572 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08382754 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097905189 seconds)
  done (took 0.909583375 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084467469 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.080802566 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091369011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093661324 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082755352 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068351187 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104007241 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068356327 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081310573 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069100555 seconds)
  done (took 1.552105254 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070145718 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093975482 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073187551 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097938276 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076168931 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.079902785 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076079673 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084053489 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079215739 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078714441 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073075118 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.096797053 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.07318406 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100557678 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.088701301 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071691057 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085262285 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06858112 seconds)
  done (took 2.197245128 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067825876 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068708257 seconds)
  done (took 0.866805175 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068774236 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064969401 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081987763 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068440165 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077558843 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064299913 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079195991 seconds)
  done (took 1.234445537 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409712245 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109767883 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262129713 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072850107 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105735326 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294482995 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066960635 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072690942 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087973639 seconds)
  done (took 2.249820481 seconds)
done (took 10.667455212 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082202316 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086521451 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111589002 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.440213549 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106751954 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067417985 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143087426 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.21355452 seconds)
done (took 1.98684925 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128600162 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.626998182 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40979774 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.228914289 seconds)
  done (took 2.011994758 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.383738939 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091480443 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.072246421 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068146194 seconds)
  done (took 1.362033659 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068973213 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070901517 seconds)
  done (took 0.888574231 seconds)
done (took 5.13587892 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069298562 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067468895 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079000095 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067917097 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065003195 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.079402357 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068003791 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067972977 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.081078285 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.11313267 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067492369 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068065265 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081157614 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064788884 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068991286 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082721386 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065105944 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068659256 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078581551 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065146787 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078582467 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06750891 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066314529 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07969944 seconds)
  done (took 2.547281136 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089145812 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.082689604 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073465105 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.087172849 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071295907 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088577583 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075034108 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.0690359 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0872256 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070658575 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085434074 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071925923 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084224294 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073122453 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085044703 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072090669 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087856989 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068597702 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083710125 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071636402 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074378485 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083567433 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071967324 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086257092 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071815453 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084724735 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071085885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083271515 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073648647 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08640265 seconds)
  done (took 3.112907564 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073942943 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065236293 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080090482 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073210258 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065677777 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081797376 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065692836 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08037148 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066854914 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065242753 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081540813 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.065558834 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064995899 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081422223 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066175653 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.082838255 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082518492 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065524357 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080380271 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065954528 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.083058132 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.066064968 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065567631 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080168788 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065175619 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064594744 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.079438886 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065209053 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.080562345 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065864367 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069109314 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083733134 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065060635 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071910378 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083345152 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065106932 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083582244 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064826664 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066917779 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079677207 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064793614 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065966519 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080034976 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072662689 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066365263 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082231534 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066063985 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082155161 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065910973 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069285456 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078759922 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066067897 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081807445 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.06706457 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069803112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.079749708 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066585462 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064815635 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081323031 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06599034 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078692547 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.065339395 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067474282 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080757956 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081905821 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086200588 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064853267 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067121577 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079943688 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067905994 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066655099 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.093545222 seconds)
  done (took 5.992828652 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119076232 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095366775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083181565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067305679 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078559197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065721769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06925084 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079987384 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067858046 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086050977 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065949213 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082019537 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067855115 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080419349 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079761613 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066981095 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086988887 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064118263 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06550086 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083507079 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066095498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.083909047 seconds)
  done (took 2.45388576 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.191296494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088523815 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11113387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090938385 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084816254 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075994481 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086339257 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072193284 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071581457 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085457117 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070253842 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085475872 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07070137 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085057183 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070129727 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085202301 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07219751 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085002499 seconds)
  done (took 2.327571405 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079569947 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06801829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106050312 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068731133 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082569246 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070815833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088904341 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077780096 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08434821 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06845503 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091053802 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1787588 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085247583 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067993865 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084938091 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069213193 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070564004 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082960862 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076363709 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088254853 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073869378 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092045788 seconds)
  done (took 2.603611021 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081474957 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069191671 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101701826 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085546271 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063915752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065939787 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089859693 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068660156 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090358999 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070875847 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083639448 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067567019 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074558374 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.081854273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073926886 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083436007 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07057049 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08305298 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070444792 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06418372 seconds)
  done (took 2.289419527 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090038665 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083907839 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069102016 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093959092 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070474909 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084502528 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079553475 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084529643 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070593716 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109566143 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069667524 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084552202 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078834212 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09049951 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069667437 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092650335 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092974552 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079052604 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084415321 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06877642 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108160152 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06928668 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092464676 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069972668 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084177668 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0699793 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084615048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07515925 seconds)
  done (took 3.054347296 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068416993 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067172894 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080088874 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065464688 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066404698 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080107253 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066132223 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065921045 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083407185 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065678743 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083036025 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067683285 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068800656 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082042321 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068003257 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068241924 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0821983 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066394342 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066199409 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08026418 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06811763 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082709432 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068786279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06561815 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080134255 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067572838 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065651556 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.079525455 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06768202 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066066171 seconds)
  done (took 2.916987956 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079364589 seconds)
    (2/2) benchmarking "in"...
    done (took 0.090276493 seconds)
  done (took 0.934128286 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065943857 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08224355 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080201141 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.0715756 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087492654 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069172341 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091301364 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073906903 seconds)
  done (took 1.380719894 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085720576 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.094329804 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069845149 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.095469247 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079692599 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100921381 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.14259361 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085305383 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075695585 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081433456 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082527702 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083155941 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074294018 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068382012 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.089358109 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074895193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081786644 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074318146 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085183414 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067817807 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070643596 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094856539 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071427164 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080336535 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068880499 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078421713 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.094297231 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070258144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087215485 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075449706 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088508092 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062714885 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083394954 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06949054 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066510237 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092962052 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084151361 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085917679 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078259341 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084250018 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078606623 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079545162 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07264023 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.089880364 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079554248 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068630866 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084472952 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064513525 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080342331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071425778 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064254332 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082492404 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064060713 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089910621 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071189401 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094567568 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067173767 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070451123 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087034254 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072878401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090782577 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070843564 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071827332 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082614138 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077619298 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087489941 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078138358 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078468429 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062849464 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066818478 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093513777 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09204306 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.08969563 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069682585 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084253787 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066476907 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087429511 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069810807 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074202584 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0900936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069394557 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089827555 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075925406 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083204024 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071310146 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091782319 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066202143 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070638399 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08172807 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08671214 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081590495 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.067177056 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082349693 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080080742 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.086530902 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067841981 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066701589 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090963877 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062273534 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068781298 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083857317 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069618977 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094414008 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074473157 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089644969 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078504452 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.091308716 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06929605 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087444159 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065537722 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071113233 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08202357 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076886054 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077572844 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071273853 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069843288 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083413519 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.078279021 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082149613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069495233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092232578 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074742572 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067097252 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.080048719 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072207697 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083543791 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07214053 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091981262 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067398399 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063901886 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078682472 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072498016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083593967 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071703512 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089467972 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071897936 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063424544 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080751311 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073229529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092783229 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069014204 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083924409 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073757488 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069480922 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082321855 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075311591 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086221962 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068285165 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08970759 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068957123 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06460992 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08694561 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071930694 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082654123 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072481185 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07197907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085836828 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070089779 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083368392 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074807249 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084931065 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068221659 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068233699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082040287 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079525675 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086127384 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064896099 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066580478 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091193907 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066365789 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083705107 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067986467 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086608772 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.06876124 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.067212744 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083426449 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071464352 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096773673 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073818344 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084458716 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073550224 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094603289 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068562574 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071479025 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083826783 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070515625 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084929739 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077782159 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088651597 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073713374 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.0714275 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080435172 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074801367 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092134711 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067626237 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081541059 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067840806 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072129734 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089725749 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072960415 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084922914 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066637453 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068311068 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087481493 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072421872 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.083940925 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067274784 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089547742 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068501394 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090892145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069793424 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079658832 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087845789 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063284219 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087948922 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067176223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.08992481 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064635957 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066005778 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.083068739 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070830497 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083546196 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0720137 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062982697 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090919259 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077391684 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084199024 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068083911 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.069189775 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089941352 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069763383 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087550723 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072839842 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09069732 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078708315 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068944965 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085969996 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.080143672 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08356188 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062881634 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089584772 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067916658 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.068182824 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.083211993 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067759715 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086615666 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077886719 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092141108 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063052817 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07170525 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08221638 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067704561 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079677786 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074212916 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.072148931 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085529805 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076018776 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085703125 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069954021 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088786474 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069322732 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069527005 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085841461 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072692447 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08509335 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071809026 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068613143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.086878165 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068638305 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082665323 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070813042 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06826005 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084651266 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074669983 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083651934 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069427843 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086439644 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069765212 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069183178 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085482374 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069076948 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087229339 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069488388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069248212 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086111635 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063750428 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091829332 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069285992 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076273588 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083414391 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066142741 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090209446 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071271483 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090311155 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069113588 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068890535 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085814124 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067533042 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08660915 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076431499 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066142385 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095568257 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092741199 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068949538 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071800715 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084085301 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.07058628 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067911815 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084333447 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070040161 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.083997974 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068111993 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0898153 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071869754 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068273262 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08596181 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070160257 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084092277 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070573784 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063210521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08288748 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068682684 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083511284 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079072915 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.084614965 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068609444 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068451154 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085263311 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068226495 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081461595 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077273223 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094159686 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068875643 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091143552 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068447495 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071129411 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094895652 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06605048 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082256928 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067002119 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066003735 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092530808 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.070236599 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094176406 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068777882 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067526272 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.081027876 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070781801 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083603522 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063301462 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066735803 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088927361 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068527935 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083762306 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.069450774 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072075318 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085296803 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078908168 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083055398 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069519359 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085975761 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066126143 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067493336 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083816102 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072481558 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085835294 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066245205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06716384 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.083974932 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.070471892 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085449306 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069353527 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070688183 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091797941 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067977389 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.087800106 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07172089 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06356785 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.087671669 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.069809276 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08508878 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067808563 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087577819 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073309848 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069921958 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094147766 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069326138 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086707837 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070487843 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065944291 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084363312 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069782246 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.085066063 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068219892 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069658476 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093565987 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066456458 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087997892 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069862053 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085857346 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076944128 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070774779 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088051279 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07694357 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.085212407 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071450861 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093220843 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071677164 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08886995 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070946623 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070145286 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090923058 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068950006 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090616761 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069635204 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069281828 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086361613 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066800943 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084824607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069312058 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06776025 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091942144 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069355255 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084246756 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06761801 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08231686 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070313298 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072681985 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092464398 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070816636 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088334303 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064975453 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06577361 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086696393 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066019231 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087017917 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072448464 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073645078 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072206127 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069146627 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.084349961 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078784895 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091524543 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072066713 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066990544 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089173039 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070263481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087279688 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071364728 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084459708 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070113904 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07295001 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087677753 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068054354 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09187865 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072029752 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069941007 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086345854 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070206244 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.085989664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064580298 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06981762 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086678368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07360459 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.08841954 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068882229 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096476351 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066062992 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069684616 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089170043 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068376086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089338448 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064137629 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.086793917 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070569497 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069315224 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.080690436 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068984481 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082729005 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072242555 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06797299 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080728859 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080143067 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094466784 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071253587 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084043724 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068694711 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063893739 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.081467701 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.0686075 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069850774 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087162723 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07969236 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084012193 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068643032 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081128202 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069243834 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072617432 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.088904833 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066507033 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.081635595 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068361705 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072587882 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090744104 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068082872 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085265615 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07275284 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071633271 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082757259 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071576609 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08271692 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072554901 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099246643 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070644253 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070237795 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092918952 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077959347 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086174574 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064444676 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085864151 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071856788 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068889191 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087276985 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070440997 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103031153 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072638866 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084648981 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.068161958 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088123375 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069575439 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078089207 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087029784 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070021916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091735811 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071384869 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094785151 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0712638 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093994657 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072874425 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072224569 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085391518 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069189339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084424975 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068112512 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070506495 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087387535 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072811065 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.095268679 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068642952 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096718538 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077779484 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087102813 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066620346 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06808803 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085823907 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065010341 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086435763 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068550257 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067113593 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083722687 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067268635 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070227133 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090313362 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071123768 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087523109 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06892568 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080594736 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071027088 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070947053 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086357261 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066419396 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.068746391 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.085852112 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071856608 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.08968504 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066108013 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087660013 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071188988 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070373072 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081250325 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076351812 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085299531 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071614547 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067830118 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085969614 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070363107 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089526798 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073630837 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087083066 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071969344 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078357957 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088836413 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067454935 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084177829 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073815149 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066626113 seconds)
  done (took 47.031985969 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112344897 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082184274 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063728981 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081216382 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078361269 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0838432 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064033197 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065340618 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081587551 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068762661 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081849215 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064296644 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09073994 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089039093 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094931058 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.086357791 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064217007 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065527207 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080994183 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066161537 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091543943 seconds)
  done (took 2.457028633 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.088356385 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.102062865 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079383897 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099996893 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092032289 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080671738 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.097563622 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080731866 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100592375 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09383271 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084033707 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096706996 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075465617 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.093244398 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076829935 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094713846 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100732032 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07443808 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097075603 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079607626 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094106542 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098062967 seconds)
  done (took 2.776426357 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069024387 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06851514 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087932445 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063628971 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06829609 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081297785 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073257391 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083820038 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07225886 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066793345 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.092385793 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067560852 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087465251 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067377463 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068401233 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084211239 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134044835 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071907533 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085677448 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069978707 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063504433 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.08799971 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06416829 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.08161026 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067828397 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072797214 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08731846 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066144567 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086163349 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067320966 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068692008 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083847372 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070023564 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069281715 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.084315505 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067783267 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08631715 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068875394 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063577711 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084488232 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070121628 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082499567 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069057913 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069735348 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084087343 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067288101 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.087493997 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.068765757 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064272915 seconds)
  done (took 4.517475721 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.089723418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142709454 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088893144 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.12386054 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.085609438 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095134291 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071806973 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124624381 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085191792 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068042056 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105399624 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08377402 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08818441 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074031623 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.093147019 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068650723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087781487 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06659995 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.09001566 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06884062 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090711726 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076237308 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101638318 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099991935 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072827431 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066698298 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08590405 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073493424 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098306485 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090259265 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074184657 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091947223 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085691332 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091482346 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067729622 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088712266 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085406818 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.085583748 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.07144439 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.084579706 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070714293 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091054279 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.07603713 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103719431 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070180019 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091756959 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068762355 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083237631 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082462315 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088828453 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076728106 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101830291 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090576094 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070027679 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091186566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.085959106 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087004202 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067120635 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.089810122 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081985498 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.083497574 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073315334 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.100202683 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070832508 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094862932 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082909234 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091905356 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073781919 seconds)
  done (took 6.756979882 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078375615 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092435913 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082869161 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102132579 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092312786 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075205618 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093107615 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07581975 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093012191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081162463 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092176263 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116506598 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069915677 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096674092 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076004667 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092260369 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075657443 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092788019 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093897295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076071768 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.09289436 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084542216 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093049711 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101575951 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105963751 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087302923 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075191709 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092495714 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102144377 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075658263 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104743744 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07581304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092819443 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10218503 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085952652 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092172807 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068312793 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092093377 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074946849 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092911021 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070307521 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102042471 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09409352 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070327145 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09327222 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075055433 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10290715 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104850652 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07896293 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096829488 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074467362 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101536777 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093223989 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074775739 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.102024086 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12809691 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084059383 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102178945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09299273 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084724584 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10139371 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109637793 seconds)
  done (took 6.387439096 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09043417 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096131885 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098671831 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065247118 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066264465 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09171547 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067458973 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085131528 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078960021 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096324024 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081398775 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091198162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077183096 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099455573 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090789958 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076585324 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090843873 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072494825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095341108 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073192644 seconds)
  done (took 2.491649437 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077016473 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105184882 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070394774 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093562409 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072531708 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074562611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089600005 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072019966 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087182432 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072319442 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097428102 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080286246 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086846457 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075195375 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096935007 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076680102 seconds)
  done (took 2.139178858 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080642548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097957618 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.085123042 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087458122 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06610911 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083995528 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070673562 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065248299 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082703375 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084604014 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087779847 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071554039 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087243666 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067197382 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065371776 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088950755 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065486016 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08524813 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068962983 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101226792 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080119539 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085580478 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069176847 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089755767 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069261733 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092807261 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069931416 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066412365 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086168219 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070269943 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087301159 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076179817 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.083731751 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06735943 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.085716765 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066986434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068288621 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087199939 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071370403 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085960064 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0678068 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.086905842 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070105924 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070624847 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083421899 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070135278 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.082945027 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.074788583 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066046586 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087311572 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069038904 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.08948081 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06957114 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096931356 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072798618 seconds)
  done (took 5.124747372 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083945905 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072061594 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082713147 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067659966 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090893946 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071031588 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072337421 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088851525 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071045291 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084745991 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070726805 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090144559 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07101499 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071771752 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088821723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072583966 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083278477 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070379804 seconds)
  done (took 2.22181119 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073907193 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068147791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094471862 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068710841 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08688668 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070610282 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064295278 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086092185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067584854 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086480179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069763981 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.071298056 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084677227 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071404671 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085998326 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069674301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070525077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085533311 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068079432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082396529 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071491355 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067989233 seconds)
  done (took 2.481616313 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074156171 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096481468 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.1684892 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108607188 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.0843882 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100177918 seconds)
  done (took 1.448583872 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093889476 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100501392 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069228314 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107828276 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078210668 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088933012 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071511347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088617589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080010823 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103659583 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070508873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099951747 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098459619 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082957814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095525691 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077732089 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088877885 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071203215 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087485801 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109434978 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070697713 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09823215 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070737375 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088780614 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07202621 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097769806 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097522956 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085228092 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089235807 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080986332 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095374229 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071380422 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099766443 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102605611 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074154825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097872579 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070961994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107777584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095426408 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079911835 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090401916 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078769944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098102677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077451022 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09991118 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090061312 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077518264 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088872755 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070212162 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114698806 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.096003445 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08077481 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095940734 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099335582 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081703864 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115936839 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103228495 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080090241 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095625353 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103979719 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080086701 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096090584 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098471069 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085541962 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094876069 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08080893 seconds)
  done (took 6.703218885 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085917037 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107086263 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071371311 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104268196 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099323034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071875669 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088954868 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071683644 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090164046 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071963152 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131142149 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072790685 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097634023 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097319617 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07172421 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090046172 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07131482 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098864287 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07194307 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115567957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089646322 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079421296 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096455399 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098068861 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086628642 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095171579 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071012479 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089207574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088304332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072524043 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095470299 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070984332 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097788627 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071646301 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096703265 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072199251 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0895923 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077576903 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088518912 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095921811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078931189 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108480226 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071969327 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089538702 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103933592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071145303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088886299 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070470053 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089539721 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071457142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103779821 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085414642 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103531119 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097840492 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072396667 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089571131 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071718315 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090126068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071560267 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095652621 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098722543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070887589 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11542524 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088974198 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07174258 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097971025 seconds)
  done (took 6.597016447 seconds)
done (took 129.494374495 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.200800164 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185091533 seconds)
  done (took 1.201255461 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071167825 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.117234257 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08072855 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130195612 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08784912 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102787076 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121044907 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082308151 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069765326 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088385234 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069937928 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09073869 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134500423 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070493792 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088164038 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072474469 seconds)
  done (took 2.3010436 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104852485 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.201610284 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111023832 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067760306 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10090443 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080764057 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086719191 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080753963 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093957971 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067672176 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100052954 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07986636 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068406698 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099044426 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.094060642 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080695157 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067160714 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099133471 seconds)
  done (took 2.513037275 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098124206 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.10882625 seconds)
  done (took 1.034508013 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.203836481 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123478234 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205262536 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.473105512 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.242856948 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.29210572 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174336636 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.174352181 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15708275 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171425288 seconds)
  done (took 3.04229453 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101990216 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175734592 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318579222 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.141465332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090269971 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.118373504 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.142312461 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.112181853 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085204206 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101749264 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102501062 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079423011 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119591821 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079152864 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096670089 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.079644335 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122691905 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076600671 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.096800242 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079032586 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.120217162 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068865222 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096422683 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076983015 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.101564488 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081173603 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.08702528 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068649229 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.096095697 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.078388087 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.100645033 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115340598 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081872016 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.135123304 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10379652 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.135780956 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.098847206 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075519036 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077930038 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092917668 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079654894 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099691694 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.106671882 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079756582 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068468343 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098976461 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068402246 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.087097825 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.083633811 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.099365111 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082026363 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100284291 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134934855 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099066622 seconds)
  done (took 6.336509239 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.755869351 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137443023 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073572204 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.822120093 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117264891 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08710149 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.746845802 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096399853 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235497608 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755868628 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114481868 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.079780232 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206066154 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.22079064 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.906788818 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290598697 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.644540933 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106541494 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111720598 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136788627 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.165094944 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158380705 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152856103 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.410947153 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098078817 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074282443 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.142197764 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100620521 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143294783 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107900597 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07661867 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.160977173 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249904124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164291322 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097944998 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072147542 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073585113 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171741682 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.222510789 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.197414596 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162666223 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070751919 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092308673 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.144502207 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136404443 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070631618 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.146727851 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.176731265 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.155311224 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075944742 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.100450911 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.146799467 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143791831 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148979286 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101727319 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28970778 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.2964368 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07416447 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126721373 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.088757856 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240893439 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104601909 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185210467 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.141955641 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192705542 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073847147 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753820325 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.152799601 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093846939 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0796227 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121932539 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097318895 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143525672 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150289378 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389362106 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.149431177 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0761208 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093010949 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.186814903 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.107555152 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073800761 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145772517 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0990352 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127551768 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.151803022 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151011227 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152366836 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233587766 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148544841 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.141752833 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.097435349 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129401156 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.079136931 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195762029 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198843811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.146467655 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.194918604 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166049659 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.147984527 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.152105238 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080505342 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.17271294 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.123939748 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.084933635 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142650565 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.196121325 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.127264903 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107594062 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076816922 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.143668483 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.130670893 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.109248824 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.14461196 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.152792517 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.435838208 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171587146 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070723916 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10894608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145543902 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.143841446 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09993339 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221144683 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12847079 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.15224811 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124786597 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089792819 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123019424 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146009295 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.083243718 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127335889 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.162123174 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080999915 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.214769886 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194254566 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.081688049 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.219768202 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164441229 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079018009 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153116431 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125404393 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149134249 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101035172 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143897368 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09732199 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.729213879 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.168776733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127115215 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076423033 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168066243 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073332663 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10597677 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.087005642 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090082686 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.762793168 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108091852 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102561575 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.085817482 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098349826 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127540895 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14223615 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076056459 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164328261 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.1890455 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100861956 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123277458 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087231566 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.145263796 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.097962053 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105292708 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.087373943 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106748132 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128266661 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075755612 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105610481 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149563386 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145440705 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.199183904 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.555137029 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093512548 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085752367 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206366423 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093711182 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.250032983 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141568601 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20471529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.147540208 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103749283 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.296647884 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147116207 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170077174 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088385442 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154303051 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089514149 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139803196 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.147448797 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.094278417 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079127126 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144503587 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170397268 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149962188 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937348783 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073801926 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206218665 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.090293568 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.152627086 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07871718 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100356092 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.267463172 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073134369 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151336913 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.148856856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09527458 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.105502288 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.833454746 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086844963 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.165011433 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078935533 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198760828 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145268339 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.142146362 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.161953621 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.079621782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.144346501 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194875919 seconds)
  done (took 41.481974523 seconds)
done (took 58.729128319 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280660985 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213955683 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.234335242 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.14806415 seconds)
  done (took 1.803457999 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.147936212 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108541138 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11963188 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087390784 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10717754 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086483459 seconds)
  done (took 1.508888706 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.42927978 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.299861246 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.247304133 seconds)
  done (took 1.831287754 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.30174557 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.234636476 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.459891273 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.305561875 seconds)
  done (took 2.262091056 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.196347611 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116034458 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.091041088 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087140972 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.184779799 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.244677915 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.128513239 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189874566 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100678322 seconds)
  done (took 2.238811817 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.18206803 seconds)
done (took 10.67702918 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.225923078 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.285339829 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.117405092 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.343545518 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.285204831 seconds)
    (6/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.160233562 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.106305853 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.076226331 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.102604531 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.086238133 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.094885292 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.084028917 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.09864315 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.285948749 seconds)
    (15/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07540076 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.290334511 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.252070263 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.206362836 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.172100506 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.114732358 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.249041289 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101093674 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076129098 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093904548 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.103992004 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.096276385 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079709206 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.237657145 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096179168 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079031915 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05431869 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.220761918 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168552133 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 0.150018357 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077752285 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077666706 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.163945187 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075993147 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.157374896 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068966458 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097947112 seconds)
    (42/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.0759601 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.076156499 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0902044 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096446191 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092968639 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081185951 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.086804398 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064831488 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093944374 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.154214148 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09000788 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.246642493 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077565563 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055701378 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.227212493 seconds)
    (57/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.149570906 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173469061 seconds)
    (59/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098171907 seconds)
    (60/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073194558 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122592747 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074798281 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169355004 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.259533052 seconds)
    (65/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096088167 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.175653481 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.247518907 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.160295715 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.257142308 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.231716153 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.1139972 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.138367094 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067775778 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.090399263 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.05364803 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.121046894 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076241868 seconds)
    (78/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055169102 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.24288989 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.171522045 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.256774544 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.117875069 seconds)
    (83/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177821659 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.13449376 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062649234 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.286927133 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076050714 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091863662 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.053609946 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.125797177 seconds)
    (91/309) benchmarking ("sort", Int8, false)...
    done (took 0.167509198 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053904512 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.095438703 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157933753 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077486084 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09550312 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075323849 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.138536961 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.081004433 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096854515 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09955869 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.098887795 seconds)
    (103/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.115368574 seconds)
    (104/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055234141 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.24228867 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170034381 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064839804 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090590451 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090354301 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.120576258 seconds)
    (111/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.211854372 seconds)
    (112/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070464918 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079366995 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.100489657 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.102692574 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108144454 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.161754698 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077574239 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.099025436 seconds)
    (120/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.079840488 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.117358773 seconds)
    (122/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076557308 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073473802 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.096663724 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076431742 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195907835 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053463281 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06741971 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.160142481 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074797141 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.097050386 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.053940911 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.05411479 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164571883 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068165992 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.183315381 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.098446388 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.198757065 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083706811 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.112064896 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.069704347 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.06928559 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.085455732 seconds)
    (144/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070188203 seconds)
    (145/309) benchmarking ("sort", Float32, false)...
    done (took 0.152928506 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054489902 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078077338 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.115051268 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068465596 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.094313466 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085208432 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.313200356 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183851593 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077333891 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.155523794 seconds)
    (156/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.074952392 seconds)
    (157/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071469578 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.256922284 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.172828629 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068774561 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055992317 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.262630088 seconds)
    (163/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103814365 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069620138 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152798354 seconds)
    (166/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079030722 seconds)
    (167/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130396927 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093791158 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.140413537 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068530427 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.118224266 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073888154 seconds)
    (173/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.070036055 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09539184 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096418578 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116564669 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.241236358 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077670066 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.253729899 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067672861 seconds)
    (181/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.090568552 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.063638253 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067814358 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.259612633 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076095126 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.074918072 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068374145 seconds)
    (188/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.132662277 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053478505 seconds)
    (190/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.239896346 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107354276 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088404223 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.066761212 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094616699 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102004996 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054743043 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109110614 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.068078776 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.075116699 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068426878 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068996141 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.075834381 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077624222 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076759507 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092654143 seconds)
    (206/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.104835308 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091837749 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055204327 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053377565 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.074505086 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079004805 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.161275626 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.068857353 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054380559 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.156441198 seconds)
    (216/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069932614 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111771065 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113853703 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103484339 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074299098 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074825765 seconds)
    (222/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069898484 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.053835279 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.140366516 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082534292 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.076559488 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094189318 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067087118 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.10192631 seconds)
    (230/309) benchmarking ("sort", BigInt, false)...
    done (took 0.213245984 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06754944 seconds)
    (232/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.124930645 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123584503 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075299061 seconds)
    (235/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.065294626 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16769078 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.056821787 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.113274816 seconds)
    (239/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083811289 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089410745 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055959468 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054522627 seconds)
    (243/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053482097 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075047044 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08150969 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053376175 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090977472 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076496478 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.073619818 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068603506 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074193961 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.074798605 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090403896 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.054120775 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.239847855 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.204328934 seconds)
    (257/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069274183 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113198461 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068156854 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.142374774 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096950349 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074785887 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054037472 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.068707557 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09543136 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076400447 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.056032523 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097995744 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063975894 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067666538 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115019279 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.246838266 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175682388 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091239022 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.053955057 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102487792 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095246018 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055596232 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.0542029 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.07528459 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.071037632 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.068010706 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097276162 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068916141 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067771734 seconds)
    (286/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075326499 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054949381 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054137807 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.142494997 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067045952 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069326076 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.156549354 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.074270448 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053650388 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076398993 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054925884 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089690602 seconds)
    (298/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064056319 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07433544 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.089865499 seconds)
    (301/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064423366 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064038515 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115342886 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074426043 seconds)
    (305/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086674081 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.146324046 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076071266 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091549235 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.138411444 seconds)
  done (took 35.680767652 seconds)
done (took 36.535129769 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083803683 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117135623 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078255046 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117471057 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084473732 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102416831 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076722009 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.102841837 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083691948 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106889014 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082013289 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057030585 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099653339 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078202125 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0990875 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096357971 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103654631 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074979891 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097791219 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068046676 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077455357 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089777449 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071025924 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057283707 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.101661358 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076487363 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097724475 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078690675 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068485632 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088872561 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072504081 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098116786 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067555465 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081422331 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096028522 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077900802 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.100609805 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080286882 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071162512 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.090090176 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076592197 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089097962 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075834238 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07712443 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095570474 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074576454 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097921772 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083403055 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119391541 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070287884 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.099872811 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080169662 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081125325 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.098360774 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.0722995 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098154955 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07375622 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.119212032 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.077744459 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071024541 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098131927 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077214194 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.095958768 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07740576 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077613915 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100277723 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079532372 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096122858 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.079371875 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074873877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.088814239 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076631884 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092965667 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069150769 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079306005 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100446037 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067271191 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.094705138 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07504108 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074165437 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.089173655 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070727967 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070994475 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095063754 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07101636 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057449995 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093059333 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074941274 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088680178 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076721667 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074248516 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096379204 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069930476 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101550445 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06853101 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073925301 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.09025263 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06870458 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070854751 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093706468 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06851178 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091897411 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076815737 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070085821 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095373992 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082468228 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089962745 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074700578 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067632299 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088421918 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083992732 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098876323 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068655856 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070994712 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088520727 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075024527 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068917412 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.090108361 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069116592 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090157362 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.074164558 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068528976 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091150487 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075046749 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082562063 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092182862 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072222179 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09200227 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.068208871 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074752547 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090796916 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068809954 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070663423 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.086996055 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070662692 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070033035 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.096729537 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07139831 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098249342 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.070456468 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.077464548 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094808202 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07491143 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094341411 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06763455 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060733218 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09285055 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071242459 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069769194 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089775955 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070645107 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068488421 seconds)
done (took 13.490503267 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069441888 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175302938 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.129383301 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100608666 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.114147016 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069262157 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102433054 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.132863089 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071545936 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131492032 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091672918 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.111226541 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.141911144 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068060307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069101297 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094267643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07004533 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.115771228 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107536308 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112954913 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145080756 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068441175 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124683581 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.115424268 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.093256378 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130446475 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069255896 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.093974934 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072148411 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119169042 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089698765 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071804791 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091706992 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.12800449 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.099945086 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111214837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069474813 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.108975305 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068158423 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089291677 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.098825278 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125339783 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107270515 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087104364 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.093474629 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071398824 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071376535 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112359589 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.117651117 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.084252414 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.114409193 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138764447 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072550349 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.109031863 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067937196 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115283307 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086717088 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092974735 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069899797 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072167856 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08961806 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072258829 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.114374269 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.118131832 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07332086 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1084878 seconds)
  done (took 7.434491495 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087199817 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118579564 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087342328 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.110225538 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068735357 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070009455 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090642401 seconds)
  done (took 1.548232956 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069959212 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092745418 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.115772616 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093363265 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110868561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091253366 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10130704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069509111 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109824519 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070778718 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112971893 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109424283 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.092908828 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077638216 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.117580865 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069594705 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093977295 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091608837 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073033471 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.117333653 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072743737 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112347333 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071979397 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069947195 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10697206 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.07000705 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.141702487 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075265234 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093900582 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07346454 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068080183 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.144146667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.10587542 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080977222 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091900422 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08598143 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.106948014 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068574977 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086722489 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09672428 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084861969 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.093217265 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070650356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068717003 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.097185689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081476127 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092846503 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070640432 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073512522 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112963506 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070766445 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.107182885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070473751 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075184638 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.093816721 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075683218 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10159118 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071646011 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091335748 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092668366 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088102056 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109660508 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084511157 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109583456 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073136219 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.10661258 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084787123 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072986347 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093676889 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073652341 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110057094 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068153626 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072145081 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104050028 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070966288 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116775267 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09442704 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093224273 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080389247 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.093022308 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070687053 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070189568 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.117132723 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073909087 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09265674 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073749932 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072672328 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.091253131 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069405045 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073632338 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090969713 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072451009 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.094928231 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071768568 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073482589 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.109866038 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070642671 seconds)
  done (took 9.511029507 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071958578 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071461552 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094708336 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071600384 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071729757 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092757663 seconds)
  done (took 1.404828204 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103180713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094783631 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08537429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098583388 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111391901 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.109511401 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08626366 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109615676 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.089367924 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105273381 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085691483 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108770541 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091944665 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099605699 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085928887 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097961698 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086580259 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102222046 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08223784 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09967706 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.092382733 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.098620691 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077455669 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.110102134 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074528643 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.099040638 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081360645 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104997825 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083329041 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.10841289 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076177585 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095911505 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075723892 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108764805 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086187708 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097332067 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077104481 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075095031 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103451056 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074477033 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108122895 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078023409 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.10544386 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075533068 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109634997 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076045794 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.097599484 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081600774 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.108063789 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075258105 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.097488022 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076683812 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096570042 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075468312 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075726695 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109092205 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096886232 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086187547 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.099736838 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075487821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073306877 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.097257107 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.086201017 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096852159 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.085064343 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096521016 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074299105 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.09941744 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078002461 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098376017 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074864862 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094892785 seconds)
  done (took 7.524193825 seconds)
done (took 28.333901483 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.650618475 seconds)
  done (took 1.573161334 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.798491024 seconds)
  done (took 1.723356716 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.280652653 seconds)
  done (took 16.210200721 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.645959479 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.806105392 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.845329152 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139263582 seconds)
  done (took 3.362239579 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.872599301 seconds)
  done (took 1.821237008 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.243618513 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.254067613 seconds)
  done (took 1.431238291 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.722079888 seconds)
  done (took 1.655241344 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.286324103 seconds)
  done (took 2.21921886 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337397383 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188318609 seconds)
  done (took 1.462084498 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.528464083 seconds)
  done (took 1.465775219 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.751964397 seconds)
  done (took 7.69503138 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.23382768 seconds)
  done (took 1.184531473 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.273509052 seconds)
  done (took 1.215036006 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.148048234 seconds)
  done (took 4.088663249 seconds)
done (took 48.033377667 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081285647 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085438876 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106840587 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081738282 seconds)
  done (took 1.291135403 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081093521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076315162 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102707243 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074638557 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103140007 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076593395 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100274239 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.08046044 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098020557 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077212246 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077196654 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097904848 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078939082 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100163089 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07366486 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07949141 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102017811 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076597056 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10081462 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.076578983 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096238 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078069199 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101255538 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075410959 seconds)
  done (took 3.03246486 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081078234 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07526057 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099606706 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075346049 seconds)
  done (took 1.280259905 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079600639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119030525 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093882498 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103174068 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098545866 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11321113 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072663959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072859407 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096991452 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080012285 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.092885379 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104033753 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113950467 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080358216 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104639435 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068805075 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.094531064 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09222422 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079976438 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102830184 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072867144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101622848 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070933571 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116565291 seconds)
  done (took 3.176103684 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07928461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127912272 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083294834 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.118951804 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09540678 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069330001 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101230859 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094686056 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.152942738 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.090903184 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072771961 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069526215 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.09850616 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068288716 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079916293 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136463588 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140192659 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07243967 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.123458782 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070317251 seconds)
  done (took 2.89305398 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07750735 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073146203 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.091082891 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072256922 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080288757 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097994281 seconds)
  done (took 1.451758054 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071437963 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070142137 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091904384 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070769197 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074582316 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.091980545 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068255557 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070092194 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.0919151 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070895405 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092765636 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070105197 seconds)
  done (took 1.892602871 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.453503536 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071420234 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093569428 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068969083 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074412887 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092153461 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084582874 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070945256 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.117539969 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070613418 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092827272 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071716534 seconds)
  done (took 2.321896199 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26937955 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080056896 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.333242131 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172489702 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14238144 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15904451 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132450858 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120315594 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200758445 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142107668 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234480013 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22973333 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115624261 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196529631 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094081503 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135295081 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21526174 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203391999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134080744 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231120516 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188035686 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161156819 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208077812 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131567247 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138477002 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148197999 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074864166 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106994422 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241267042 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168062575 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206172863 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141510398 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100940383 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236666137 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225251547 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20032696 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16710207 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089442504 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161251622 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170339724 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263239985 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116653746 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224696834 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115214266 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107383994 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177526387 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150683893 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151328226 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.140056221 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116924363 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204718016 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222643938 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193838829 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091425902 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138273557 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143706057 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148222666 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131291065 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25085476 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224559886 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163472715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073971224 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124949595 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217415344 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164557323 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146393922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.159779907 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122932881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175191775 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218071589 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14970273 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182934336 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189662235 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093365548 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151319368 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201242104 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162029954 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236059674 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160847452 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07671725 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156766846 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13039492 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109318634 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.150510305 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102811017 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24272095 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104924042 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.142150315 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142970558 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138855198 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141167619 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227622951 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186318743 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133711727 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069121985 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132798268 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154006573 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206564506 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092505371 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139108571 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151414325 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.106057887 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171975057 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102629552 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156888803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082318601 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181183868 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16709715 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07955039 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158108102 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131280613 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.130346755 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171665172 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225941435 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095346864 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110069307 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233006419 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161621065 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135321765 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182841342 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220639966 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.13106315 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108527821 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211129591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252365082 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117989582 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206900664 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133662491 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111250465 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093901203 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182606702 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120399552 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150509942 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111199716 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157971595 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233926213 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079736478 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125102828 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171400075 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109975877 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108328207 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144315453 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105845681 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124841429 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.130023609 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13740421 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174026698 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158079971 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137426648 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160945461 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128797293 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227754331 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117653505 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133169739 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111213924 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09687179 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171206214 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222915442 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083588601 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232520588 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160734768 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13348134 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152830208 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086234369 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198279987 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082438251 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.098469108 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179762514 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142202174 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141874007 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.192034158 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133010618 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161001622 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.15619498 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191131816 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16727873 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168303374 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13776919 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.116747823 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143465825 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159704922 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076394401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12467358 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.110280974 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109743435 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122276805 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112009155 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180124211 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161821252 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127574287 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14252281 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127226234 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187536185 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.104047254 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165842134 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.151897984 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12505604 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.19369537 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220240196 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170653068 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130376084 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206434085 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075960991 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078138046 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119068929 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162452915 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112866518 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088641811 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172532224 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18909695 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161511193 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197178047 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118065166 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15432173 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.220191061 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074532818 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147094659 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212505323 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159796859 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.135546549 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115458084 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.129528 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182163097 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135308363 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256362955 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146753472 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157139385 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214868996 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133756867 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088052034 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135069608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17417168 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136217903 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.215905286 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131656969 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094810836 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143132626 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.109502573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133635875 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161595591 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151957518 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196390562 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.125143187 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19270027 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080916236 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147913289 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178763936 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155886549 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068440288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152219786 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230569448 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124821012 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151363922 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19344443 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108577933 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.153984533 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247358682 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183863183 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114381289 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14128035 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154381654 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166490409 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152153289 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177034813 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140700749 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194400267 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119212955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113915104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117183862 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10445821 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138961658 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.126028641 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145634931 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149506811 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123567253 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164951081 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144093021 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141615236 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152524974 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126881919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09679954 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126813445 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242940466 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156244272 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244065548 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105708744 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.212352853 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23522183 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079715187 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107943286 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.085451882 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201227935 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089568424 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193737213 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.101578229 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134689615 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161023885 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179700987 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12560659 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096435131 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118144883 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191734398 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141890196 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104640155 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.136995607 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230319139 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.134862126 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083029717 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157423003 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134793741 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133063082 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244417583 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.06441837 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126022698 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079967727 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108969967 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165333049 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222149117 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.08686948 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.156207461 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152212318 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155290204 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165171524 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130530316 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126058659 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143395604 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187097511 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162152667 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119474163 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145159253 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16532037 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221567962 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137411009 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.124618074 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21018102 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218824071 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229983342 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093095272 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148147162 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147668322 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143251799 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205932191 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088662737 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232954893 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111881978 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172948363 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133896616 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12150908 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16444674 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126729568 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118611797 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204486909 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151679125 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112147447 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082637598 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146559211 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154297482 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133345857 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102483175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176100211 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100233606 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17217085 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236314718 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085698403 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138208817 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12765759 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086536333 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137535491 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13433965 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115737125 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.12330428 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237476342 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.121067134 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215718441 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176582379 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147766064 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199950104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13222724 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.668310022 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082706482 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220015636 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152167548 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2493879 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129068702 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152867714 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141986681 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156008143 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18044596 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137672269 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209353694 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166828671 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.153576143 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107445789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134585545 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144710292 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.095464287 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137449129 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148342275 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148620673 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.130633102 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153240423 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188019202 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086624773 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12706198 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199205465 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149527085 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204606748 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177960212 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114007227 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153848035 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178013689 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109642196 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157476942 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222382394 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139439918 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130797171 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085575417 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.137541604 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23959001 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.076134681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228910642 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158127471 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141576476 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147615641 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.179317281 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170318463 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139491263 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15901965 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125745039 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145694027 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149561127 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090166222 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.107426814 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136846888 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146584716 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.129267154 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110745261 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.14638469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21538158 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.075367628 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125587092 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108942344 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206295881 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247164131 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0945118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111820827 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15127892 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145297004 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147208838 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15957081 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110723726 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086813022 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.112188996 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.116810501 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137631197 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146597558 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132802224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14315785 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23284921 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089325865 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255302195 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125673372 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140532005 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074290258 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10868352 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10114197 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127222013 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135945455 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127906681 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21417861 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127038228 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120135643 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123495869 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078058102 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112030632 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166237856 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143917537 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155444033 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127210834 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06643776 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139671145 seconds)
  done (took 73.647050467 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.135734457 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104754502 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.119995337 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175116586 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.14948057 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.241749317 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182600053 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227359897 seconds)
  done (took 2.362719443 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071762204 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119327975 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105592523 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.118114301 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090470081 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071558556 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.304726768 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111754078 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090999614 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093684811 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121600324 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092619442 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.480027966 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068659803 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094889428 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086209852 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070845854 seconds)
  done (took 3.210982617 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.444845425 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611668011 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.449110632 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100881645 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.750571034 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110210296 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.10695695 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160418851 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092833793 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.410991565 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732738503 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.146353561 seconds)
  done (took 17.146414774 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076557026 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073022889 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111807148 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087097008 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.099946095 seconds)
  done (took 1.475836383 seconds)
done (took 116.119516998 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083166642 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.376606161 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055983217 seconds)
  done (took 1.495146919 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086607729 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089217145 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113365907 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08770755 seconds)
  done (took 1.413753618 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076834174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07921413 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113251149 seconds)
  done (took 1.3036253 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.295979599 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170561311 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091834546 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085821899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080319013 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10590357 seconds)
  done (took 1.306562736 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075865592 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078529458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10044265 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079247788 seconds)
  done (took 1.362149148 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079128592 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.0555389 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057720969 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083150863 seconds)
  done (took 1.309619951 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094587735 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107650981 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083805985 seconds)
  done (took 1.31576933 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112576419 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.114479239 seconds)
  done (took 1.260033873 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084187087 seconds)
  done (took 1.111840204 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09694077 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.144569242 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.166141464 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141395936 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176610175 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.143961971 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116266089 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092176459 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.105394636 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.118607595 seconds)
  done (took 2.335234183 seconds)
done (took 15.877300085 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080352845 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.486205461 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365660477 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119618935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673781441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.384876321 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.004951366 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121123985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112942299 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096109173 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086568049 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.684447372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960387851 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.441591196 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.94751422 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318467884 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678629512 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07107857 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.094820443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071738527 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.991633044 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094991622 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071739444 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095622739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.662797032 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374615071 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095675985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317099675 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095272759 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074063589 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358510992 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095837045 seconds)
  done (took 16.151726805 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074345252 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146928563 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076909667 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08733684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098427378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072439649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099926843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073025037 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152068047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071075426 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11383482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070988227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100596633 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072637072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089829345 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096784813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072826107 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096743719 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071775028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072025859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11452423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071945355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096217839 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07257744 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072368391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108749086 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071925423 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096041526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070866293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073515985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099132249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071405291 seconds)
  done (took 3.865979571 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117837917 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155393018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078885167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130529203 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.144249266 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074067692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.174305873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097831936 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154623094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072063163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.113401648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071765064 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129886943 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07281036 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.116460702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072591827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097287938 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071607173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071660201 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097181873 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09060107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09600513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071302078 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070918843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095821892 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085098601 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096785408 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07399369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095436518 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073120608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075734848 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096786364 seconds)
  done (took 4.176793456 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075745417 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077425294 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111179592 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086801962 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098173031 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075845691 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076133685 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.098233445 seconds)
  done (took 1.736470311 seconds)
done (took 26.956329859 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082009127 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07354625 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101456812 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084876544 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101043701 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082275021 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070560682 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102781055 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078377588 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101555478 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078704276 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070463728 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.099191098 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070271681 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078685557 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096570879 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083320671 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.099365595 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083191469 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.109467782 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072576356 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079348149 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10195507 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08254601 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109374131 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082727103 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108411664 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077639569 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073012083 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099016048 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080158395 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11440295 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071069741 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107952216 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072368358 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071138747 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.09536354 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071301303 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083774728 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102521613 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074031648 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103106735 seconds)
  done (took 4.710784439 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.09233885 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096512571 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114930613 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064851294 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096813984 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064733691 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.119840828 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06341668 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064841174 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.118289157 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058357692 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060615506 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08848514 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057527369 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061212151 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059291062 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088740455 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059368684 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060814622 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.086274405 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063803344 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056906989 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088617296 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06347675 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059507576 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066026653 seconds)
  done (took 3.01816495 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077949951 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086481411 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11640647 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133218911 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135601041 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078641406 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106840365 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090226775 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.113671953 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069984998 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.100271373 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.100803774 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090050646 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103840342 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071584866 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.11217006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085855729 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072336701 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103514996 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092949446 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113424428 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080944374 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.119584405 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082596277 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070394913 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099257599 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075595957 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.110963976 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075727806 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080966849 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101558869 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074753301 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098144044 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082593279 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100724812 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072611839 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090761863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106254693 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080167107 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097509314 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074884688 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072147621 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11756036 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115713021 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096360191 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077927791 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.10455511 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081796163 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.07227977 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115267328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081066301 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095854821 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075643906 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070732039 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096364685 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085414182 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098025489 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073588084 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.080207318 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099513828 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083474984 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.100580948 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087112389 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070524062 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10435278 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069768838 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097030181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069888445 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093734753 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097269355 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111311736 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.097019106 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073074979 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.105098153 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078457356 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077877764 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097059954 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087212181 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10539104 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073631627 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079113779 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.100191237 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074644054 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.114379944 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073909308 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073042201 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.097021504 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077116998 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.099601941 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072391201 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085400954 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097293192 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073921178 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11371215 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071154675 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.072921853 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.10239306 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076028512 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094757816 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083050293 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.101957658 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070842768 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.080801864 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096166509 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073747876 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081770927 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.1018088 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.0703926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101373812 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076860329 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071859235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098089056 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074475207 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098161248 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080786403 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07795044 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102215443 seconds)
  done (took 11.566194884 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201270138 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.191480301 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073684878 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.183454242 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083522294 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108769755 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185488422 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104296237 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098481774 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070949158 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.097421121 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111431086 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132222156 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142447668 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083112659 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070582675 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115363581 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13901364 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.187528791 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.152903893 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.125470471 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079655937 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099922061 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072448223 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.098636549 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081421297 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114481126 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083082298 seconds)
  done (took 4.341135585 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086624066 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129617741 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077083974 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.118093197 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.097072885 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.097104551 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075994047 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07219082 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11015856 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083363027 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.096186618 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077199314 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.103374078 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079311879 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072062992 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107211332 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080589924 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09833805 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074127455 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07591456 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.103761578 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084275052 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101411781 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070615033 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079267033 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.096919381 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068591944 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115211107 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071339875 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.1196204 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069010442 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.104399975 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080941956 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070988999 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097506787 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074192744 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098266064 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073942989 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073089028 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095839108 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069920613 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060373122 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095200587 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084236547 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102774738 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062448557 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077329069 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102302928 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075322605 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.094402429 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073198335 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073733526 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.100029625 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079090898 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075496631 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102117217 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074103062 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096109837 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077929661 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073171078 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.093130203 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070130086 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074840089 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096383021 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078937412 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.101149779 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070494266 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072851483 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.102469716 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077290464 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.098405188 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074158993 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068743834 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.099658557 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076043803 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.076188855 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100013861 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070271436 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096406653 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071783934 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058100766 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096509451 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057600633 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075379638 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095655649 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069915064 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07276156 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.105609393 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085818541 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.097634175 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077251326 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096872366 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0706042 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073903506 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.091854255 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073443529 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086738155 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11227196 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095871563 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068781901 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084667514 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10256154 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069552891 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059178564 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104974543 seconds)
  done (took 10.02709952 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095468191 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.120387259 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073667529 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084891184 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123754177 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095900849 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.10441702 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078142523 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072742672 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11543577 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072249241 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106002773 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075737167 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079978933 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122234047 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079010756 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.099403058 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079924721 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.104974842 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.109054774 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08438387 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.111483648 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.082072037 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.097204792 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0753128 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108647349 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100104439 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081681712 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106963127 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084562169 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.106820264 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.09900173 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111977377 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.076149136 seconds)
  done (took 4.28510318 seconds)
done (took 38.979097479 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.125133669 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.319422518 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.112111343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.898083775 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.116512388 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.150285721 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.123995679 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.111044841 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.289191567 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.111467318 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.356828837 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.622249916 seconds)
done (took 58.394504594 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.135452382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.250688653 seconds)
    (2/2) benchmarking "String"...
    done (took 1.383101581 seconds)
  done (took 3.688212513 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.477603404 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.024220983 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.394897028 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.111193376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.116063939 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.558058879 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.570207684 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.877084671 seconds)
  done (took 26.70632551 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.116138684 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.429730371 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.182517919 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.163801154 seconds)
  done (took 16.947939948 seconds)
done (took 57.012585629 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.09608124 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.166702568 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.112646787 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.109935239 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.207549624 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.133503805 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.354798845 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.122085341 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.110223753 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.103131439 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.108471106 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.129020287 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.123721357 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.328289737 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.108892032 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.107536223 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.117129781 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.581175546 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.445720566 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.11720047 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.123283983 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.157006331 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.112761484 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.109372111 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.136462293 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.109928474 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.108298199 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.115607552 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 3.799825098 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.10787672 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.172581214 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.555214647 seconds)
  done (took 186.347237832 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.10650297 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.995300554 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.113122458 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.131333511 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.458189187 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.305964547 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.244625586 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.562007775 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.11969175 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.113258146 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.271211133 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.109780215 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.320904894 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.087554221 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.117205569 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.191955217 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.307870871 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.347267151 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.120520039 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.34082315 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.131966713 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.234826434 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.120289368 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.259062682 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.157148635 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.161423035 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.139376455 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.13336063 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.298830638 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.26032099 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.143343006 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.121874326 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.590189771 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.96510486 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.12211117 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.126193983 seconds)
  done (took 145.38411797 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.338777599 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.100822264 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.098637664 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.096330361 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.121992492 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.096612717 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.54051747 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.543174536 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.583350683 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.494872262 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.15303439 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.231329105 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.098408218 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.182282292 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.107813654 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.096163109 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.097351222 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.110634051 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.124048509 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.096763233 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.096803792 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.539266798 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.11373725 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.251706739 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.10550835 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.098225186 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.122191533 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.097226267 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.487098909 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.096989609 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.124174716 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.397306172 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.134828253 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.098685315 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.301250491 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.756732015 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.097129671 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.201324733 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.100210155 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.123359816 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.098335124 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.355123594 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.099307239 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.098903052 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.101155465 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.599601977 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.09956349 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.544142382 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.098114136 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.914592625 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.097845876 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.097963948 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.143426482 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.383898378 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.100993902 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.098979856 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.101237901 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.097936107 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.0979301 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.123536947 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.140652447 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.190218233 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.099849903 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.102469982 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.124094275 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.100127251 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.241737131 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.099662707 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.665892775 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.154647064 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.316919742 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.544640921 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.101092863 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.186410736 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.211206744 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.099850436 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.097987674 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.099949844 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.099083024 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.201441876 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.099669931 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.437972028 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.106097906 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.101189793 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.156565233 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.186683943 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.100828551 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.298926209 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.102050656 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.100078605 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.700620065 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.186424158 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.101611685 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.101076991 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.100937384 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.439070714 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.548246839 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.187606412 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.103034459 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.131882497 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.104014022 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.450316317 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.537251023 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.597476762 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.103955232 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.202557017 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.104407806 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.102052843 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.101870747 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.101111887 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.130454504 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.102250706 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.152375394 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.101353315 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.492821878 seconds)
  done (took 330.275675921 seconds)
done (took 664.403345434 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.759221111 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.726200904 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.847496997 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.740479891 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.723587956 seconds)
  done (took 9.844152193 seconds)
done (took 10.89073459 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.26439054 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.263568537 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.153387051 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.263347765 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.12920604 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.277228713 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.24333319 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.125251899 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.192747684 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.166644222 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.195931306 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.145664143 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.128128764 seconds)
  done (took 16.59716471 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39604517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.401907647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.169696994 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.393800769 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.146477196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.392903397 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.292641668 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.299281043 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282931975 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.120484448 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.118783338 seconds)
  done (took 15.063794586 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.400767677 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398215487 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.172919569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.404393837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.147433122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.405790894 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.298833825 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.303706029 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.292827822 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.121559903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.118808287 seconds)
  done (took 15.115159891 seconds)
done (took 47.825219883 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.115645111 seconds)
  done (took 2.165221704 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.145967819 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.301164844 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.126659422 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.120912687 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.117021182 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.117853714 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.121198526 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.120701662 seconds)
  done (took 10.221942794 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.10662881 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.108861725 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.1076608 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.106922655 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.109539923 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.107100573 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.106578796 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.110179196 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.102362944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.101694054 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.10429603 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.103428738 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.103721235 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.102222068 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.103374198 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.103974253 seconds)
  done (took 18.734692435 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.101127299 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.095444852 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.09410541 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.093979647 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.093900386 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.094610695 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.095418179 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.094364059 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.094856088 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.093421124 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.08967989 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.08923961 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.089610477 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.089527095 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.089564709 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.090644504 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.089078535 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.090402276 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.094027769 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.088751804 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.090262894 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.090204362 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.090876636 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.08933996 seconds)
  done (took 27.256633284 seconds)
done (took 59.428472428 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.894494227 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.437498506 seconds)
  done (took 8.361424957 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.09196936 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.092312916 seconds)
  done (took 3.214847073 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.091912592 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.092070078 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.092032617 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.092070484 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.092796552 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.091822085 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.092773583 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.091842439 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.093185548 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.092875633 seconds)
  done (took 11.952342635 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.092551859 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.093069925 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.090397994 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.093030227 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.093143178 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.089821347 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.09318036 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.092063907 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.09321341 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.090239982 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.093237561 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.090484546 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.092897516 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.090953461 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.093634429 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.091016492 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.090121155 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.090534777 seconds)
  done (took 20.68407609 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.092924195 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.093289201 seconds)
  done (took 3.217314592 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.091263491 seconds)
    (2/7) benchmarking "second"...
    done (took 1.091390887 seconds)
    (3/7) benchmarking "month"...
    done (took 1.09192758 seconds)
    (4/7) benchmarking "year"...
    done (took 1.091604052 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.091389469 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.091918816 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.090750355 seconds)
  done (took 8.670050223 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.094458468 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.270580144 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.346058692 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.725788131 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.094988513 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.096933476 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.95531569 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.098009654 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.100693593 seconds)
  done (took 12.813815857 seconds)
done (took 69.944510942 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.045463514 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.086952941 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.8848989 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.106129408 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.102324572 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.431032762 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.092792535 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.224761898 seconds)
done (took 36.006418215 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.105388181 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.723101209 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.763435232 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.086688259 seconds)
  done (took 10.605106032 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.076260295 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.911545522 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.076297386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.003646609 seconds)
  done (took 17.099879488 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.63160111 seconds)
    (2/2) benchmarking "read"...
    done (took 1.418107335 seconds)
  done (took 4.081145496 seconds)
done (took 38.924425592 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.095348647 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.094966229 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.092890995 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.095395976 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.092314154 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.092377951 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.095418112 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.09565603 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.095462309 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.092994377 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.094545453 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.095347567 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.093180472 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.092482209 seconds)
    (15/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.096161454 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.095735675 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.093165149 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.095148507 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.093430302 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.093373001 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.093980052 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.096082366 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.09295641 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.093645339 seconds)
  done (took 27.293271748 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.095764334 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.094761989 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.096134852 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.096755701 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.093714405 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.096368342 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.095914473 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.09356619 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.096556351 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.096229267 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.094133064 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.094946825 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.095907668 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.094230815 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.096696229 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.094548938 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.097014673 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.093602244 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.096986955 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.094706039 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.096907229 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.094374997 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.095784257 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.096812202 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.09431105 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.09468848 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.097713772 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.096432486 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.097809131 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.094557626 seconds)
  done (took 33.901248044 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.101297774 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.102520631 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.09658851 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.097116609 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.097999277 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.096946524 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.097314035 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.09740119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.097781584 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.097414973 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.097860201 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.098064727 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.097980995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.098344987 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.098089869 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.098154187 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.096800903 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.098448369 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.09800109 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.098593818 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.097949547 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.098046952 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.098582989 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.098443671 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.098133334 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.099269358 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.098711991 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.098791202 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.098117311 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.098625105 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.098548112 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.09982799 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.098248777 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.098383609 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.0991908 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.098485764 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.102488116 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.104697985 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.099576559 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.09903642 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.099106247 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.09900336 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.098182034 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.099284057 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.099153964 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.099074104 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.098617085 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.099992879 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.099164269 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.099586347 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.098830491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.099618908 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.099822878 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.099532062 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.098431768 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.099557243 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.099894611 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.099742998 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.098815325 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.099571397 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.098976707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.099916237 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.100372317 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.099237339 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.100342929 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.099658369 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.10077823 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.100367312 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.100447446 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.099631146 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.09963759 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.099867109 seconds)
  done (took 80.167026775 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.100161878 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.098267442 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.09789674 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.098126548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.098581201 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.100291387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.099410031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.101521033 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.098341639 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.101188684 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.10114921 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.099125233 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.09801214 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.101601865 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.101970033 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.09928012 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.101356903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.098343289 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.101577436 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.102286965 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.100732263 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.098332264 seconds)
  done (took 25.235630909 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.101222217 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.101538491 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.098834957 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.101332983 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.099615026 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.100851849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.101878703 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.100440718 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102763513 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.099837009 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.099919562 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103037161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.099295105 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.098868711 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.100119946 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.099621296 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.102928132 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.100337092 seconds)
  done (took 20.850383116 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.100131729 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.099905103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.102816859 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.100363531 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.100172927 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.103199312 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.099412415 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.102770336 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.102177319 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.100555018 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.102730576 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.102860299 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.102718483 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.101451444 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.103862987 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.100234396 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.10350545 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.100648346 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.10340378 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.099747401 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.101879609 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.10305512 seconds)
  done (took 25.277645107 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.10377574 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.103517905 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.101727423 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.101328136 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.100597334 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.104046978 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.103458191 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.101321329 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.102981471 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.103202066 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.1015568 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.104061077 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.101431373 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.102704769 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.101071076 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.101004916 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.104019697 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.101721319 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.104119715 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.102160793 seconds)
  done (took 23.089827547 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.106532643 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.105438236 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.106357341 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.106780656 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.106984852 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.106481423 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.106180604 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.106204538 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.106290905 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.107344164 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.105993748 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.104947833 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.106807295 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.106342475 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.106997362 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.10685876 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.107429754 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.106510878 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.106679579 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.106076634 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.106327282 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.106792251 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.10728775 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.10684054 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.107261876 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.106339292 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.106558048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.107103282 seconds)
  done (took 32.024405151 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.106620751 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.105594321 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.103938837 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.103261649 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.103964118 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.103870629 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.103273738 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.103800122 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.106624611 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.104016699 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.108255101 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.107173048 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.105370521 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.106784665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.106165017 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.107572514 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.107380672 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.104124889 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.10376264 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.104338878 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.107230191 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.106394272 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.106927945 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.104968029 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.104843078 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.107013442 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.104455911 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.104570924 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.106267531 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.104592515 seconds)
  done (took 34.206481128 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.124886109 seconds)
    (2/2) benchmarking "in"...
    done (took 1.125484394 seconds)
  done (took 3.293407092 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.10457141 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.108520825 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.108267134 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.104905222 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.105310028 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.108693363 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.108236166 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.104631142 seconds)
  done (took 9.896631812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.107203677 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.107873829 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.10730668 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.107687366 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.109102655 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.107807454 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.115163508 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.122663642 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.10766054 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.107311271 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.11300542 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.11358335 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.110954412 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.109383008 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.107993597 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.109985537 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.108345809 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.10896381 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.10920549 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.109496629 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.109427577 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.111929235 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.109661372 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.106225886 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.109128059 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.119729922 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.111403114 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.109331378 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.108926105 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.113811885 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.109043834 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.106178695 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.110588802 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.109301184 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.110492669 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.109935829 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.118984198 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.124010885 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.115730554 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.110237397 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.109293464 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.10710507 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.110304912 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.111722742 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.110788826 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.110755377 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.110780638 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.10752831 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.108958673 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.111560581 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.113440418 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.108901096 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.108041713 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.113201967 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.110826163 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.116886941 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.124730921 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.112423028 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.117175773 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.119065541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.120939522 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.117097187 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.111647302 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.111751735 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.119239244 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.128894042 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.116537855 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.122570193 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.108606247 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.110972975 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.118039126 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.122075649 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.118103391 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.111437214 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.11164584 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.111431468 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.111566555 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.111300782 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.118238208 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.128448666 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.111866434 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.112228793 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.120082393 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.129378516 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.110687955 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.112634542 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.112473821 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.113307293 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.112440054 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.121766217 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.126634385 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.112361007 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.110973417 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.111172567 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.112182056 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.112426345 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.11082755 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.113177787 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.109382775 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.111773187 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.112395057 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.114179036 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.118728834 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.113757666 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.113640853 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.119327413 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.112272054 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.111601131 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.118283751 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.112874493 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.112238409 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.112674465 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.116530547 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.111186984 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.115248208 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.118481648 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.113041327 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.115470065 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.113593147 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.113751356 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.120216162 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.132863105 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.1143268 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.113750406 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.116704378 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.12238938 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.114733826 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.116585389 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.114189848 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.111018904 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.11159717 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.115076041 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.114482658 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.11335148 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.113829613 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.11398206 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.11186632 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.114363728 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.114648359 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.114529695 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.115126235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.113825968 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.114627982 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.115834758 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.114431763 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.114896875 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.120208714 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.114426875 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.115210547 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.115068427 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.111591904 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.115425734 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.11444005 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.115378732 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.114121585 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.114942196 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.11524035 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.115029013 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.115312753 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.115418451 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.115776615 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.114815489 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.117789166 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.116160021 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.117622387 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.114323519 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.112041411 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.115471991 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.115816449 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.116004782 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.115945978 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.114042129 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.117242878 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.122895429 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.115959756 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.116708507 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.118484489 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.115461971 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.117167304 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.117021192 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.117749245 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.121739276 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.116948737 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.122875483 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.11590056 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.116566278 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.117397433 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.116430097 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.115573548 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.11639669 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.117629431 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.120025751 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.124683136 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.120833353 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.115384029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.116845131 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.115129527 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.117752631 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.118859109 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.109258544 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.108697635 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.109193681 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.107891212 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.108921641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.110051587 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.108424524 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.108523912 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.109484768 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.105891934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.102887659 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.103179477 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.103125782 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.10349424 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.100364525 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.102867189 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.102806429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.102176507 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.098874809 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.096543617 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.09815273 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.098548707 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.098599955 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.105364868 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.097070138 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.098722969 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.099294618 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.098846949 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.095180023 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.096482253 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.09830635 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.095862676 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.103061354 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.110470812 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.096823735 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.10178458 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.110495603 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.096363558 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.099045425 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.096201458 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.096067037 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.098117015 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.102816289 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.096917911 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.097618905 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.096990825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.096343997 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.097516443 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.105856557 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.095014306 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.096491852 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.098979074 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.098512659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.094973514 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.097859774 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.097799525 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.097867806 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.099359664 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.098239233 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.09731581 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.098371581 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.097768428 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.097815608 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.09812266 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.100167844 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.103958946 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.101442386 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.098190137 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.099661577 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.098232895 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.1010225 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.098723033 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.097766636 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.09747923 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.109142761 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.104410659 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.104610202 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.099946848 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.097925991 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.10300821 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.099329539 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.101218408 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.098456136 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.098213517 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.098255341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.098018472 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.096125433 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.098894442 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.099950807 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.099526963 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.099593189 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.101945982 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.098872882 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.099062376 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.09980762 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.098801384 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.100546324 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.098387795 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.099293928 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.10153823 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.100293732 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.098919878 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.099586991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.106710819 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.114312819 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.099945384 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.099268103 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.100150967 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.099027141 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.100973537 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.098951768 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.102826269 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.105922765 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.102733436 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.106408052 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.101130266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.107941014 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.100453317 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.102620482 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.105476016 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.098350105 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.100121954 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.101306137 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.099896348 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.10754054 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.115480839 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.101436542 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.10431427 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.101596965 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.10153436 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.100425255 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.100743258 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.101188787 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.101800105 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.110962789 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.116179973 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.104566478 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.102403292 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.098781576 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.102433186 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.101579423 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.100687022 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.104432983 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.101519129 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.10252427 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.101005853 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.101402562 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.102351693 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.101599623 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.103185487 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.100452256 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.102431064 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.108322639 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.116384003 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.105619533 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.102418079 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.110559128 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.101917492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.109120565 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.116112503 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.102389906 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.102347383 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.102211424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.103315933 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.102196954 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.103705587 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.103009781 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.103294139 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.105166604 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.101580574 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.104680228 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.103628107 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.102782037 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.101740086 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.111251542 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.120742322 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.104480115 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.106077806 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.100288328 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.102898656 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.106025277 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.103520963 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.102195756 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.105495659 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.111448949 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.109159624 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.103827384 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.103343067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.103654579 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.103224097 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.104060064 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.104074653 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.103153012 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.1041767 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.104144118 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.103255206 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.107570393 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.103897976 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.104390134 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.105098422 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.105025231 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.11329134 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.10427865 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.105825359 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.104309401 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.105120197 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.10459419 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.104556162 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.103771525 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.104830783 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.104192863 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.106240611 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.11025574 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.109260815 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.107157506 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.10380542 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.10529638 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.104935075 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.10530826 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.104960552 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.10535204 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.105677426 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.10587835 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.10431578 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.105886757 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.104426754 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.104719936 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.10538477 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.105232192 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.106879148 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.110648559 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.106068843 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.103036727 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.105660603 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.106865061 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.105208997 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.106711623 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.113851228 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.108464881 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.11376411 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.112433665 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.108972236 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.106295612 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.108220821 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.111840435 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.10502191 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.107189321 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.106954509 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.108343259 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.107525665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.10858591 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.106913157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.113218823 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.107246578 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.106017373 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.114702643 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.121548134 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.106305468 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.108490386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.109026193 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.105942019 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.103808041 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.107289048 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.106823013 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.112919888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.122071444 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.108265065 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.109053709 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.105612038 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.107877481 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.110518548 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.108526075 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.107305078 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.104601228 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.107936979 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.107517701 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.107952267 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.104484397 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.107028791 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.107816568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.1108373 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.112492159 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.10600157 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.109726207 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.108366962 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.108534334 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.108294655 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.108620895 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.105740563 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.105934095 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.108991016 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.108749831 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.108548296 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.111017647 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.108256002 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.109301796 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.108479659 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.108764491 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.111279197 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.116674001 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.115308947 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.10646569 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.108319871 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.108925459 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.111464971 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.107697582 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.109649281 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.108896448 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.110524323 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.109246395 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.108552487 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.109235854 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.111585524 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.121849571 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.124182574 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.110373805 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.109400253 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.11297285 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.110521713 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.107512836 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.110492613 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.112260987 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.111460321 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.116278986 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.111009792 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.11672948 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.124095212 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.110747037 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.11384745 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.112346709 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.116626817 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.112905444 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.109971366 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.111057651 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.114537483 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.123750185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.111328545 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.119367436 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.135610195 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.125765083 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.111740114 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.110208642 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.110941055 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.110733943 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.111770671 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.110813989 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.110473517 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.111380071 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.110640372 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.111695134 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.115491302 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.112039437 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.111291228 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.111088957 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.111109163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.11277596 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.109664554 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.111613733 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.112165648 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.111778461 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.111180236 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.111822874 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.112732845 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.123575493 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.119513762 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.112349506 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.111195629 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.109624526 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.113948975 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.113949936 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.120007053 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.117732898 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.112517636 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.112172596 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.113771748 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.111764572 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.110338022 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.113169312 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.112707247 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.111934869 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.110003953 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.123871614 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.118751554 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.117592361 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.113622506 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.113497427 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.113722988 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.11413067 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.112459478 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.113173498 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.115369045 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.113507999 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.115702579 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.113259771 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.113037187 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.115073655 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.118921619 seconds)
  done (took 662.078190107 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.111612751 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.110840266 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.111351294 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.111970768 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.111614135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111031956 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.110468902 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.111025951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.111126471 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.111898653 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.111451253 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111664929 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.112162474 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.11220362 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.112010843 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.111930352 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.111679466 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.112001878 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.112487292 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.111621812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.111785272 seconds)
  done (took 24.394003832 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.114839473 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.111929715 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.1119329 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.115434442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.11191045 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.114798879 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.111261219 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.114054216 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.114720951 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.110528855 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.115328136 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.11515661 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.112616558 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.112836192 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.11264696 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.114406511 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.115018094 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.112602645 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.114229477 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.112800472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.115005428 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.112232271 seconds)
  done (took 25.546508699 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.115868423 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.115636017 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.115346784 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.112325729 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.11493896 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.112994415 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.115776451 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.116395174 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.115275459 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.115873357 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.114629967 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.11669625 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.121536548 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.118316481 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.117151121 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.116468799 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.259481256 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.115583645 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.116582478 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.116713043 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.113059876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.121542225 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.114802357 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.113376846 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.115019455 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.116129682 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.116407267 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.117431734 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.116769251 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.116836185 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.119097794 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.116710774 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.11676112 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.119183586 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.116078836 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.117971456 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.119475762 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.117815512 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.115190484 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.117207448 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.125629177 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.1327084 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.117732006 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.12293309 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.117556779 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.117758404 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.11983708 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.12239666 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.115333884 seconds)
  done (took 55.944773859 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.118339576 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.11708906 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.115721245 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.117784331 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.118114085 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.118612346 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.117222637 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.118266703 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.115865975 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.115678351 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.118498247 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.115677727 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.115445822 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.1181673 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.11942567 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.115298498 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.115673355 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.115871869 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.116454057 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.116221881 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.115442136 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.119175918 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.119056919 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.116177516 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.118404143 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.117647558 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.116448187 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.118884286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.117190807 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.116697444 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.118200848 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.119723756 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.118804708 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.116113544 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.1162398 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.118458602 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.120152499 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.116714689 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.118530103 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.117840717 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.119585932 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.118613365 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.119223834 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.119588936 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.116585068 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.116395664 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.115881046 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.11862436 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.117951676 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.119755674 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.119923516 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.117739889 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.120407693 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.117112518 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.120038783 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.120398718 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.117282825 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.117875002 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.120129175 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.118027569 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.116803196 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.120469496 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.118156853 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.12098415 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.121213902 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.118461237 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.118096581 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.120698682 seconds)
  done (took 77.078058495 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.120617284 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.121122936 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.120867993 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.120289781 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.120899152 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.121147412 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.121240514 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.120146117 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.121010354 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.121465359 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.120921051 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.121422517 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.121069787 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.121282268 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.121135654 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.122039873 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.121485486 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.121677629 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.121963828 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.122265704 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.121126449 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.122198658 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.121535721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.121547336 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.122441115 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.121944745 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.12248657 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.12142245 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.12289001 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.12309629 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.123183372 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.122711206 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.122482 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.122375054 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.123575414 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.12269501 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.122890204 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.12221441 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.122589463 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.122811385 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.12364801 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.122847562 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.122852898 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.123338345 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.12325535 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.124051257 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.123069077 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.123291291 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.123314933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.123426124 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.122409231 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.123120635 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.123989446 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.122917705 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.123781071 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.122986284 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.122884857 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.123028419 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.123218337 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.123433212 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.123238738 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.12306927 seconds)
  done (took 70.641886956 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.122579991 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.123791704 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.122726837 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.122000257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.123220154 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.120566094 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.123588907 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.124096161 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.123281176 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.124549374 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.123776191 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.121551594 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.120370536 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.124339706 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.121093529 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.120954699 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.122805704 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.121397966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.123901223 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.12181318 seconds)
  done (took 23.512127682 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.122125573 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.125372427 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.122801197 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.122397325 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.124222501 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.12173582 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.125416992 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.125456648 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.122834628 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.12598159 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.125299888 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.125091473 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.121580092 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.12342268 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.126311127 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.122375671 seconds)
  done (took 19.043427026 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.121910504 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.125346885 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.125916461 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.125714973 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.122363721 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.123744368 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.125299909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.123081439 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.122994554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.126124682 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.125014037 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.12601327 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.125905826 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.12498948 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.122942676 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.125523982 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.123554211 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.123999715 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.126344712 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.126114897 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.123969291 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.124071685 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.126734349 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.126801535 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.123820132 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.12537105 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.125167117 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.123824116 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.123761726 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.125966399 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.123919526 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.12507583 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.124777297 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.124564239 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.127062399 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.124455451 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.128141927 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.127190029 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.127527285 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.127560783 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.126911624 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.124225689 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.1283421 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.126886343 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.125347357 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.126820864 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.125474173 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.125727944 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.124504155 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.12482213 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.127548535 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.128421007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.127497864 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.127875417 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.12754273 seconds)
  done (took 62.96297136 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.126774445 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.12710213 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.124476888 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.127350395 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.12766047 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.125300251 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.12720555 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.124747238 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.124892288 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.127615104 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.125391966 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.127777474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.124911976 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.127747896 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.125690297 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.128004047 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.12459007 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.125413301 seconds)
  done (took 21.33693054 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.125334561 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.125411202 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.127671663 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.124946222 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.125713913 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.12857106 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.125307759 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.127944903 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.127810095 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.12455962 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.12570805 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.128748599 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.128896023 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.128222862 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.125499873 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.126881263 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.128623078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.128259024 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.125832973 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.125988155 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.128772317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.129219358 seconds)
  done (took 25.856700662 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.128871729 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.128013406 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.142098797 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.164030595 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.153736097 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.128610196 seconds)
  done (took 7.909807 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128271823 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129219213 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.127297598 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130162597 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.128875887 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127437989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.126776909 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.126646851 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129553059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127830196 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.126844942 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130381225 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130198141 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.126723412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131250326 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.129908547 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.126958494 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127348016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.12807843 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130597859 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127771183 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130913894 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127903171 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.128017876 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127831828 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127614182 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131736417 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.128055069 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.127929093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13027784 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130187396 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127972568 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130779939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.128530324 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131205875 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130486293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127254275 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.13067942 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131003939 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.127904395 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.130841248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130145019 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131342951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.127770694 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131401349 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129033186 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128761787 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.127862695 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.128090643 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131650503 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131755867 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129454451 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131059893 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130332761 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130718476 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131669855 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.129590978 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130004798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131731914 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.129511227 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.129521337 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.132300465 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.128954526 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.129849421 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13192828 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.12948924 seconds)
  done (took 75.606038781 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.129283716 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.129988361 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.129795243 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130722484 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130179776 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129249917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129263197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.130589345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129368841 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130333214 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.133139953 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.129721795 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.129517516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.130106197 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.130696624 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13058684 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.130523731 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130129713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131086455 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.133776856 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131872574 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.131410319 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.130625086 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131023311 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131030197 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.133498692 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.130618668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.13193743 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131434151 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13086291 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132139659 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.13102413 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.132218364 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.13163101 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.131660975 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131741572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131907486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131327712 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132274964 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.134237775 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131971107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.133803049 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.131329541 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.132001931 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.131826477 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.132117643 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.131624741 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.131652927 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.130961273 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132160053 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13286245 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.13261123 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132573531 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.131891959 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131676045 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.132456236 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.131484538 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.133065423 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.131869517 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135052923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.133413398 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.132474508 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.135310611 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.132017768 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.13234344 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.132759954 seconds)
  done (took 75.755592598 seconds)
done (took 1543.936370774 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.127299788 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.150225301 seconds)
  done (took 13.34698539 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.2966095 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.250485318 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.134245226 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.184951709 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.134178893 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.155398018 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.150816348 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.133879661 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.134057436 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.134199055 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.13397297 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.320817318 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.147376419 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.134232939 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.134603143 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.228561538 seconds)
  done (took 39.880045819 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.1598936 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.142115611 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.236615981 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.160315637 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.167239756 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.305354225 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.193821124 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.145712583 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.290815544 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.182156878 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.492622966 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.167196009 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.146726416 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.103325621 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.161918153 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.306165204 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.358297519 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.496647498 seconds)
  done (took 26.289107989 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.527311866 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.154333183 seconds)
  done (took 8.760619286 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.151248809 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.195060638 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.163017099 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.146461923 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.176911483 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.173921966 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.209884222 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.207770351 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.180997278 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.176047942 seconds)
  done (took 62.861048192 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.163310865 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.147638178 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.148060677 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.145089757 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.138656084 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.138133769 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.145914612 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.139744276 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.209832537 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.25244018 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.159267162 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.154256611 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.148965463 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.147537278 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.143297552 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.179585521 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.274275471 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.143571796 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.143828689 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.153288574 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.146366169 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.229982942 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.1816304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.145740105 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.253365883 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.225662219 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.15122512 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.154708783 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.25680584 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.145072012 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.147107842 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.147225076 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.149220547 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.697791219 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.573017097 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.152240517 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.169005158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.156826999 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.143941259 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.291521199 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.148136326 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.154593656 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.140192917 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.548670039 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.29429442 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.246393366 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.251491746 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.149868122 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.149643068 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.204800688 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.149294805 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.150133157 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.174442445 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.858840077 seconds)
  done (took 99.49972415 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.186959585 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.628126825 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.307704306 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.161530497 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.892512794 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.785294082 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.143331253 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.383933807 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.178261279 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.14222223 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.462560777 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.596804276 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.150901749 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.142897998 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.277333631 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.229135053 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.141722361 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.886845696 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.141919931 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.144085905 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.537108518 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.156216817 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.153952877 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.314643026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.179233854 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.562234303 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.366442559 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.561170835 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.148932153 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.143012587 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.563831313 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.146514397 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.219700538 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.145803921 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.395523498 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.453687918 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.439457362 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.149591307 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.156142975 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.146056759 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.164253401 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.564627167 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.445122955 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.143097741 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.158622976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.567120074 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.144469975 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.145596001 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.149357822 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.336436913 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.128647627 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.144620082 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.38778017 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.145433421 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.496461474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.233383884 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.20852834 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.590431881 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.143863856 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.194512016 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.156403424 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.143271578 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.149232269 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.148746019 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.146383191 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.449409128 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.254975226 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.146694733 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.450012677 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.56065266 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.145921101 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.628700471 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.92074032 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.147200523 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.218729724 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.143938644 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.705398329 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.596512296 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.172811436 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.143963566 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.43791664 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.150623388 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.444059966 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.157794622 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.155961465 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.545959279 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.164633644 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.162525542 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.145577857 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.14781341 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.762449644 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.149328173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.390706903 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.193647267 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.145472243 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.145132554 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.192740621 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.153245795 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.144701303 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.152720989 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.629045422 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.15474995 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.411261393 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.164577766 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.157631231 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.147774427 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.150186446 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.147378806 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.356005718 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.550835573 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.153218024 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.147150315 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.14607184 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.153668993 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27539527 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.147398754 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.413323642 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.149005345 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.146437117 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.160533112 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.833745166 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.200424566 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.14567155 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.158824259 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.988757984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.355589791 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.16320065 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.147070539 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.149401024 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.158828095 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.346873273 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.148586916 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.173999372 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.149797247 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.805005049 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.185813758 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.162019594 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.791690996 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.148164531 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.984720434 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.164490388 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.148423359 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.436143011 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.402782849 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.189362479 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.150220581 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.148585333 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.781207601 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.179625708 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.293456729 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.165135378 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.192660238 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.345533024 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.516813254 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.149158626 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.716391559 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.148635657 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.355461292 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.148594695 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.449895067 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.59261683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.149326218 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.157092502 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.804980652 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.810303463 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.782113119 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.154862315 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.459791767 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.114765285 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.600577521 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.148542114 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.161930453 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.575788999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.15002537 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.155870612 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.150489679 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.150646872 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.314648672 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.322386654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.691110502 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.157232392 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.568890983 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.161483158 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.151048206 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.15543583 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.151374979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.501339742 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.238306626 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.148859543 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.181483334 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.15134827 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.159617383 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.582924034 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.031297012 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.152839165 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.301369933 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.7343057 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.151646471 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.151182897 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.729033765 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.436047796 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.618791527 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.196054879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.419944578 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.156937178 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.188037679 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.833808901 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.162534671 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.582275272 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.153882066 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.150535654 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.697663207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.15268762 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.500184355 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.150964589 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.154630153 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63961087 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.153155149 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.152793003 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.353747337 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.153621321 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.40574489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.151314859 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.180935501 seconds)
  done (took 1066.689626273 seconds)
done (took 1318.398353216 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.15253065 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.151657513 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.137848318 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.153890968 seconds)
  done (took 25.688061936 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.16261773 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.1594466 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.160770637 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.15816871 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.161725874 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.158341417 seconds)
  done (took 8.055953041 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.242629846 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.154908198 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.155348289 seconds)
  done (took 18.647638626 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.348439603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.300585373 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.478949541 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.05209922 seconds)
  done (took 9.276352394 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.161617914 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.161165081 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.161267397 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.16216234 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.165025665 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.165730082 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.162090935 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.163384449 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.165460302 seconds)
  done (took 11.563280144 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.641084129 seconds)
done (took 78.96630448 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.347513201 seconds)
    (2/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.65304381 seconds)
    (3/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.291789965 seconds)
    (4/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.165304057 seconds)
    (5/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.613085798 seconds)
    (6/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.698492959 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.403139254 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.957230772 seconds)
    (9/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.211049866 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.567618788 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.23573253 seconds)
    (12/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.182228659 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.197582134 seconds)
    (14/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.463280576 seconds)
    (15/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.254108337 seconds)
    (16/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.454114582 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.664024019 seconds)
    (18/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.5637527 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.679512056 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.182962256 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.850803837 seconds)
    (22/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.172936123 seconds)
    (23/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.278247195 seconds)
    (24/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.360422905 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.190124164 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.199397407 seconds)
    (27/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.255955732 seconds)
    (28/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.513524304 seconds)
    (29/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.277030676 seconds)
    (30/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.180710142 seconds)
    (31/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.968023238 seconds)
    (32/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.133771585 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.313615697 seconds)
    (34/309) benchmarking ("sort", Float64, false)...
    done (took 5.385465286 seconds)
    (35/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.199996088 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.275950612 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.752277747 seconds)
    (38/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.254803013 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.221419331 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.172658618 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.199693663 seconds)
    (42/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.198152127 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.282393739 seconds)
    (44/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.172915824 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.436144468 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.236484199 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.239532296 seconds)
    (48/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.336554552 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.455429584 seconds)
    (50/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.858549868 seconds)
    (51/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.159301135 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.231189959 seconds)
    (53/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.583060852 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.279022651 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.133225458 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.175819565 seconds)
    (57/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.216883113 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.225138457 seconds)
    (59/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.210984275 seconds)
    (60/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.262650748 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.757293123 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.191731399 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.172721399 seconds)
    (64/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.374886193 seconds)
    (65/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.257321132 seconds)
    (66/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.498761855 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.66974636 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.209413041 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.163943465 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.429225935 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.492049932 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.327844379 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.174999249 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.287311393 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.362271479 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.998265584 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.201196343 seconds)
    (78/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.744031988 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.258026067 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.284083731 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.357273345 seconds)
    (82/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.801030544 seconds)
    (83/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.351082134 seconds)
    (84/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.174557248 seconds)
    (85/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.532358304 seconds)
    (86/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.164701401 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.20409127 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.17438002 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.388533588 seconds)
    (90/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.524290723 seconds)
    (91/309) benchmarking ("sort", Int8, false)...
    done (took 4.187617472 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.578603669 seconds)
    (93/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.192920322 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.175445011 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.271164791 seconds)
    (96/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.406896279 seconds)
    (97/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.281081941 seconds)
    (98/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.31218724 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.19502064 seconds)
    (100/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.390199573 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.000650046 seconds)
    (102/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.274994467 seconds)
    (103/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.725760105 seconds)
    (104/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.60626273 seconds)
    (105/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.305236469 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.175357066 seconds)
    (107/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.306818671 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.303077453 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.514114373 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.578887925 seconds)
    (111/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.192087213 seconds)
    (112/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.303200985 seconds)
    (113/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.260901035 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.228575803 seconds)
    (115/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.381278687 seconds)
    (116/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409908146 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 1.682080061 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.199632668 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.455771597 seconds)
    (120/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.201629137 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.220630058 seconds)
    (122/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.1849876 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.841606367 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.91054821 seconds)
    (125/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.437773948 seconds)
    (126/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.177574774 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.669679474 seconds)
    (128/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.282279395 seconds)
    (129/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.176838585 seconds)
    (130/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.204496986 seconds)
    (131/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.27952741 seconds)
    (132/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.30282279 seconds)
    (133/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.442273768 seconds)
    (134/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.177795032 seconds)
    (135/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.863829684 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.166498711 seconds)
    (137/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.203854439 seconds)
    (138/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.176789213 seconds)
    (139/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.331003991 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.417218962 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.609229968 seconds)
    (142/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.176386407 seconds)
    (143/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.5540089 seconds)
    (144/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.278272089 seconds)
    (145/309) benchmarking ("sort", Float32, false)...
    done (took 5.148005003 seconds)
    (146/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.37480168 seconds)
    (147/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.200209719 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.178048377 seconds)
    (149/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.87378674 seconds)
    (150/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.234151932 seconds)
    (151/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.858471707 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.191041897 seconds)
    (153/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.203797486 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.185081986 seconds)
    (155/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.682935281 seconds)
    (156/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.290196645 seconds)
    (157/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.242416428 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.951609854 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.179036107 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.963991906 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.16259604 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.95447623 seconds)
    (163/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.865353055 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.19048394 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.196865805 seconds)
    (166/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.266301796 seconds)
    (167/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.541427611 seconds)
    (168/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.180529194 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.25222423 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.564668491 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.295509884 seconds)
    (172/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.847275292 seconds)
    (173/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.263979792 seconds)
    (174/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.205904755 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.285151097 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.537515612 seconds)
    (177/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.332082514 seconds)
    (178/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.221922661 seconds)
    (179/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.375522697 seconds)
    (180/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.87252159 seconds)
    (181/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.180603568 seconds)
    (182/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.52968454 seconds)
    (183/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.40667039 seconds)
    (184/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.602883698 seconds)
    (185/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.220570267 seconds)
    (186/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.164829206 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.194312861 seconds)
    (188/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.457942146 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.775500472 seconds)
    (190/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.161882753 seconds)
    (191/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.180713221 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.679670005 seconds)
    (193/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.237212586 seconds)
    (194/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.199128319 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.164607163 seconds)
    (196/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.494604925 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.372558685 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.718418013 seconds)
    (199/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.359180442 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.779742925 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.180886197 seconds)
    (202/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.955946544 seconds)
    (203/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.805185303 seconds)
    (204/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.388264177 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.244263828 seconds)
    (206/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.188531932 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.183861502 seconds)
    (208/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.166869217 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.379133133 seconds)
    (210/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.763253253 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.575825176 seconds)
    (212/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.475918828 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.021691985 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.548094595 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.303188154 seconds)
    (216/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.239505997 seconds)
    (217/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.426244912 seconds)
    (218/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.198980812 seconds)
    (219/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.719146263 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.205608233 seconds)
    (221/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.480259683 seconds)
    (222/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.167864 seconds)
    (223/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.988066296 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.255623648 seconds)
    (225/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.176982179 seconds)
    (226/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.170452386 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.001730415 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.235562036 seconds)
    (229/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.195406717 seconds)
    (230/309) benchmarking ("sort", BigInt, false)...
    done (took 6.183010234 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.42225582 seconds)
    (232/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.519204109 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.168308506 seconds)
    (234/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.23155838 seconds)
    (235/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.233696284 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.198994353 seconds)
    (237/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.170019458 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.426494562 seconds)
    (239/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.696116514 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.516569658 seconds)
    (241/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.008756965 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.584265567 seconds)
    (243/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.947857034 seconds)
    (244/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.603311553 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.181742598 seconds)
    (246/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.634261442 seconds)
    (247/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.243287953 seconds)
    (248/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.207307475 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.16847391 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.964570906 seconds)
    (251/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.303266146 seconds)
    (252/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.555950371 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.915563881 seconds)
    (254/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.694311596 seconds)
    (255/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.680284896 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.184181975 seconds)
    (257/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.189615121 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.172564463 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.387781593 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.296247628 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.231568746 seconds)
    (262/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.330467884 seconds)
    (263/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.332566778 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.51775159 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.220847939 seconds)
    (266/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.192362037 seconds)
    (267/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.93454591 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.563400986 seconds)
    (269/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.856182545 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.608821737 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.002721933 seconds)
    (272/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.196254424 seconds)
    (273/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.20043131 seconds)
    (274/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.26847967 seconds)
    (275/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.487989047 seconds)
    (276/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.723190325 seconds)
    (277/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.211377722 seconds)
    (278/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.725435219 seconds)
    (279/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.404976284 seconds)
    (280/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.429425327 seconds)
    (281/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.318691856 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.876930544 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.267175504 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.708446719 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.268668346 seconds)
    (286/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.68515087 seconds)
    (287/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.690940696 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.700629581 seconds)
    (289/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.196623898 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.296007903 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.578580386 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.291930171 seconds)
    (293/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.900858967 seconds)
    (294/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.87098046 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.905872499 seconds)
    (296/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.171924848 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.045918094 seconds)
    (298/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.320322202 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.229161663 seconds)
    (300/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.184591833 seconds)
    (301/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.871992125 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.320578938 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.329882779 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.207509792 seconds)
    (305/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.178077275 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.207883525 seconds)
    (307/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.171063228 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.439297095 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.261746718 seconds)
  done (took 857.802132276 seconds)
done (took 858.917928771 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.218298092 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.212552759 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.194912186 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.21768341 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.307865986 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.225115166 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.206935107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.198434732 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.244881228 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.244847787 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.194388521 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.223590153 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.196930119 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.196942998 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.195329101 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.210284997 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.123806173 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.196752157 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.212391834 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.206397502 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.21285297 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.194864304 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.246562421 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.223288401 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.200751555 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.199601151 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.200718048 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.216045573 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.309122496 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.200251608 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.201025016 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.208852053 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.126544499 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.19475668 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.192562602 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.216760084 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.209863257 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.206560642 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.200910301 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.229142295 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.473462231 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.196601892 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.199838809 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.199243622 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.198375826 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.20085649 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.198776634 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.204976922 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.211081741 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.211850317 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.467617286 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.212769264 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.202030381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.198883594 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.209485976 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.199043081 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.20228315 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.214643576 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.218672326 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.214510241 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.118580109 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.204336078 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.20093258 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.215314833 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.207493644 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.505826604 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.195373389 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.204744037 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.480886551 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.204100962 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.507694445 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.207569702 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.201633457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.213322573 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.231921851 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.133097395 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.194995533 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.198673368 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.207853625 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.199826254 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.210015945 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.212155761 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.205354019 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.201970524 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215038594 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.22846385 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.210407379 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.202155728 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.210903007 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.221212067 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.208408176 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.212128625 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.20455755 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.19697231 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.210943096 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.203998942 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.203993459 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.203777923 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.206715475 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.211807251 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.483502089 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.217619882 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.197837588 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.198632039 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.200376505 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.214742674 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.485236907 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.201609755 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.224093354 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.248250374 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.203126326 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.119893099 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.204394971 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.217805887 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.211342534 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.205134128 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.196469195 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.119826227 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.478045323 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.21642169 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.203223547 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.200602604 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.218062157 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.204341297 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.199221916 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.137878605 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.203467348 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.216242797 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.322886287 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.21370877 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.235042176 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.201341726 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.205214812 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.230719913 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.218712687 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.234940277 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.205907519 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.218059455 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.219201678 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.200465814 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.214544193 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.214572698 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.203148792 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.209263686 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.197533498 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.243443245 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.215702859 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.215043648 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.224776383 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.323880659 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.200229182 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.12096289 seconds)
done (took 202.919665231 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.264153839 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.20162415 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.28640489 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.201104199 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.303242318 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.296856625 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.198030823 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.196787937 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.197327415 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.612310093 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.198622744 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.199076861 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.193945773 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.198471769 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.283079738 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.201150184 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.198582496 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.543018904 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.202032576 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.272072165 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.19779461 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.199909801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.20118296 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.585008473 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.196783216 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.196080462 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.271536092 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.200780662 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.579210839 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.202818545 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.200245724 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.548268 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.290008283 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.219792907 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.211288245 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.208958862 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.304879615 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.216530972 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.28285161 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.283616749 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.288489897 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.239972399 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.200676851 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.198067439 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.20398233 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.202534358 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.200394363 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.22915648 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.195280373 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.200481498 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.573767414 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.212438472 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.20100649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.200630314 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.199819091 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.232288204 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.20080397 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.203722218 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.292867744 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.204017615 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.266970283 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.620705997 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.582510003 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.203692228 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.202216673 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.20111576 seconds)
  done (took 139.737479443 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.270017077 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.276883673 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.307238698 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.203588008 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.253847788 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.312556843 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.204323556 seconds)
  done (took 9.963850175 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.20917928 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.20411701 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.25362359 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.253529528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.203703858 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.351073701 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.20398201 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.215811431 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.201236625 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.256097336 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.204801667 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.20563238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.211594528 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.196805003 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.252315177 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.21505029 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.319830984 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.208092877 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.204508147 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.355629687 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.201747642 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.211906825 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.255732554 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.216455299 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.20615403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.210488541 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.77178793 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.204855392 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.202275936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.204695866 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.201893759 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.241998303 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.206373171 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.202158387 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.203144965 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.321472728 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.206573689 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.202849365 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.206290242 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.202979371 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.206867322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.205415198 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.206483772 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.202903181 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.206890018 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.228731514 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.205859035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.206254172 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.205920988 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.207871982 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.256183486 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.20727178 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.203260295 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.20375863 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.262062389 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.213820471 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.206151091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.204118819 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.207191679 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.203683776 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.356558038 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.25398761 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.206547825 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.255446296 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.207400308 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.20724418 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.20651339 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.207136954 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.261560868 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.207921344 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.255112562 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.204134841 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.361937345 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.230264484 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.208786013 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.209773727 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.210281608 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.207413718 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.199120532 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.213633674 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.205880063 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.208092383 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.21399413 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.205788971 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.20519809 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.309722886 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.315470096 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.205784025 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.220645509 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.214081256 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.205623702 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.26015254 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.207874734 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.206168659 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.259329566 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.322662902 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.260911153 seconds)
  done (took 140.696634636 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.213248769 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.216308091 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.20913197 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.224214399 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.209456323 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.208536744 seconds)
  done (took 8.421228924 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.210861682 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.209850824 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.209616734 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.208932642 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.210213732 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.20935361 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.209614794 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.21035416 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.212683829 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.209683816 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.21104314 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.211474285 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.211449167 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.210272369 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.210593984 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.210212043 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.210063773 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.207782723 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.211422319 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.21000571 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.31426742 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.209530678 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.21040685 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.211286741 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.214085825 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.210659889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.217913528 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.21051085 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.211228532 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.216780742 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.212477314 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.212348533 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.210821701 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.215540881 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.213496628 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.211273806 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.214985864 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.212513015 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.209500148 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.211634261 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.21355978 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.210967121 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.211254776 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.212464788 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.212456431 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.215408676 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.21615999 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.21824452 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.211512566 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.213124843 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.213066271 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.21174043 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.212263654 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.214148147 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.214197565 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.215655953 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.21692664 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.212455038 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.212043668 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.213619956 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.212094966 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.213221985 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.213375368 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.215612348 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.210582074 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.214052688 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.213766781 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.215679676 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.213347951 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.21172321 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.213372711 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.211171739 seconds)
  done (took 89.529835612 seconds)
done (took 389.483127655 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.413460743 seconds)
  done (took 7.557731784 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.403972718 seconds)
  done (took 7.549692275 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.200635426 seconds)
  done (took 20.347890349 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.235183056 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.306994946 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.216019553 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.211278423 seconds)
  done (took 26.116526134 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.393162484 seconds)
  done (took 7.537325516 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.211564131 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.207875314 seconds)
  done (took 13.568523058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.395673947 seconds)
  done (took 7.541752915 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.493674292 seconds)
  done (took 7.643524519 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.232415233 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.210448347 seconds)
  done (took 13.831153218 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.192106219 seconds)
  done (took 7.338700211 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.827733516 seconds)
  done (took 7.976457815 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.213928906 seconds)
  done (took 7.362677323 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.234156552 seconds)
  done (took 7.380896838 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.607713168 seconds)
  done (took 8.754183914 seconds)
done (took 151.653341689 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.205945885 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.209279151 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.207764078 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.206667506 seconds)
  done (took 25.975967855 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.248300574 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.248507935 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.249947073 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.258588932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.251824909 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.248500954 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.241307391 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.240576199 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.258791532 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.251345587 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.249193437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.251364127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.24753245 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.241134748 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.25079922 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.250108077 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.259282543 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.249549196 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.241228 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.252017842 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.215920558 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.259159852 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.252388023 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.216547189 seconds)
  done (took 31.081424841 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.410766656 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.285612796 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.369507471 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.267489791 seconds)
  done (took 6.481638692 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.267448932 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.269535651 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.280917184 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.319253511 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.344775187 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.27812209 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.240433618 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.237501801 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.223740629 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.269185437 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.345399935 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.28535995 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.354567069 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.216657411 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.401869322 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.216584204 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.216613357 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.267686942 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.320463133 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.33444855 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.217752829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.26866912 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.271934964 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.286610721 seconds)
  done (took 31.885007702 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.215418816 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.224010788 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.221788679 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.216117679 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.215910659 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.217253341 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.221773832 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.217075463 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.237010986 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.217737802 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.215068378 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.217276723 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.215838371 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.216820131 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.21538075 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.229368098 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.230542638 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.216978711 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.219752585 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.222280139 seconds)
  done (took 25.553443116 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.21032116 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.063767113 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.561947053 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.466919062 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.20919809 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.211319338 seconds)
  done (took 26.874037471 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.276975886 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.405546958 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.219174144 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.533486939 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.612321219 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.219971526 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.218737829 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.436392191 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.703165926 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.69660758 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.267891004 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.278933609 seconds)
  done (took 18.022094359 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.215359632 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.212973351 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.214760441 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.231197154 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.265991882 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.221993282 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.225462233 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.212291198 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.268832117 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.270901883 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.222919373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.267035877 seconds)
  done (took 35.98559826 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.300237031 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258268844 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.083659342 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.948996887 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.934069772 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.424574929 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.369325075 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616966291 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.220593624 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487449554 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.846574654 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315233652 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.469243067 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217635471 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.215507157 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.081215456 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440645415 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.676141227 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.217487722 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867048914 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.241355942 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.220061423 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.035649444 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.242772862 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.425091573 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.191283262 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.475525847 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.99088292 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472721668 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.227998537 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225482384 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216009977 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.488762325 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846574828 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.313317278 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.225906964 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.886794989 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.762047901 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.210485928 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.961736512 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.649825553 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.217638809 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227066917 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21531164 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.149698522 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.22459349 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.624952784 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.224398867 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.92670338 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.216539609 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.227427851 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310557279 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.22056774 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.786329588 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.211160277 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.222501164 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.2147845 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.222748811 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789395361 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.331826478 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.219497222 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.155098507 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.569938393 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967621769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.791853001 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.322921772 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.222466156 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.22209258 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154404039 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.943503238 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.239641327 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36759213 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.244681088 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.866093355 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862233395 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.886225394 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.160393969 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.746939814 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232345863 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.152752311 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44566196 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.99308531 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154264241 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.161355437 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.150991924 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860873638 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.227056543 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.565020383 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.226963027 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620055434 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.231294707 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.235590809 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243181574 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.441789907 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.105340837 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219039009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.633662744 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357870433 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.242126575 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626328138 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156935453 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.223332663 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474170114 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.430038866 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.228134451 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.088567686 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.400569767 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.230669841 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.235584635 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.228438884 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.229726091 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.740714491 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.232680146 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.341999662 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.236950669 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.993954527 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901302194 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222250124 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.322478546 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.867738684 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.45904572 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.923377016 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.118401214 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288223232 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.223327823 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.220005127 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.986786235 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071391567 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.1258914 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.221975125 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.221224473 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.231168201 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.219766246 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165902129 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.22155397 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924513214 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.0095234 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.442455238 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.229624211 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496803055 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154026322 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365886327 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229109369 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.442927897 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.332799732 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.220101772 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478838549 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.221513069 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.223353674 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.233502469 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.239082527 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.317371264 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.24302694 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.227043538 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.478044172 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.225215922 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.225663233 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.990141082 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.004113839 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224735044 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.226904457 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.038593869 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.747848406 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199853597 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2295606 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.110710605 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.237139104 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.288678575 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.23027288 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.237068839 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.872492242 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.019924828 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.230129941 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.219243678 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44731631 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.231485722 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.984158298 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.303671534 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.398108267 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.755672201 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.236928189 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.155978418 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.93285347 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.9148623 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.222994007 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.41134919 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.22277953 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233728169 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.232237395 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.706189968 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.751597899 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.226153007 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.903030059 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.230927469 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.23401628 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.228300515 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.224063938 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.843900403 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.360111141 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.227150885 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.237130366 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366141412 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.237530359 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.158663643 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.740592467 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.228991524 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.224622403 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.000143283 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.258068966 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.90234684 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683355084 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48459644 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883182926 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.237283257 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.982182675 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.253792222 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.222713182 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.677310935 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.250808313 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.231740412 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.233994344 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.236389901 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.909785294 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.663253031 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.794302472 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885162262 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702698733 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042434652 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.228438693 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.146312788 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636638444 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.162996694 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.880769821 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396297034 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.635673332 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.172145202 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4025911 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.3531124 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923216654 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.235802248 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.451878343 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03641318 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.691010834 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250778095 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.436189863 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.260670992 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.235597358 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.154778499 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.513341377 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.452738294 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.693228027 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.305945959 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632767228 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.693348918 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.01929202 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.224824885 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547384178 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384704733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.773301548 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.614304073 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.226182729 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.917591948 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696350212 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.236602861 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.752070652 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.796582437 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.236265757 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.406521404 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.165878895 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.237880858 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.236938279 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.226319378 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.357431602 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.217135008 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.494432585 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.238034433 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161258697 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.230854293 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707273117 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.081419033 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.232348075 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.228460537 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91917186 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242560215 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487398965 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.234696087 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.831731416 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.231550571 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.162101153 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161423355 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.919606693 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229047084 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.203857217 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69433861 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.564579839 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.205737837 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254117325 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071216221 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.482942102 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.242744533 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.760288052 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453910729 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.990826014 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252013688 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.329469043 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.721709525 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.228267323 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.110284481 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463445865 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.042281007 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.453128051 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.134562423 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.135833929 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.226947014 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.442336467 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.110681112 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.936796075 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46897157 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.942261571 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.233704477 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.891505948 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.255081349 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.956866057 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253324298 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.582252625 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.238275223 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.299724969 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.241227876 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.238826656 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.24104028 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383352454 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.944525088 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.245351817 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.244188688 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.324191393 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.382736323 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.842471201 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.005520561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.765680388 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909408521 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.763662059 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.244605984 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.230943336 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240167719 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.16480206 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378922154 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.756785315 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505473551 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361476395 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.644669994 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.25468447 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.737899595 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.257361728 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.443848095 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.505455006 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.10043952 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236570868 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.890744564 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.112740482 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.242471945 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.44272111 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.702994583 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77080046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351640034 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.231267311 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.639069385 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.509514925 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.322297873 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.231357193 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82237849 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.236577722 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570708875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.239759344 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.986743991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.380916004 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.242845004 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.870169088 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.244304111 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.388147387 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.005744752 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930347967 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.490597544 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.655622106 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.243882805 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.76638695 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.873016874 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.49715082 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303586188 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.244368911 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.342749425 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379789548 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.236215834 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.115058324 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.233362411 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07873643 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.943711712 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.241885646 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768822866 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.497385398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.230848526 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.239245326 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.256072421 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.243613356 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.45632397 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89182046 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.460224751 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.244386751 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.23522899 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.803100659 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.768898638 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.248302758 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.167368467 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.237655697 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45864118 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.472043542 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.258707851 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.6861748 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.946089514 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763621933 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.207008271 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.256016754 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.233815217 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.87492433 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770593617 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.867593614 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70485678 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.894981449 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.243351425 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51047964 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.24073568 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.236265471 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511755533 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.239223153 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.240592735 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.248914911 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.769515695 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943812936 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.236231179 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.958407266 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.173751593 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.460976697 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.845711443 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.173323107 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.236364911 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.405482309 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.238765055 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365695452 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.247627488 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.240246048 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236976179 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 3.993070941 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521111033 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.241569724 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.235141414 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.795010444 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.244888587 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.243254113 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.450746855 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244297411 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.911585914 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.588390509 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.492426087 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.245378758 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.221986396 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.239338643 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.236318571 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.954615131 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206447745 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.722780842 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.770043628 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.246694252 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.248198081 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.241054248 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.453465491 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.449545967 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.006017894 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262987345 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247563723 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.25270852 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.146995173 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004884089 seconds)
  done (took 1514.567643704 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.24828627 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.261735134 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.270916115 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.317353403 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.278573768 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.256716685 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.245758171 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.261973291 seconds)
  done (took 51.317935371 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.242149682 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.388809704 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.267213547 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.241207712 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.248298731 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.241786604 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.660316085 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.245727753 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.248746712 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.248031262 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.237608982 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.24849596 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.845665656 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.247166282 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.24709535 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.236062091 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.247678777 seconds)
  done (took 63.526385505 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.238470488 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.415823087 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.327843445 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.244299509 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.856720758 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.239985055 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.401144953 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.245336071 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.243363615 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.53146382 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.894687164 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.260720441 seconds)
  done (took 82.076778103 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.246944688 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.24726307 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.246466389 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.246709301 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.24745624 seconds)
  done (took 7.411221186 seconds)
done (took 1921.909417452 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.497603497 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.847802374 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.80190973 seconds)
  done (took 4.826897751 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.387724366 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.436310332 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.556128312 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.562881969 seconds)
  done (took 7.122477726 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.522579358 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.624083163 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.435764329 seconds)
  done (took 5.760387176 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.521247474 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.247478283 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.359190213 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.238735361 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.244597482 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.240113999 seconds)
  done (took 19.904207409 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.244053184 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.248036523 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.244517878 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.24808299 seconds)
  done (took 6.164645199 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.226527347 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.92956377 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.227058486 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.246168889 seconds)
  done (took 17.808074803 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.99186557 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.004336426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.990186328 seconds)
  done (took 7.165524271 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.255339105 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.084518704 seconds)
  done (took 9.519525893 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.538636705 seconds)
  done (took 2.717498733 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.376632965 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.570199339 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.22687102 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.168815456 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.22846395 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.716356679 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.72042505 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.339639622 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.155114495 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.180420013 seconds)
  done (took 25.864280781 seconds)
done (took 119.657210007 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.764951947 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.621564135 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.451312472 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.737547368 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.478803486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.450641825 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.661563861 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.705119235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.251620576 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.236094035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.786092843 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.47562884 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393444257 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.623282591 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.392429959 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.244893992 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.550724475 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.812778481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.46189471 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.622900632 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.664835573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.376132141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.611789668 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.399176873 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.576656521 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400130925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.960800427 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.244366465 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.637508482 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.980470274 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400033374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.800574067 seconds)
  done (took 182.956892543 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.242629136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.242270622 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.242842937 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.250951194 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.243492471 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.243519391 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.242522474 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.254927347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.247215982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.252449829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.249521735 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.252482109 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.252324137 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.243129913 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.243509909 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.254559371 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.244525833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.2424371 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.251595813 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.242934249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.24524066 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.267219664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.243066094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.257091733 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.257192167 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.245748716 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.256165349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.261453213 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.244124944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.243985268 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.24461286 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.256449477 seconds)
  done (took 201.143820089 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.243764557 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.245264861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.245218158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.260600558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.24461911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.253712642 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.246813266 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.255706344 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.256569277 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.248449539 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.24339317 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.244396029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.259730178 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.248774753 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.247912202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.24654737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.243502817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.243829489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.244905317 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.245906699 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.264939051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.250504388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.244577119 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.24509897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.257345198 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.266133255 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.245557711 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.247080285 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.246367332 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.253724151 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.247687737 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.249892999 seconds)
  done (took 201.172363453 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.442191425 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.25419501 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.255663591 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.190411875 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.25482555 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.254707103 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.254149352 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.452446923 seconds)
  done (took 13.544047579 seconds)
done (took 599.999012234 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.426926096 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.162404496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.449314004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.275322601 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.965019632 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.277825443 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.275019814 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.429142702 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.138678818 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.428403962 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.446868178 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.272422134 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.577548055 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.272078271 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.51074611 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.362620464 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.083304362 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.195548429 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.566532398 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.731081721 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.521645576 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.639585227 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.430053197 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.147057333 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.581853533 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.64411752 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.870488953 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.083771697 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.27374078 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.570567547 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.789645219 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.124194035 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.323767023 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.308019644 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.366216636 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.34468489 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.0979391 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.3066663 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.451752684 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.411729316 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.745778278 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.97378395 seconds)
  done (took 86.039831421 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.242364583 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.243392914 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.243357554 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.243417671 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.245053688 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.244273417 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.243422683 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.244032649 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.24372638 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.243233438 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.242760336 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.245342026 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.243572211 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.245174656 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.243177786 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.24445739 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.244402726 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.246770502 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.244461126 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.244229388 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.244601141 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.24469129 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.244689873 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.244831747 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.246068224 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.244216597 seconds)
  done (took 33.540756626 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.258253565 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.499684806 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.648075253 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.263408798 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.256568793 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.260977692 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.326952205 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.259391687 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.260549614 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.260943768 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.401237061 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.26063078 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.293234284 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.674618727 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.262027779 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.25904316 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.259416947 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.258782898 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.507765 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.268210443 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.347070946 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.26021787 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.328809185 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.268710565 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.278507288 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.261077426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.263948796 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.775814508 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.260953385 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.402837835 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.947562929 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.326366408 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.726791749 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.661397998 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.947003793 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.263186242 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.260317391 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.408402932 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.261524574 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.260611491 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.328030479 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.260233027 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.662870245 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.86788814 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.274978743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.260716251 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.795128851 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.405888512 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.479951428 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.268117375 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.677340679 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.262808761 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.261597185 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.261118075 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.480032964 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.267359685 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.261256491 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.777116075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.280094784 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.32910252 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.26231761 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.26244284 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.512398659 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.261217683 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.503779694 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.262436644 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.270101653 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.262997705 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.661075515 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.264459043 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.887679275 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.276285399 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.26182597 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.403357786 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.505096446 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.820636763 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.264943971 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.518406766 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.742683323 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.328300618 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.264960259 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.764096415 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.3327855 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.266107723 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.265002658 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.26489297 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.26350974 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.312968429 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.329505204 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.809612337 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.878906619 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.791498697 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.347423588 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.27676659 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.265190359 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.777552161 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.278147077 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.264904503 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.65644123 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.905964599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.276773144 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.270635069 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.873577652 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.27898564 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.332801682 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.268305817 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.666900373 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.265772416 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.315792238 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.264297369 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.270751993 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.267417018 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.332007623 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.267889674 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.264365112 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.857600077 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.425535366 seconds)
  done (took 166.253388467 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.257352461 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.256416198 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.256471057 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.257293874 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.257570659 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.263213556 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.25723712 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.257981864 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.262633313 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.257355396 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.257224447 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.257050925 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.259080573 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.266439057 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.267640091 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.266696563 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.867790915 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.257320345 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.258429388 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.257922143 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.039401413 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.260467505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.259079634 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.258602876 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.260266116 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.260130859 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.260687611 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.26093429 seconds)
  done (took 149.854092636 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.26638875 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.771957381 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.26622498 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.383173021 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.284324021 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.26271326 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.380504219 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.316214668 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.26671677 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.264041568 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.263660679 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.535776165 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.268230159 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.724878391 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.434507539 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.382483055 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.725626339 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.267336639 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.265280103 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.264094638 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.384304072 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.271709856 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.536701409 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.777593071 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.268972198 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.778459258 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.257480975 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.267682767 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.265994348 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.779437593 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.266447332 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.537754311 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.3355723 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.319111141 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.780559073 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.732311937 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.729627697 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.394672316 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.266511325 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.265571248 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.265272277 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.255214378 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.778628253 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.26881425 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.267571061 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.771166899 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.282248083 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.268682137 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.278813271 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.265091891 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.319779411 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.319680666 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.542135545 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.782785957 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.335824299 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.287267801 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.382898521 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.629947883 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.269720572 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.728317954 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.255712745 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.78203276 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.270648481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.256283701 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.268232847 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.273953675 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.401262848 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.385195748 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.73154754 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.268629778 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.730169567 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.402005263 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.267951224 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.267137364 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.270246843 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.780777558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.732396731 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.401457885 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.389585926 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.442049309 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.257534609 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.268485076 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.257166108 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.336029304 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.268883904 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.781409759 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.732462173 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.270242138 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.27109081 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.270406921 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.269967806 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.425952036 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.783114173 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.337369124 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.725570033 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.556355561 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.545102913 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.271789035 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.322168363 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.269737301 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.545317951 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.272148606 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.320961786 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.689445975 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.545723041 seconds)
  done (took 150.482945052 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.493551272 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.391594381 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.353295423 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.373620532 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.823829119 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.819770391 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.46941441 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.383837193 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.369360254 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.497591962 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.344171593 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.361178316 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.422213523 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.338380461 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.968122235 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.331439905 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.357195499 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.392421547 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.35656422 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.251563852 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.855285207 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.534666977 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.42635167 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.120594823 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.356997734 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.00753515 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.79020441 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.81464402 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.435362574 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.47655737 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.78019452 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.334191278 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.18862039 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.885027268 seconds)
  done (took 61.307131621 seconds)
done (took 648.664541914 seconds)
SAVING RESULT...
DONE!
