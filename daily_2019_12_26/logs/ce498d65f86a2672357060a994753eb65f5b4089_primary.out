cset: moving following pidspec: 25805
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.420040886 seconds)
loading group "string"... done (took 0.578562555 seconds)
loading group "linalg"... done (took 7.331182192 seconds)
loading group "parallel"... done (took 0.1632869 seconds)
loading group "find"... done (took 1.161407877 seconds)
loading group "tuple"... done (took 1.798744859 seconds)
loading group "dates"... done (took 1.247353948 seconds)
loading group "micro"... done (took 0.22043415 seconds)
loading group "io"... done (took 1.02226616 seconds)
loading group "scalar"... done (took 39.236690614 seconds)
loading group "sparse"... done (took 12.504841888 seconds)
loading group "broadcast"... done (took 1.011154336 seconds)
loading group "union"... done (took 12.985597523 seconds)
loading group "simd"... done (took 4.903771588 seconds)
loading group "random"... done (took 9.833322349 seconds)
loading group "problem"... done (took 1.90680507 seconds)
loading group "array"... done (took 22.961619224 seconds)
loading group "misc"... done (took 1.829383268 seconds)
loading group "sort"... done (took 3.740112352 seconds)
loading group "collection"... done (took 18.561017344 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.544669221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130615445 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124786095 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.126576699 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.154224987 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119094328 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131866577 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090745996 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.880986446 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.150784318 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118154807 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.437397031 seconds)
done (took 5.441692318 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179476978 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083978184 seconds)
    (2/2) benchmarking "String"...
    done (took 0.086119412 seconds)
  done (took 1.421178575 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067534699 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126315569 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06963728 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070122667 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069175201 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068584885 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067901908 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068042306 seconds)
  done (took 1.792917264 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076303674 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071117727 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068393847 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070746762 seconds)
  done (took 1.535502605 seconds)
done (took 6.260503129 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799364364 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.208217619 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189047557 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.416294763 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135534769 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164855293 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649714866 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.306121857 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190003509 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082010974 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110830455 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.330273482 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.114376031 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642941494 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074371101 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090311481 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136434223 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437280786 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067790433 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081913336 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089193483 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12814094 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085136792 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07471037 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145676456 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067555991 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136503126 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079649997 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066273176 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.213372249 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174473176 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653554196 seconds)
  done (took 10.428468273 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096755601 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096967877 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068620911 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123535352 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096367628 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069413412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070520427 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067625488 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086610611 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127469436 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087957088 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10113693 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065839242 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068408938 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085280418 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203000184 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080601021 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081637506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070432773 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075305519 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104990335 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077879319 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076989212 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077183128 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129305617 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180607832 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100402908 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.10008638 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068437382 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080484824 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116579936 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125247847 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065586938 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.0661865 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124431337 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094757621 seconds)
  done (took 4.704107728 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.010501297 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146408149 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091023795 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135005146 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114698793 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06611562 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066702733 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112773335 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06789122 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084066184 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215493304 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.395633102 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594889167 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110936551 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103957248 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067783369 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069262389 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065839996 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068879578 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.51719769 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099676122 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109024728 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08194839 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071449591 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065385957 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069168867 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068289956 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065997339 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070980022 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.112852476 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.309275893 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126482418 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068613609 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.95608027 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127280879 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0687959 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103085156 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162198969 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.222109466 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.147308387 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068819096 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064527995 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15370786 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070540271 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066441751 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083495426 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103978543 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113431365 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065767029 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067115544 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164804262 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065249261 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079887036 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.662342932 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154287123 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076404942 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064574315 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254719788 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08876509 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069446343 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065283484 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.206307883 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.132641501 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.06822986 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067581422 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069043849 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071953542 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.379109508 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06636947 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.183197349 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068262823 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076402561 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070451425 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069806429 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074176806 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07228589 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087717979 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06620614 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077563458 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.068863719 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067972392 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069581796 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087622961 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.388594435 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069604507 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071095072 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067408475 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09189201 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099546263 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066845164 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066548984 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103321971 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068483197 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066484076 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.110869204 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068742443 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087334069 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072451918 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115129677 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06617476 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.192272356 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067972722 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099461529 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06950538 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099283724 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080579481 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068369114 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.425563739 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066221799 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067813448 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070583853 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067418165 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070481361 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06951081 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082274005 seconds)
  done (took 21.720290001 seconds)
done (took 39.110028585 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242222959 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081951836 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077896108 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077496442 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073818647 seconds)
  done (took 1.900998725 seconds)
done (took 3.229810917 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123127785 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100782226 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064288731 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097536161 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064737832 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102647282 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101092829 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081718198 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10089228 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064364636 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097430704 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066903353 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065791102 seconds)
  done (took 2.473296369 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083361616 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087195766 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071832524 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08632092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065685638 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085562698 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084027649 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091932256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084273737 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075519077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065841378 seconds)
  done (took 2.197205314 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083442124 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086962092 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072540424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084864663 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066170477 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085257841 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084523209 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088742137 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084314466 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076385167 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065645185 seconds)
  done (took 2.191389935 seconds)
done (took 8.170618761 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077993468 seconds)
  done (took 1.383493127 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.591715604 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.105631928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082192916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112477524 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.196487889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.122678797 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.27673657 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090717275 seconds)
  done (took 9.068059128 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102718634 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072560899 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072432065 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072994033 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069446713 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069805582 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069790421 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072136804 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071338335 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06883244 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067931825 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068866465 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071598454 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068942023 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069901129 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073190917 seconds)
  done (took 2.540699124 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094574443 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092409998 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076397736 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075628439 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072615804 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072654882 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073961025 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07409643 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071046974 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072497514 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074605685 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073285494 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071901389 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066756466 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076831099 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.078005953 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073721552 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075949004 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07642414 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077415986 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076459582 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066847684 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07405451 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076408675 seconds)
  done (took 3.232702397 seconds)
done (took 17.538340084 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115778151 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072457667 seconds)
  done (took 1.497672725 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082663501 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085272355 seconds)
  done (took 1.488041762 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083565244 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066092493 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090356458 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077949988 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066668272 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065617195 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088834355 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067423799 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066894657 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067370432 seconds)
  done (took 2.060105894 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06911713 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078333153 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07109273 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082733787 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074478047 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065213121 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072306251 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068282975 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078693385 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06256137 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072614555 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083345424 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072556784 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086215595 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074705487 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069856 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072611892 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06918106 seconds)
  done (took 2.646955909 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066726725 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067365914 seconds)
  done (took 1.461441919 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066893756 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063252364 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067699226 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066948822 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063769956 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062697886 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064313605 seconds)
  done (took 1.775137861 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.396225934 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117114582 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.32136166 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073079464 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085469777 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261351059 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06791328 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072928624 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072892457 seconds)
  done (took 2.837483233 seconds)
done (took 15.093347172 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080483828 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087584992 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099158264 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37910281 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091996613 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066481232 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114307614 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192000189 seconds)
done (took 2.450196978 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212929421 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.640751008 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.411869251 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211977107 seconds)
  done (took 2.594516395 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343249493 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090749924 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060653849 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07045928 seconds)
  done (took 1.905756119 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066047373 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069919717 seconds)
  done (took 1.475400552 seconds)
done (took 7.527435102 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066163821 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.088501592 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068117077 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064316753 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065558443 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066127092 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063664158 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065187824 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064676462 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068336644 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07085079 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068122597 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.068200944 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068842362 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066249803 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066216724 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068357177 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065591972 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065867897 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068494663 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06572091 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068158191 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066260418 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065718081 seconds)
  done (took 2.996555083 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083789196 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066329028 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071458845 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071086462 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069598863 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070933373 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070914978 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065494056 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072019973 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068177289 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068904612 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069118356 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067962293 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069082986 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068498577 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069585917 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071018527 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066020305 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068415627 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069570145 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070969484 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065825962 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069501028 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071154373 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069275725 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070733582 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068444639 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066263508 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071278866 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068761691 seconds)
  done (took 3.434815866 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069427633 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06327097 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065568927 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071427065 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065173751 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066442717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065031115 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065914525 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066531265 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.065648736 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066950161 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066215154 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065377558 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066886841 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066867607 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069362788 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082249059 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066006816 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065723152 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066432992 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069702643 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065924129 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065690892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064912327 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065646014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06510787 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066039112 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065676037 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066652539 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065735556 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068697562 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069847281 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066027451 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072946825 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070052718 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065384263 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069854958 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065760801 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066301614 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06601793 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065068695 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065048829 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.066915888 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072579197 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065986032 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067240105 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066417814 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066697485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065244915 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.178016569 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065067271 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065319967 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067428552 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.067033606 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070305079 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065353618 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06673843 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064979832 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066217197 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065394101 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064922247 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064929359 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068206002 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065733389 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080560642 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071797483 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064363041 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066901004 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06595478 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.068125315 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066734598 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078217722 seconds)
  done (took 6.303745367 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090006045 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08691637 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065688469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064891982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061492214 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063939683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069840377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063977258 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065724826 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081868007 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064489524 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065100929 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064882938 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067713697 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063954003 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065322119 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07253574 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062393554 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063516646 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06730385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064064247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069080275 seconds)
  done (took 2.854243542 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156182943 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070782224 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105809902 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075284017 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069812696 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075278788 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069656939 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070071612 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071210642 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068859499 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069645449 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071842444 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072471023 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069751796 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069488445 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069669044 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072369142 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06986189 seconds)
  done (took 2.745633684 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076457817 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066010172 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086422205 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065994338 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.06614424 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068637451 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070524358 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074321711 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068750594 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06568842 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073700689 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068162245 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068368033 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065790516 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068643624 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065998454 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068403793 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066535932 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073473685 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070039821 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06979664 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073603467 seconds)
  done (took 2.889736653 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0802318 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06806708 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081502271 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068372647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061553127 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064131823 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069970216 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065565925 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070022481 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067324801 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065580436 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064280198 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068545108 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065457207 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068603627 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06537888 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067403362 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066091137 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068268857 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062625354 seconds)
  done (took 2.703719479 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086893246 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06761899 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068057774 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075914668 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06777423 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067460109 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07528686 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067559748 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067989172 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088658636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067289165 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068475206 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075083265 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072760525 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068902567 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074852654 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074725451 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074560319 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067100157 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068987296 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090546903 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069147869 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076971023 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069104548 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069310655 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069515895 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069049836 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073072785 seconds)
  done (took 3.38533934 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066530254 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065562681 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063658936 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063238924 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063587142 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06302805 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063166652 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063575146 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065810437 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063536005 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065863025 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065850356 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066018206 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065395802 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065554399 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065948566 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066132335 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063519152 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063557726 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063185482 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066799572 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066365696 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066220116 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063661335 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063171192 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065765586 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063904101 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062956988 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065567824 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063116902 seconds)
  done (took 3.296559597 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075982137 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072588353 seconds)
  done (took 1.503653875 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063246198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080895429 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06335814 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070127544 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070115757 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066214084 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074011563 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069317657 seconds)
  done (took 1.909772715 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082026804 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077623434 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068074113 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080211044 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076728221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08311128 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135745771 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066799706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073418676 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064597296 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080172756 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066587005 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075329798 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068765282 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074866066 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075260422 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066448666 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074386022 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070511989 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066717321 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069602004 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076836796 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071005683 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063327701 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069744837 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091075711 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080624994 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067609832 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071077583 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075638959 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074372834 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061937772 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067966044 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068688503 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066112388 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078986389 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083868638 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071077723 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077114462 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068081506 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078221273 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06284873 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072522259 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075087428 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078510482 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068400111 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068765441 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062908603 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065748804 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071189257 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063199964 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070770725 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06282125 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076078169 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.072062624 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078891037 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067023515 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069914511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07124845 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071724015 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075125739 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069199148 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068937933 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066500247 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078297544 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073770619 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077260482 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063247279 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062092884 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066009932 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078834743 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092006986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074527282 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068911505 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069301399 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066008412 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07167388 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069117748 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074141017 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075045018 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068263379 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073895987 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075979356 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06859023 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.072186244 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076687077 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066473424 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070645239 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065831399 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084960705 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06639667 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064770665 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065007262 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079296155 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0712793 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068041709 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066360474 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075562675 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062071961 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068178416 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069103117 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069387278 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079569319 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072751497 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07240959 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076203925 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074808904 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068042344 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070528699 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063202847 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067412306 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065252756 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073186161 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060327178 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069740222 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06756323 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066675618 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075093779 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064742343 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066065515 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073605919 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072315972 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.19047152 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.066112878 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072524986 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068026376 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070338052 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074640381 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06563559 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061945167 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061873365 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070814941 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065706001 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071319634 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07088654 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069710931 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060514792 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06487884 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071518657 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075660722 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067194415 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067702607 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073310852 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068988389 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066047266 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073391297 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069549827 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065930334 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072881599 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067535163 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060889345 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06887655 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069879454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065610977 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070728628 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070040304 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069279837 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067610693 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065048006 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073952785 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068353726 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065332035 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066668155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066481678 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076746533 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068929822 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061621127 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063664003 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075081278 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065288504 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066807194 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066465358 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070018031 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069947429 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065858852 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067752365 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07050752 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078008802 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.074225265 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069022512 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073710346 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080518279 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068522733 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071002949 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06885214 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069264801 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068715537 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076802499 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07404022 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072980857 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070601444 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065059898 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073911346 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075662089 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066370942 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065361953 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067171719 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072259051 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073909166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07310895 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068776945 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066302286 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069210504 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071517649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070868587 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067817866 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067239042 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074337397 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066197596 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074911433 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068500488 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078723006 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071586217 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063170581 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070992037 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066064595 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074756316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063005535 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066215356 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067768258 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06893485 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066967658 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070705879 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062139137 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075288851 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076094605 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069537754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067934189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068081724 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074492448 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068701481 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070980463 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069834098 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072976086 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076683071 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066314966 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069659887 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077572855 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067407381 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061942716 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07364102 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067200035 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066918994 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06757426 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066335223 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071093309 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077223632 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073060668 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.18921578 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069345373 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0649714 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065318837 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062215215 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071477535 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070710773 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068120979 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073825926 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067174008 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066973354 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070721697 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066432769 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067557865 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068070189 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069958199 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068159475 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069185468 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066272545 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070104826 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066349039 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064126816 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06919684 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06740173 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066862824 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072970785 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067197639 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067287674 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069818413 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06690828 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068128077 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067104142 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066490084 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069803671 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067318946 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067922216 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069214981 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061987878 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073962403 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065470293 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074360572 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066709298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062962546 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072960281 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069053947 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071422625 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067507171 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066707372 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068820802 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066269673 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069960338 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074664715 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064883164 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077642766 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074202663 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067281586 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069938719 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067546387 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068688607 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066227153 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067240089 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066590726 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067719512 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06611 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071319753 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069249124 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066776989 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068679155 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067196422 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067237299 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067891451 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060374637 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065710768 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066089871 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066619673 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076138516 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066827586 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066199333 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065626965 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067258741 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065947841 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063164052 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074001573 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074514104 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066827924 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073245341 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066048811 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068182317 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077318499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060656337 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064783971 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064194177 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064585072 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073783039 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067402477 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076107288 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066700819 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066159591 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063324591 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066899455 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064717808 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060419802 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063954814 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070091241 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065218527 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066452208 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066282207 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069146521 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067460473 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076347705 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065930508 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067059292 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.067007855 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063406538 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065257967 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065346636 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069558888 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067244518 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064653254 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063808764 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066407986 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067354146 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.06797137 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069478065 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068459453 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073358691 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066136528 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069487953 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068837073 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060726868 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.202733891 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068701379 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066598641 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066192419 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070592281 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070180113 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068593262 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076160702 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066189529 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068176276 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067490234 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064023929 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066040319 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066697897 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066107866 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066310417 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069005484 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075804686 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064697341 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06988144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067019069 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067722472 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073237711 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068566452 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07024613 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072975019 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066951981 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068638651 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075032034 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07174518 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070462503 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067979224 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069035443 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072766157 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065736158 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073248709 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067153564 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068008772 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068635598 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065095087 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066660588 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067145298 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066843648 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072751296 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067362223 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066193375 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065456714 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064465492 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067634042 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06875598 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074459204 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069153566 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070110806 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061957381 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063467848 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067365005 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06487542 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068206762 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068832963 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072449317 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069088252 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066255667 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064838128 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076290313 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072645501 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070665056 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064910303 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070476053 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067694675 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069218642 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067446504 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066821623 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068625159 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070454845 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068911045 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065828918 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0742581 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069864304 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06667581 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068331111 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067331654 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06712038 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061006775 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067099236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068627594 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071297704 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068522583 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066280935 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076953999 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064221729 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066960322 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069143713 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065339652 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070679623 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061581707 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067752117 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066943794 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066708471 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061190062 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065447095 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064870006 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068454144 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065493229 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061179615 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076626392 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07502948 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069407012 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065682319 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064868391 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061578838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061451607 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066247837 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067874036 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068461571 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076290481 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066009344 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065993511 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061570306 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067113579 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070395304 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.06970868 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064512857 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061484482 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065948018 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.069719673 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072503875 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066233947 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066641543 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069453029 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068632275 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.196542077 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071388773 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064529625 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070612214 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079437574 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066775328 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068739261 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07402318 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074549054 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066419277 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061822517 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066884445 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069808884 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067642906 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067639309 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068540776 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082522312 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070282158 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065859608 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065709403 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070134192 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066379228 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074983323 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067784011 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067887981 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07136815 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069122439 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07474756 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069567743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07470761 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069832075 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069845531 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065979534 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067702238 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064812623 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065312342 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06822904 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067097675 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071485889 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074402746 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066118879 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077135937 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075672323 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068447357 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063058567 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066232349 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067412662 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062018904 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067073799 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064517141 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065678924 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065101271 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06531705 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067936678 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072400104 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067812426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067287856 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066915816 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06080422 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068415295 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069118125 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067906776 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063497522 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066135959 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067389588 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071380578 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070741579 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06417421 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068523346 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068691685 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067809578 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061833715 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072824931 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066602586 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068496567 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065521133 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067535365 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067557575 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071374868 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072540516 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067824623 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068349984 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070636392 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068239199 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.06388181 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06360524 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071574658 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064353433 seconds)
  done (took 43.12486264 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100950746 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06278337 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061570507 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06172207 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072466144 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062541371 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061347399 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063226766 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062257237 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064379822 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061827665 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061500762 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070043754 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07789395 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072721262 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065987973 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062096504 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062992093 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061414847 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062974813 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069952736 seconds)
  done (took 2.828725921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07346535 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077176328 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075629644 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081397669 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070480966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069925161 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074932342 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069681499 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078018248 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072129411 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07786054 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070425019 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071974314 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07227319 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072211423 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070263914 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077443942 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07031151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070024581 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07435761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069786104 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074848141 seconds)
  done (took 3.022217432 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067294632 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066020128 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067437266 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061371693 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066206925 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060846449 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069329715 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063891625 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069049941 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065018768 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065345214 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065303249 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068361222 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061090901 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06564157 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063342672 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107397884 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069033932 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065640152 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06690412 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061096233 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067665482 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061072906 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061426718 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06516304 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069244144 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.065963194 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06341947 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065582055 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064744344 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065822019 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063374871 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0677535 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06603418 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065000465 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065151397 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065340665 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066041149 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060927657 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063796865 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066203359 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061741318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066129288 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066986646 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063412915 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063220658 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067277454 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065411829 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060971833 seconds)
  done (took 4.64201905 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079397409 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108743643 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067941238 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091791299 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080816717 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074302187 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072113627 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091472278 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065101774 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066538754 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083268022 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080646331 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066997133 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07165354 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071165908 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066985861 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068239734 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066155758 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070897662 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066481243 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070423803 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073118309 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080384181 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078417482 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06959306 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065379009 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066490383 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071741925 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079268738 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07143627 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071291775 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071506777 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080032658 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070435663 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064440151 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067377947 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080379111 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065386168 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067453323 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063179429 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066990835 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068795921 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071591205 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081081903 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065742043 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070364398 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064859681 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062912929 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077245033 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067428374 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072434794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078624332 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068752737 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065439663 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069602749 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079389127 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065158824 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063203279 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067975743 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076306495 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062846114 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068478766 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077493458 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067299926 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071887967 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078295406 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069744231 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068477696 seconds)
  done (took 6.459444849 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075514664 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095541002 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083531425 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082661803 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075073326 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075245573 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075259275 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074840242 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075259224 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079265842 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075344779 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114392001 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070841357 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077710022 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07507984 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075379783 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074748211 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074873601 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074805085 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075379249 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074723524 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082063611 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075105848 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082679028 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079122324 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070965247 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074650434 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075051442 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083072076 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075211898 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087269276 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074874983 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075016162 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082049322 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078627593 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0747104 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064905265 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074850648 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075644143 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075000178 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070372219 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082392701 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07481764 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070876387 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075278709 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074713742 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081980971 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079225784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077653718 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079871746 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075399196 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082266356 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074931133 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075364791 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082886687 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085139418 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082491831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.082884551 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075983023 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082279704 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082709796 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086065649 seconds)
  done (took 6.286287026 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082137597 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074163936 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082657522 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061564174 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064339344 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071254249 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063912477 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064168437 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073614443 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073113632 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076195244 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071511006 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074739531 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075788202 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071644604 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074286133 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071420607 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071841919 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07344046 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071845638 seconds)
  done (took 2.88030681 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074512244 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082186422 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066348837 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071120427 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069117894 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071108826 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068606363 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069135701 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06728474 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068870759 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075301761 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076017625 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066512961 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071293976 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075883577 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070672319 seconds)
  done (took 2.571819687 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082605939 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072383186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079642259 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066085074 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066970317 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062753692 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065377891 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061019373 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.0621444 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077463453 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.0655441 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076222313 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065823155 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064682725 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062261137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071023072 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061688133 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063159657 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06522945 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078207905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069739311 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064481643 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068999433 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065504828 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067962818 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07045377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065411339 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065756216 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063367339 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066199964 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068658412 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069198927 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062741925 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063494856 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064516595 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063442363 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065228678 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065900995 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070683369 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065603035 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063315032 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067218536 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065377271 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066657764 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061713889 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065862314 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061877917 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06764013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063031416 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067925606 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065590435 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068129948 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06596675 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072073714 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068328908 seconds)
  done (took 5.1158474 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079595529 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069793801 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062157114 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063809957 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069049273 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067269327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069127734 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066993484 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067597265 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063680785 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067157383 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068503349 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06754926 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069137566 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067111725 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069345401 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061335896 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067217451 seconds)
  done (took 2.654793527 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071812073 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065949348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073220207 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065793682 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065912491 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068378676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062219034 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064686871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064706928 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066408911 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065793807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068194866 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064537678 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067967662 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065702504 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065609586 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068071845 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063936331 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066006959 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061599175 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068536143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064428294 seconds)
  done (took 2.892159043 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094235355 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082534569 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.1412474 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079386844 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084943149 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071862742 seconds)
  done (took 1.989012777 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090605574 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101306588 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066506257 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068955787 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076233722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07062988 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070537417 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070295272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078119738 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075378104 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070225227 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078282074 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07760584 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076903057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07477343 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075582101 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070232858 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069602396 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065934615 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083078388 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069667736 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077679064 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069551097 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069254299 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069361906 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07659745 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078118227 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075441744 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069257867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077891925 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075808283 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070239745 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078590568 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075875299 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068707694 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077387684 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069897564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082774328 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07520458 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077269917 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069086335 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075468866 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077772227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074082404 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077716626 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069636566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074598388 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069796143 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0698883 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085200707 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07589876 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076899898 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077555066 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078168952 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078328762 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085186573 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076222297 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077928868 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076142645 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07588702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077515809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075991655 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077397827 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075669821 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075217579 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077050647 seconds)
  done (took 6.413120956 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103507236 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066804334 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070995051 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075837294 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077455329 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070015639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070056251 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069804756 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06995451 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066956087 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108086474 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069907612 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07747591 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077631687 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069983979 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069854441 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069895036 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077166426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066766928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086091842 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070120948 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077258143 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07709991 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07722691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075541937 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075318273 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069736668 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069689486 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069842571 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070106279 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074562947 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070215836 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077783934 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066624458 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077242253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070602746 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070222824 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074886639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069717967 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075662404 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077506497 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083079517 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069656918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069475845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075611725 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070013959 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069756024 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06630253 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069722799 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066834668 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075963117 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075271356 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076215257 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076658358 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069769103 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069607179 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069900248 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069621261 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069877848 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075516215 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077682895 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069796226 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085100586 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069806657 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069749747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077285056 seconds)
  done (took 6.321765943 seconds)
done (took 132.561631492 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.191874569 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164714244 seconds)
  done (took 1.78731099 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068762655 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099132765 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076670747 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127583388 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066596526 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099928559 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.09921756 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077840069 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066397754 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065821488 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066084503 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068588829 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131118683 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066299572 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066051502 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068265741 seconds)
  done (took 2.757113343 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098911604 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162590105 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102515962 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06511069 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099714802 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072980627 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.06476841 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075189696 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070702409 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065823163 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072489042 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070512573 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065279073 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070756589 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071192773 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072610534 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065091613 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072269912 seconds)
  done (took 2.88492997 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099212023 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091336831 seconds)
  done (took 1.639801254 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155612424 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105834095 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.145491017 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350850166 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162951981 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148608585 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143794284 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142828608 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116919876 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138020201 seconds)
  done (took 3.056653762 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100076047 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154277626 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266292062 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117359541 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072703932 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0934874 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118055476 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077792118 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.07979008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079663855 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079668314 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07606293 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099852759 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072574682 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07353086 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075906655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103142699 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072849429 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074150742 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075368182 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100589589 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065466751 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073095259 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072605634 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076995867 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076880802 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066230882 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065665902 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076476624 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073915377 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076131054 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093584091 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077300625 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105968427 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070598058 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106037143 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076668339 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073348051 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074013049 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072832638 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07752043 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077788565 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072980039 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07661249 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065415137 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076484261 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0661522 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065705747 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076887833 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066960645 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077247385 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076227965 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105520925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066533061 seconds)
  done (took 6.05743672 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103742389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10601733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071276066 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112347244 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102467599 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072423853 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102696922 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095518844 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104124409 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069993719 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068452561 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070273883 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081732367 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082511795 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114845012 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106720807 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074311777 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070886521 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10579615 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104866043 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068359236 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097060643 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091497719 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103062456 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067259998 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070349026 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067991735 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070600498 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076397396 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078048537 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069791636 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080094984 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084549323 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078084961 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067333733 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068507795 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068719696 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079370381 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078882447 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078730612 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.0770062 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068559721 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067679228 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069267322 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069721347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067670197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078510842 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08039549 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078376411 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069591315 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070179557 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06824639 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069799301 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079362079 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077490606 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080932542 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079593556 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069146054 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068859213 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072149416 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079904194 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.07858649 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078787102 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070105379 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078437625 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067912928 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080419572 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083670575 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068816294 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069799377 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06861189 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069634283 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069322017 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077205343 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077496409 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069216443 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069524199 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068148895 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079662 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078331221 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067920696 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077036507 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066985901 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067784469 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069782125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069357289 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077556 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08007693 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069589314 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068099865 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069213144 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068235023 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067149357 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076914075 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080004863 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079091451 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078629415 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070002454 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078867441 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078016424 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069890845 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079109065 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068667228 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070035386 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069968429 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079054079 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077507262 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079503194 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.199192852 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070701006 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08005485 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080832537 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068921465 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078568515 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08067036 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079178499 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069674145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080914973 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069629485 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078873356 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070376719 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079609121 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068551207 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080815282 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069269096 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068975872 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06836173 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079829568 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07329328 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068573565 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070732321 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070467084 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079231759 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082215732 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070933374 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07815896 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07811532 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069973373 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078795505 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069331785 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0796755 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070238959 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069522332 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067565752 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081521955 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068895374 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06882549 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069709757 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080818706 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069318054 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081560375 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078469968 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06835155 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081725305 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080362257 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076388989 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080637826 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070165649 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06843177 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068444283 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069408541 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077621328 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079086914 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070909513 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068642646 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07752471 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079536101 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067197946 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077591105 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078009028 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079102473 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069187355 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070267427 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080718928 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080604502 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078630177 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077820263 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078042833 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068961994 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077436887 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078445335 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068233723 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084199348 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068772733 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08338179 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078930685 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077127733 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079312341 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080004651 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079524481 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079813651 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083287553 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068423135 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068191086 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079390069 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068392367 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069142403 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077524129 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069703367 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07044341 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08336852 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068666145 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079531603 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068144045 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078752346 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067030669 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069844125 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082992145 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068143738 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069835987 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079807908 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069438388 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077601219 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080512634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078531985 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068015716 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069980493 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210429264 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080283365 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068579234 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068309965 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070171003 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079415901 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078348839 seconds)
  done (took 18.768647182 seconds)
done (took 38.406143213 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213440587 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152936004 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182725565 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118387173 seconds)
  done (took 2.21181596 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.118491532 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101054132 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092236506 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065198733 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099124262 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065065856 seconds)
  done (took 2.016983303 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3127734 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210675185 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187169438 seconds)
  done (took 2.180794141 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203012447 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.19018703 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414800277 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261476495 seconds)
  done (took 2.651100845 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145943921 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089518735 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067141596 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083697334 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.132761359 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160728313 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100023532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125138743 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078253468 seconds)
  done (took 2.511845516 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148768755 seconds)
done (took 13.199240926 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.221088147 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094295301 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.083732044 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077586469 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087952251 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165105345 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.118166313 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.126866226 seconds)
    (9/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.176256324 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.124511791 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095935893 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084018553 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077985578 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.201169434 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077367819 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07433514 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.164382845 seconds)
    (18/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072447872 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077826242 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.196149528 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.175556326 seconds)
    (22/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.136703941 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.199440918 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113176604 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100727928 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.110136573 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067600419 seconds)
    (28/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.103600884 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077729184 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.129755871 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.230819678 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073745139 seconds)
    (33/309) benchmarking ("sort", Float64, false)...
    done (took 0.132741456 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07435284 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.20430844 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.078547713 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096186326 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09330887 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094317833 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073412003 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140128557 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.071300881 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07775031 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.219379856 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.192409576 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074576659 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09308647 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07517212 seconds)
    (49/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.104469946 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087788792 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.157787698 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075829789 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07776313 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.161618539 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06700395 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.102289793 seconds)
    (57/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07563076 seconds)
    (58/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.093283092 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.194073844 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06702204 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093633419 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110745505 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192633891 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050889791 seconds)
    (65/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.074422539 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073968267 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.208758068 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.208852087 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092900449 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067787717 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104993688 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.050762508 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102132116 seconds)
    (74/309) benchmarking ("sort", BigInt, false)...
    done (took 0.186285164 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09115778 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.118920599 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082528402 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079909851 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08930753 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072077485 seconds)
    (81/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16664477 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108963904 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.066665625 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108323942 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072169989 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074997053 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.359475403 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052790967 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076891655 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.066719894 seconds)
    (91/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.075433716 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.128958952 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07223736 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19335934 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.107792662 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052425989 seconds)
    (97/309) benchmarking ("sort", Int8, false)...
    done (took 0.141380024 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169821691 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065502259 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068589871 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080534489 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087054991 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182034509 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062267383 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.110637205 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064695449 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065595784 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066264394 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051482871 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072720951 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.052754818 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068322845 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072905723 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073248511 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091021395 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091527339 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.154136852 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069682576 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146670083 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14766367 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093079438 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.19992396 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076552585 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092293233 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.095000619 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.075984443 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051003231 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182517347 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.143153323 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.13144405 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095015109 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065522994 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.13608451 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073712705 seconds)
    (135/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072041387 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074101303 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072511994 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066321382 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.143745118 seconds)
    (140/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051571778 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070651204 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074318307 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071661442 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094672685 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194685162 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065117171 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050912785 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071430792 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073360375 seconds)
    (150/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.098027361 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.091972487 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067896047 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177015375 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194541706 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064867987 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072645813 seconds)
    (157/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075925814 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050838247 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070819671 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.154936831 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069283431 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.05310185 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.349995234 seconds)
    (164/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072338292 seconds)
    (165/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076496511 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063806381 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.162852874 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064786922 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07380356 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.053445925 seconds)
    (171/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.155288828 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053336741 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080821739 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054159833 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067457715 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079668216 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052994669 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053406067 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052617823 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.052703752 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091723872 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052083951 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14027896 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075499801 seconds)
    (185/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.156944154 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05196342 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170511854 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051255114 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.18064794 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145843572 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051422064 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071867292 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071610805 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065532703 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.051576612 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181088777 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.0960843 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089134492 seconds)
    (199/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060607844 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.202605724 seconds)
    (201/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.269184133 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078026512 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106000205 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053031953 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052468867 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065323085 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072355909 seconds)
    (208/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066234971 seconds)
    (209/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054149691 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091937332 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158328544 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072624164 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064426322 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053150313 seconds)
    (215/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051802534 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078948294 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052313818 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052680778 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090227043 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068063167 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068852065 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081258826 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077461051 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075645329 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06994844 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123180687 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067885976 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.188322264 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055953356 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092598567 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073973669 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072050378 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066903686 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072157588 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064418505 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052862236 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.051600648 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066952211 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157131491 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149333481 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051016001 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051526291 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.141183403 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074722023 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066250771 seconds)
    (246/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052132975 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065537734 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072498267 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068026815 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05147816 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05360278 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.155203391 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050963569 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.051868303 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070787406 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.154085068 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17502082 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.1089735 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.050821469 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050694389 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064654389 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050553344 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093341205 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050470322 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065656738 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090545942 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064722016 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07902864 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071662301 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087593232 seconds)
    (271/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072763603 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110914431 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076611303 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065440603 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073153708 seconds)
    (276/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050310984 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065369788 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064445648 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087976477 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065647899 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065882776 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.050873065 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051981411 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07304607 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069787639 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063365169 seconds)
    (287/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062172784 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079939238 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064249542 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050562989 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063570545 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05056552 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072275474 seconds)
    (294/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052372411 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.108579666 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086693066 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050948498 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064853314 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.05069126 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064586421 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070938219 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064696052 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072161321 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061069289 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.06729137 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065838598 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070255357 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065036656 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064963867 seconds)
  done (took 31.161778508 seconds)
done (took 32.639980968 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086220092 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096087471 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077439 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094741302 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.081752031 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075647756 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071792612 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078112861 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079752668 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081312653 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077510239 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053612893 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073536604 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073641464 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074111401 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090332459 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077849904 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072844564 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072851937 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064610742 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072418434 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065229497 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06699847 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053978598 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.07748787 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071375561 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.07154355 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073829303 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065154372 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06575977 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068980612 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073521507 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06481913 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079129675 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07184956 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072951713 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074079508 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075975039 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066797542 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065048664 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074184025 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065287024 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072768105 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073160287 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07164787 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071127954 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072801403 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077151644 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090935381 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067343472 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074814911 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075918436 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075970277 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072372301 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069505909 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073024927 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070622217 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090278419 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073522457 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067476954 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074031128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077660531 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070664563 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072325351 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072928721 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075146714 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07581441 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070950118 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074211524 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070982477 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064594951 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072548856 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068808553 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065241861 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075897006 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077380041 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063624416 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070777301 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072792532 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070377705 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06421523 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066478964 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066998725 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071394629 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066791264 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053611555 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068787075 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071699908 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064052022 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07309607 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072424779 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072182952 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066433776 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075798344 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064382133 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070333258 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065695547 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065345994 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066474256 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068527338 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065231286 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066481946 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073964802 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065939106 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070962662 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078171994 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064542509 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071351456 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063766818 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063746832 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079226117 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074003593 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064613081 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067456313 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064235894 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072703006 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064289136 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064765874 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064744825 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064979456 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071305708 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065437223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067425218 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072047857 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077747248 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065475464 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068590787 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066673142 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064663676 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071056517 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064962079 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065324173 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066713397 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061390547 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067050091 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064982636 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071881043 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067224077 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205717548 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06753623 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073914598 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069896096 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071565971 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070856379 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064131328 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058973994 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068105044 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067167366 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066962485 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065184574 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06612927 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065247621 seconds)
done (took 12.48036632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068182384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142059753 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09777248 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095126476 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085646768 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069376418 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075764452 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101100729 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067049726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100958747 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087639647 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085827941 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114144705 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064080565 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065445647 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069743788 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.06689069 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081538025 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100535889 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086396298 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114945777 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064866649 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092020755 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088667877 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088006632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09409254 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068553725 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069923612 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069157055 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101682001 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088184339 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069473973 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066022731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098417391 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093194852 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.0843784 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066059764 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083471489 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.06619717 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065532834 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067077241 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098761185 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080061501 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081016736 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069840665 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069684964 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067040918 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083599495 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09009793 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078916745 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085522368 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101089973 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068422331 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064853556 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064262351 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085923967 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.06521433 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06944531 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066281316 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068281586 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065920581 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069298719 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08058861 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080298973 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069590441 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079360601 seconds)
  done (took 6.853076187 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.0862264 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0901811 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083040496 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083239891 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06602745 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06589204 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066056238 seconds)
  done (took 2.103208458 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068157381 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087854835 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088777491 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089164528 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081158503 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087418613 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075221682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066062014 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087447255 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067456653 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087001503 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100038844 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069788291 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073656917 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090334261 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066217017 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089959946 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066119417 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069307002 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090883424 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068636962 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095402279 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069266675 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066443772 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080818173 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066873155 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113371391 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070515205 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068179439 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069206381 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064069647 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106468557 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079769254 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07401401 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065888061 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080977531 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080382519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064559035 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082295447 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074673519 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079723058 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066991689 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067343309 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063930961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070390918 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076523933 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066990505 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066570009 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068337289 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086083649 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06742891 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079406537 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068964385 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071383264 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067790926 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072275774 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076166796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066704449 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085518307 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067630554 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082998997 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082547662 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079613351 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082254585 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068909618 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079947214 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080175193 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06844126 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068346431 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069690457 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082210394 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064996988 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068225792 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077041837 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068088258 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090012984 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089162453 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067694606 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080547506 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06684746 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066220503 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066784762 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089607771 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071818831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06625895 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071094712 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069275485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064710592 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065325166 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070100956 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064206373 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067956997 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0689838 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069559762 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068760939 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082852132 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068350934 seconds)
  done (took 8.838853745 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070531469 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067313332 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069005354 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067249072 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068048726 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067747086 seconds)
  done (took 1.997040116 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095515947 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068957736 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080205383 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071553991 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104015123 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086347889 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08670617 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077871681 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083011302 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078324667 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.08658815 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.0878329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091610269 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072191737 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085599625 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071171851 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086424027 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074224115 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07834361 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071897896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08581048 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071908147 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072153353 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081072617 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075197114 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070914458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066852172 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078223503 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077352087 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078215901 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071767563 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075515896 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070350014 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077572329 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086655882 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07083173 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071746757 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076817694 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072081983 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075319798 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087841016 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07189596 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073797309 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076522503 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077698844 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069639372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076444853 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074459179 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085274767 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076645815 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076608725 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070164732 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074878233 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076507688 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.06977455 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07732449 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077268857 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08619071 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071323183 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.06996682 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068099193 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075532067 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077315144 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075797992 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078004921 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076633564 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.06987392 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071822353 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072008525 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071490636 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076558038 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06815659 seconds)
  done (took 7.109531846 seconds)
done (took 28.449638888 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.533352286 seconds)
  done (took 2.076685085 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.611087991 seconds)
  done (took 2.182572827 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.383971206 seconds)
  done (took 7.950508909 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.401516821 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.520863086 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71569714 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131846701 seconds)
  done (took 3.381030754 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.703808839 seconds)
  done (took 2.287169454 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216123967 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20065255 seconds)
  done (took 2.006380273 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37636446 seconds)
  done (took 1.947024232 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132115072 seconds)
  done (took 2.704518743 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.261004201 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174535271 seconds)
  done (took 2.01242039 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.482900614 seconds)
  done (took 2.057175014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.829207032 seconds)
  done (took 6.40789064 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212370399 seconds)
  done (took 1.829688681 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239735696 seconds)
  done (took 1.81879442 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.704511566 seconds)
  done (took 3.279164781 seconds)
done (took 43.519054316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082098661 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081930637 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081416922 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077721557 seconds)
  done (took 1.891557573 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079009492 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.074566402 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076449474 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073012523 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077272758 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073345517 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07482586 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076001851 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072606617 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073457171 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07278216 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072925266 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075972904 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074683443 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071680432 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075653981 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07640342 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072828954 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075419898 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073479323 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070352713 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075081496 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075228667 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071703437 seconds)
  done (took 3.368705109 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079913687 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074032943 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07573572 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072135721 seconds)
  done (took 1.89521299 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080920588 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094907914 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089980576 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079000845 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093142506 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086343297 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069305676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068877988 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070952788 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077567514 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068115714 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096092093 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088350937 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077884789 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080132099 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065859561 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068377189 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087576774 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077672071 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078633534 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069870129 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077652755 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068413078 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088167869 seconds)
  done (took 3.489931369 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088947916 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.1055222 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081482658 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088980532 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09124493 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065324547 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087810744 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090640437 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127116514 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06542256 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.071080689 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065273801 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073032777 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065441422 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080581196 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107697259 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111098999 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069455555 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09707648 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066340798 seconds)
  done (took 3.298665982 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075074096 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069464008 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065790278 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06945992 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077416191 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072948323 seconds)
  done (took 2.033320823 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070679076 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067868681 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068000963 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067408818 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072261687 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067485849 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065623465 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067617794 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067741372 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067034775 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06718339 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066398219 seconds)
  done (took 2.40927718 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.205000633 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068346822 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069716507 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066688054 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071188946 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06689121 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081088717 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067793142 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091514308 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06694469 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066893022 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06845116 seconds)
  done (took 2.58632011 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210337561 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075747842 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237952697 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150017605 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111020848 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115543822 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112132523 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11361054 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140918073 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100032118 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168655531 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166317089 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107416217 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13681438 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088852524 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100684649 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153935683 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162788352 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105297784 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166962995 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14555495 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12598418 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151247873 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101519437 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105518286 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121933745 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071612018 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080171806 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169382762 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132914908 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143990198 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110638071 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092198071 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176493423 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170710367 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141563124 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147614315 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085177423 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105469959 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135561367 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20178307 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089257338 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163114218 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109939961 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218670426 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133673746 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120262949 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120494576 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106187206 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08983486 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14742901 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183913695 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136879635 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087526626 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12384405 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113011755 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114822171 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113192828 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182004038 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162193264 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127351366 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071374628 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108859823 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153917485 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133627863 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108526361 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125208666 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091186006 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134965349 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155275035 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119949296 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14519677 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117182259 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088948553 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119638488 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140490116 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127429961 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161428692 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124644078 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07310369 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123460235 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101660507 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080874921 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145243081 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075534806 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176810799 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0997581 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110000028 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125716337 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110422558 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10990797 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15956293 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145521066 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103568499 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065805664 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245829104 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122460372 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146488192 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087909705 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109139278 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117675855 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078173312 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136988986 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075271558 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12338415 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077576847 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127926022 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12941396 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07715963 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122637685 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104967671 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101835153 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133272257 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160626873 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087358306 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081679688 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170159894 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123251451 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103232315 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144871869 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157878176 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10174837 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101428497 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15047974 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179874308 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089643095 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163293426 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106359926 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083360726 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088027554 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123432662 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11218901 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124011046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08165394 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117830646 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168907574 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074666484 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09559713 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134261084 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079464905 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080771794 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106255015 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105393593 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095722853 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100453809 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103337893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136747381 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123750523 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105179587 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123803869 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098194071 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313098561 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089014629 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10261157 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105178797 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069922974 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.134822738 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158337191 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079745498 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165014804 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122876414 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116956889 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119771965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084507658 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140559573 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079271862 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071040493 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144195278 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110960394 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110000123 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.151755804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116138095 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125191747 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118127152 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133286576 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130430834 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130917021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105053464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08903636 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111715874 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126545764 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073637324 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.09103258 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080161227 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104198585 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096354035 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082850212 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141395942 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123978189 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109444165 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112623133 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096482476 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14780008 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07612841 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128200507 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119291055 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09546079 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153341847 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153826186 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131835008 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09931606 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137290786 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07028723 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073799734 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087580179 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122288804 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082151939 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082888774 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114903853 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147040971 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128853897 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136408908 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126968681 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12157801 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153997798 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069406217 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116412867 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144162696 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118512245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103425327 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088388784 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09721491 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140172338 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104595784 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177224535 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113910162 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121386126 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149419475 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099392368 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078149811 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100688883 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131304427 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101003141 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139687206 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097537456 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086288743 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107459145 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073271805 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095420498 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122820726 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1146667 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131154304 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112857755 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126910233 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074546493 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108759175 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115417891 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11441892 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061951557 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113773857 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151173605 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09042034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112479891 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144406515 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.0762824 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.128039658 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163964712 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135309695 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082261764 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.362784147 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122588429 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131983265 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122955983 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144101662 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110312364 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139656159 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112655199 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087699752 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089472107 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100239681 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107045108 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09682471 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107824125 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116482998 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096744472 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13422154 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105700863 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112231045 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119938998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.100417865 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092274037 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097903885 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178660985 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119521209 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171234275 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100857716 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145461091 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16442566 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075638967 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079575803 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078094838 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14074369 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085227948 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131779568 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107597716 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117870479 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123678704 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142829118 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095390614 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068625062 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10898743 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132744743 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124341153 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098188524 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103393637 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163465491 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101364362 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079007928 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114123559 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115943205 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103747316 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173642486 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063422784 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106417222 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076083088 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080005811 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12712982 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298705143 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081079731 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104354586 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120280971 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113354815 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128740522 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100785818 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108465909 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126514307 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150536988 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127933749 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090152688 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11225051 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129553866 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155891877 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105067549 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09596616 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172291801 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152263624 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160033957 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08766515 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11456231 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114176211 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10847987 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138482199 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083186854 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162499589 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082218056 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135807414 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103360326 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088909609 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128837013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108215441 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087741331 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148132144 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117309277 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082765502 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077691319 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11790778 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119191268 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105470761 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075495149 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13868219 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073829482 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13235486 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160604118 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080978748 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108081317 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097044789 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080534859 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106779342 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101244046 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086927273 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.238136396 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176705968 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088312802 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150518204 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134337781 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113019128 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135880107 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102700737 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639331617 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077747602 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151899482 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116291695 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174039226 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100378685 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118400601 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1097798 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12209149 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144317465 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104258339 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180021392 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131832843 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116412447 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080172413 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101915433 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103853632 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087330911 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108311734 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113789092 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114353554 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093342671 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115910896 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12414728 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081888455 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095744286 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156616521 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116564691 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143156102 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140562433 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085453649 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118021331 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140396697 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080611483 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120468321 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152746949 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106784634 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100025522 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081410531 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100713813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159104751 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072978723 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158183023 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26329672 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111552764 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114629627 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113270209 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131038786 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107588804 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121140886 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092311117 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110057123 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11444926 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082015865 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077889829 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105809727 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111289326 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098596566 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097079591 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098925199 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152051501 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071725973 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098573234 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114617407 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143657696 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173578538 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089001167 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082419263 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118541617 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113140671 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111948453 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120676002 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078641219 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081671644 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081005742 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078644083 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109534091 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113589881 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114308338 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110930074 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163644241 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083715129 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228014427 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095442229 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104646853 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069918373 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078676823 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095714038 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097833051 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106827978 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109927364 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159405851 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095640292 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089881952 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091555402 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073916773 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083406127 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129286132 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109864509 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119095614 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099220463 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062783103 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108312579 seconds)
  done (took 58.891296136 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111944624 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082838665 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.094704534 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144878205 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122898316 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202604945 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154117426 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18807876 seconds)
  done (took 2.838164644 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069556316 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095547287 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104002067 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082731874 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066886118 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069092384 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.231802344 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081507215 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066382568 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099322394 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078688305 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068986047 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430127238 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0684304 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068509911 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062527629 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067616747 seconds)
  done (took 3.520560936 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.39050874 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.610842114 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351676412 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072828797 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.447918365 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087459838 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.126594954 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.128522449 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074247978 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.523288792 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.397792696 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124226883 seconds)
  done (took 18.04995153 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077458192 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070452891 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084710796 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084416408 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073232742 seconds)
  done (took 2.100095983 seconds)
done (took 108.008074558 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083785684 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.611949758 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053856144 seconds)
  done (took 2.403767248 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087354638 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085799275 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.085449099 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.083404748 seconds)
  done (took 2.061027205 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07647519 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076072048 seconds)
  done (took 1.863670907 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233621701 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164356061 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096078635 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085587424 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078290618 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08002542 seconds)
  done (took 1.959756305 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074990538 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075064495 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072413503 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076290525 seconds)
  done (took 2.008953146 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080008313 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053253732 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054878621 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058083546 seconds)
  done (took 1.956812757 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090098159 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080564924 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079326583 seconds)
  done (took 1.961478322 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104875459 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086512563 seconds)
  done (took 1.903695966 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084870857 seconds)
  done (took 1.798198197 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.103827122 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102122328 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131394269 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111087989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139388298 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111768811 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085207881 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086329091 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076571345 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086955257 seconds)
  done (took 2.747563793 seconds)
done (took 22.951766338 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081724447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.458855526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360229066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09010161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.679491423 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356954838 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.001248586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09304696 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11519722 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067724244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084780372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648766712 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987699149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.413198325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.975491261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318866387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649475517 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068024233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068225092 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0683836 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.985989498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067625427 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067992809 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068337652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648212578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372807811 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068206246 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315463282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067851539 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069898361 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355051013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068368357 seconds)
  done (took 16.438731267 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072146576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120368861 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074004581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084196187 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071069192 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069571367 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071578072 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069418777 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120510851 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070081728 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08540182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067799998 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07205145 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.083611303 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087699887 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068315062 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068737427 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068360111 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068381907 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069322938 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087089395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068286657 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068517573 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068610763 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068317814 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080327853 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068829287 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068193355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067973102 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069975527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07075621 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068697296 seconds)
  done (took 4.1455928 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116805741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124810274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074299445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103079185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11175495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070136382 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143410486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09363201 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127026296 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068137251 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085082579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068033342 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10248048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068664655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08785051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068521126 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068951748 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068587656 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068317076 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067867263 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087264784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068081753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068461986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068506529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068279769 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081401952 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068989477 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069072538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068238253 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06983912 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071363586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068750596 seconds)
  done (took 4.3757398 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074099427 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075781606 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083072574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084208123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069500958 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072540959 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073311224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069704036 seconds)
  done (took 2.337598428 seconds)
done (took 29.020728701 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081137253 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069252532 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072654772 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08225363 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073881723 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078978836 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067224908 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075750266 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072400378 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073226169 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074758708 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067698213 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071162992 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067219714 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074053264 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067849926 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08051447 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072021024 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078842519 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080083407 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069778487 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072651043 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074834347 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079047177 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079061764 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079455537 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077409265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072766967 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068643665 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071048669 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076690906 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084089596 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067957447 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079165935 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067620655 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067827161 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071957843 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067658299 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079312297 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076386229 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069792577 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075995623 seconds)
  done (took 4.817332218 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090785246 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093211652 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085276582 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061426277 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067346224 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065608237 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089352055 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059882099 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059964613 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088507208 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055542417 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060274204 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06590356 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053411216 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060563012 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05649937 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062409521 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055690992 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060509496 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060004741 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089475102 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053863291 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077597645 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063499354 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056273238 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061307481 seconds)
  done (took 3.500517167 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076115357 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086288908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.089786621 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130832264 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106580276 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07905008 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079438723 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095641574 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088683133 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066758741 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070794838 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092591796 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089963545 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074322346 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06756129 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086262395 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083563409 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069608745 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073720761 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094767832 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08668383 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086149502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096162246 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084350955 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067003426 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070304323 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072134275 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082140659 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072998487 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077089846 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072288186 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071813351 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070792514 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080543957 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071517543 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069615954 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092442539 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077971133 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079221995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068594385 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076518921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069356946 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093160149 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127104051 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068873638 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074564391 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071794111 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077575799 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067925117 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089313768 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07979617 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067838253 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071033535 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067471632 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068227251 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081871712 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070003787 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07093415 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077217318 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074119464 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093365917 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072451887 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083679672 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067456573 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076253301 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067095513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069241073 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.06704468 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096886568 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069924703 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111636436 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070968826 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069139483 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077043276 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075749201 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07486649 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068730907 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083489749 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078992972 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071466871 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077576256 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071567412 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07091734 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092340006 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070189449 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069426346 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069274946 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073606654 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0720391 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069824709 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081579604 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067409996 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071169601 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086126931 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067291539 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06958017 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073397406 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072522178 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067806909 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078859709 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073170678 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068613095 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077446375 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067848802 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070821231 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.0808714 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074233155 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066755439 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072626727 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073681442 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068425295 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069028074 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070525159 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069515099 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077468873 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074858945 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073200354 seconds)
  done (took 10.786909093 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166526204 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157449007 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070952669 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149576475 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076704671 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079875347 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151057942 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095522431 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068181842 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068737514 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069139665 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111339928 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106639216 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116828495 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079336783 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06802468 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085130554 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115256609 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153452087 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146293629 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084963587 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077750537 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069870797 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069224386 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071024535 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078750995 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085649171 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076535873 seconds)
  done (took 4.515669857 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082645102 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104580546 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07438805 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091587699 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090887358 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068272195 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070002844 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07002273 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081660293 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07901502 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067484013 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073545154 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075187033 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071231949 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069424129 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075278857 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075346121 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069337346 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071908975 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073581028 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079012824 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091795292 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071583101 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067210475 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07342108 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067440053 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063713558 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084341436 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068324558 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095880067 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066134633 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072834553 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082577541 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069291051 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067793599 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067985242 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067850349 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067727016 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069657006 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066857276 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066365278 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057359955 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067710783 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080283576 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075697363 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056375313 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072902335 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073586757 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073462665 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065338053 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071160977 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071024595 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071003388 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075929249 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071666369 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073265153 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069088736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074600649 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.077545575 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068297704 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06532283 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065929946 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075193035 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065700545 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076849616 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072725722 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066359276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067993518 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070419429 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07509348 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068215832 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072353285 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065402351 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069898814 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072543288 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069629828 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069318843 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066741376 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068123112 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068306144 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05568017 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068530269 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053410371 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071217746 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066158881 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066265049 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068517495 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072723982 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079941128 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069309869 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073853402 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068877019 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067148154 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071016758 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060513363 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070744364 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083633308 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082647866 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067755257 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065864774 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08124465 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072558798 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067168841 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056174636 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073034365 seconds)
  done (took 9.296315997 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093322341 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070579269 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085442574 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09153353 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087913343 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075765093 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078263065 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069338692 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083173139 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074385804 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076905526 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068072451 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078087118 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078270665 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.07064697 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077904697 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071914414 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08542813 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083115781 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068388409 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077326026 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08055774 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090799236 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082128107 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.080938813 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082593099 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091256771 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078011254 seconds)
  done (took 4.009544013 seconds)
done (took 38.653981858 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.814160374 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.986698681 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.808398941 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.183183271 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.882911459 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.902388161 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.972598071 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.80399479 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.972406243 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.846473085 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.014962157 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.949912001 seconds)
done (took 65.878297511 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.847478266 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.946018812 seconds)
    (2/2) benchmarking "String"...
    done (took 2.031203576 seconds)
  done (took 5.720212883 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.036203424 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.366326355 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.059689213 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.806232885 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.808142704 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.148261787 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.612381966 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.31073849 seconds)
  done (took 30.852977881 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.972897584 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.048285592 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.493082132 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.526738553 seconds)
  done (took 15.835574076 seconds)
done (took 64.116482429 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.82926415 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.81171516 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.832082573 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.787794717 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.865349354 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.812881231 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.991265094 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.023556679 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.80219214 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.794091727 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.804050142 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.234237798 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.814535149 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.027870415 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.802465563 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.820611274 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.884926654 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.238185848 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.961468713 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.815016239 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.828670451 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.825896533 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.802032906 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.818478549 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.852550189 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.804415559 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.214606144 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.808358322 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.422621269 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.80673304 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.83535391 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.159106454 seconds)
  done (took 205.870810382 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.806397471 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.801876256 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.868518975 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.815056628 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.202914017 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.987844663 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.905653018 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.253678083 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.808888681 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.83376221 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.034369679 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.80523584 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.048590053 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.803031271 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.847377577 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.918701754 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.997544683 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.027212825 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.852882047 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.93303984 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.820467648 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.876623818 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.856438159 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.006619217 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.813003487 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.80537543 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.969583287 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.812920988 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.978204772 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.983454965 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.830047179 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.835274418 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.027685816 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.680346661 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.831714948 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.83456052 seconds)
  done (took 171.256096647 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.19473417 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.809705021 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.80906164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.809637112 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.808119573 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.826070047 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.806608972 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.808942182 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.943487383 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.934143243 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.415847524 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.366229442 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.860714203 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.63581645 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.808830624 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.878080168 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.82151422 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.808176345 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.810800344 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.826280978 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.837783787 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.807059231 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.810103319 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.937031362 seconds)
    (24/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.807647075 seconds)
    (25/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.825108061 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.815074866 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.811558657 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.816948406 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.183466926 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.88731225 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.807492581 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815907485 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.069768265 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.808785449 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.817373904 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.705210856 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.441084032 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.901834448 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.814136498 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.815736686 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.809957088 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.03277028 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80931222 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.811437606 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.815720847 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979913605 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.807547607 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.943667708 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.808392184 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.313006281 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.809951744 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.812311485 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.886198805 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.48165384 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.808668933 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.813869855 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.815648199 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.812297292 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.819961327 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.818100702 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.742128365 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.89053344 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.813129903 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.816963158 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81983773 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.813405402 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.038767104 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.814386422 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.453263423 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.869144105 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.934464471 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.936839816 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.813903735 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.886199645 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.905909497 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.813037523 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.814490458 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.814710303 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.814150904 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.895832562 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.810886533 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.938118873 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.821679093 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.816120779 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.867667274 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.884137889 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.812065092 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.715075913 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.814116009 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.815390651 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.112644627 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.879640523 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.812173415 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.815523932 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.815437682 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.941988309 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.933995781 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.608078622 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.812900219 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.821189482 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.821741972 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.978151035 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.814982958 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.988438024 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.813593892 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.902036965 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.818096218 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.817401649 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.815433985 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.848012597 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.817185324 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.878958765 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.816324818 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.190669401 seconds)
  done (took 405.963596064 seconds)
done (took 787.090899076 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.491682893 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.428607736 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.543114759 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.453419573 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.43426097 seconds)
  done (took 14.099939994 seconds)
done (took 15.850609938 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.90371357 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.906318317 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.840835079 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907662538 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.836419996 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.907953217 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885380107 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.845982783 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.873374626 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.84270925 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876853998 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.840516426 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.829846644 seconds)
  done (took 26.047722275 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.054481241 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.050436189 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.886551394 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.055058371 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.868860119 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.048007806 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.977644445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.96849942 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.969747023 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.835762408 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831598927 seconds)
  done (took 23.301732626 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.051225147 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.057806877 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.898873214 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.078522603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.868060617 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.049902022 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.983308709 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.972720433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.976269317 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.833360909 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.831706628 seconds)
  done (took 23.352488655 seconds)
done (took 74.452610505 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.82874758 seconds)
  done (took 3.578994702 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.85121976 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.010830845 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.833342901 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837179956 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.827279216 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.828229121 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.830255911 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.825950826 seconds)
  done (took 16.596947909 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.832027979 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.826063497 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.826436273 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.825321084 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.823335544 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.829603477 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.823746724 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.827226942 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.826764411 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.822823228 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.822799045 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.826340974 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.825417231 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.823660067 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.82348386 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.827170349 seconds)
  done (took 30.965975113 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.824963383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.824173761 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.823914531 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.823889152 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.824225148 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.825345057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.825581902 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.824173436 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.824277231 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.824380511 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.827599496 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.82545748 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.825958861 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.825645838 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.82569092 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.827669211 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.82807136 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.826592432 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.830669036 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.82641236 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.826840708 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.828961726 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.826748956 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.82736568 seconds)
  done (took 45.584999233 seconds)
done (took 98.477720717 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.735968393 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.21382682 seconds)
  done (took 8.702453774 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.83105252 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.831230468 seconds)
  done (took 5.4546604 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.828813837 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.829042692 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.829598771 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.829517881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.83118563 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.828864976 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.829521625 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.828679991 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.829287772 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.830921938 seconds)
  done (took 20.049812117 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.83047528 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.829953068 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.827822078 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.830181401 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.833831173 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.827241476 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.83127814 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.829774408 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.829240921 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.831347182 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.830605802 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.82868469 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.831157477 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.829999488 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.832737104 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.831851233 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.832053854 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.830552841 seconds)
  done (took 34.704717612 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.831712913 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.837769717 seconds)
  done (took 5.427449497 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.829848385 seconds)
    (2/7) benchmarking "second"...
    done (took 1.832626281 seconds)
    (3/7) benchmarking "month"...
    done (took 1.82810139 seconds)
    (4/7) benchmarking "year"...
    done (took 1.828263283 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.832180272 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.828150734 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.829221865 seconds)
  done (took 14.567755773 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.831446287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.003951159 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.073030878 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.496414272 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.832645444 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.835091708 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.751355269 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.835296499 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.83653679 seconds)
  done (took 20.251960641 seconds)
done (took 110.912916165 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.621629833 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.824074238 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.175517345 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.909440183 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.844550653 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.169096483 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.855506689 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.140264522 seconds)
done (took 43.297139828 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.921393971 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.393601316 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.636566109 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.532994066 seconds)
  done (took 13.319573452 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.810725251 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.370668477 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.869033766 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.487228489 seconds)
  done (took 20.32426424 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.195931287 seconds)
    (2/2) benchmarking "read"...
    done (took 2.180421692 seconds)
  done (took 6.141091332 seconds)
done (took 48.464902211 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833295008 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.832153907 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.831246253 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.83004618 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.828702358 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.831650581 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.829195393 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.829631824 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.828709271 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.831587184 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.832286864 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.832193677 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.833183376 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832245504 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828881301 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82985099 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831586012 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.830126892 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828993329 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.832027949 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829858461 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833050775 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.829872615 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.830709029 seconds)
  done (took 45.700065523 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.833174847 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.831077669 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.833388054 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.833489288 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.83171537 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.833195668 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.833466795 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.831327877 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.833168939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.833909984 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831265255 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.830917865 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.835235315 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.831284466 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833786287 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.832492464 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.834427083 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831698077 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834327917 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.831539475 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.834222724 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831769099 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.831294538 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.834325495 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.831332299 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.83237396 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.83448119 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.832004074 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833119692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.832354795 seconds)
  done (took 56.742202062 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.840036095 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.842598269 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.834609089 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.836602639 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.834246955 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.834191091 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.83498627 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.834732276 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.83383632 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.837337502 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.835613531 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.835502641 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.83671748 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.835345747 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.836994301 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.835432766 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.83561775 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.835542279 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.835756638 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.83650091 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.835996201 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.836113582 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.836307944 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.836604196 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.836065028 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.836003432 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.836102835 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.835330414 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.836095183 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.834880211 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.836378262 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.836274035 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.837112318 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.837151108 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.837031056 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.836266341 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.843379924 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8447179 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.836958844 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.837755497 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.837987823 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.839331639 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.83664757 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.837975427 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.839088445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.837446864 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.838213043 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.838728025 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.837312554 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.837518348 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.837086535 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.837260516 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.839204118 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.838398034 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.83876143 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.837612547 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.838691042 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.837822426 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.838732132 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.838016332 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.838093321 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.840108772 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.840023292 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.840467079 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.838019047 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.83946914 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.838754332 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.837501451 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.83807212 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.83868173 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.838143694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.838150659 seconds)
  done (took 134.05485539 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.837571933 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.836974929 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.836262443 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.835799115 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836030612 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.838381732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.836615497 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839363655 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835617009 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.839463596 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838069903 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.836350002 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836531065 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.839365696 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.839284359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836752094 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.838429519 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.839093225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.839031395 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.83981409 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838970402 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.837459726 seconds)
  done (took 42.194961585 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840691256 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840012992 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.837303768 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.839135672 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.837320077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840582508 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.840378612 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.84105676 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.842071711 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838034639 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.836568043 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840736493 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.837988383 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.838174508 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.837603593 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.83759245 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842003752 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.837682554 seconds)
  done (took 34.871218568 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.838241614 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.83756146 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.841892745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.838531083 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.837989924 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.840232972 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838235892 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.841457372 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.840863559 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.838605593 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.841831945 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.841492173 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.842721836 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83877688 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841164695 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.837799666 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.841549085 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83858751 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841667111 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.840297529 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838802292 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.842016652 seconds)
  done (took 42.246375754 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.840577073 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841560877 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.838274901 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.838741219 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.838987333 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.842249971 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.842455127 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.840578104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.842634103 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.841796168 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839141508 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.841645696 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.839850087 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.841315039 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.840237887 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839434933 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.84326559 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840747558 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84415784 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.840359788 seconds)
  done (took 38.58544614 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.84446998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844525746 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.844545788 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843700229 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844019508 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844509632 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84345687 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843473243 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845068101 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843748997 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844252843 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842613057 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.84284688 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844707358 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844738583 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844314642 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844823863 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844561283 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846424378 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844628948 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844503665 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844993928 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844710757 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.844998306 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846319749 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844569082 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844793339 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.844142703 seconds)
  done (took 53.414241264 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.844573353 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.844491971 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.841006165 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.841428622 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.84125518 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.840987229 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.842264861 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.842138975 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.844829044 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841773041 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.845043289 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.845487086 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845393457 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.845842943 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844621196 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.84425003 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844714392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.844492626 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844790518 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845486178 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.848400777 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84675638 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.848959993 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.845568529 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845771428 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.848822925 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84490382 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844930605 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.84642226 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.841740839 seconds)
  done (took 57.107240893 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.863101668 seconds)
    (2/2) benchmarking "in"...
    done (took 1.863591613 seconds)
  done (took 5.497673153 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.842452946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845589119 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.845532287 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.842642723 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.843463625 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.845997657 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.845900651 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843808688 seconds)
  done (took 16.52694168 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.845070472 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.84809344 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.847477812 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.847012785 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.846412365 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.845971145 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853624307 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.848660106 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.848411877 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.847420774 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.853004581 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.854119373 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.848811815 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.847144365 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.847044833 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.847290325 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.84615287 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.848904074 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.846500503 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.847876212 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.848264223 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.849065236 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848272377 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.8447319 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.849221804 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.858988903 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.851775898 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.847753497 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847898402 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.849755238 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.847366661 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.844171003 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.847729646 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.848998557 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.848276756 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.848916774 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.856688135 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.849587094 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.853016809 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.84868392 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.850483199 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.845939055 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.848921178 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.849377027 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848742305 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.849316583 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.849333098 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.84660655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.849507161 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.852277085 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.8539859 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.848868473 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.846941601 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.853079968 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.850455891 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.855494391 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.850666045 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.852251375 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.859015735 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.858965677 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.863595528 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.857816016 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.85028421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.849713993 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8585739 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.875966314 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.854865205 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.849727866 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.848343582 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.85080088 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.856200569 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.863669356 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.858479981 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.851149677 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.851577504 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.850516931 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850707175 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.851060148 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.856743036 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.853143221 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.851984547 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.85036604 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.861387495 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.875153989 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.849035468 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.851626511 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.850617881 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.852387048 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.851191777 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.859675221 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.852307741 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.850762989 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.849128396 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.851372723 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.853094246 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.851745257 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.849165951 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.851581478 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.848483687 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.850670698 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.85149791 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.853969627 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.860619824 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.852835214 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.850258108 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.856375052 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.852065839 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.851308002 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.856985896 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.851943283 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.851294439 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.852062955 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.856371364 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.849378387 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855970148 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.859746269 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.853908126 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.852797886 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.853397269 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.852481233 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.861350346 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.881307496 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.853016656 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.854446693 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.856345409 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.865414369 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.852918304 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.855113229 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.853528838 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.850071261 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.850842487 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.85464103 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.853755886 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.854819915 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.853704789 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.854060846 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.852313203 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.854742496 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.853797855 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.856203612 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.854545941 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.855875708 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.854538623 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.855803395 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.855132566 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.854195758 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.860377509 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.85483005 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.856455322 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.855345513 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.851957382 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.85658872 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.856235031 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.85475528 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.853311922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854957683 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.85370034 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.855342213 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.854756925 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.854667193 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.854367868 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.853885815 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.857764972 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.855764878 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.858500497 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.855638243 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.851821752 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.855438882 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.856162566 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.854936022 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.857294999 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.854088569 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.858302271 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.865951814 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.855328957 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.856833088 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.856948494 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.857190219 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.857182235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.857475504 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.859751466 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.863630862 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.857630463 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.862789556 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.857378807 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.856393631 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.855867818 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.856778487 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.854773291 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.858007108 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.859391852 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.865275185 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.870128738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.865847785 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.85825648 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.862578132 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.858469319 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.862833987 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.861389775 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.858426038 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.858286074 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.856841206 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856746308 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.859222641 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.859213708 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.858323949 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.857500056 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.858052412 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.857164769 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.857837054 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.858318217 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.858574238 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.857294019 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.855567372 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.857904749 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.858462815 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.856266309 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.85474815 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.856659294 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.857612408 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.85698737 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.858834887 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.865343943 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.854790425 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859136186 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.858540971 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.858075493 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.858210053 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.858302774 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.860915019 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.858912883 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.863797082 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.857951311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.858672539 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863816037 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.858913783 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.858440613 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.860448732 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.859562728 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.856367209 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.862952058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.868520913 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.859718933 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.861399212 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.859788278 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859917465 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.860873401 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.867510458 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.858121778 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.860269654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.858515606 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.860756166 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.85702733 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.860569303 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.860957304 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.859233006 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.862538241 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.861782886 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.860480941 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.859888254 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.859844366 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.860584516 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.860192866 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.862645718 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.869161347 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.866730206 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.86026489 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.862625633 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.860976104 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.865206786 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.861825055 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.860832823 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.860159545 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8730785 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.869549118 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.866331766 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.862157378 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.860345762 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.865766947 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.861839611 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.865024092 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.861273438 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.862036821 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.85979382 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.860584982 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.858342633 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.863383388 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.861895271 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862078508 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.861941785 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.865724815 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.861583523 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.862246538 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.861271182 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.86410013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.863074682 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.861298579 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.864289091 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.865465953 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.863769605 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.860194331 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.861015331 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867964378 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.861831238 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.864562367 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.862730304 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.863222587 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.861603775 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.864756544 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.86280358 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.867748554 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.871678347 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.865569227 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.874003267 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.863168747 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.871583162 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.865039483 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.866619201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.871658619 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.860849214 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.862821654 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.863369898 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.863534519 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.868202993 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.864086658 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.863722494 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.868518003 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.864169927 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.863690675 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.865226901 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.864021059 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864058194 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.86407189 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.872259861 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.864125361 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.868146878 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.867621015 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.861463224 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.864709707 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.864508298 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.864422641 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.867162483 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.865350376 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.866247445 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.864372528 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.865204603 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.865003427 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.866502237 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.865278625 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.861723463 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.865373691 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.874224619 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.868871485 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.874452145 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.867272516 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.875517236 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.871819156 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.876266378 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.871841789 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.871621079 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.869769784 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.870222106 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.868916848 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.86467325 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.865861115 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.866564484 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.866771594 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.872024412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.865423528 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.867195953 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.866447595 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.867026003 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.866621445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.8758015 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.892489719 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.86774671 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.869747418 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.863606941 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.867148105 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.870664579 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.867792674 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.864172269 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.868869678 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.877084848 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.874466863 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.866558304 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.866349981 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.866515564 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.868122237 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.867066742 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.868045588 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.868117085 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.866919798 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.867232729 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.867972803 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.869477187 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.866631481 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.867295867 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.866653271 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.867513664 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.877882605 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.868347459 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.868387622 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.867694261 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.868328324 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.868959688 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.867165295 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.868190245 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.867404259 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.867843283 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.868613467 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.874468724 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.87515463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.869063903 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.8666484 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.868443328 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.867763378 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.867438271 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868129171 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.867901662 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.868457746 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.868353947 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.869263654 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.868879546 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.866246846 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.868460102 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.868102293 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.868595034 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87072308 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.875940561 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.867548959 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.866134308 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.868932921 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.868933151 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.868176258 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.868702767 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.87689679 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.871130286 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.8797628 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.878272854 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.873275434 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.867717163 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.872684918 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.877869841 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.868479396 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.869583845 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.870588858 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.871374493 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.870378747 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.872816537 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.870791057 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.87542358 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.869502996 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.869734982 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.877917739 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.872163303 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.870900171 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.871513756 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.875535771 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.870067757 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.868985014 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.871077467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.869796013 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.877211635 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.871406197 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.87082748 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.87279379 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.869058957 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.873277074 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.876802097 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.872438256 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.872250313 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.867684562 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.871812309 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872925263 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.872369917 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.869042962 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.871344841 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.870361775 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.874478004 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.878900931 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.868981398 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.87244185 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.870932614 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.871021352 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.871812507 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.871765757 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.869620248 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.868189999 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.871299315 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872388272 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.871509078 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.874287022 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.871678285 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.871546145 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.873416426 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.871986267 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.87419152 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.884207699 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.880706444 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.871484916 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.870686864 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.872950951 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.875556869 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.872535676 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.87211517 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.874029629 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.872496253 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.872549508 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.872691663 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.872795772 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.876116923 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.888693911 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.873966334 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873640174 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.872405223 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.877398213 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.873331562 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.870824266 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.873717259 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.875172622 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.876959637 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.883773881 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.874024272 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.880631218 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.874176902 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.873913913 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.877449554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.876263615 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.882685114 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.876861627 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.874154215 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.874085783 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.878265832 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.892199536 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.874832303 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.884186064 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.906121689 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.875358178 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.874963698 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.875613204 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.872472968 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.874483886 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.875957824 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.874167507 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.874173967 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.87416241 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.874658898 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.875401324 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8804026 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.875848176 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.875807863 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.875834116 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.876478381 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.881946346 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.878149062 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.881439434 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.877876269 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.876368425 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.876298039 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.87659949 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.875606055 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.888269589 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.886800318 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.876956666 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.876855255 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.873229973 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.878993162 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.878710943 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.888118219 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.885503375 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.877533848 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.878087672 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.879234982 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.877832266 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.875384956 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.877676513 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.876379583 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.877540907 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.874191465 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.889971426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.888638646 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.883208408 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.877505916 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.878054025 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.877268374 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.879347772 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.877224447 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.878528951 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.879460989 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.877413858 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.883101785 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.878172941 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.877926705 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.879921496 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.887280625 seconds)
  done (took 1112.76563722 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.874987303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874992738 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.875751197 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.876582649 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.874639121 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.875909863 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875961853 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.875697949 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.874147787 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.875800965 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.876003939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.874265007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.8750835 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.875995193 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.875004432 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.876624395 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.875958136 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.875810224 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.876451669 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.876555654 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.875908904 seconds)
  done (took 41.190874017 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.880028226 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.876710179 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.877810362 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.881263421 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.876468908 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.879533876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.876912504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.880518745 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.880648484 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879112616 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.880755336 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88081123 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.877854857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.877416222 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.877625944 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881341583 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.881064671 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.878944768 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.880522132 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.878356522 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.880849806 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.877910706 seconds)
  done (took 43.14631575 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.8812981 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.881194109 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.881070291 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.877665288 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.880812234 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.879274952 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.881450254 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.881709283 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.882397343 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.880981828 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.88001184 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.881719445 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.887885656 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.887888653 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.882379243 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.881502846 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.025072245 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.883103836 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.882527224 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.881980299 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.878821262 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.885331484 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.878549665 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.878888312 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.880137087 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.881632292 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.881679795 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.880978306 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.881347777 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.883491689 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.886118295 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.882218977 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.881936552 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.883505364 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.881657646 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.881811469 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.886240728 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.882329256 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.87874897 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.882789276 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.891645241 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.905786896 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.882753331 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.887274974 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.88170565 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.882844932 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.88573378 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.891598711 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.880263671 seconds)
  done (took 94.215130945 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.882036609 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.881473457 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.879444974 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.883006699 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.882017617 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.882668567 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.882847617 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.882910103 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.879366712 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.878987739 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.881562272 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.880702264 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.879340226 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.88326016 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.883112068 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.881017242 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880329075 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.879887549 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.880272589 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.880781925 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.880458688 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.88354881 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.883159675 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.880062396 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.882866281 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.880055171 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8800535 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.883990891 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.880834825 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.881145339 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.883535322 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.883243593 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.88446525 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.881961865 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.883599768 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.883756063 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.884115707 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.882440962 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.884092115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.881356028 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.885334531 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.883867695 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.884736382 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.88418581 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.881733337 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.882032234 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.882641732 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.882211098 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.883009069 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.884990804 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.885276751 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.883140846 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.884538191 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.881700002 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.883859467 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.885131545 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.881867389 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.881912992 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.88580046 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.882441974 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.882102784 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.884896855 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.882920155 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.885496269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.886299196 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.883865786 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.883296626 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.885396773 seconds)
  done (took 129.826525453 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.886468002 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.886453758 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887014494 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.88666989 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.886533875 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.88699633 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.886423272 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.887406467 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.887281091 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.886707227 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88684592 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887498413 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.886552701 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.887218686 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.887401709 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.887509336 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.887593372 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.887642179 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.888469509 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8879174 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.886822386 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.88874837 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.887908276 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.887223429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.887543394 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.887585063 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.887380705 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.889318541 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.887855612 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.88787948 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8885489 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.888203705 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.888672512 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.888487968 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.888216217 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.890167887 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.891967815 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892882648 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.891988621 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.892891039 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.891674197 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.890096665 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.888580049 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.888125146 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888637814 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.88848186 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.888381457 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.889456361 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.888111388 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.889364818 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.889168053 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.889395658 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.889779238 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.889166074 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.89096835 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.889089999 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.89062011 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.890674745 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.890269207 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.889292476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.889645845 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.889561711 seconds)
  done (took 118.903285795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.890540399 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.89056841 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.887081893 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.886337964 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.889888234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.885887949 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.889962641 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.890605435 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.889988452 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.889734087 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889295493 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.888948296 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888079594 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890756783 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.887973473 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.888332387 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.887722831 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.889376851 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.890534829 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.887752402 seconds)
  done (took 39.59279524 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.88787356 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.891489477 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.887876517 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.887512067 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.890780189 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.887719048 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.890450055 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890230454 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888746994 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.890819235 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.891157568 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890805976 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887808885 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.888350898 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.891359457 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.888817074 seconds)
  done (took 32.046615824 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.888055393 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.890652511 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.891886231 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.891193771 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.888047075 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.888614605 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.891494716 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.888865508 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.889307352 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.891833209 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.892565093 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.890926039 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.891996558 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.891152551 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.888028822 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.891477979 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.88942042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.888457861 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.891921855 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.892212881 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.889111016 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.889042657 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.893558191 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.892503486 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.890215304 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.890198799 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.890041398 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.889731326 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.889279525 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.893600358 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.889027139 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.890032782 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.88999988 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.889569076 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.893735692 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.890326464 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.892693965 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.894599851 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.894129681 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.894667927 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.892513871 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.890688358 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.89398364 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.895187632 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.891706696 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.893985398 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.891215223 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.891939747 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.891202544 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.891438573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.894620674 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.895170967 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.893468465 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.89498632 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.894236785 seconds)
  done (took 105.847192853 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.894230074 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.895117573 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892632774 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.894396522 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.895617446 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.892460352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.894024161 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892588802 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891134834 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.894023178 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.892492653 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.893857078 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.890938888 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.89504617 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.892446729 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.89445189 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.89172537 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.892524122 seconds)
  done (took 35.897444104 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.892873483 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.891948261 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.895078893 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.891652439 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.89197579 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.895573371 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.892239647 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.894512972 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.896020859 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.892892869 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892955961 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.89648566 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.895156369 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.895351934 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.895540127 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892997632 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.897460425 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8965442 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.894545651 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.893848563 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.896558299 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.895106767 seconds)
  done (took 43.496437551 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.895820327 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.894839973 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.911731313 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.919534721 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.919206378 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.93601642 seconds)
  done (took 13.296183305 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893881183 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897657869 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.894442378 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898302748 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898393794 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895758105 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894728693 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894579894 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89717317 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896068576 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89545904 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897965727 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898666021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894865901 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897791576 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898500974 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895759563 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89511502 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895959443 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898806738 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896061553 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.897396194 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895773127 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895177044 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896384698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895588469 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898181255 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89639727 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895792511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8983623 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898595265 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89610579 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.899081958 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896435392 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899267177 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898839633 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896211625 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898920914 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899375603 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.897509269 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.899085911 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898927241 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898434634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896800455 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898066581 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895500639 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897693779 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89539269 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89649246 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89930535 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900794798 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896822004 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89934757 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899475068 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898740001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899246018 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896724092 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897335686 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900709269 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896799642 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896584241 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900041246 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896501661 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898243324 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900633335 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897037638 seconds)
  done (took 127.047122667 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897438229 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.896459322 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896882933 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89770895 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.898149963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898364853 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897186197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.897899719 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897653428 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896849549 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899779373 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898780662 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898120488 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900354849 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898611585 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.898171332 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.898364003 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.897532219 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898318122 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901765337 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898099151 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898732638 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.899426367 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899859313 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.898901946 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.900505438 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.898155648 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897661209 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898713098 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899597087 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900571807 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899527731 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.900159217 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.899114466 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900009049 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89879391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899829931 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.899300155 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899831064 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.903262117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899930414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.901960668 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.899777384 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.899950236 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900970811 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.900816638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900269945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.901169174 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899887621 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900515714 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900399913 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.900891314 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.901277653 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.901632248 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.900765753 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.900996096 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900261974 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.901386801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899862826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904114257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.901468498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.901709453 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.903663254 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.900862899 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.901458401 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.900320534 seconds)
  done (took 127.206155338 seconds)
done (took 2593.176684593 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.93540765 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.912225672 seconds)
  done (took 15.674073575 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.067939067 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.017032472 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.902532955 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.944200753 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.897739435 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.919035782 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.902659317 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.899521472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.902411265 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.90177069 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.90198773 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.090649103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.905424822 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.898806804 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.901357189 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.996455427 seconds)
  done (took 52.892410775 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.905235169 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.906637338 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.916087851 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.908911481 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.904008754 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.917557377 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.938637727 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.908914857 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.948221306 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.916095267 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.982176188 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.91453591 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.906104127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.957600467 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.915608166 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.920287179 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.001744182 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.981912259 seconds)
  done (took 36.577626738 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.986545563 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.905753631 seconds)
  done (took 10.729108803 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.90224218 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.901307285 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.906703455 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.908584082 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.917853423 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.906042618 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.927313699 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.9268663 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.929521747 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.953023572 seconds)
  done (took 71.010827934 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.912134374 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.909679466 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.908733526 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.907357017 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.899870586 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.901618661 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.907335972 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.899906868 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.590938972 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.945124189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.911949409 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.913489118 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.905626242 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.909374531 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.905602681 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.93009416 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.030872497 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.904788024 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.904709454 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.912953672 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.908352787 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.980295708 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.921260937 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.907889767 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.938140113 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.597072896 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.917090844 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.915172722 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.028827824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.906844794 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.908059782 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.909504837 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.909834844 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.289003244 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.197783895 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.905460102 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.913025399 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.914884376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.905987317 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.036541373 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.908647494 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.914953736 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.891107244 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.197429704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.017796877 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.950375953 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.291339544 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.910351689 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.910710567 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.940145187 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.911031311 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.909400462 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.921036812 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.424359631 seconds)
  done (took 134.85585971 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.904086219 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.165820533 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.058657089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.902185176 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.191127424 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111396867 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.902934854 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953517837 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.903967919 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.133870397 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124509339 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.012107366 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.902671531 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.904226043 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901919955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.899290725 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068085598 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.977953787 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.903083923 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.900515475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936315503 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.148995786 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.032967862 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.904034104 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.925391977 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119100145 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030811045 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.014128928 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.3693279 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.904468907 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.970673675 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.904069039 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.907542644 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.90272426 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.062562685 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.00081186 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992888545 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.905796761 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.902294089 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.901923598 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.580956663 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104225063 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.004343235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.050428454 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.158740426 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.110199244 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.693550502 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.904082654 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.64555763 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.067375729 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.141113556 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.139363383 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031242094 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.906045466 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.183027358 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.905371609 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910817377 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.138424602 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.149767193 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.008175392 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.905426162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.904599042 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.902571411 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.155083982 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.905561474 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.000849878 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.906211851 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.903217573 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.004096262 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.010690735 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.153645005 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118912873 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.939532891 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.206886767 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.374838943 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.156274044 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.975218163 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.13915792 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.905750998 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.903769825 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992499671 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.750392119 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.107201791 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.15697219 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.163558905 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.944977183 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.631443756 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.906530182 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.135575346 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.131387665 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.160306538 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.152253386 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.061199884 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.23291747 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.906251136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.905107592 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.153663522 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045999464 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.907989636 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.269980867 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141814966 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.481036242 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.940361788 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.219226872 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043306195 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.911949814 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.552345058 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.906377427 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.134149316 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.95332954 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.906704014 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.909622706 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.127506561 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.888966294 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908434576 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.623947805 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.971211496 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.910028464 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143426192 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.907777348 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.174843843 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908157771 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.150145979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.923389203 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.940560045 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.08430706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.150343103 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.909913027 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169362873 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.156686096 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.028798995 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182833293 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.833899121 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.909929382 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.200385669 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.909288566 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.909117907 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.082388982 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.912409851 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.138872329 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.910195034 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.19864133 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935160661 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067226127 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.91124052 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.16787814 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.946467826 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.962943968 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.91170752 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.041950783 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.913867909 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.785420223 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.064728706 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909197974 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.907935112 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.451216449 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.906950795 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.06776312 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.145744414 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.935266379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.987582263 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.584538269 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.910004117 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000426667 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.935972021 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.256496211 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.911637544 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.128053294 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.912355259 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.446560476 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.908717349 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.155906381 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.145305762 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.911527233 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.90924222 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.818669422 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.911835989 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.910610351 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.073118075 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.751909359 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.908994594 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.116769461 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912125409 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042924632 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.911889733 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.981754791 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.26709206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.909452272 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.911397569 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.913356737 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.912730956 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.911732378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.121801718 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.944489436 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.438910936 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.055364672 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.185683911 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.232278453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.165315162 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.959864611 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.914175828 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.16027479 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.913720851 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.977139138 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.913858866 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.936482257 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149336179 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.916633643 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.129326842 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.196529378 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.843325594 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.96683388 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.913871204 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911362175 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.830691998 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.070991778 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.005618917 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.913477312 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.913646756 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.033027507 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042688767 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.132391699 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.916980021 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.14554249 seconds)
  done (took 912.147447686 seconds)
done (took 1235.713209271 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.914647183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.910874664 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.900624851 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.914528679 seconds)
  done (took 29.483835083 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.923855946 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.920629484 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.92289162 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.920811789 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.922634523 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.920098405 seconds)
  done (took 13.376066561 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.956855548 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.916544945 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.916049504 seconds)
  done (took 21.635150518 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.99131453 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.333882375 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.035619372 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.368869386 seconds)
  done (took 10.575034382 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.92603297 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.92450937 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.924378922 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.924439703 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.92565008 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.926171674 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.923240649 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.923902235 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.924938252 seconds)
  done (took 19.170474222 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.291758394 seconds)
done (took 100.376842553 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.067627534 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.94710159 seconds)
    (3/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.317692623 seconds)
    (4/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.000861172 seconds)
    (5/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.964599937 seconds)
    (6/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.01038304 seconds)
    (7/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.914924524 seconds)
    (8/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.304547385 seconds)
    (9/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.055946244 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.8258379 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.626370471 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.064589138 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.961442086 seconds)
    (14/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.399695241 seconds)
    (15/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.92141764 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.996754562 seconds)
    (17/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.90128905 seconds)
    (18/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.602621471 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.928108848 seconds)
    (20/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.165164481 seconds)
    (21/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.92116479 seconds)
    (22/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.223928834 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.261141263 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.089931231 seconds)
    (25/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.327503724 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.108089101 seconds)
    (27/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.026537356 seconds)
    (28/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.482170718 seconds)
    (29/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.020127558 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.035403865 seconds)
    (31/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.897271027 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.027789266 seconds)
    (33/309) benchmarking ("sort", Float64, false)...
    done (took 5.707605551 seconds)
    (34/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.052728711 seconds)
    (35/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.210144335 seconds)
    (36/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.037808464 seconds)
    (37/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.916461088 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.32278189 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.61571357 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.941963835 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.023149523 seconds)
    (42/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.407178843 seconds)
    (43/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.046525922 seconds)
    (44/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.902775545 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.11667253 seconds)
    (46/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.945140865 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.87329314 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.042145873 seconds)
    (49/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.05317603 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.185920578 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.009472054 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.922177322 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.127537887 seconds)
    (54/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.209806075 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.977923336 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.121212888 seconds)
    (57/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.906102059 seconds)
    (58/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.839680859 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.396128155 seconds)
    (60/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.923390531 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.107966624 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.130027652 seconds)
    (63/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.2277205 seconds)
    (64/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.087630689 seconds)
    (65/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.247698988 seconds)
    (66/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.938396391 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.285846301 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.527970127 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.304068937 seconds)
    (70/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.003003739 seconds)
    (71/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.132308204 seconds)
    (72/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.102106694 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.997847115 seconds)
    (74/309) benchmarking ("sort", BigInt, false)...
    done (took 6.919036367 seconds)
    (75/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.007886322 seconds)
    (76/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.938765319 seconds)
    (77/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.761125809 seconds)
    (78/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.126342179 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.220212846 seconds)
    (80/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.949243836 seconds)
    (81/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.008041101 seconds)
    (82/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.091449592 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.622641613 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.129898765 seconds)
    (85/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.095346967 seconds)
    (86/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.250977468 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.907418195 seconds)
    (88/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.418908309 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.206518749 seconds)
    (90/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.008766309 seconds)
    (91/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.149456455 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.047977924 seconds)
    (93/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.137810797 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.242457419 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 7.005981832 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.443500606 seconds)
    (97/309) benchmarking ("sort", Int8, false)...
    done (took 4.892220367 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.923971245 seconds)
    (99/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.592522634 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.098362083 seconds)
    (101/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.609951369 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.953063458 seconds)
    (103/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.236102764 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.208708131 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.431852188 seconds)
    (106/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.913995664 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.405347814 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.565530246 seconds)
    (109/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.054767676 seconds)
    (110/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.959393335 seconds)
    (111/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.914427673 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.072315508 seconds)
    (113/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.182330044 seconds)
    (114/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.151242136 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.910543427 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.600806765 seconds)
    (117/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.260006318 seconds)
    (118/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.995441605 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.039005062 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.925714906 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.254041214 seconds)
    (122/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.113838244 seconds)
    (123/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.954335188 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.571879042 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.954833073 seconds)
    (126/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.753121383 seconds)
    (127/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.162586401 seconds)
    (128/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.938235186 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.285265413 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.681347522 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.985496108 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.222356453 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.380983479 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.953299947 seconds)
    (135/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.013673583 seconds)
    (136/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.048951716 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.20249492 seconds)
    (138/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.928411426 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 3.384417523 seconds)
    (140/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.054154922 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.150773387 seconds)
    (142/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.952647291 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.18887242 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.954500929 seconds)
    (145/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.533463773 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.228596633 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.863324549 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.04229179 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.952022018 seconds)
    (150/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.062447681 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.033857439 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.994634271 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.930230785 seconds)
    (154/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.918166533 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.196603603 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.964234863 seconds)
    (157/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.945737867 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.140053377 seconds)
    (159/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.957803747 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.216486908 seconds)
    (161/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.954525398 seconds)
    (162/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.917702876 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 8.439388808 seconds)
    (164/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.051799065 seconds)
    (165/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.94365853 seconds)
    (166/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.012710079 seconds)
    (167/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.495846241 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.262661494 seconds)
    (169/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.952028649 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.918302109 seconds)
    (171/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 9.295556454 seconds)
    (172/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.955390069 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.479408559 seconds)
    (174/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.406208381 seconds)
    (175/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.640218744 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.030106749 seconds)
    (177/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.253746578 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.924103929 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.965002646 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.316940915 seconds)
    (181/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.740912788 seconds)
    (182/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.110656069 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.941631818 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.631134462 seconds)
    (185/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.237280181 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.319351884 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.03569232 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.292322441 seconds)
    (189/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.335378462 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.938607355 seconds)
    (191/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.108204371 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.96342089 seconds)
    (193/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.955237768 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.27139496 seconds)
    (195/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.918330854 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.984201848 seconds)
    (197/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.9361662 seconds)
    (198/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.969590753 seconds)
    (199/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.436749484 seconds)
    (200/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.921093299 seconds)
    (201/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.227542243 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.9709118 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.007466086 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.917535527 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.119971147 seconds)
    (206/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.895296466 seconds)
    (207/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.51043868 seconds)
    (208/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.482593262 seconds)
    (209/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.067730623 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.055789022 seconds)
    (211/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.210990466 seconds)
    (212/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.280706817 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.991985654 seconds)
    (214/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.408799385 seconds)
    (215/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.0738424 seconds)
    (216/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.026179745 seconds)
    (217/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.122155276 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.569385873 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.89446478 seconds)
    (220/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.943984414 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.251239977 seconds)
    (222/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.641549448 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.742063766 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.15061834 seconds)
    (225/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.006688421 seconds)
    (226/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.932034718 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.628245457 seconds)
    (228/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.930900088 seconds)
    (229/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.920896379 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.510883171 seconds)
    (231/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.031470618 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.954124173 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.932521573 seconds)
    (234/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.093636555 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.980117356 seconds)
    (236/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.50679897 seconds)
    (237/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.874747123 seconds)
    (238/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.134025424 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.240602788 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.940426356 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.364668332 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.313837044 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.938394299 seconds)
    (244/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.950741917 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.213439772 seconds)
    (246/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.445554297 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.332878676 seconds)
    (248/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.964250081 seconds)
    (249/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.528563195 seconds)
    (250/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.238003686 seconds)
    (251/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.919675413 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.333270893 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.241568748 seconds)
    (254/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.923967578 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.075049233 seconds)
    (256/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.139384827 seconds)
    (257/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.943917451 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.798590297 seconds)
    (259/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.241106497 seconds)
    (260/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.035841538 seconds)
    (261/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.030247558 seconds)
    (262/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.017714772 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.038832767 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.235733396 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.942309956 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.819824838 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.185571214 seconds)
    (268/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.457612068 seconds)
    (269/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.972094861 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.159385097 seconds)
    (271/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.950181436 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.010545856 seconds)
    (273/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.93810698 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.978135088 seconds)
    (275/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.360509747 seconds)
    (276/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.032359708 seconds)
    (277/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.939835094 seconds)
    (278/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.088214829 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.223847373 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.417781179 seconds)
    (281/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.941694728 seconds)
    (282/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.300699718 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.92332896 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.022051147 seconds)
    (285/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.043255678 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.020835762 seconds)
    (287/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.199901937 seconds)
    (288/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.883690606 seconds)
    (289/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.043411781 seconds)
    (290/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.042347176 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.088006261 seconds)
    (292/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.37264628 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.684427868 seconds)
    (294/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.507175642 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.933594564 seconds)
    (296/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.996285707 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.32665958 seconds)
    (298/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.083043194 seconds)
    (299/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.17215107 seconds)
    (300/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.169350264 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.974696668 seconds)
    (302/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.274854593 seconds)
    (303/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.967298735 seconds)
    (304/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.105210717 seconds)
    (305/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.061960864 seconds)
    (306/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.148483937 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.049515146 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.316798932 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.214900503 seconds)
  done (took 1039.912337661 seconds)
done (took 1041.822466213 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.976233613 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965989339 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.95335165 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.968069765 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.066879007 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.985348349 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.961947229 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.953381277 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.998565506 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.996180848 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.950228241 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.976587141 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.957509084 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.94936256 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.947636401 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.962609258 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.258010153 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.97569665 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.968896731 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.954733275 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.972807367 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.954808507 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.997056992 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.987708525 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.955601431 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.949866753 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.952119849 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.971795686 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.061680843 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.954786118 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.951695884 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.963528801 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.257985737 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.976793255 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.943734795 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.968795044 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.958812343 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.955521479 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.953154765 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.982227388 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.408882668 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.959839986 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.951882905 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.948395809 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.94887379 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.95284043 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.951924126 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.955920053 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.964221882 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.964362588 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.402046571 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.972908019 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.955193947 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.947883537 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.959548821 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.949266842 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.954585338 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.967340852 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.969162687 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.970167205 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.250876854 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.981279809 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.950540235 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.966016967 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.960904557 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.440481615 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.949724097 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.952400543 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.409099385 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.960001657 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.440459721 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.968424086 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.952325012 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.967163377 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.984813515 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.260913805 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.974919433 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.954399037 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.958091985 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.950546759 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.962768857 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965109859 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.955618747 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.951019779 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.966457236 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.983245871 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.965949447 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.954204984 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.960515227 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.971658587 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.958504929 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.964764299 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.958686419 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.94544503 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.96528343 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.957593014 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.955565949 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.954254434 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.959781201 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.961721748 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.410597551 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.974056889 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.951913348 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.948580983 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.955005564 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.967958812 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.409824011 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.96310442 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.975797474 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.002829738 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.962015335 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.257299138 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.986752599 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.970681642 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.960301194 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.957664059 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.947097402 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.258301396 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.433796865 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.978775591 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.955428786 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.956196306 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.977107738 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.958111598 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.954416603 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.265904203 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.982911758 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.9706469 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.075464576 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.969651468 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.985467539 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.955973001 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.964515198 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.986290724 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.97487847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.991656391 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.960607105 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.976655923 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.974307163 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.951253471 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.967626351 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.965108129 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.962440503 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.963347442 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.949291162 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.993790221 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.975384922 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.967337621 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.980175471 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.07937981 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.953233436 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.261668683 seconds)
done (took 306.859792595 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.027444188 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.945707245 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.055042813 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.954413833 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.041758506 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.04656774 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.950358313 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.95194042 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.953656262 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.330302497 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.957841008 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.952521084 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.952532315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.952869216 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.041482187 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.953685758 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.956251165 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.290214232 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.95812625 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.025976862 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.959897943 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.954187491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.956837245 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.328405062 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.953858452 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.948222762 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.031412175 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.956217455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.291368407 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.949010193 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.953097871 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.292986403 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.04863344 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.978327939 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.964634061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.961332905 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.043195907 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.959257909 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.034089909 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.037694124 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.053814626 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.996374515 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.956883388 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.952814949 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.960933147 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.957774992 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.955913463 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.982069614 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.953210771 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.952263966 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.29550629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.965253605 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.953897342 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.958086259 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.953573545 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.988235879 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.955274225 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.956167847 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.04902989 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.955770433 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.019970945 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.328678015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.327902554 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.955554872 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.953605905 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.956237211 seconds)
  done (took 190.076656491 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.026190239 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.032302641 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.027249018 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.95977141 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.007752448 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.025047686 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.960124958 seconds)
  done (took 15.923720083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.960976947 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.958198834 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.009080329 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.006995427 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.959662072 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.109179997 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.955388267 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.969528307 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.958871168 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.008305948 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.957755531 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959032328 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.962713146 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.951617561 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.007335207 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.971898072 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.074395257 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.959890729 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.96091323 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.111840732 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.952002512 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.967068735 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.012971811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.969187279 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.961301339 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.964528978 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.544717193 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.962270595 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.954384627 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.960337982 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.955936978 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.001178994 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.96117379 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.955890196 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.95851799 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.073088052 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.961818764 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.957565506 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.957595556 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.96058138 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.96022954 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.955964122 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.95820921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.957866701 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.961479511 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.983724876 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.958966934 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.959939804 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.965923358 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.962208189 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.011052772 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.962418328 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.957244526 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.961971672 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.015098569 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.971320256 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.9627226 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.958137555 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.963121935 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.955975114 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.114472926 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.014262864 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.962224221 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.006887372 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.959502227 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.96277672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.964504362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.961936176 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.053245723 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.966159938 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.009208414 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.956110061 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.123445781 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.984148772 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.962676288 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.964878914 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.966192422 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.964511528 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.952590486 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.970439433 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.964727658 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.963088585 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.967442562 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.958835774 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.960043415 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.075477111 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.07134554 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.965991094 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.974242738 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.973624265 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.962693073 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.017460994 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.966494625 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.95803106 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.018786531 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.07731732 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.02123817 seconds)
  done (took 214.754636761 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.970856529 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.972515261 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.966007154 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.980398205 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.9672669 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.96470723 seconds)
  done (took 13.711434326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.968622991 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.971277135 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.965789009 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.969446949 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.967055726 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.969461606 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.966874624 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.96655944 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.97295054 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.96572915 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.966234541 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.962847602 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.967059734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.968602835 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.96658001 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.969551511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.961802322 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.962786898 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.966543553 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.966804358 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.126833778 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.965926684 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.966455626 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.969504799 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.972361976 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.963518963 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.975307282 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.967116832 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.964260387 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.971765003 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.969457449 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.969674616 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.966118589 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.975460427 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.970291686 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.966635931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969840461 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.972664562 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.96385076 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.967044773 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.969235358 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.963425313 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.971043373 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.97107997 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.96822451 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.968131395 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.972391709 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.974740694 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.969582974 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.970629745 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.968582892 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.963660884 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.966991357 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.969637495 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.972025912 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969796619 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.971599821 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.969481959 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.971012581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.968175533 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.965844819 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.96794248 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.976007228 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.976802185 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.963503299 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.969985636 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.968972259 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.973068884 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.969426582 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.967801529 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.973529021 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.964987124 seconds)
  done (took 144.791992202 seconds)
done (took 581.152967063 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.016694058 seconds)
  done (took 8.907467448 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.970180569 seconds)
  done (took 8.945635329 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.457252353 seconds)
  done (took 10.351443401 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.969771774 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.003094276 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.963083418 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.968060932 seconds)
  done (took 29.807567968 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.0141222 seconds)
  done (took 8.905019272 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.976945584 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.963981443 seconds)
  done (took 15.870472653 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.084664417 seconds)
  done (took 8.97792962 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.165484273 seconds)
  done (took 9.065607951 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.97912737 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 7.004817337 seconds)
  done (took 15.891920584 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.944644123 seconds)
  done (took 8.836329156 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.66431657 seconds)
  done (took 11.560472331 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.964029113 seconds)
  done (took 8.86670397 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.018164682 seconds)
  done (took 8.909451088 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.967410705 seconds)
  done (took 8.862898125 seconds)
done (took 165.652082438 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.966302109 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.966406175 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.963480981 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.964149216 seconds)
  done (took 29.757129933 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.001258945 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 2.002111214 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.002770421 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.011242297 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.005184379 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.002561729 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.001000194 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.99892968 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.013318383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.007964993 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 2.005763136 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.010565846 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.003016027 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.999801071 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.009823556 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.005578643 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.015659298 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.003733779 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.999654812 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.008919751 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.971694071 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.012034907 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.011256716 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.97325469 seconds)
  done (took 49.973366688 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.171532005 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.042237442 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.125571144 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.023192452 seconds)
  done (took 10.260414311 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.026084523 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.026426294 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.03456324 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.076909399 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.097447936 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.032507588 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 2.002115871 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.992805704 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.977226323 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.026379524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.099613605 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.024811057 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.120675003 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.972278564 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.156296779 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.969620003 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.971364215 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.019474853 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.073701557 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.086000568 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.972326991 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.024054902 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.031946676 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.014943644 seconds)
  done (took 50.730144775 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.966281665 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.976476616 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.975830136 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.970785187 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.968387452 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.972928286 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.974641328 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.968731428 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.989187826 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.968413515 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.969457097 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.971765737 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.967375094 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.970766101 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.966476152 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.982151681 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.980308057 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.972886169 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.973859968 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.97443 seconds)
  done (took 41.354117988 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.965378246 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.814766935 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.315600811 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.217651852 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.964088027 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.959881795 seconds)
  done (took 32.132227555 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.985003616 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.976045188 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.972715558 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.024443138 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.105783626 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.97812115 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.973276737 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.979214603 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.013781384 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.033124483 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.994839944 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.998283818 seconds)
  done (took 25.930198894 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.96257207 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.966056653 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.962492623 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.981945125 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.979502968 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.977872982 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.977400238 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.961543832 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.982681345 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.987824995 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.976771974 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.980252246 seconds)
  done (took 45.59492939 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.054672509 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.855124399 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.009523231 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.677183192 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.435931007 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178721991 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.479422142 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306807339 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.969146092 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.241415894 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080100237 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073075151 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.222885621 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964952111 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.981563491 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.445215887 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.259103606 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19616677 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986747169 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767588472 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019089931 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.534434396 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.844357717 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025726813 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180692908 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.096787781 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.228779513 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.926405465 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100457944 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003103698 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975270273 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964353432 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23831691 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.35372645 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059562017 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977325544 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657379003 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.683905825 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.961800627 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.796387424 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.816349506 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.122055671 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974252593 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966057886 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.902938727 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.528597098 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356672758 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.977711298 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.678354116 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.967472961 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977626599 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060057325 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.972161026 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.793460181 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920395437 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.246349817 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.971763687 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9724019 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.539828669 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.101693171 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.567741467 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.955267679 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.163660775 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782718856 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368640175 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.11771041 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.971033699 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975754242 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.904454781 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779788489 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.477020532 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.147950084 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.988220425 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.585556934 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.282267931 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.120985425 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.911746152 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258377299 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.806839243 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.953275397 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202911738 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.928665704 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907098372 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.830043761 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.906858436 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.232979002 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007789835 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.606306771 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003263119 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.305080775 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.981554543 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99079572 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979239807 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196937374 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.538968595 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9706625 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.842605346 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.115624599 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991213921 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.314873793 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907898894 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.972296655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226830066 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.184876578 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27552422 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.499718871 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129712951 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974622486 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.052980648 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.948970904 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.031044793 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.247873638 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03022607 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.110700658 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03402509 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.936116855 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27754835 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.996787204 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.135486323 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.130373017 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102185473 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.296940484 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.259914978 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039120171 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.975256797 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.970382421 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.842207315 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.527238089 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.242750485 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.972374609 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.522315892 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026523554 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.973008397 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.90785612 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.603786253 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.128598883 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.942819364 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.200183822 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.971340501 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292265788 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.906973966 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120412203 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.084675259 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.193432777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.620631077 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.04257381 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.235044941 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.528938519 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.295848269 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02728023 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993452309 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062753393 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999482531 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.45381518 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.26902236 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.983573367 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.983802585 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.818182303 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.985038885 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.975883287 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.981275119 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.770313311 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25192117 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996074488 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.975498199 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.863913535 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.987935246 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040968786 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.979053189 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.986419738 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.522920487 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.725041832 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.986412696 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.610630194 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199535432 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985401493 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.753909155 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089215245 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.059575251 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246391844 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037680328 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.909083594 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.685839549 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.671861604 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974894628 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.915287709 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.976530601 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989065764 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990838211 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.357374353 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260099467 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020545003 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.876973824 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.018721244 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986160686 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.983216198 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.981595507 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.530145508 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.119029492 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.596047914 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034109471 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117861015 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.991603074 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.911156758 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.985164484 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988562366 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.979091332 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.937477186 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032973683 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.782268364 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356202083 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23527808 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.626667001 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99414506 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.882143215 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.035571057 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.994772433 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876660015 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979895384 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.050062919 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988916965 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.986948096 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.776950942 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.68777082 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.549549753 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29551728 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.288218305 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427655475 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.521506509 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.288878237 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322581877 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215160485 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.507608774 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.043098494 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.325790516 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928599195 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0631209 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.626428729 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331901967 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99642043 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.213011764 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.373486589 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.928744174 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.003140707 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194974276 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019813415 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.946660067 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947578664 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.18116701 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118802834 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.79420501 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.18006099 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318548285 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.876713966 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.951480344 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.982196209 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674571527 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058993682 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.698698598 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.344445306 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.55219976 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.143128182 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344939812 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.98352547 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.430118109 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343937454 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.353418045 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.114139186 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916082322 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.993102816 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.994355051 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.982515733 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.979607885 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.863886937 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.232361122 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992423574 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218337278 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.30670809 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.280822354 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.887014758 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.990928363 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.980484742 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273846172 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.82854046 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.155797514 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.491102613 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.52210798 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985010356 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918462134 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917082402 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.676884237 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.988204951 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957037906 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.198859218 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.164053556 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.967710169 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.530121892 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234283315 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239163386 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.995491213 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261307727 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26049102 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.719840202 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014966317 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.083864529 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.728414787 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.098900032 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.254286118 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219645054 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781345958 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.219158604 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.049170959 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.791587572 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.982755627 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200527491 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253079042 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.953405443 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213972115 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.70278685 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.040456651 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.296569274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039859526 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.958784235 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.133590756 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.176062828 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994111303 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067454433 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996110483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.993428347 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.993628398 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028775232 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.007158831 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.107760896 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.998674806 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072902025 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.136239492 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.521622186 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.986667714 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.260755668 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337876563 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.309148206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042492697 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.986004796 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.984440084 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.917999379 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117632223 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432638614 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257292381 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.114439156 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.285465116 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011024081 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.905932973 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414420126 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234028837 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.257691894 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.880014845 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983121093 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005157015 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.251585198 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999371411 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.19710349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.210791359 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293070129 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453460397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.295250306 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.361641179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259905122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.354849722 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987610171 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.57661936 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.053841129 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.673085194 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.019096094 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.971085699 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256714439 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999929168 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366062325 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008176287 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.187485359 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.505059936 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784208207 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.275277227 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.965359096 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.045155891 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262661969 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.369389276 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295577291 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058431748 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.996436573 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.712152319 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123493421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.862028644 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.253994742 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990702645 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198228757 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.700695886 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.997242049 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265134616 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.293959023 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.981928008 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.864133308 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991614585 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.997153073 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.210753095 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262433453 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238288208 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996743169 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.993383012 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.801247205 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.26649331 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045088332 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920052139 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.992114602 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081653915 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230931663 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008568674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.505918614 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.696857973 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.284546894 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.906380164 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010042301 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.556524332 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366415232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313333518 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.537543157 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216690817 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.544326915 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.989167192 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.292841816 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.995792646 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.558263005 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.298565749 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.992108073 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.663711362 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03393938 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.260541672 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.306092291 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.098683007 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77433648 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.959246855 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211411723 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579115626 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9300672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.987515699 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.049370966 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.989952604 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.118404455 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9982872 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.866526505 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.985260215 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.741450207 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.48187009 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.994159107 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.977646201 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.815836005 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.692872821 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028430759 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13446616 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99728683 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.699487344 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.294239389 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245807092 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.670277297 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.003575689 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.994098932 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992433614 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.917272887 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.185850784 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.371129953 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286292212 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.505214039 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.031951236 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995336585 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.210686868 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202524225 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.984218927 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133047317 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.539105382 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.034858761 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.724837415 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.673430966 seconds)
  done (took 1742.750681409 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.019618675 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.0690564 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.086766144 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.026343623 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.04352744 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.079577208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.083381697 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.048053961 seconds)
  done (took 58.376047627 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.990865272 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.191609458 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.000419759 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.991641343 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.999568383 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.995918007 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.163814876 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.001778584 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.999827813 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.003855459 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.991793581 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.990508904 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.321852505 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.016405888 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.992561882 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.976806664 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.998651176 seconds)
  done (took 76.587219394 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.993282254 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.219394007 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.02365357 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.010778722 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.956664435 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.002724983 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.975315558 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.016544562 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.99599504 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.227311797 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.322446264 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.025362292 seconds)
  done (took 91.692326737 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004174476 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.00187998 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.999459783 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.000102405 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.99932628 seconds)
  done (took 11.932558645 seconds)
done (took 2269.02252956 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.351204174 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.21687747 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.228693443 seconds)
  done (took 6.369574211 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.143817118 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.189504724 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.31033928 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.317232968 seconds)
  done (took 10.885456485 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.290869865 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.363481924 seconds)
  done (took 6.576126847 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.41350182 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.00920349 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.393642927 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.994730777 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.994719438 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.99349803 seconds)
  done (took 22.910270372 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.998276149 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.001690378 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.998209519 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.001405421 seconds)
  done (took 9.922626379 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.979400966 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.733343681 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.9792316 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.993170006 seconds)
  done (took 21.608338294 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.747093835 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.403665551 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.742536803 seconds)
  done (took 9.816398972 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.651274271 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.881393021 seconds)
  done (took 9.455381971 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.261771451 seconds)
  done (took 4.185641479 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.02821032 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.26980146 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.52471357 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.526943563 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.61513627 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.87447569 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.327033628 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.249869686 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.409738288 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.438335141 seconds)
  done (took 26.188203152 seconds)
done (took 144.011091992 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.382850972 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.358741012 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.19828581 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.347025449 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.218635865 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.197429545 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.40997053 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.333124212 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.844425838 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.843665053 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.390148802 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.222754923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.335356264 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.362029258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.343042555 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.234594539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.22068014 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.398790971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.085595697 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.293123586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.395085079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.977025469 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.227304392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.990289328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.220450071 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.153053415 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.553357412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.237076946 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.239340346 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.562507631 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.152117865 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.446295338 seconds)
  done (took 176.10129751 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.998229973 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.99646132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995247489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.995533944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.383284222 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.997244946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.996276779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.997018743 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.292936837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.277897398 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.997781856 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.368957359 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.999086475 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.998498292 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.996351669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.997338746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.455058453 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.997665137 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.997496228 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.997636593 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.997908947 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.202259905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.001426648 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.231187412 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.45110272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006705189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9974382 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.008925589 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.000693777 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.003549864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.006891505 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.998420271 seconds)
  done (took 212.570940051 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.999229821 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.998514482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.997551901 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.998184033 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.002938313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.998358734 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.000432733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.998453724 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.611545026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.614367506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.002329897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.003699709 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00294345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.998256162 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.001874302 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.002709018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.006474954 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.005562764 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.005949305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.011043195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.014415593 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.681201041 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.014859072 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.670058773 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.011328614 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.010733588 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.998560379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.020782693 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.021222059 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.022400608 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.018535635 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.000976581 seconds)
  done (took 224.682048783 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.20544223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.009516848 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.00962001 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.950142675 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.013610067 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.012441153 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.950722288 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.199088242 seconds)
  done (took 20.306103415 seconds)
done (took 635.597491421 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.486438802 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.341173062 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.1891989 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.032943644 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.299094089 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.072420257 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.028756833 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.09624098 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.766912594 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.102282667 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.732899323 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.047924159 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.826433019 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.054261602 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.158238685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.092463295 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.63273073 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.728191384 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.210813587 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.135744567 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.214181624 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.968627265 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.108700103 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.785672203 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.835524949 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.016077432 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.208933776 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.637556969 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.040895779 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.196492503 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.816072463 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.424900194 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.040954671 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.026705168 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.084954065 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.062860006 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.377154842 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.042342783 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.154152464 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.77139088 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.129681247 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.656981584 seconds)
  done (took 109.568590167 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.999976338 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.997964322 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.99656771 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.998882399 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.000337711 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.999113257 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.998747429 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.997608292 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.999324902 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.997693575 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.998225163 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.99893951 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.998284499 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.001187443 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.999021849 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.998498245 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.998924272 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.002082931 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.998843381 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.999232953 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.998980221 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.998210665 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.013467182 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.999106809 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.999521887 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.000329146 seconds)
  done (took 53.936223416 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.012348345 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.162058195 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.273510634 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.031008551 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.010687948 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.014542678 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.029644918 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.019408066 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.015606903 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.01425528 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.121904426 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.021514911 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.033255199 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.273496708 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.028195244 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.012870952 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.01416879 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.013225282 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.169563684 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.028805538 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.032788306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.020276544 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.033031471 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.02964403 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.013878891 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.012552979 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.016123105 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.485914649 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.025094895 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.121207848 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.057171885 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.035506848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.436282664 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.286609909 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.065639971 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.019279888 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.014496611 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.123779185 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.02082283 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.014369368 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.031455273 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.02102345 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.274202898 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.502860518 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.028032511 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.015354969 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.502242573 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.133226255 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.057214185 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.026670739 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.277252885 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.030518221 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.015340276 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.01502003 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.050325099 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.025930883 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.01408063 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.338637517 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.026104349 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.032345289 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.023917464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.016315906 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.176942601 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.023846033 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.165076147 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.024242886 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.021188826 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.015112304 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.276684775 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.03058408 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.511952394 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.025112969 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.014153181 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.121876924 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.167881272 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.526206247 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.026745277 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.176693113 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.451104534 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.041108891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.02240881 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.4758725 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.045754974 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.021288419 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.015267091 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.015592908 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.015321679 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.057326549 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.031405625 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.437402744 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.515908874 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.355834589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.042881727 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.03142383 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.014397049 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.334989507 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.024519065 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.015138607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.268866891 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.522315834 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.030739932 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.024963672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.49796456 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.031438982 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.03567075 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.025704044 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.279626544 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.030217401 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.059693833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.016239618 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.022504807 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.019493857 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.034750327 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.022334306 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.01546925 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.487914823 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.14312947 seconds)
  done (took 249.39923003 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.0126666 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.025972579 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.010066718 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.010171856 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.00946437 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.016313745 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.00875612 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.007994008 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.016557001 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.011261277 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.009868208 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.00926941 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.012356001 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.017466782 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.510722799 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.017935075 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.625585448 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.012694831 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.009973451 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.011063079 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.697525108 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.020751061 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.010832623 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.011051757 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.013290147 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.014451767 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.020683834 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.044410282 seconds)
  done (took 172.141477075 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.020551323 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.197945235 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.037137088 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.05763445 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.028115396 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.017643567 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.042407844 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.041741787 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.025239486 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.017381248 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.017555741 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.081159002 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.032112128 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.159677705 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.050738032 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.054704245 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.124838738 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.02787563 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.01735816 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.017897915 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.048988342 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.016168366 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.080086301 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.150809631 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.037051991 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.13742391 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.024049522 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.021554528 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.018470983 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.138666928 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.033974006 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.081189242 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.050865031 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.041044994 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.14479877 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.136995994 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.12730606 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.051172644 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.023315795 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.01860303 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.019259892 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.008780467 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.138603989 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.039427483 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.022123267 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.130558719 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.039362562 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.022452027 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.029965834 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.019050817 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.033223572 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.042489447 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.091473612 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.155478862 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.053059909 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.048687826 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.046368015 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.297885457 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.030407401 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.122916894 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.013675645 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.140649518 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.039977851 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.010105109 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.021767395 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.026568501 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.050460405 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.055797443 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.130441128 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.026963914 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.123112927 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.056219392 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.030494493 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.021548008 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.023699575 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.14077346 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.141298164 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.056341833 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.061832854 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.054358295 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.019607648 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.021939989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.010437575 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.038977059 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.028292153 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.142109052 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.140507224 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.029137229 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.023955115 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.024367478 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.023908125 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.047143247 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.152459123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.056193059 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.122960939 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.090625746 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.097474174 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.040318553 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.036025511 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.028655763 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.088196333 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.034573165 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.038979536 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.347868177 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.095560652 seconds)
  done (took 218.794868342 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.499104061 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.075594935 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.086065522 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.336228791 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.451473561 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.929341569 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.069881762 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.07497272 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.098724958 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.264322814 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.143775761 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.093266943 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.061847517 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.046620976 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.073445969 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.095053144 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.09082302 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.418847257 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.198974291 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.175369695 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.051115421 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.385780191 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.402105959 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.524013388 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.110552791 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.402264775 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.749043284 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.215019286 seconds)
  done (took 66.075766394 seconds)
done (took 871.846331069 seconds)
SAVING RESULT...
DONE!
